{"version":3,"file":"dropdown-select.umd.js","sources":["dropdown-select.umd.js"],"sourcesContent":["import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu.js\";\nimport \"@polymer/paper-item/paper-item.js\";\nimport \"@polymer/paper-listbox/paper-listbox.js\";\n/**\n`dropdown-select`\nAn easy to use, works as expected dropdown menu. Add slotted items like follows:\n\n<dropdown-select\n  allow-outside-scroll\n  always-float-label\n  dynamic-align\n  error-message=\"Required.\"\n  horizontal-align=\"left\"\n  label=\"Select an item.\" \n  no-animations\n  no-label-float\n  placeholder=\"none\" \n  restore-focus-on-close \n  vertical-align=\"bottom\" \n  vertical-offset=\"10\">\n  <paper-item value=\"100\">100 things</paper-item>\n  <paper-item value=\"1000\">Another value</paper-item>\n  <paper-item value=\"10\">Value is 10, but you will see this text</paper-item>\n</dropdown-select>\n\n@demo demo/index.html\n\n*/\nlet DropdownSelect = Polymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n      }\n      paper-listbox ::slotted(paper-item) {\n        display: block;\n        width: 100%;\n        min-height: 32px;\n        vertical-align: text-top;\n        line-height: 32px;\n        @apply --dropdown-select-items;\n      }\n      paper-listbox paper-listbox {\n        @apply --dropdown-listbox;\n      }\n    </style>\n    <paper-dropdown-menu\n      id=\"menu\"\n      allow-outside-scroll\\$=\"[[allowOutsideScroll]]\"\n      always-float-label\\$=\"[[alwaysFloatLabel]]\"\n      dynamic-align\\$=\"[[dynamicAlign]]\"\n      error-message\\$=\"[[errorMessage]]\"\n      horizontal-align\\$=\"[[horizontalAlign]]\"\n      label\\$=\"[[label]]\"\n      no-animations\\$=\"[[noAnimations]]\"\n      no-label-float\\$=\"[[noLabelFloat]]\"\n      on-selected-item-changed=\"_getSelectedValue\"\n      placeholder\\$=\"[[placeholder]]\"\n      restore-focus-on-close\\$=\"[[restoreFocusOnClose]]\"\n      vertical-align\\$=\"[[verticalAlign]]\"\n      vertical-offset\\$=\"[[verticalOffset]]\"\n    >\n      <paper-listbox\n        id=\"listbox\"\n        slot=\"dropdown-content\"\n        class=\"dropdown-content\"\n      >\n        <slot id=\"content\"></slot>\n      </paper-listbox>\n    </paper-dropdown-menu>\n  `,\n\n  is: \"dropdown-select\",\n\n  listeners: {\n    \"paper-dropdown-open\": \"_onOpen\",\n    \"paper-dropdown-close\": \"_onClose\"\n  },\n\n  properties: {\n    /**\n     * Set to true in order to prevent scroll from being constrained\n     * to the dropdown when it opens.\n     */\n    allowOutsideScroll: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * Set to true to always float the label.\n     */\n    alwaysFloatLabel: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * If true, the `horizontalAlign` and `verticalAlign` properties will\n     * be considered preferences instead of strict requirements when\n     * positioning the dropdown and may be changed if doing so reduces\n     * the area of the dropdown falling outside of `fitInto`.\n     */\n    dynamicAlign: {\n      type: Boolean\n    },\n\n    /**\n     * The error message to display when invalid.\n     */\n    errorMessage: {\n      type: String\n    },\n\n    /**\n     * The orientation against which to align the menu dropdown\n     * horizontally relative to the dropdown trigger.\n     */\n    horizontalAlign: {\n      type: String,\n      value: \"right\"\n    },\n\n    /**\n     * The label of the select menu\n     */\n    label: {\n      type: String,\n      value: \"Select an option.\"\n    },\n\n    /**\n     * Set to true to disable animations when opening and closing the\n     * dropdown.\n     */\n    noAnimations: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * Set to true to disable the floating label.\n     */\n    noLabelFloat: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * True if the dropdown is open. Otherwise, false.\n     */\n    opened: {\n      type: Boolean,\n      value: false\n    },\n\n    /**\n     * The placeholder for the dropdown.\n     */\n    placeholder: {\n      type: String\n    },\n\n    /**\n     * Whether focus should be restored to the dropdown when the menu closes.\n     */\n    restoreFocusOnClose: {\n      type: Boolean,\n      value: true\n    },\n\n    /**\n     * The last selected item.\n     */\n    selectedItem: {\n      type: Object\n    },\n\n    /**\n     * The index of the selected item\n     */\n    selectedItemIndex: {\n      type: Number,\n      value: null\n    },\n\n    /**\n     * The label of the selected item\n     */\n    selectedItemLabel: {\n      type: String,\n      value: null\n    },\n\n    /**\n     * The default value\n     */\n    value: {\n      type: String,\n      value: null\n    },\n\n    /**\n     * The orientation against which to align the menu dropdown\n     * vertically relative to the dropdown trigger.\n     */\n    verticalAlign: {\n      type: String,\n      value: \"top\"\n    },\n\n    /**\n     * Overrides the vertical offset computed in\n     * _computeMenuVerticalOffset.\n     */\n    verticalOffset: {\n      type: Number\n    }\n  },\n\n  /**\n   * Get the value of the selected item.\n   */\n  _getSelectedValue: function(e) {\n    if (e.detail.value !== null) {\n      this.value = e.detail.value.getAttribute(\"value\");\n      this._setSelectedValues();\n      this.fire(\"change\", { value: this.value }); //support for old version\n      this.fire(\"dropdown-select-changed\", this);\n    }\n  },\n\n  /**\n   * Sets the opened property to true\n   */\n  _onOpen: function(e) {\n    this.opened = true;\n  },\n\n  /**\n   * Sets the opened property to false\n   */\n  _onClose: function(e) {\n    this.opened = false;\n  },\n\n  /**\n   * Get the value of the selected item.\n   */\n  _setSelectedValues: function() {\n    this.selectedItem = this.$.menu.selectedItem;\n    this.selectedItemLabel = this.$.menu.selectedItemLabel;\n    this.selectedItemIndex = this.$.listbox.selected;\n  },\n\n  /**\n   * Set the index of the selected item.\n   */\n  attached: function() {\n    let children = this.$.listbox.querySelectorAll(\"paper-item\");\n    if (children !== undefined && children !== null) {\n      for (let i = 0; i < children.length; i++) {\n        if (this.value === children[i].getAttribute(\"value\")) {\n          this.$.listbox.selected = i;\n          this._setSelectedValues();\n        }\n      }\n    }\n  }\n});\nexport { DropdownSelect };\n"],"names":["DropdownSelect","Polymer","_template","html","is","listeners","properties","allowOutsideScroll","type","Boolean","value","alwaysFloatLabel","dynamicAlign","errorMessage","String","horizontalAlign","label","noAnimations","noLabelFloat","opened","placeholder","restoreFocusOnClose","selectedItem","Object","selectedItemIndex","Number","selectedItemLabel","verticalAlign","verticalOffset","_getSelectedValue","e","detail","getAttribute","_setSelectedValues","fire","this","_onOpen","_onClose","$","menu","listbox","selected","attached","children","querySelectorAll","i","length"],"mappings":"oqGA6BIA,EAAiBC,UAAQ,CAC3BC,UAAWC,YA2CXC,GAAI,kBAEJC,UAAW,uBACc,iCACC,YAG1BC,WAAY,CAKVC,mBAAoB,CAClBC,KAAMC,QACNC,OAAO,GAMTC,iBAAkB,CAChBH,KAAMC,QACNC,OAAO,GASTE,aAAc,CACZJ,KAAMC,SAMRI,aAAc,CACZL,KAAMM,QAORC,gBAAiB,CACfP,KAAMM,OACNJ,MAAO,SAMTM,MAAO,CACLR,KAAMM,OACNJ,MAAO,qBAOTO,aAAc,CACZT,KAAMC,QACNC,OAAO,GAMTQ,aAAc,CACZV,KAAMC,QACNC,OAAO,GAMTS,OAAQ,CACNX,KAAMC,QACNC,OAAO,GAMTU,YAAa,CACXZ,KAAMM,QAMRO,oBAAqB,CACnBb,KAAMC,QACNC,OAAO,GAMTY,aAAc,CACZd,KAAMe,QAMRC,kBAAmB,CACjBhB,KAAMiB,OACNf,MAAO,MAMTgB,kBAAmB,CACjBlB,KAAMM,OACNJ,MAAO,MAMTA,MAAO,CACLF,KAAMM,OACNJ,MAAO,MAOTiB,cAAe,CACbnB,KAAMM,OACNJ,MAAO,OAOTkB,eAAgB,CACdpB,KAAMiB,SAOVI,kBAAmB,SAASC,GACH,OAAnBA,EAAEC,OAAOrB,aACNA,MAAQoB,EAAEC,OAAOrB,MAAMsB,aAAa,cACpCC,0BACAC,KAAK,SAAU,CAAExB,MAAOyB,KAAKzB,aAC7BwB,KAAK,0BAA2BC,QAOzCC,QAAS,SAASN,QACXX,QAAS,GAMhBkB,SAAU,SAASP,QACZX,QAAS,GAMhBc,mBAAoB,gBACbX,aAAea,KAAKG,EAAEC,KAAKjB,kBAC3BI,kBAAoBS,KAAKG,EAAEC,KAAKb,uBAChCF,kBAAoBW,KAAKG,EAAEE,QAAQC,UAM1CC,SAAU,eACJC,EAAWR,KAAKG,EAAEE,QAAQI,iBAAiB,iBAC3CD,MAAAA,MACG,IAAIE,EAAI,EAAGA,EAAIF,EAASG,OAAQD,IAC/BV,KAAKzB,QAAUiC,EAASE,GAAGb,aAAa,gBACrCM,EAAEE,QAAQC,SAAWI,OACrBZ"}