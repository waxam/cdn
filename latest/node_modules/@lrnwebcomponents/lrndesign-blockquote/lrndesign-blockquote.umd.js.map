{"version":3,"file":"lrndesign-blockquote.umd.js","sources":["lrndesign-blockquote.umd.js"],"sourcesContent":["import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport { pathFromUrl } from \"@polymer/polymer/lib/utils/resolve-url.js\";\nimport \"@lrnwebcomponents/materializecss-styles/materializecss-styles.js\";\nimport \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport \"@lrnwebcomponents/schema-behaviors/schema-behaviors.js\";\nimport \"@lrnwebcomponents/a11y-behaviors/a11y-behaviors.js\";\nimport \"@polymer/paper-styles/shadow.js\";\n/**\n`lrndesign-blockquote`\nA structured blockquote element\n\n@demo demo/index.html\n*/\nlet LrndesignBlockquote = Polymer({\n  _template: html`\n    <style include=\"materializecss-styles\"></style>\n    <style>\n      :host {\n        display: inline-block;\n        position: relative;\n        box-sizing: border-box;\n        --lrndesign-blockquote-color: #585858;\n        --lrndesign-blockquote-cite: #3a3a3a;\n        @apply --lrndesign-blockquote;\n      }\n      blockquote {\n        font-size: 19.2px;\n        font-style: italic;\n        margin: 4px 0;\n        padding: 24px 24px 24px 40px;\n        line-height: 1.5;\n        position: relative;\n        color: var(--lrndesign-blockquote-color);\n      }\n      blockquote.decorate:before {\n        display: block;\n        font-family: Georgia, serif;\n        content: \"\\\\201C\";\n        font-size: 80px;\n        position: absolute;\n        left: -20px;\n        top: -20px;\n      }\n      blockquote.outset {\n        margin: 4px -128px 4px -128px;\n      }\n      cite {\n        color: var(--lrndesign-blockquote-cite);\n        font-size: 12.8px;\n        display: block;\n        margin-top: 4px;\n        text-align: right;\n      }\n      :host([depth=\"1\"]) blockquote {\n        @apply --shadow-elevation-2dp;\n      }\n      :host([depth=\"2\"]) blockquote {\n        @apply --shadow-elevation-3dp;\n      }\n      :host([depth=\"3\"]) blockquote {\n        @apply --shadow-elevation-4dp;\n      }\n      :host([depth=\"4\"]) blockquote {\n        @apply --shadow-elevation-6dp;\n      }\n      :host([depth=\"5\"]) blockquote {\n        @apply --shadow-elevation-8dp;\n      }\n\n      /* BEGIN HYPERCARDIFY, thanks @realdlnorman */\n      :host([hypercard]) ::slotted(*) {\n        -webkit-filter: grayscale(1) contrast(300%);\n        filter: grayscale(1) contrast(300%);\n        font-family: Chikarego, Helvetica, sans-serif;\n        transition: all 0.6s ease;\n      }\n      /* Disable grayscale on hover */\n      :host([hypercard]:hover) ::slotted(*) {\n        -webkit-filter: grayscale(0);\n        filter: none;\n      }\n    </style>\n    <blockquote class\\$=\"[[generateClass(decorate, outset, color, textColor)]]\">\n      <slot></slot> <cite class\\$=\"[[textColor]]\"> [[citation]] </cite>\n    </blockquote>\n  `,\n\n  is: \"lrndesign-blockquote\",\n\n  behaviors: [\n    HAXBehaviors.PropertiesBehaviors,\n    MaterializeCSSBehaviors.ColorBehaviors,\n    SchemaBehaviors.Schema,\n    A11yBehaviors.A11y\n  ],\n\n  properties: {\n    /**\n     * Source being cited\n     */\n    citation: {\n      type: String\n    },\n    /**\n     * Depth styling\n     */\n    depth: {\n      type: String,\n      value: \"0\",\n      reflectToAttribute: true\n    },\n    /**\n     * Place \" glyph decorator\n     */\n    decorate: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * Explode out of boundary container intentionally\n     */\n    outset: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * Color code\n     */\n    colorCode: {\n      type: String,\n      value: \"#fff9c4\",\n      observer: \"_bgColorChanged\"\n    },\n    /**\n     * Color class\n     */\n    color: {\n      type: String,\n      computed: \"_computeColorClass(colorCode)\"\n    },\n    /**\n     * Text color code\n     */\n    textColorCode: {\n      type: String,\n      value: \"#000000\"\n    },\n    /**\n     * Text color class\n     */\n    textColor: {\n      type: String,\n      computed: \"_computeColorClass(textColorCode)\"\n    },\n    /**\n     * Funny 1900s vision.\n     */\n    hypercard: {\n      type: Boolean,\n      reflectToAttribute: true,\n      value: false,\n      observer: \"_applyChikarego\"\n    }\n  },\n\n  /**\n   * Notice hypercard activated so load the font\n   */\n  _applyChikarego: function(newValue, oldValue) {\n    if (newValue === true) {\n      let style = document.createElement(\"style\");\n      let basePath = pathFromUrl(import.meta.url);\n      style.innerHTML = `@font-face {\n        font-family: 'Chikarego';\n        src: url('${basePath}lib/chikarego2-webfont.woff2') format('woff2'),\n             url('${basePath}lib/chikarego2-webfont.woff') format('woff');\n        font-weight: normal;\n        font-style: normal;\n      }`;\n      document.head.appendChild(style);\n    }\n  },\n\n  /**\n   * Attached.\n   */\n  attached: function() {\n    // Establish hax properties if they exist\n    let props = {\n      canScale: true,\n      canPosition: true,\n      canEditSource: true,\n      gizmo: {\n        title: \"Fancy quote\",\n        description: \"Presents a famous quote with additional design options.\",\n        icon: \"editor:format-quote\",\n        color: \"grey\",\n        groups: [\"Content\", \"Presentation\"],\n        handles: [\n          {\n            type: \"content\",\n            caption: \"quote\",\n            title: \"citation\",\n            description: \"quote\",\n            citation: \"citation\",\n            color: \"colorCode\"\n          }\n        ],\n        meta: {\n          author: \"LRNWebComponents\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"colorCode\",\n            title: \"Background color\",\n            description: \"Select the background color for the quote.\",\n            inputMethod: \"colorpicker\",\n            icon: \"editor:format-color-fill\"\n          },\n          {\n            property: \"outset\",\n            title: \"Outset\",\n            description: \"Should this expand beyond it's container by design?\",\n            inputMethod: \"boolean\",\n            icon: \"editor:border-outer\"\n          },\n          {\n            property: \"decorate\",\n            title: \"Glyph decoration\",\n            description: 'Add a fancy \" quotation mark off the left side.',\n            inputMethod: \"boolean\",\n            icon: \"editor:format-quote\"\n          }\n        ],\n        configure: [\n          {\n            slot: \"\",\n            title: \"Quote\",\n            description: \"Quoted text\",\n            inputMethod: \"textfield\",\n            icon: \"editor:format-quote\",\n            required: true,\n            validationType: \"text\"\n          },\n          {\n            property: \"citation\",\n            title: \"Citation\",\n            description: \"\",\n            inputMethod: \"textfield\",\n            icon: \"editor:short-text\",\n            required: false,\n            validationType: \"text\"\n          },\n          {\n            property: \"outset\",\n            title: \"Outset\",\n            description: \"Should this expand beyond it's container by design?\",\n            inputMethod: \"boolean\",\n            icon: \"editor:border-outer\"\n          },\n          {\n            property: \"decorate\",\n            title: \"Glyph decoration\",\n            description: 'Add a fancy \" quotation mark off the left side.',\n            inputMethod: \"boolean\",\n            icon: \"editor:format-quote\"\n          },\n          {\n            property: \"colorCode\",\n            title: \"Background color\",\n            description: \"Select the background color for the quote.\",\n            inputMethod: \"colorpicker\",\n            icon: \"editor:format-color-fill\"\n          },\n          {\n            property: \"depth\",\n            title: \"Shadow depth\",\n            description: \"Select the background color for the quote.\",\n            inputMethod: \"select\",\n            icon: \"maps:layers\",\n            options: {\n              \"0\": \"none\",\n              \"1\": \"Level 1\",\n              \"2\": \"Level 2\",\n              \"3\": \"Level 3\",\n              \"4\": \"Level 4\",\n              \"5\": \"Level 5\"\n            }\n          }\n        ],\n        advanced: []\n      }\n    };\n    this.setHaxProperties(props);\n  },\n\n  /**\n   * Notice background color has changed.\n   */\n  _bgColorChanged: function(newValue, oldValue) {\n    if (typeof newValue !== typeof undefined && newValue != null) {\n      // sees if there's enough contrast and adjusts them accordingly\n      this.computeTextPropContrast(\"textColorCode\", \"colorCode\");\n    }\n  },\n\n  /**\n   * Make class from color value\n   */\n  _computeColorClass: function(color) {\n    if (color != null && color.toLowerCase() == \"#ffffff\") {\n      return \"white-text\";\n    } else if (color != null && color == \"#000000\") {\n      return \"black-text\";\n    } else if (color != null && color.substring(0, 1) == \"#\") {\n      return this._colorTransform(color.toLowerCase(), \"\", \"\");\n    }\n  },\n\n  /**\n   * Generate a class based on the options provided\n   */\n  generateClass: function(decorate, outset, color, textColor) {\n    var returnClass = \"\";\n    if (decorate) {\n      returnClass += \" decorate\";\n    }\n    if (outset) {\n      returnClass += \" outset\";\n    }\n    // let's support mixing in our colors\n    returnClass += \" \" + textColor + \" \" + color;\n    return returnClass;\n  }\n});\nexport { LrndesignBlockquote };\n"],"names":["LrndesignBlockquote","Polymer","_template","html","is","behaviors","HAXBehaviors","PropertiesBehaviors","MaterializeCSSBehaviors","ColorBehaviors","SchemaBehaviors","Schema","A11yBehaviors","A11y","properties","citation","type","String","depth","value","reflectToAttribute","decorate","Boolean","outset","colorCode","observer","color","computed","textColorCode","textColor","hypercard","_applyChikarego","newValue","oldValue","style","document","createElement","basePath","pathFromUrl","innerHTML","head","appendChild","attached","setHaxProperties","canScale","canPosition","canEditSource","gizmo","title","description","icon","groups","handles","caption","meta","author","settings","quick","property","inputMethod","configure","slot","required","validationType","options","advanced","_bgColorChanged","_typeof","computeTextPropContrast","_computeColorClass","toLowerCase","substring","this","_colorTransform","generateClass","returnClass"],"mappings":"mkLAaIA,EAAsBC,UAAQ,CAChCC,UAAWC,YAyEXC,GAAI,uBAEJC,UAAW,CACTC,aAAaC,oBACbC,wBAAwBC,eACxBC,gBAAgBC,OAChBC,cAAcC,MAGhBC,WAAY,CAIVC,SAAU,CACRC,KAAMC,QAKRC,MAAO,CACLF,KAAMC,OACNE,MAAO,IACPC,oBAAoB,GAKtBC,SAAU,CACRL,KAAMM,QACNH,OAAO,EACPC,oBAAoB,GAKtBG,OAAQ,CACNP,KAAMM,QACNH,OAAO,EACPC,oBAAoB,GAKtBI,UAAW,CACTR,KAAMC,OACNE,MAAO,UACPM,SAAU,mBAKZC,MAAO,CACLV,KAAMC,OACNU,SAAU,iCAKZC,cAAe,CACbZ,KAAMC,OACNE,MAAO,WAKTU,UAAW,CACTb,KAAMC,OACNU,SAAU,qCAKZG,UAAW,CACTd,KAAMM,QACNF,oBAAoB,EACpBD,OAAO,EACPM,SAAU,oBAOdM,gBAAiB,SAASC,EAAUC,OACjB,IAAbD,EAAmB,KACjBE,EAAQC,SAASC,cAAc,SAC/BC,EAAWC,8LACfJ,EAAMK,uFAEQF,gFACAA,uHAIdF,SAASK,KAAKC,YAAYP,KAO9BQ,SAAU,gBA6GHC,iBA3GO,CACVC,UAAU,EACVC,aAAa,EACbC,eAAe,EACfC,MAAO,CACLC,MAAO,cACPC,YAAa,0DACbC,KAAM,sBACNxB,MAAO,OACPyB,OAAQ,CAAC,UAAW,gBACpBC,QAAS,CACP,CACEpC,KAAM,UACNqC,QAAS,QACTL,MAAO,WACPC,YAAa,QACblC,SAAU,WACVW,MAAO,cAGX4B,KAAM,CACJC,OAAQ,qBAGZC,SAAU,CACRC,MAAO,CACL,CACEC,SAAU,YACVV,MAAO,mBACPC,YAAa,6CACbU,YAAa,cACbT,KAAM,4BAER,CACEQ,SAAU,SACVV,MAAO,SACPC,YAAa,sDACbU,YAAa,UACbT,KAAM,uBAER,CACEQ,SAAU,WACVV,MAAO,mBACPC,YAAa,kDACbU,YAAa,UACbT,KAAM,wBAGVU,UAAW,CACT,CACEC,KAAM,GACNb,MAAO,QACPC,YAAa,cACbU,YAAa,YACbT,KAAM,sBACNY,UAAU,EACVC,eAAgB,QAElB,CACEL,SAAU,WACVV,MAAO,WACPC,YAAa,GACbU,YAAa,YACbT,KAAM,oBACNY,UAAU,EACVC,eAAgB,QAElB,CACEL,SAAU,SACVV,MAAO,SACPC,YAAa,sDACbU,YAAa,UACbT,KAAM,uBAER,CACEQ,SAAU,WACVV,MAAO,mBACPC,YAAa,kDACbU,YAAa,UACbT,KAAM,uBAER,CACEQ,SAAU,YACVV,MAAO,mBACPC,YAAa,6CACbU,YAAa,cACbT,KAAM,4BAER,CACEQ,SAAU,QACVV,MAAO,eACPC,YAAa,6CACbU,YAAa,SACbT,KAAM,cACNc,QAAS,GACF,SACA,YACA,YACA,YACA,YACA,aAIXC,SAAU,OAShBC,gBAAiB,SAASlC,EAAUC,iBAC9BkC,EAAOnC,IAA6C,MAAZA,QAErCoC,wBAAwB,gBAAiB,cAOlDC,mBAAoB,SAAS3C,UACd,MAATA,GAAwC,WAAvBA,EAAM4C,cAClB,aACW,MAAT5C,GAA0B,WAATA,EACnB,aACW,MAATA,GAA0C,KAAzBA,EAAM6C,UAAU,EAAG,GACtCC,KAAKC,gBAAgB/C,EAAM4C,cAAe,GAAI,SADhD,GAQTI,cAAe,SAASrD,EAAUE,EAAQG,EAAOG,OAC3C8C,EAAc,UACdtD,IACFsD,GAAe,aAEbpD,IACFoD,GAAe,WAGjBA,GAAe,IAAM9C,EAAY,IAAMH"}