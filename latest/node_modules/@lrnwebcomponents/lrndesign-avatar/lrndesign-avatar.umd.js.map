{"version":3,"file":"lrndesign-avatar.umd.js","sources":["lrndesign-avatar.umd.js"],"sourcesContent":["import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@lrnwebcomponents/paper-avatar/paper-avatar.js\";\nimport \"@lrnwebcomponents/materializecss-styles/materializecss-styles.js\";\n/**\n`lrndesign-avatar`\nVisualize a user account eitehr with an image, a label, or as abstract art.\n\n@demo demo/index.html\n*/\nlet LrndesignAvatar = Polymer({\n  _template: html`\n    <style include=\"materializecss-styles\">\n      :host {\n        display: block;\n      }\n    </style>\n    <paper-avatar\n      label=\"[[label]]\"\n      src=\"[[src]]\"\n      two-chars=\"[[twoChars]]\"\n      class$=\"[[color]]\"\n      jdenticon=\"[[jdenticon]]\"\n    ></paper-avatar>\n  `,\n\n  is: \"lrndesign-avatar\",\n\n  properties: {\n    /**\n     * text to use for avatar\n     */\n    label: {\n      type: String,\n      value: \"lrndesign-avatar\"\n    },\n    /**\n     * link to an image, optional\n     */\n    src: {\n      type: String\n    },\n    /**\n     * Mode for presenting 1st two letters\n     */\n    twoChars: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Materialize CSS color class names\n     */\n    color: {\n      type: String,\n      reflectToAttribute: true\n    },\n    /**\n     * Form abstract art from hash of label\n     */\n    jdenticon: {\n      type: Boolean,\n      value: false\n    }\n  }\n});\nexport { LrndesignAvatar };\n"],"names":["LrndesignAvatar","Polymer","_template","html","is","properties","label","type","String","value","src","twoChars","Boolean","color","reflectToAttribute","jdenticon"],"mappings":"q+BASIA,EAAkBC,UAAQ,CAC5BC,UAAWC,YAeXC,GAAI,mBAEJC,WAAY,CAIVC,MAAO,CACLC,KAAMC,OACNC,MAAO,oBAKTC,IAAK,CACHH,KAAMC,QAKRG,SAAU,CACRJ,KAAMK,QACNH,OAAO,GAKTI,MAAO,CACLN,KAAMC,OACNM,oBAAoB,GAKtBC,UAAW,CACTR,KAAMK,QACNH,OAAO"}