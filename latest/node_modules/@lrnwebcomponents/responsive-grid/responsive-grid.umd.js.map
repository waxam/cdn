{"version":3,"file":"responsive-grid.umd.js","sources":["lib/responsive-grid-col.js","lib/responsive-grid-clear.js","lib/responsive-grid-row.js"],"sourcesContent":["import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\n/**    \n`responsive-grid-col`\nA column for the responsive grid\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n  Example: \n  <responsive-grid-col \n    xs=\"1\"    //the number of columns on an extra-small-width screen\n    md=\"2\"    //the number of columns on a small-width screen\n    lg=\"3\"    //the number of columns on a medium-width screen\n    xl=\"4\">   //the number of columns on a large-width screen\n    CONTENT HERE\n  </responsive-grid-col>\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        position: relative;\n        min-height: 1px;\n        float: left;\n      }\n      :host:after {\n        clear: both;\n      }\n      #col-inner {\n        padding-left: 15px;\n        padding-right: 15px;\n        @apply --responsive-grid-col-inner;\n      }\n      /* Hide Print-Only on Screen */\n      @media screen {\n        :host([print-only]) {\n          display: none;\n        }\n      }\n      /* Hide Screen-Only on Print */\n      @media print {\n        :host([screen-only]) {\n          display: none;\n        }\n      }\n    </style>\n    <div id=\"col-inner\"><slot></slot></div>\n  `,\n\n  is: \"responsive-grid-col\",\n\n  properties: {\n    /**\n     * the width when viewed on an extra large screen\n     */\n    xl: {\n      type: Number,\n      value: 1\n    },\n    /**\n     * the width when viewed on a large screen\n     */\n    lg: {\n      type: Number,\n      value: 1\n    },\n    /**\n     * the width when viewed on a medium screen\n     */\n    md: {\n      type: Number,\n      value: 1\n    },\n    /**\n     * the width when viewed on a small screen\n     */\n    sm: {\n      type: Number,\n      value: 1\n    },\n    /**\n     * the width when viewed on an extra-small screen\n     */\n    xs: {\n      type: Number,\n      value: 1\n    }\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\n/**  \n`responsive-grid-clear`\nA clearumn for the responsive grid\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n  Example: \n  <responsive-grid-clear \n    xs    //clears the floated columns on an extra small-width screen\n    sm    //clears the floated columns on a small-width screen\n    md    //clears the floated columns on a medium-width screen\n    lg/>  //clears the floated columns on a large-width screen\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: none;\n        clear: both;\n      }\n    </style>\n  `,\n\n  is: \"responsive-grid-clear\",\n\n  properties: {\n    /**\n     * clear the float and force a new worw on an extra-large screen?\n     */\n    xl: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * clear the float and force a new worw on a large screen?\n     */\n    lg: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * clear the float and force a new worw on a medium screen?\n     */\n    md: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * clear the float and force a new worw on a small screen?\n     */\n    sm: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * clear the float and force a new worw on an extra-small screen?\n     */\n    xs: {\n      type: Boolean,\n      value: false\n    }\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@lrnwebcomponents/responsive-utility/responsive-utility.js\";\nimport \"./responsive-grid-col.js\";\nimport \"./responsive-grid-clear.js\";\n/**   \n`responsive-grid-row`\nA LRN element\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n Example:\n  <responsive-grid-row \n    sm=\"600\"                      //custom breakpoint for small screens\n    md=\"900\"                      //custom breakpoint for medium screens\n    sm=\"1200\"                     //custom breakpoint for large screens\n    md=\"1800\"                     //custom breakpoint for extra-large screens\n    responsive-to-parent=\"true\">  //make responsive to parent container instead of window/screen\n    <responsive-grid-col xl=\"2\" lg=\"3\" md=\"4\" sm=\"6\" xs=\"12\">Content</responsive-grid-col>\n    <responsive-grid-col xl=\"2\" lg=\"3\" md=\"4\" sm=\"6\" xs=\"12\">Content</responsive-grid-col>\n    <responsive-grid-clear sm/>\n    <responsive-grid-col xl=\"2\" lg=\"3\" md=\"4\" sm=\"6\" xs=\"12\">Content</responsive-grid-col>\n    <responsive-grid-col xl=\"2\" lg=\"3\" md=\"4\" sm=\"6\" xs=\"12\">Content</responsive-grid-col>\n  </responsive-grid-row>\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n        width: 100%;\n        margin-right: auto;\n        margin-left: auto;\n        -webkit-box-sizing: border-box;\n        -moz-box-sizing: border-box;\n        box-sizing: border-box;\n      }\n      :host:before,\n      :host:after {\n        content: \" \";\n        display: table;\n        -webkit-box-sizing: border-box;\n        -moz-box-sizing: border-box;\n        box-sizing: border-box;\n      }\n      #row-inner {\n        margin-left: -15px;\n        margin-right: -15px;\n        @apply --responsive-grid-row-inner;\n      }\n      :host #row-inner:before,\n      :host #row-inner:after {\n        content: \" \";\n        display: table;\n      }\n      :host #row-inner:after {\n        clear: both;\n      }\n      :host #row-inner:before,\n      :host #row-inner:after {\n        -webkit-box-sizing: border-box;\n        -moz-box-sizing: border-box;\n        box-sizing: border-box;\n      }\n      #row-inner[screen=\"xs\"] ::slotted(responsive-grid-clear[xs]),\n      #row-inner[screen=\"sm\"] ::slotted(responsive-grid-clear[sm]),\n      #row-inner[screen=\"md\"] ::slotted(responsive-grid-clear[md]),\n      #row-inner[screen=\"lg\"] ::slotted(responsive-grid-clear[lg]),\n      #row-inner[screen=\"xl\"] ::slotted(responsive-grid-clear[xl]) {\n        display: block;\n      }\n      #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[xs=\"0\"]),\n      #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[sm=\"0\"]),\n      #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[md=\"0\"]),\n      #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[lg=\"0\"]) {\n        display: inline-block;\n      }\n      #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"12\"]),\n      #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"12\"]),\n      #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"12\"]),\n      #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"12\"]),\n      #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"12\"]) {\n        width: 100%;\n      }\n      #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"11\"]),\n      #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"11\"]),\n      #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"11\"]),\n      #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"11\"]),\n      #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"11\"]) {\n        width: 91.66666667%;\n      }\n      #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"10\"]),\n      #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"10\"]),\n      #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"10\"]),\n      #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"10\"]),\n      #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"10\"]) {\n        width: 83.33333333%;\n      }\n      #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"9\"]),\n      #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"9\"]),\n      #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"9\"]),\n      #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"9\"]),\n      #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"9\"]) {\n        width: 75%;\n      }\n      #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"8\"]),\n      #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"8\"]),\n      #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"8\"]),\n      #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"8\"]),\n      #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"8\"]) {\n        width: 66.66666667%;\n      }\n      #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"7\"]),\n      #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"7\"]),\n      #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"7\"]),\n      #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"7\"]),\n      #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"7\"]) {\n        width: 58.33333333%;\n      }\n      #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"6\"]),\n      #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"6\"]),\n      #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"6\"]),\n      #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"6\"]),\n      #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"6\"]) {\n        width: 50%;\n      }\n      #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"5\"]),\n      #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"5\"]),\n      #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"5\"]),\n      #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"5\"]),\n      #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"5\"]) {\n        width: 41.66666667%;\n      }\n      #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"4\"]),\n      #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"4\"]),\n      #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"4\"]),\n      #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"4\"]),\n      #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"4\"]) {\n        width: 33.33333333%;\n      }\n      #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"3\"]),\n      #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"3\"]),\n      #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"3\"]),\n      #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"3\"]),\n      #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"3\"]) {\n        width: 25%;\n      }\n      #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"2\"]),\n      #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"2\"]),\n      #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"2\"]),\n      #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"2\"]),\n      #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"2\"]) {\n        width: 16.66666667%;\n      }\n      #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"1\"]),\n      #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"1\"]),\n      #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"1\"]),\n      #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"1\"]),\n      #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"1\"]) {\n        width: 8.33333333%;\n      }\n      #row-inner[screen=\"xs\"] ::slotted(responsive-grid-col[xs=\"0\"]),\n      #row-inner[screen=\"sm\"] ::slotted(responsive-grid-col[sm=\"0\"]),\n      #row-inner[screen=\"md\"] ::slotted(responsive-grid-col[md=\"0\"]),\n      #row-inner[screen=\"lg\"] ::slotted(responsive-grid-col[lg=\"0\"]),\n      #row-inner[screen=\"xl\"] ::slotted(responsive-grid-col[xl=\"0\"]) {\n        display: none;\n      }\n      :host #row-inner ::slotted(* > #col-inner) {\n        padding: 0px;\n      }\n      :host #row-inner[gutter=\"1\"] ::slotted(* > #col-inner) {\n        padding: 5px;\n      }\n      :host #row-inner[gutter=\"2\"] ::slotted(* > #col-inner) {\n        padding: 10px;\n      }\n      :host #row-inner[gutter=\"3\"] ::slotted(* > #col-inner) {\n        padding: 15px;\n      }\n      :host #row-inner[gutter=\"4\"] ::slotted(* > #col-inner) {\n        padding: 20px;\n      }\n    </style>\n    <responsive-utility\n      sm\\$=\"[[sm]]\"\n      md\\$=\"[[sm]]\"\n      lg\\$=\"[[lg]]\"\n      xl\\$=\"[[xl]]\"\n      responsive-to-parent\\$=\"[[responsiveToParent]]\"\n    >\n    </responsive-utility>\n    <div id=\"row-inner\" screen\\$=\"[[screen]]\" gutter\\$=\"[[gutter]]\">\n      <slot></slot>\n    </div>\n  `,\n\n  is: \"responsive-grid-row\",\n\n  properties: {\n    /**\n     * Custom small breakpoint\n     */\n    sm: {\n      type: Number,\n      value: null\n    },\n    /**\n     * Custom medium breakpoint\n     */\n    md: {\n      type: Number,\n      value: null\n    },\n    /**\n     * Custom large breakpoint\n     */\n    lg: {\n      type: Number,\n      value: null\n    },\n    /**\n     * Custom extra-large breakpoint\n     */\n    xl: {\n      type: Number,\n      value: null\n    },\n    /**\n     * the gutter-level for the columns from 0-4\n     */\n    gutter: {\n      type: Number,\n      value: 0\n    },\n    /**\n     * make responsive based on a container instead of the window\n     */\n    responsiveToParent: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /*\n     * screen size: xs, sm, md, lg, or xl\n     */\n    screen: {\n      type: String,\n      value: \"xs\",\n      notify: true,\n      reflectToAttribute: true\n    }\n  },\n\n  attached: function() {\n    let root = this;\n    window.ResponsiveUtility.requestAvailability();\n    root.fire(\"responsive-element\", {\n      element: root,\n      attribute: \"screen\",\n      relativeToParent: root.responsiveToParent\n    });\n  }\n});\n"],"names":["_template","html","is","properties","xl","type","Number","value","lg","md","sm","xs","Boolean","gutter","responsiveToParent","reflectToAttribute","screen","String","notify","attached","window","ResponsiveUtility","requestAvailability","this","fire","element","attribute","relativeToParent"],"mappings":"ssgBAkBQ,CACNA,UAAWC,YA+BXC,GAAI,sBAEJC,WAAY,CAIVC,GAAI,CACFC,KAAMC,OACNC,MAAO,GAKTC,GAAI,CACFH,KAAMC,OACNC,MAAO,GAKTE,GAAI,CACFJ,KAAMC,OACNC,MAAO,GAKTG,GAAI,CACFL,KAAMC,OACNC,MAAO,GAKTI,GAAI,CACFN,KAAMC,OACNC,MAAO,gBCvEL,CACNP,UAAWC,YASXC,GAAI,wBAEJC,WAAY,CAIVC,GAAI,CACFC,KAAMO,QACNL,OAAO,GAKTC,GAAI,CACFH,KAAMO,QACNL,OAAO,GAKTE,GAAI,CACFJ,KAAMO,QACNL,OAAO,GAKTG,GAAI,CACFL,KAAMO,QACNL,OAAO,GAKTI,GAAI,CACFN,KAAMO,QACNL,OAAO,gBCnCL,CACNP,UAAWC,YA2KXC,GAAI,sBAEJC,WAAY,CAIVO,GAAI,CACFL,KAAMC,OACNC,MAAO,MAKTE,GAAI,CACFJ,KAAMC,OACNC,MAAO,MAKTC,GAAI,CACFH,KAAMC,OACNC,MAAO,MAKTH,GAAI,CACFC,KAAMC,OACNC,MAAO,MAKTM,OAAQ,CACNR,KAAMC,OACNC,MAAO,GAKTO,mBAAoB,CAClBT,KAAMO,QACNL,OAAO,EACPQ,oBAAoB,GAKtBC,OAAQ,CACNX,KAAMY,OACNV,MAAO,KACPW,QAAQ,EACRH,oBAAoB,IAIxBI,SAAU,WAERC,OAAOC,kBAAkBC,sBADdC,KAENC,KAAK,qBAAsB,CAC9BC,QAHSF,KAITG,UAAW,SACXC,iBALSJ,KAKcT"}