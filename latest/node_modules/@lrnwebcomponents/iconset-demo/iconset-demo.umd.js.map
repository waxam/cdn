{"version":3,"file":"iconset-demo.umd.js","sources":["iconset-demo.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nimport \"@polymer/iron-icon/iron-icon.js\";\nimport \"@polymer/marked-element/marked-element.js\";\n\nexport { IconsetDemo };\n/**\n * `iconset-demo`\n * `iterates through an iconset array to generate a demo of all of the icons`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @customElement\n * @polymer\n * @demo demo/index.html\n */\nclass IconsetDemo extends PolymerElement {\n  \n  // render function\n  static get template() {\n    return html`\n<style>:host {\n  display: block;\n  box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n  margin-bottom: 40px;\n}\n:host .demo-container {\n  padding: 20px 40px;\n}\n:host .demo-container .iconset:not(:first-of-type) {\n  border-top: 1px solid #ddd;\n}\n:host ul {\n  list-style-type: none;\n  padding: 0;\n}\n:host li {\n  display: inline-block;\n  width: 160px;\n  margin: 16px 8px;\n  text-align: center;\n}\n:host iron-icon {\n  font-size: 14px;\n  color: rgb(97,97,97);\n  display: inline-block;\n}\n:host .iconset:nth-of-type(9n+2) iron-icon {\n  color: #BE3300;\n}\n:host .iconset:nth-of-type(9n+3) iron-icon {\n  color: #0000B5;\n}\n:host .iconset:nth-of-type(9n+4) iron-icon {\n  color: #750075;\n}\n:host .iconset:nth-of-type(9n+5) iron-icon {\n  color: #AA5D00;\n}\n:host .iconset:nth-of-type(9n+6) iron-icon {\n  color: #DB0A5B;\n}\n:host .iconset:nth-of-type(9n+7) iron-icon {\n  color: #005500;\n}\n:host .iconset:nth-of-type(9n+8) iron-icon {\n  color: #CF000F;\n}\n:host .iconset:nth-of-type(9n) iron-icon {\n  color: #005f8b;\n}\n:host #icon-text {\n  margin-top: 8px;\n  font-size: 10px;\n  color: black;\n  text-align: center;\n}\n:host .code-container {\n  margin: 0;\n  background-color: var(--google-grey-100,#f5f5f5);\n  border-top: 1px solid #e0e0e0;\n}\n:host code {\n  padding: 20px 40px;\n  display: block;\n  margin: 0;\n  font-size: 13px;\n}\n:host .tag {\n  color: #905;\n}\n:host .attr-name {\n  color: #690;\n}\n:host .attr-value {\n  color: #07a;\n}</style>\n<div class=\"demo-container\">\n    <template is=\"dom-repeat\" items=\"[[items]]\" as=\"iconset\">\n        <div class=\"iconset\">\n            <p><strong>[[iconset.name]]</strong></p>\n            <ul>\n                <template is=\"dom-repeat\" items=\"[[iconset.icons]]\" as=\"icon\">\n                    <li>\n                    <div id=\"icon\">\n                        <iron-icon icon\\$=\"[[iconset.prefix]][[icon]]\"></iron-icon>\n                        <div id=\"icon-text\">[[iconset.prefix]][[icon]]</div>\n                    </div>\n                    </li>\n                </template>\n            </ul>\n        </div>\n    </template>\n</div>\n<div class=\"code-container\">\n    <code><span class=\"tag\">&lt;iron-icon</span> <span class=\"attr-name\">icon=\"<strong><em><span class=\"attr-value\">optional_iconset_name:icon_name</span></em></strong>\"</span><span class=\"tag\">&gt;&lt;/iron-icon&gt;</span></code>\n</div>`;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n  \"items\": {\n    \"name\": \"items\",\n    \"type\": \"Array\",\n    \"value\": [],\n    \"reflectToAttribute\": false,\n    \"observer\": false\n  }\n}\n;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"iconset-demo\";\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    this._getIconsFromNodeList();\n    super.connectedCallback();\n  }\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  //disconnectedCallback() {}\n\n  /**\n   * gets icon data based on a query of iron-iconset-svg\n   */\n  _getIconsFromNodeList() {\n    let set = document.head.querySelectorAll(\"iron-iconset-svg\");\n    this.set(\"items\", []);\n    for (let i = 0; i < set.length; i++) {\n      let setName = set[i].getAttribute(\"name\"),\n        g = set[i].querySelectorAll(\"svg > defs > g, svg > g\"),\n        icons = [];\n      for (let j = 0; j < g.length; j++) {\n        icons.push(g[j].getAttribute(\"id\"));\n      }\n      this.push(\"items\", {\n        name:\n          setName !== undefined && setName !== null ? setName + \" \" : \"Icons\",\n        prefix: setName !== undefined && setName !== null ? setName + \":\" : \"\",\n        icons: icons !== undefined && icons !== null ? icons : []\n      });\n    }\n  }\n}\nwindow.customElements.define(IconsetDemo.tag, IconsetDemo);\n"],"names":["IconsetDemo","PolymerElement","html","_getIconsFromNodeList","set","document","head","querySelectorAll","i","length","setName","getAttribute","g","icons","j","push","name","prefix","window","customElements","define","tag"],"mappings":"uzMAoBMA,gaAAoBC,+DAIfC,qDAqGA,OACA,MACC,aACA,cACC,uBACa,YACV,sCAWL,qEAMFC,kIAYDC,EAAMC,SAASC,KAAKC,iBAAiB,yBACpCH,IAAI,QAAS,QACb,IAAII,EAAI,EAAGA,EAAIJ,EAAIK,OAAQD,IAAK,SAC/BE,EAAUN,EAAII,GAAGG,aAAa,QAChCC,EAAIR,EAAII,GAAGD,iBAAiB,2BAC5BM,EAAQ,GACDC,EAAI,EAAGA,EAAIF,EAAEH,OAAQK,IAC5BD,EAAME,KAAKH,EAAEE,GAAGH,aAAa,YAE1BI,KAAK,QAAS,CACjBC,KACEN,MAAAA,EAA4CA,EAAU,IAAM,QAC9DO,OAAQP,MAAAA,EAA4CA,EAAU,IAAM,GACpEG,MAAOA,MAAAA,EAAwCA,EAAQ,2CAK/DK,OAAOC,eAAeC,OAAOpB,EAAYqB,IAAKrB"}