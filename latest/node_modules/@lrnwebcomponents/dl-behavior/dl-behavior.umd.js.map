{"version":3,"file":"dl-behavior.umd.js","sources":["dl-behavior.umd.js"],"sourcesContent":["import { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nwindow.mtz = window.mtz || {};\n\n/**\n * A behavior for downloading streamed files or creating files based on available data.\n *\n * @polymerBehavior\n * @demo demo/index.html\n */\nmtz.FileDownloadBehaviors = {\n  properties: {\n    /* MIME type lookup for file extensions */\n    fileTypes: {\n      type: Object,\n      value() {\n        return {\n          CSV: \"text/csv\",\n          JSON: \"text/json\",\n          PDF: \"application/pdf\",\n          TXT: \"text/plain\"\n        };\n      }\n    }\n  },\n\n  /**\n   * Converts the data to a blob then uses navigator to save blob if itâ€™s available, otherwise\n   * creates an <a> with [download] attribute then simulates a click.\n   * @param {String} data - data to encode.\n   * @param {String} type - type of file to generate (i.e, JSON or CSV).\n   * @param {String} [name = 'download'] - file name to save data under.\n   * @param {Boolean} [newTab = true] - If false, downloads uri in existing tab. Otherwise,\n   * downloads in new tab.\n   */\n  downloadFromData(data, type, name = \"download\", newTab = true) {\n    const mimeType = this.fileTypes[type.toUpperCase()];\n    const blob = new Blob([decodeURIComponent(encodeURI(data))], {\n      type: mimeType\n    });\n    const filename = name + \".\" + type.toLowerCase();\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      window.navigator.msSaveOrOpenBlob(blob, filename);\n    } else {\n      // Link elements have a download attribute which provides cross-platform\n      // download behavior supporting all but IE 11. This creates new link and then\n      // clicks it to initiate download.\n      const link = document.createElement(\"a\");\n      link.href = (window.URL || window.webkitURL).createObjectURL(blob);\n      link.download = filename;\n      link.target = newTab ? \"_blank\" : \"_self\";\n      dom(this.root).appendChild(link);\n      link.click();\n      dom(this.root).removeChild(link);\n    }\n  },\n\n  /**\n   * Opens a new tab at the URI so that download can be initiated from the page.\n   * @param {String} uri - The uri to open.\n   * @param {Boolean} [newTab = true] - If false, downloads uri in existing tab. Otherwise,\n   * downloads in new tab.\n   * @return {Boolean} Returns true.\n   */\n  downloadFromURI(uri, newTab = true) {\n    window.open(uri, newTab ? \"_blank\" : \"_self\");\n    return true; // NOTE: Returning true to prevent error in some browsers during download.\n  }\n};\n"],"names":["window","mtz","FileDownloadBehaviors","properties","fileTypes","type","Object","value","CSV","JSON","PDF","TXT","downloadFromData","data","name","newTab","mimeType","this","toUpperCase","blob","Blob","decodeURIComponent","encodeURI","filename","toLowerCase","navigator","msSaveOrOpenBlob","link","document","createElement","href","URL","webkitURL","createObjectURL","download","target","dom","root","appendChild","click","removeChild","downloadFromURI","uri","open"],"mappings":"+QACAA,OAAOC,IAAMD,OAAOC,KAAO,GAQ3BA,IAAIC,sBAAwB,CAC1BC,WAAY,CAEVC,UAAW,CACTC,KAAMC,OACNC,uBACS,CACLC,IAAK,WACLC,KAAM,YACNC,IAAK,kBACLC,IAAK,iBAebC,0BAAiBC,EAAMR,OAAMS,yDAAO,WAAYC,6DACxCC,EAAWC,KAAKb,UAAUC,EAAKa,eAC/BC,EAAO,IAAIC,KAAK,CAACC,mBAAmBC,UAAUT,KAAS,CAC3DR,KAAMW,IAEFO,EAAWT,EAAO,IAAMT,EAAKmB,iBAC/BxB,OAAOyB,WAAazB,OAAOyB,UAAUC,iBACvC1B,OAAOyB,UAAUC,iBAAiBP,EAAMI,OACnC,KAICI,EAAOC,SAASC,cAAc,KACpCF,EAAKG,MAAQ9B,OAAO+B,KAAO/B,OAAOgC,WAAWC,gBAAgBd,GAC7DQ,EAAKO,SAAWX,EAChBI,EAAKQ,OAASpB,EAAS,SAAW,QAClCqB,MAAInB,KAAKoB,MAAMC,YAAYX,GAC3BA,EAAKY,QACLH,MAAInB,KAAKoB,MAAMG,YAAYb,KAW/Bc,yBAAgBC,OAAK3B,oEACnBf,OAAO2C,KAAKD,EAAK3B,EAAS,SAAW,UAC9B"}