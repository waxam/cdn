{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "lib/eco-json-schema-boolean.js",
      "properties": [
        {
          "name": "schema",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 25,
              "column": 4
            },
            "end": {
              "line": 28,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_schemaChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "value",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 4
            },
            "end": {
              "line": 33,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "error",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 4
            },
            "end": {
              "line": 37,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_label",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 4
            },
            "end": {
              "line": 42,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        }
      ],
      "methods": [
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 2
            },
            "end": {
              "line": 44,
              "column": 22
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 45,
              "column": 2
            },
            "end": {
              "line": 45,
              "column": 25
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_schemaChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 2
            },
            "end": {
              "line": 59,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_isSchemaValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 2
            },
            "end": {
              "line": 66,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaBoolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 2
            },
            "end": {
              "line": 73,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 2
            },
            "end": {
              "line": 80,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaString",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 2
            },
            "end": {
              "line": 87,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaObject",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 2
            },
            "end": {
              "line": 90,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaArray",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 2
            },
            "end": {
              "line": 93,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 3,
          "column": 8
        },
        "end": {
          "line": 94,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "schema",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 25,
              "column": 4
            },
            "end": {
              "line": 28,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 4
            },
            "end": {
              "line": 33,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "error",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 4
            },
            "end": {
              "line": 37,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "eco-json-schema-boolean"
    },
    {
      "description": "",
      "summary": "",
      "path": "lib/eco-json-schema-enum.js",
      "properties": [
        {
          "name": "validator",
          "type": "string | null | undefined",
          "description": "Name of the validator to use.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-validatable-behavior/iron-validatable-behavior.js",
            "start": {
              "line": 52,
              "column": 4
            },
            "end": {
              "line": 52,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "inheritedFrom": "IronValidatableBehavior"
        },
        {
          "name": "invalid",
          "type": "boolean | null | undefined",
          "description": "True if the last call to `validate` is invalid.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-validatable-behavior/iron-validatable-behavior.js",
            "start": {
              "line": 57,
              "column": 4
            },
            "end": {
              "line": 63,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_invalidChanged\"",
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "IronValidatableBehavior"
        },
        {
          "name": "_validator",
          "type": "?",
          "description": " Recompute this every time it's needed, because we don't know if the\nunderlying IronValidatableBehaviorMeta has changed.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-validatable-behavior/iron-validatable-behavior.js",
            "start": {
              "line": 80,
              "column": 2
            },
            "end": {
              "line": 83,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          },
          "inheritedFrom": "IronValidatableBehavior"
        },
        {
          "name": "schema",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 4
            },
            "end": {
              "line": 53,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_schemaChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 4
            },
            "end": {
              "line": 58,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "error",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 4
            },
            "end": {
              "line": 63,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_errorChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        },
        {
          "name": "_items",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 4
            },
            "end": {
              "line": 69,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        }
      ],
      "methods": [
        {
          "name": "registered",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-validatable-behavior/iron-validatable-behavior.js",
            "start": {
              "line": 66,
              "column": 2
            },
            "end": {
              "line": 68,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronValidatableBehavior"
        },
        {
          "name": "_invalidChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-validatable-behavior/iron-validatable-behavior.js",
            "start": {
              "line": 70,
              "column": 2
            },
            "end": {
              "line": 76,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "IronValidatableBehavior"
        },
        {
          "name": "hasValidator",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-validatable-behavior/iron-validatable-behavior.js",
            "start": {
              "line": 88,
              "column": 2
            },
            "end": {
              "line": 90,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "boolean",
            "desc": "True if the validator `validator` exists."
          },
          "inheritedFrom": "IronValidatableBehavior"
        },
        {
          "name": "validate",
          "description": "Returns true if the `value` is valid, and updates `invalid`. If you want\nyour element to have custom validation logic, do not override this method;\noverride `_getValidity(value)` instead.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/iron-validatable-behavior/iron-validatable-behavior.js",
            "start": {
              "line": 104,
              "column": 2
            },
            "end": {
              "line": 112,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value",
              "type": "Object",
              "description": "Deprecated: The value to be validated. By default,\nit is passed to the validator's `validate()` function, if a validator is\n   set.\nIf this argument is not specified, then the element's `value` property\nis used, if it exists."
            }
          ],
          "return": {
            "type": "boolean",
            "desc": "True if `value` is valid."
          },
          "inheritedFrom": "IronValidatableBehavior"
        },
        {
          "name": "_getValidity",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "../../@polymer/iron-validatable-behavior/iron-validatable-behavior.js",
            "start": {
              "line": 124,
              "column": 2
            },
            "end": {
              "line": 129,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "inheritedFrom": "IronValidatableBehavior"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 2
            },
            "end": {
              "line": 71,
              "column": 22
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 2
            },
            "end": {
              "line": 72,
              "column": 25
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_schemaChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 2
            },
            "end": {
              "line": 90,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_errorChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 2
            },
            "end": {
              "line": 97,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_isSchemaValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 2
            },
            "end": {
              "line": 104,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaBoolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 2
            },
            "end": {
              "line": 111,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 2
            },
            "end": {
              "line": 118,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaString",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 2
            },
            "end": {
              "line": 125,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaObject",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 2
            },
            "end": {
              "line": 128,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaArray",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 2
            },
            "end": {
              "line": 131,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 7,
          "column": 8
        },
        "end": {
          "line": 132,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "validator",
          "description": "Name of the validator to use.",
          "sourceRange": {
            "file": "../../@polymer/iron-validatable-behavior/iron-validatable-behavior.js",
            "start": {
              "line": 52,
              "column": 4
            },
            "end": {
              "line": 52,
              "column": 29
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "IronValidatableBehavior"
        },
        {
          "name": "invalid",
          "description": "True if the last call to `validate` is invalid.",
          "sourceRange": {
            "file": "../../@polymer/iron-validatable-behavior/iron-validatable-behavior.js",
            "start": {
              "line": 57,
              "column": 4
            },
            "end": {
              "line": 63,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "IronValidatableBehavior"
        },
        {
          "name": "schema",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 4
            },
            "end": {
              "line": 53,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 4
            },
            "end": {
              "line": 58,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "error",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 4
            },
            "end": {
              "line": 63,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "invalid-changed",
          "description": "Fired when the `invalid` property changes.",
          "metadata": {},
          "inheritedFrom": "IronValidatableBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "eco-json-schema-enum"
    },
    {
      "description": "`eco-json-schema-input` takes in a JSON schema of type number and string and\ncontains a `paper-input`, exposing a `value` property that represents the schema.\n\nValidation is handled for strings and number/integers by mapping JSON schema\nvalidation keywords to `paper-input` attributes; form elements will automatically\ntry and validate themselves as users provide input:\n\nPlease see the `eco-json-schema-object` documentation for further information.",
      "summary": "",
      "path": "lib/eco-json-schema-input.js",
      "properties": [
        {
          "name": "language",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 4
            },
            "end": {
              "line": 60,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"en\""
        },
        {
          "name": "resources",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 4
            },
            "end": {
              "line": 65,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{}"
        },
        {
          "name": "formats",
          "type": "Object | null | undefined",
          "description": "Optional dictionary of user defined formats, as explained here:\n     http://formatjs.io/guides/message-syntax/#custom-formats\n\n     For example, a valid dictionary of formats would be:\n     this.formats = {\n        number: { USD: { style: 'currency', currency: 'USD' } }\n     }",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 189,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "useKeyIfMissing",
          "type": "boolean | null | undefined",
          "description": "If true, will use the provided key when\n     the translation does not exist for that key.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 195,
              "column": 4
            },
            "end": {
              "line": 195,
              "column": 50
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "localize",
          "type": "Function | null | undefined",
          "description": "Translates a string to the current `language`. Any parameters to the\n     string should be passed in order, as follows:\n     `localize(stringKey, param1Name, param1Value, param2Name, param2Value)`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 202,
              "column": 4
            },
            "end": {
              "line": 205,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Function"
            }
          },
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "bubbleEvent",
          "type": "boolean | null | undefined",
          "description": "If true, will bubble up the event to the parents",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 210,
              "column": 4
            },
            "end": {
              "line": 210,
              "column": 46
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "__localizationCache",
          "type": "Object",
          "description": "   Internal singleton cache. This is the private implementation of the\n   behaviour; don't interact with it directly.\n   ",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 139,
              "column": 2
            },
            "end": {
              "line": 144,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "schema",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 4
            },
            "end": {
              "line": 69,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_schemaChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "value",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 4
            },
            "end": {
              "line": 76,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "error",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 4
            },
            "end": {
              "line": 81,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_errorChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "null"
        }
      ],
      "methods": [
        {
          "name": "loadResources",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 213,
              "column": 2
            },
            "end": {
              "line": 246,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path"
            },
            {
              "name": "language"
            },
            {
              "name": "merge"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "__computeLocalize",
          "description": "Returns a computed `localize` method, based on the current `language`.",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 251,
              "column": 2
            },
            "end": {
              "line": 292,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "language"
            },
            {
              "name": "resources"
            },
            {
              "name": "formats"
            }
          ],
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "__onRequestResponse",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 294,
              "column": 2
            },
            "end": {
              "line": 323,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            },
            {
              "name": "language"
            },
            {
              "name": "merge"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "__onRequestError",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 325,
              "column": 2
            },
            "end": {
              "line": 327,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "__checkLocalizationCache",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 329,
              "column": 2
            },
            "end": {
              "line": 338,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "proto"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 2
            },
            "end": {
              "line": 83,
              "column": 22
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 2
            },
            "end": {
              "line": 84,
              "column": 25
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_schemaChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 85,
              "column": 2
            },
            "end": {
              "line": 165,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_errorChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 2
            },
            "end": {
              "line": 174,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_isSchemaValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 2
            },
            "end": {
              "line": 181,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaBoolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 2
            },
            "end": {
              "line": 188,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 2
            },
            "end": {
              "line": 195,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaString",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 2
            },
            "end": {
              "line": 202,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaObject",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 203,
              "column": 2
            },
            "end": {
              "line": 205,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaArray",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 2
            },
            "end": {
              "line": 208,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 19,
          "column": 8
        },
        "end": {
          "line": 209,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "language",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 4
            },
            "end": {
              "line": 60,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "resources",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 4
            },
            "end": {
              "line": 65,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "formats",
          "description": "Optional dictionary of user defined formats, as explained here:\n     http://formatjs.io/guides/message-syntax/#custom-formats\n\n     For example, a valid dictionary of formats would be:\n     this.formats = {\n        number: { USD: { style: 'currency', currency: 'USD' } }\n     }",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 189,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "use-key-if-missing",
          "description": "If true, will use the provided key when\n     the translation does not exist for that key.",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 195,
              "column": 4
            },
            "end": {
              "line": 195,
              "column": 50
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "localize",
          "description": "Translates a string to the current `language`. Any parameters to the\n     string should be passed in order, as follows:\n     `localize(stringKey, param1Name, param1Value, param2Name, param2Value)`",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 202,
              "column": 4
            },
            "end": {
              "line": 205,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Function | null | undefined",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "bubble-event",
          "description": "If true, will bubble up the event to the parents",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 210,
              "column": 4
            },
            "end": {
              "line": 210,
              "column": 46
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "schema",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 4
            },
            "end": {
              "line": 69,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 4
            },
            "end": {
              "line": 76,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "error",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 4
            },
            "end": {
              "line": 81,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "app-localize-resources-error",
          "description": "Fired when the resources cannot be loaded due to an error.\n   ",
          "metadata": {},
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "app-localize-resources-loaded",
          "description": "Fired after the resources have been loaded.\n   ",
          "metadata": {},
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "eco-json-schema-input"
    },
    {
      "description": "`eco-json-schema-file` takes in a JSON schema of type number and string and\ncontains a `paper-input`, exposing a `value` property that represents the schema.\n\nValidation is handled for strings and number/integers by mapping JSON schema\nvalidation keywords to `paper-input` attributes; form elements will automatically\ntry and validate themselves as users provide input:\n\nPlease see the `eco-json-schema-object` documentation for further information.",
      "summary": "",
      "path": "lib/eco-json-schema-file.js",
      "properties": [
        {
          "name": "language",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 4
            },
            "end": {
              "line": 174,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "\"en\""
        },
        {
          "name": "resources",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 4
            },
            "end": {
              "line": 180,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "formats",
          "type": "Object | null | undefined",
          "description": "Optional dictionary of user defined formats, as explained here:\n     http://formatjs.io/guides/message-syntax/#custom-formats\n\n     For example, a valid dictionary of formats would be:\n     this.formats = {\n        number: { USD: { style: 'currency', currency: 'USD' } }\n     }",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 189,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "useKeyIfMissing",
          "type": "boolean | null | undefined",
          "description": "If true, will use the provided key when\n     the translation does not exist for that key.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 195,
              "column": 4
            },
            "end": {
              "line": 195,
              "column": 50
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "localize",
          "type": "Function | null | undefined",
          "description": "Translates a string to the current `language`. Any parameters to the\n     string should be passed in order, as follows:\n     `localize(stringKey, param1Name, param1Value, param2Name, param2Value)`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 202,
              "column": 4
            },
            "end": {
              "line": 205,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Function"
            }
          },
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "bubbleEvent",
          "type": "boolean | null | undefined",
          "description": "If true, will bubble up the event to the parents",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 210,
              "column": 4
            },
            "end": {
              "line": 210,
              "column": 46
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "__localizationCache",
          "type": "Object",
          "description": "   Internal singleton cache. This is the private implementation of the\n   behaviour; don't interact with it directly.\n   ",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 139,
              "column": 2
            },
            "end": {
              "line": 144,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "schema",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 4
            },
            "end": {
              "line": 184,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_schemaChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 185,
              "column": 4
            },
            "end": {
              "line": 192,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\"",
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "target",
          "type": "string | null | undefined",
          "description": "`target` is the target url to upload the files to.\nAdditionally by adding '<name>' in your url, it will be replaced by\nthe file name.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 4
            },
            "end": {
              "line": 209,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "accept",
          "type": "string | null | undefined",
          "description": "`accept` is the set of comma separated file extensions or mime types\nto filter as accepted.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 215,
              "column": 4
            },
            "end": {
              "line": 218,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "droppable",
          "type": "boolean | null | undefined",
          "description": "`droppable` indicates whether or not to allow file drop.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 4
            },
            "end": {
              "line": 226,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "dropText",
          "type": "string | null | undefined",
          "description": "`dropText` is the  text to display in the file drop area.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 231,
              "column": 4
            },
            "end": {
              "line": 234,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Drop Files Here\""
        },
        {
          "name": "multi",
          "type": "boolean | null | undefined",
          "description": "`multi` indicates whether or not to allow multiple files to be uploaded.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "files",
          "type": "Array | null | undefined",
          "description": "`files` is the list of files to be uploaded",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 253,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "raised",
          "type": "boolean | null | undefined",
          "description": "`raised` indicates whether or not the button should be raised",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 4
            },
            "end": {
              "line": 261,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "noink",
          "type": "boolean | null | undefined",
          "description": "`noink` indicates that the button should not have an ink effect",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 4
            },
            "end": {
              "line": 269,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "headers",
          "type": "Object | null | undefined",
          "description": "`headers` is a key value map of header names and values",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 274,
              "column": 4
            },
            "end": {
              "line": 277,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "retryText",
          "type": "string | null | undefined",
          "description": "`retryText` is the text for the tooltip to retry an upload",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 282,
              "column": 4
            },
            "end": {
              "line": 285,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Retry Upload\""
        },
        {
          "name": "removeText",
          "type": "string | null | undefined",
          "description": "`removeText` is the text for the tooltip to remove an upload",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 290,
              "column": 4
            },
            "end": {
              "line": 293,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Remove\""
        },
        {
          "name": "successText",
          "type": "string | null | undefined",
          "description": "`successText` is the text for the tooltip of a successful upload",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 298,
              "column": 4
            },
            "end": {
              "line": 301,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Success\""
        },
        {
          "name": "errorText",
          "type": "string | null | undefined",
          "description": "`errorText` is the text to display for a failed upload",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 306,
              "column": 4
            },
            "end": {
              "line": 309,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Error uploading file...\""
        },
        {
          "name": "_shownDropText",
          "type": "boolean | null | undefined",
          "description": "`_shownDropText` indicates whether or not the drop text should be shown",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 314,
              "column": 4
            },
            "end": {
              "line": 317,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "additional",
          "type": "Object | null | undefined",
          "description": "`additional` object of key-pair values to send additional values along with file.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 322,
              "column": 4
            },
            "end": {
              "line": 325,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "fileDataName",
          "type": "string | null | undefined",
          "description": "`fileDataName` is the name for the file data in the `formData` object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 330,
              "column": 4
            },
            "end": {
              "line": 333,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"file\""
        },
        {
          "name": "paperButtonAlt",
          "type": "string | null | undefined",
          "description": "`paperButtonAlt` allows changing the alt property on the paper button",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 338,
              "column": 4
            },
            "end": {
              "line": 341,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "paperButtonTitle",
          "type": "string | null | undefined",
          "description": "`paperButtonTitle` allows changing the title property on the paper button",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 346,
              "column": 4
            },
            "end": {
              "line": 349,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        }
      ],
      "methods": [
        {
          "name": "loadResources",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 213,
              "column": 2
            },
            "end": {
              "line": 246,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path"
            },
            {
              "name": "language"
            },
            {
              "name": "merge"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "__computeLocalize",
          "description": "Returns a computed `localize` method, based on the current `language`.",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 251,
              "column": 2
            },
            "end": {
              "line": 292,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "language"
            },
            {
              "name": "resources"
            },
            {
              "name": "formats"
            }
          ],
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "__onRequestResponse",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 294,
              "column": 2
            },
            "end": {
              "line": 323,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            },
            {
              "name": "language"
            },
            {
              "name": "merge"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "__onRequestError",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 325,
              "column": 2
            },
            "end": {
              "line": 327,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "__checkLocalizationCache",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 329,
              "column": 2
            },
            "end": {
              "line": 338,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "proto"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "clear",
          "description": "Clears the list of files",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 354,
              "column": 2
            },
            "end": {
              "line": 358,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 360,
              "column": 2
            },
            "end": {
              "line": 371,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setupDrop",
          "description": "A function to set up a drop area for drag-and-drop file uploads",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 376,
              "column": 2
            },
            "end": {
              "line": 437,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_fileClick",
          "description": "Clicks the invisible file input",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 442,
              "column": 2
            },
            "end": {
              "line": 450,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_fileChange",
          "description": "Called whenever the list of selected files changes",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 457,
              "column": 2
            },
            "end": {
              "line": 471,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "object",
              "description": "An event object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "cancel",
          "description": "Cancels the file upload for a specific file",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 478,
              "column": 2
            },
            "end": {
              "line": 486,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "file",
              "type": "object",
              "description": "An element of the files array"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_cancelUpload",
          "description": "Cancels the file upload",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 493,
              "column": 2
            },
            "end": {
              "line": 495,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "object",
              "description": "An event object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_retryUpload",
          "description": "Retries to upload the file",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 502,
              "column": 2
            },
            "end": {
              "line": 510,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e",
              "type": "object",
              "description": "An event object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_showDropText",
          "description": "Whether or not to display the drop text",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 515,
              "column": 2
            },
            "end": {
              "line": 517,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "uploadFile",
          "description": "Uploads a file",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 524,
              "column": 2
            },
            "end": {
              "line": 558,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "file",
              "type": "object",
              "description": "An element of the files array"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 559,
              "column": 2
            },
            "end": {
              "line": 561,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_schemaChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 562,
              "column": 2
            },
            "end": {
              "line": 585,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_isSchemaValue",
          "description": "_errorChanged: function() {\n    if (this.error) {\n      this.$.fileInput.errorMessage = this.error;\n      this.$.fileInput.invalid = true;\n    } else {\n      this.$.fileInput.invalid = false;\n      this.$.fileInput.errorMessage = null;\n    }\n  },",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 597,
              "column": 2
            },
            "end": {
              "line": 599,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaFile",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 600,
              "column": 2
            },
            "end": {
              "line": 606,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaBoolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 607,
              "column": 2
            },
            "end": {
              "line": 613,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 614,
              "column": 2
            },
            "end": {
              "line": 620,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaString",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 621,
              "column": 2
            },
            "end": {
              "line": 627,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaObject",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 628,
              "column": 2
            },
            "end": {
              "line": 630,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaArray",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 631,
              "column": 2
            },
            "end": {
              "line": 633,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "stringify",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 634,
              "column": 2
            },
            "end": {
              "line": 636,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "s"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 22,
          "column": 8
        },
        "end": {
          "line": 637,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "language",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 4
            },
            "end": {
              "line": 174,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "resources",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 4
            },
            "end": {
              "line": 180,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "formats",
          "description": "Optional dictionary of user defined formats, as explained here:\n     http://formatjs.io/guides/message-syntax/#custom-formats\n\n     For example, a valid dictionary of formats would be:\n     this.formats = {\n        number: { USD: { style: 'currency', currency: 'USD' } }\n     }",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 189,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "use-key-if-missing",
          "description": "If true, will use the provided key when\n     the translation does not exist for that key.",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 195,
              "column": 4
            },
            "end": {
              "line": 195,
              "column": 50
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "localize",
          "description": "Translates a string to the current `language`. Any parameters to the\n     string should be passed in order, as follows:\n     `localize(stringKey, param1Name, param1Value, param2Name, param2Value)`",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 202,
              "column": 4
            },
            "end": {
              "line": 205,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Function | null | undefined",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "bubble-event",
          "description": "If true, will bubble up the event to the parents",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 210,
              "column": 4
            },
            "end": {
              "line": 210,
              "column": 46
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "schema",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 4
            },
            "end": {
              "line": 184,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 185,
              "column": 4
            },
            "end": {
              "line": 192,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "target",
          "description": "`target` is the target url to upload the files to.\nAdditionally by adding '<name>' in your url, it will be replaced by\nthe file name.",
          "sourceRange": {
            "start": {
              "line": 206,
              "column": 4
            },
            "end": {
              "line": 209,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "accept",
          "description": "`accept` is the set of comma separated file extensions or mime types\nto filter as accepted.",
          "sourceRange": {
            "start": {
              "line": 215,
              "column": 4
            },
            "end": {
              "line": 218,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "droppable",
          "description": "`droppable` indicates whether or not to allow file drop.",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 4
            },
            "end": {
              "line": 226,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "drop-text",
          "description": "`dropText` is the  text to display in the file drop area.",
          "sourceRange": {
            "start": {
              "line": 231,
              "column": 4
            },
            "end": {
              "line": 234,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "multi",
          "description": "`multi` indicates whether or not to allow multiple files to be uploaded.",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 4
            },
            "end": {
              "line": 242,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "files",
          "description": "`files` is the list of files to be uploaded",
          "sourceRange": {
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 253,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "raised",
          "description": "`raised` indicates whether or not the button should be raised",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 4
            },
            "end": {
              "line": 261,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "noink",
          "description": "`noink` indicates that the button should not have an ink effect",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 4
            },
            "end": {
              "line": 269,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "headers",
          "description": "`headers` is a key value map of header names and values",
          "sourceRange": {
            "start": {
              "line": 274,
              "column": 4
            },
            "end": {
              "line": 277,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "retry-text",
          "description": "`retryText` is the text for the tooltip to retry an upload",
          "sourceRange": {
            "start": {
              "line": 282,
              "column": 4
            },
            "end": {
              "line": 285,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "remove-text",
          "description": "`removeText` is the text for the tooltip to remove an upload",
          "sourceRange": {
            "start": {
              "line": 290,
              "column": 4
            },
            "end": {
              "line": 293,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "success-text",
          "description": "`successText` is the text for the tooltip of a successful upload",
          "sourceRange": {
            "start": {
              "line": 298,
              "column": 4
            },
            "end": {
              "line": 301,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "error-text",
          "description": "`errorText` is the text to display for a failed upload",
          "sourceRange": {
            "start": {
              "line": 306,
              "column": 4
            },
            "end": {
              "line": 309,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "additional",
          "description": "`additional` object of key-pair values to send additional values along with file.",
          "sourceRange": {
            "start": {
              "line": 322,
              "column": 4
            },
            "end": {
              "line": 325,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "file-data-name",
          "description": "`fileDataName` is the name for the file data in the `formData` object.",
          "sourceRange": {
            "start": {
              "line": 330,
              "column": 4
            },
            "end": {
              "line": 333,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "paper-button-alt",
          "description": "`paperButtonAlt` allows changing the alt property on the paper button",
          "sourceRange": {
            "start": {
              "line": 338,
              "column": 4
            },
            "end": {
              "line": 341,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "paper-button-title",
          "description": "`paperButtonTitle` allows changing the title property on the paper button",
          "sourceRange": {
            "start": {
              "line": 346,
              "column": 4
            },
            "end": {
              "line": 349,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "app-localize-resources-error",
          "description": "Fired when the resources cannot be loaded due to an error.\n   ",
          "metadata": {},
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "app-localize-resources-loaded",
          "description": "Fired after the resources have been loaded.\n   ",
          "metadata": {},
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "language-changed",
          "description": "Fired when the `language` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "resources-changed",
          "description": "Fired when the `resources` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "files-changed",
          "description": "Fired when the `files` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "eco-json-schema-file"
    },
    {
      "description": "`eco-json-schema-array` takes in a JSON schema of type array and builds a form,\nexposing a `value` property that represents an array described by the schema.\n\nPlease see the `eco-json-schema-object` documentation for further information.",
      "summary": "",
      "path": "lib/eco-json-schema-array.js",
      "properties": [
        {
          "name": "schema",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 4
            },
            "end": {
              "line": 126,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_schemaChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 4
            },
            "end": {
              "line": 129,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "value",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 4
            },
            "end": {
              "line": 137,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\"",
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "error",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_errorChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "_schemaArrayItems",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 4
            },
            "end": {
              "line": 148,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        }
      ],
      "methods": [
        {
          "name": "_valueChanged",
          "description": "Notice values have changed and rebuild the form\nto match (potentially).",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 2
            },
            "end": {
              "line": 170,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "ready",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 2
            },
            "end": {
              "line": 171,
              "column": 22
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 2
            },
            "end": {
              "line": 174,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_buildSchemaArrayItems",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 175,
              "column": 2
            },
            "end": {
              "line": 177,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 2
            },
            "end": {
              "line": 183,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_schemaArraySplicesChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 2
            },
            "end": {
              "line": 255,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "detail"
            }
          ]
        },
        {
          "name": "_schemaArrayItemChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 256,
              "column": 2
            },
            "end": {
              "line": 294,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            },
            {
              "name": "detail"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_removeArrayEl",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 295,
              "column": 2
            },
            "end": {
              "line": 311,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "el"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clearForm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 312,
              "column": 2
            },
            "end": {
              "line": 317,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_schemaChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 318,
              "column": 2
            },
            "end": {
              "line": 322,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_errorChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 323,
              "column": 2
            },
            "end": {
              "line": 332,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_onAddItemWithValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 333,
              "column": 2
            },
            "end": {
              "line": 405,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "values"
            },
            {
              "name": "pointer"
            }
          ]
        },
        {
          "name": "_onAddItem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 406,
              "column": 2
            },
            "end": {
              "line": 436,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onRemoveItem",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 437,
              "column": 2
            },
            "end": {
              "line": 441,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_deepClone",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 442,
              "column": 2
            },
            "end": {
              "line": 444,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "o"
            }
          ]
        },
        {
          "name": "_isSchemaValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 445,
              "column": 2
            },
            "end": {
              "line": 452,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaFile",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 453,
              "column": 2
            },
            "end": {
              "line": 459,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaBoolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 460,
              "column": 2
            },
            "end": {
              "line": 466,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaEnum",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 467,
              "column": 2
            },
            "end": {
              "line": 469,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "schema"
            }
          ]
        },
        {
          "name": "_isSchemaNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 470,
              "column": 2
            },
            "end": {
              "line": 476,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaString",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 477,
              "column": 2
            },
            "end": {
              "line": 483,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaObject",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 484,
              "column": 2
            },
            "end": {
              "line": 486,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaArray",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 487,
              "column": 2
            },
            "end": {
              "line": 489,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 24,
          "column": 8
        },
        "end": {
          "line": 490,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "schema",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 4
            },
            "end": {
              "line": 126,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "label",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 4
            },
            "end": {
              "line": 129,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 4
            },
            "end": {
              "line": 137,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "error",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 4
            },
            "end": {
              "line": 141,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "eco-json-schema-array"
    },
    {
      "description": "`eco-json-schema-object` takes in a JSON schema of type object and builds a form,\nexposing a `value` property that represents an object described by the schema.\n\nGiven the element:\n\n```\n<eco-json-schema-object schema=\"[[schema]]\" value=\"{{value}}\"></eco-json-schema-object>\n```\n\nAnd a JSON schema:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    }\n  }\n}\n```\n\nA form will be generated, with the elements `value` looking something like this:\n\n```\n> this.value\n{\n  \"name\": \"Eric\"\n}\n```\n\nDeep / nested schemas are supported for type array and object:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n    \"phoneNumbers\": {\n      \"title\": \"Phone numbers\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"phoneNumber\": {\n            \"title\": \"Phone Number\",\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nValidation is handled for strings and number/integers by mapping JSON schema\nvalidation keywords to `paper-input` attributes; form elements will automatically\ntry and validate themselves as users provide input:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\",\n      \"minLength\": 2\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"exclusiveMinimum\": true\n    },\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\"\n    },\n    \"email\": {\n      \"title\": \"email\",\n      \"type\": \"string\",\n      \"format\": \"email\"\n    }\n  }\n}\n```\n\nCustomizing components for schema properties is supported by extending your JSON\nschema. For any schema sub-property (`properties` for `\"type\": \"object\"` and\n`items` for `\"type\": \"array\"`) a `component` property may be specified, with\nthe following options:\n\n- `component.name` - specifies the name of the custom component to use\n- `component.valueProperty` - specifies which property of the custom element\n  represents its value\n- `component.properties` - properties that will be set on the element\n\nExample schema using custom components (note that `\"valueProperty\": \"value\"` is\nredundant in this case, `\"valueProperty\": \"value\"` will be the default if not specified):\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"phoneNumber\": {\n      \"title\": \"Phone Number\",\n      \"type\": \"string\",\n      \"component\": {\n        \"name\": \"gold-phone-input\",\n        \"valueProperty\": \"value\",\n        \"properties\": {\n          \"countryCode\": \"1\"\n        }\n      }\n    }\n  }\n}\n```\n\nItems set in `component.properties` will override any attributes / properties set\nby `eco-json-schema-form` elements, making it possible to override JSON schema\nvalidation properties mapped to `paper-input` attributes:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\",\n      \"component\": {\n        \"properties\": {\n          \"autoValidate\": false\n        }\n      }\n    }\n  }\n}\n```\n\nPutting it all together, this schema:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\",\n      \"minLength\": 2\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"exclusiveMinimum\": true\n    },\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\",\n      \"component\": {\n        \"properties\": {\n          \"autoValidate\": false\n        }\n      }\n    },\n    \"phoneNumbers\": {\n      \"title\": \"Phone numbers\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"phoneNumber\": {\n            \"title\": \"Phone Number\",\n            \"type\": \"string\",\n            \"component\": {\n              \"name\": \"gold-phone-input\",\n              \"valueProperty\": \"value\",\n              \"properties\": {\n                \"countryCode\": \"1\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"emailAddresses\": {\n      \"title\": \"Emails\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"title\": \"email\",\n            \"type\": \"string\",\n            \"format\": \"email\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nWill build a form describing an object:\n\n```\n> this.value\n{\n  \"name\": \"Eric\",\n  \"age\": 28,\n  \"postalCode\": \"H1W 2C5\",\n  \"phoneNumbers\": [\n    {\n      \"type\": \"Mobile\",\n      \"phoneNumber\": \"123-456-7890\"\n    }\n  ]\n  \"emailAddresses\": [\n    {\n      \"type\": \"Personal\",\n      \"email\": \"eric@wat.com\"\n    }\n  ]\n}\n```\n\nExternal validation is supported via the `error` property. By providing an\nobject tree with each leaf representing an error message for properties, the\nmessage will be attached to the appropriate element.\n\nExample, for the Contact schema:\n\n```\nel.error = {\n  \"name\": \"String is too short (0 chars) minimum 2\",\n  \"phoneNumbers\": [\n    {\n      \"phoneNumber\": \"String does not match required format\"\n    }\n  ]\n}\n```",
      "summary": "",
      "path": "lib/eco-json-schema-object.js",
      "properties": [
        {
          "name": "language",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 317,
              "column": 4
            },
            "end": {
              "line": 319,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"en\""
        },
        {
          "name": "resources",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 320,
              "column": 4
            },
            "end": {
              "line": 324,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{}"
        },
        {
          "name": "formats",
          "type": "Object | null | undefined",
          "description": "Optional dictionary of user defined formats, as explained here:\n     http://formatjs.io/guides/message-syntax/#custom-formats\n\n     For example, a valid dictionary of formats would be:\n     this.formats = {\n        number: { USD: { style: 'currency', currency: 'USD' } }\n     }",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 189,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "useKeyIfMissing",
          "type": "boolean | null | undefined",
          "description": "If true, will use the provided key when\n     the translation does not exist for that key.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 195,
              "column": 4
            },
            "end": {
              "line": 195,
              "column": 50
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "localize",
          "type": "Function | null | undefined",
          "description": "Translates a string to the current `language`. Any parameters to the\n     string should be passed in order, as follows:\n     `localize(stringKey, param1Name, param1Value, param2Name, param2Value)`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 202,
              "column": 4
            },
            "end": {
              "line": 205,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Function"
            }
          },
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "bubbleEvent",
          "type": "boolean | null | undefined",
          "description": "If true, will bubble up the event to the parents",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 210,
              "column": 4
            },
            "end": {
              "line": 210,
              "column": 46
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "__localizationCache",
          "type": "Object",
          "description": "   Internal singleton cache. This is the private implementation of the\n   behaviour; don't interact with it directly.\n   ",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 139,
              "column": 2
            },
            "end": {
              "line": 144,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "schema",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 325,
              "column": 4
            },
            "end": {
              "line": 328,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_schemaChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 329,
              "column": 4
            },
            "end": {
              "line": 331,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 332,
              "column": 4
            },
            "end": {
              "line": 338,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "error",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 339,
              "column": 4
            },
            "end": {
              "line": 342,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_errorChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "wizard",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 343,
              "column": 4
            },
            "end": {
              "line": 346,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "loadResources",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 213,
              "column": 2
            },
            "end": {
              "line": 246,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path"
            },
            {
              "name": "language"
            },
            {
              "name": "merge"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "__computeLocalize",
          "description": "Returns a computed `localize` method, based on the current `language`.",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 251,
              "column": 2
            },
            "end": {
              "line": 292,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "language"
            },
            {
              "name": "resources"
            },
            {
              "name": "formats"
            }
          ],
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "__onRequestResponse",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 294,
              "column": 2
            },
            "end": {
              "line": 323,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            },
            {
              "name": "language"
            },
            {
              "name": "merge"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "__onRequestError",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 325,
              "column": 2
            },
            "end": {
              "line": 327,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "__checkLocalizationCache",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 329,
              "column": 2
            },
            "end": {
              "line": 338,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "proto"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 348,
              "column": 2
            },
            "end": {
              "line": 350,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_buildSchemaProperties",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 351,
              "column": 2
            },
            "end": {
              "line": 420,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_schemaPropertyChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 421,
              "column": 2
            },
            "end": {
              "line": 487,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            },
            {
              "name": "detail"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 488,
              "column": 2
            },
            "end": {
              "line": 497,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_buildForm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 498,
              "column": 2
            },
            "end": {
              "line": 541,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_removePropertyEl",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 542,
              "column": 2
            },
            "end": {
              "line": 554,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "el"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clearForm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 555,
              "column": 2
            },
            "end": {
              "line": 562,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_schemaChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 563,
              "column": 2
            },
            "end": {
              "line": 570,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_errorChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 571,
              "column": 2
            },
            "end": {
              "line": 581,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_deepClone",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 582,
              "column": 2
            },
            "end": {
              "line": 584,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "o"
            }
          ]
        },
        {
          "name": "_isSchemaValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 585,
              "column": 2
            },
            "end": {
              "line": 592,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaFile",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 593,
              "column": 2
            },
            "end": {
              "line": 599,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaBoolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 600,
              "column": 2
            },
            "end": {
              "line": 606,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaEnum",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 607,
              "column": 2
            },
            "end": {
              "line": 609,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "schema"
            }
          ]
        },
        {
          "name": "_isSchemaNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 610,
              "column": 2
            },
            "end": {
              "line": 616,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaString",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 617,
              "column": 2
            },
            "end": {
              "line": 623,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaObject",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 624,
              "column": 2
            },
            "end": {
              "line": 626,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaArray",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 627,
              "column": 2
            },
            "end": {
              "line": 629,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 282,
          "column": 8
        },
        "end": {
          "line": 630,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "language",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 317,
              "column": 4
            },
            "end": {
              "line": 319,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "resources",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 320,
              "column": 4
            },
            "end": {
              "line": 324,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "formats",
          "description": "Optional dictionary of user defined formats, as explained here:\n     http://formatjs.io/guides/message-syntax/#custom-formats\n\n     For example, a valid dictionary of formats would be:\n     this.formats = {\n        number: { USD: { style: 'currency', currency: 'USD' } }\n     }",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 189,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "use-key-if-missing",
          "description": "If true, will use the provided key when\n     the translation does not exist for that key.",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 195,
              "column": 4
            },
            "end": {
              "line": 195,
              "column": 50
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "localize",
          "description": "Translates a string to the current `language`. Any parameters to the\n     string should be passed in order, as follows:\n     `localize(stringKey, param1Name, param1Value, param2Name, param2Value)`",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 202,
              "column": 4
            },
            "end": {
              "line": 205,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Function | null | undefined",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "bubble-event",
          "description": "If true, will bubble up the event to the parents",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 210,
              "column": 4
            },
            "end": {
              "line": 210,
              "column": 46
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "schema",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 325,
              "column": 4
            },
            "end": {
              "line": 328,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "label",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 329,
              "column": 4
            },
            "end": {
              "line": 331,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 332,
              "column": 4
            },
            "end": {
              "line": 338,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "error",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 339,
              "column": 4
            },
            "end": {
              "line": 342,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "wizard",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 343,
              "column": 4
            },
            "end": {
              "line": 346,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "app-localize-resources-error",
          "description": "Fired when the resources cannot be loaded due to an error.\n   ",
          "metadata": {},
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "app-localize-resources-loaded",
          "description": "Fired after the resources have been loaded.\n   ",
          "metadata": {},
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "wizard-changed",
          "description": "Fired when the `wizard` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "eco-json-schema-object"
    },
    {
      "description": "`eco-json-schema-wizard` takes in a JSON schema of type object and builds a form,\nexposing a `value` property that represents an object described by the schema.\n\nGiven the element:\n\n```\n<eco-json-schema-wizard schema=\"[[schema]]\" value=\"{{value}}\"></eco-json-schema-wizard>\n```\n\nAnd a JSON schema:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\"\n    }\n  }\n}\n```\n\nA form will be generated, with the elements `value` looking something like this:\n\n```\n> this.value\n{\n  \"name\": \"Eric\"\n}\n```\n\nDeep / nested schemas are supported for type array and object:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n    \"phoneNumbers\": {\n      \"title\": \"Phone numbers\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"phoneNumber\": {\n            \"title\": \"Phone Number\",\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nValidation is handled for strings and number/integers by mapping JSON schema\nvalidation keywords to `paper-input` attributes; form elements will automatically\ntry and validate themselves as users provide input:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\",\n      \"minLength\": 2\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"exclusiveMinimum\": true\n    },\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\"\n    },\n    \"email\": {\n      \"title\": \"email\",\n      \"type\": \"string\",\n      \"format\": \"email\"\n    }\n  }\n}\n```\n\nCustomizing components for schema properties is supported by extending your JSON\nschema. For any schema sub-property (`properties` for `\"type\": \"object\"` and\n`items` for `\"type\": \"array\"`) a `component` property may be specified, with\nthe following options:\n\n- `component.name` - specifies the name of the custom component to use\n- `component.valueProperty` - specifies which property of the custom element\n  represents its value\n- `component.properties` - properties that will be set on the element\n\nExample schema using custom components (note that `\"valueProperty\": \"value\"` is\nredundant in this case, `\"valueProperty\": \"value\"` will be the default if not specified):\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"phoneNumber\": {\n      \"title\": \"Phone Number\",\n      \"type\": \"string\",\n      \"component\": {\n        \"name\": \"gold-phone-input\",\n        \"valueProperty\": \"value\",\n        \"properties\": {\n          \"countryCode\": \"1\"\n        }\n      }\n    }\n  }\n}\n```\n\nItems set in `component.properties` will override any attributes / properties set\nby `eco-json-schema-form` elements, making it possible to override JSON schema\nvalidation properties mapped to `paper-input` attributes:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\",\n      \"component\": {\n        \"properties\": {\n          \"autoValidate\": false\n        }\n      }\n    }\n  }\n}\n```\n\nPutting it all together, this schema:\n\n```\n> this.schema = {\n  \"$schema\": \"http://json-schema.org/schema#\",\n  \"title\": \"Contact\",\n  \"type\": \"object\",\n  \"properties\": {\n    \"name\": {\n      \"title\": \"Name\",\n      \"type\": \"string\",\n      \"minLength\": 2\n    },\n    \"age\": {\n      \"type\": \"integer\",\n      \"minimum\": 0,\n      \"exclusiveMinimum\": true\n    },\n    \"postalCode\": {\n      \"title\": \"Postal/Zip Code\",\n      \"type\": \"string\",\n      \"pattern\": \"[a-zA-Z][0-9][a-zA-Z]\\\\s*[0-9][a-zA-Z][0-9]|[0-9]{5}(-[0-9]{4})?\",\n      \"component\": {\n        \"properties\": {\n          \"autoValidate\": false\n        }\n      }\n    },\n    \"phoneNumbers\": {\n      \"title\": \"Phone numbers\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"phoneNumber\": {\n            \"title\": \"Phone Number\",\n            \"type\": \"string\",\n            \"component\": {\n              \"name\": \"gold-phone-input\",\n              \"valueProperty\": \"value\",\n              \"properties\": {\n                \"countryCode\": \"1\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"emailAddresses\": {\n      \"title\": \"Emails\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"type\": {\n            \"title\": \"Type\",\n            \"type\": \"string\"\n          },\n          \"email\": {\n            \"title\": \"email\",\n            \"type\": \"string\",\n            \"format\": \"email\"\n          }\n        }\n      }\n    }\n  }\n}\n```\n\nWill build a form describing an object:\n\n```\n> this.value\n{\n  \"name\": \"Eric\",\n  \"age\": 28,\n  \"postalCode\": \"H1W 2C5\",\n  \"phoneNumbers\": [\n    {\n      \"type\": \"Mobile\",\n      \"phoneNumber\": \"123-456-7890\"\n    }\n  ]\n  \"emailAddresses\": [\n    {\n      \"type\": \"Personal\",\n      \"email\": \"eric@wat.com\"\n    }\n  ]\n}\n```\n\nExternal validation is supported via the `error` property. By providing an\nobject tree with each leaf representing an error message for properties, the\nmessage will be attached to the appropriate element.\n\nExample, for the Contact schema:\n\n```\nel.error = {\n  \"name\": \"String is too short (0 chars) minimum 2\",\n  \"phoneNumbers\": [\n    {\n      \"phoneNumber\": \"String does not match required format\"\n    }\n  ]\n}\n```",
      "summary": "",
      "path": "lib/eco-json-schema-wizard.js",
      "properties": [
        {
          "name": "language",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 403,
              "column": 4
            },
            "end": {
              "line": 406,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "resources",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 407,
              "column": 4
            },
            "end": {
              "line": 410,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "formats",
          "type": "Object | null | undefined",
          "description": "Optional dictionary of user defined formats, as explained here:\n     http://formatjs.io/guides/message-syntax/#custom-formats\n\n     For example, a valid dictionary of formats would be:\n     this.formats = {\n        number: { USD: { style: 'currency', currency: 'USD' } }\n     }",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 189,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "useKeyIfMissing",
          "type": "boolean | null | undefined",
          "description": "If true, will use the provided key when\n     the translation does not exist for that key.",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 195,
              "column": 4
            },
            "end": {
              "line": 195,
              "column": 50
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "localize",
          "type": "Function | null | undefined",
          "description": "Translates a string to the current `language`. Any parameters to the\n     string should be passed in order, as follows:\n     `localize(stringKey, param1Name, param1Value, param2Name, param2Value)`",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 202,
              "column": 4
            },
            "end": {
              "line": 205,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Function"
            }
          },
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "bubbleEvent",
          "type": "boolean | null | undefined",
          "description": "If true, will bubble up the event to the parents",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 210,
              "column": 4
            },
            "end": {
              "line": 210,
              "column": 46
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "__localizationCache",
          "type": "Object",
          "description": "   Internal singleton cache. This is the private implementation of the\n   behaviour; don't interact with it directly.\n   ",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 139,
              "column": 2
            },
            "end": {
              "line": 144,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "schema",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 411,
              "column": 4
            },
            "end": {
              "line": 415,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_schemaChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 416,
              "column": 4
            },
            "end": {
              "line": 418,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 419,
              "column": 4
            },
            "end": {
              "line": 425,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "page",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 426,
              "column": 4
            },
            "end": {
              "line": 430,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_pageChanged\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "pages",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 431,
              "column": 4
            },
            "end": {
              "line": 435,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "error",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 436,
              "column": 4
            },
            "end": {
              "line": 439,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_errorChanged\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "isReview",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 440,
              "column": 4
            },
            "end": {
              "line": 444,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "canSubmit",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 445,
              "column": 4
            },
            "end": {
              "line": 448,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hasNext",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 449,
              "column": 4
            },
            "end": {
              "line": 452,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "hasPrev",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 453,
              "column": 4
            },
            "end": {
              "line": 456,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "titles",
          "type": "Array | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 457,
              "column": 4
            },
            "end": {
              "line": 461,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Array"
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "title",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 462,
              "column": 4
            },
            "end": {
              "line": 466,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        }
      ],
      "methods": [
        {
          "name": "loadResources",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 213,
              "column": 2
            },
            "end": {
              "line": 246,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "path"
            },
            {
              "name": "language"
            },
            {
              "name": "merge"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "__computeLocalize",
          "description": "Returns a computed `localize` method, based on the current `language`.",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 251,
              "column": 2
            },
            "end": {
              "line": 292,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "language"
            },
            {
              "name": "resources"
            },
            {
              "name": "formats"
            }
          ],
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "__onRequestResponse",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 294,
              "column": 2
            },
            "end": {
              "line": 323,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            },
            {
              "name": "language"
            },
            {
              "name": "merge"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "__onRequestError",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 325,
              "column": 2
            },
            "end": {
              "line": 327,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "__checkLocalizationCache",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 329,
              "column": 2
            },
            "end": {
              "line": 338,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "proto"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "detached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 468,
              "column": 2
            },
            "end": {
              "line": 470,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_buildSchemaProperties",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 471,
              "column": 2
            },
            "end": {
              "line": 522,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_schemaPropertyChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 523,
              "column": 2
            },
            "end": {
              "line": 583,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            },
            {
              "name": "detail"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 584,
              "column": 2
            },
            "end": {
              "line": 591,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_buildForm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 592,
              "column": 2
            },
            "end": {
              "line": 616,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_removePropertyEl",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 617,
              "column": 2
            },
            "end": {
              "line": 629,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "el"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_clearForm",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 630,
              "column": 2
            },
            "end": {
              "line": 635,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_schemaChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 636,
              "column": 2
            },
            "end": {
              "line": 645,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "next",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 646,
              "column": 2
            },
            "end": {
              "line": 658,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "prev",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 659,
              "column": 2
            },
            "end": {
              "line": 671,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "submit",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 672,
              "column": 2
            },
            "end": {
              "line": 674,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_pageChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 675,
              "column": 2
            },
            "end": {
              "line": 687,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_errorChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 688,
              "column": 2
            },
            "end": {
              "line": 698,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_deepClone",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 699,
              "column": 2
            },
            "end": {
              "line": 701,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "o"
            }
          ]
        },
        {
          "name": "_isSchemaValue",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 702,
              "column": 2
            },
            "end": {
              "line": 709,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaFile",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 710,
              "column": 2
            },
            "end": {
              "line": 716,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaBoolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 717,
              "column": 2
            },
            "end": {
              "line": 723,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaEnum",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 724,
              "column": 2
            },
            "end": {
              "line": 726,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "schema"
            }
          ]
        },
        {
          "name": "_isSchemaNumber",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 727,
              "column": 2
            },
            "end": {
              "line": 733,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaString",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 734,
              "column": 2
            },
            "end": {
              "line": 740,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaObject",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 741,
              "column": 2
            },
            "end": {
              "line": 743,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        },
        {
          "name": "_isSchemaArray",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 744,
              "column": 2
            },
            "end": {
              "line": 746,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 292,
          "column": 8
        },
        "end": {
          "line": 747,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "language",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 403,
              "column": 4
            },
            "end": {
              "line": 406,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "resources",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 407,
              "column": 4
            },
            "end": {
              "line": 410,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "formats",
          "description": "Optional dictionary of user defined formats, as explained here:\n     http://formatjs.io/guides/message-syntax/#custom-formats\n\n     For example, a valid dictionary of formats would be:\n     this.formats = {\n        number: { USD: { style: 'currency', currency: 'USD' } }\n     }",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 183,
              "column": 4
            },
            "end": {
              "line": 189,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "use-key-if-missing",
          "description": "If true, will use the provided key when\n     the translation does not exist for that key.",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 195,
              "column": 4
            },
            "end": {
              "line": 195,
              "column": 50
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "localize",
          "description": "Translates a string to the current `language`. Any parameters to the\n     string should be passed in order, as follows:\n     `localize(stringKey, param1Name, param1Value, param2Name, param2Value)`",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 202,
              "column": 4
            },
            "end": {
              "line": 205,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Function | null | undefined",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "bubble-event",
          "description": "If true, will bubble up the event to the parents",
          "sourceRange": {
            "file": "../../@polymer/app-localize-behavior/app-localize-behavior.js",
            "start": {
              "line": 210,
              "column": 4
            },
            "end": {
              "line": 210,
              "column": 46
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined",
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "name": "schema",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 411,
              "column": 4
            },
            "end": {
              "line": 415,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "label",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 416,
              "column": 4
            },
            "end": {
              "line": 418,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 419,
              "column": 4
            },
            "end": {
              "line": 425,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "page",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 426,
              "column": 4
            },
            "end": {
              "line": 430,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "pages",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 431,
              "column": 4
            },
            "end": {
              "line": 435,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "error",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 436,
              "column": 4
            },
            "end": {
              "line": 439,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "is-review",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 440,
              "column": 4
            },
            "end": {
              "line": 444,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "can-submit",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 445,
              "column": 4
            },
            "end": {
              "line": 448,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "has-next",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 449,
              "column": 4
            },
            "end": {
              "line": 452,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "has-prev",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 453,
              "column": 4
            },
            "end": {
              "line": 456,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "titles",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 457,
              "column": 4
            },
            "end": {
              "line": 461,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "title",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 462,
              "column": 4
            },
            "end": {
              "line": 466,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "app-localize-resources-error",
          "description": "Fired when the resources cannot be loaded due to an error.\n   ",
          "metadata": {},
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "app-localize-resources-loaded",
          "description": "Fired after the resources have been loaded.\n   ",
          "metadata": {},
          "inheritedFrom": "AppLocalizeBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "language-changed",
          "description": "Fired when the `language` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "resources-changed",
          "description": "Fired when the `resources` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "schema-changed",
          "description": "Fired when the `schema` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "page-changed",
          "description": "Fired when the `page` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "pages-changed",
          "description": "Fired when the `pages` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "is-review-changed",
          "description": "Fired when the `isReview` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "can-submit-changed",
          "description": "Fired when the `canSubmit` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "has-next-changed",
          "description": "Fired when the `hasNext` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "has-prev-changed",
          "description": "Fired when the `hasPrev` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "titles-changed",
          "description": "Fired when the `titles` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "title-changed",
          "description": "Fired when the `title` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "eco-json-schema-wizard"
    },
    {
      "description": "",
      "summary": "",
      "path": "demo/eco-json-schema-form-live-schema-demo.js",
      "properties": [
        {
          "name": "language",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 4
            },
            "end": {
              "line": 61,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "defaultValue": "\"en\""
        },
        {
          "name": "resources",
          "type": "?",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 4
            },
            "end": {
              "line": 79,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{\"en\":{\"prev\":\"Previous\",\"next\":\"Next\",\"submit\":\"Submit\",\"add-image\":\"Click to select an image\"},\"es\":{\"prev\":\"Anterior\",\"next\":\"Siguiente\",\"submit\":\"Enviar\",\"add-image\":\"Click para adicionar una imagen\"}}"
        },
        {
          "name": "schema",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "observer": "\"_valueChanged\"",
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"schema\":{}}"
        },
        {
          "name": "value",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 4
            },
            "end": {
              "line": 92,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "page",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 4
            },
            "end": {
              "line": 96,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "pages",
          "type": "Object | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "attributeType": "Object"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "attached",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 2
            },
            "end": {
              "line": 137,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_schemaChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 2
            },
            "end": {
              "line": 149,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_valueChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 2
            },
            "end": {
              "line": 155,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 4,
          "column": 8
        },
        "end": {
          "line": 156,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "language",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 4
            },
            "end": {
              "line": 61,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "resources",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 4
            },
            "end": {
              "line": 79,
              "column": 5
            }
          },
          "metadata": {}
        },
        {
          "name": "schema",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "value",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 4
            },
            "end": {
              "line": 92,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "page",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 4
            },
            "end": {
              "line": 96,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "pages",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "language-changed",
          "description": "Fired when the `language` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "schema-changed",
          "description": "Fired when the `schema` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "value-changed",
          "description": "Fired when the `value` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "page-changed",
          "description": "Fired when the `page` property changes.",
          "metadata": {}
        },
        {
          "type": "CustomEvent",
          "name": "pages-changed",
          "description": "Fired when the `pages` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "eco-json-schema-form-live-schema-demo"
    }
  ]
}
