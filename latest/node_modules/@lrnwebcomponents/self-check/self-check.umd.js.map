{"version":3,"file":"self-check.umd.js","sources":["self-check.umd.js"],"sourcesContent":["import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport \"@lrnwebcomponents/schema-behaviors/schema-behaviors.js\";\nimport \"@polymer/paper-card/paper-card.js\";\nimport \"@polymer/paper-icon-button/paper-icon-button.js\";\nimport \"@polymer/iron-icons/editor-icons.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@lrnwebcomponents/materializecss-styles/materializecss-styles.js\";\nimport \"@lrnwebcomponents/a11y-behaviors/a11y-behaviors.js\";\n/**\n`self-check`\nA LRN element\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n -\n -\n\n*/\nlet SelfCheck = Polymer({\n  _template: html`\n    <style include=\"materializecss-styles\">\n      :host {\n        display: block;\n      }\n\n      paper-card {\n        overflow: hidden;\n      }\n\n      paper-icon-button#checkBtn {\n        width: 50px;\n        height: 50px;\n        position: relative;\n        left: 16px;\n        bottom: -10px;\n      }\n\n      .check_button {\n        display: flex;\n        justify-content: flex-end;\n      }\n\n      paper-icon-button#closeBtn {\n        width: 50px;\n        height: 50px;\n        position: relative;\n        left: 16px;\n        bottom: -16px;\n      }\n\n      .close_button {\n        display: flex;\n        justify-content: flex-end;\n      }\n\n      iron-icon#questionmark {\n        width: 35px;\n        height: 35px;\n        padding: 5px;\n      }\n\n      .heading {\n        text-transform: uppercase;\n        font-size: 22px;\n        margin: 10px;\n      }\n\n      #header_wrap {\n        display: inline-flex;\n        width: 100%;\n        margin: -20px 0 0;\n      }\n\n      #question_wrap {\n        position: relative;\n      }\n\n      .question {\n        font-size: 16px;\n        padding: 15px 15px;\n      }\n\n      :host([correct]) .question {\n        display: none;\n      }\n\n      #answer_wrap {\n        visibility: hidden;\n        opacity: 0;\n        background-color: #66bb6a;\n        border-top: 2px solid #fff;\n        width: 100%;\n        top: 0;\n        transition: all 0.2s ease;\n        left: calc(100%);\n        position: absolute;\n      }\n\n      :host([correct]) #answer_wrap {\n        visibility: visible;\n        opacity: 1;\n        position: relative;\n        left: 0;\n      }\n\n      .answer {\n        color: #fff;\n        font-size: 16px;\n        padding: 15px;\n        line-height: 19.2px;\n      }\n\n      #quote_start {\n        display: inline-flex;\n        transform: rotateY(180deg);\n      }\n\n      #quote_end {\n        display: inline-flex;\n      }\n\n      .triangle {\n        width: 0;\n        height: 0;\n        border-left: 20px solid transparent;\n        border-right: 20px solid transparent;\n        border-bottom: 20px solid;\n        position: relative;\n        top: -20px;\n        left: -1px;\n      }\n\n      .more_info {\n        display: inline;\n      }\n\n      .more_info a {\n        text-decoration: none;\n        color: #fff;\n      }\n\n      .more_info a:hover {\n        color: #1976d2;\n      }\n    </style>\n\n    <paper-card image=\"[[image]]\" alt=\"[[alt]]\">\n      <div\n        class=\"triangle\"\n        style\\$=\"border-bottom-color:[[backgroundColor]];\"\n      ></div>\n      <div\n        id=\"header_wrap\"\n        class\\$=\"[[backgroundColorClass]] [[textColorClass]]\"\n      >\n        <iron-icon id=\"questionmark\" icon=\"icons:help\"></iron-icon>\n        <div class=\"heading\">[[title]]</div>\n      </div>\n      <div id=\"question_wrap\">\n        <div class=\"question\">\n          <slot name=\"question\"></slot>\n          <div class=\"check_button\">\n            <paper-icon-button\n              id=\"checkBtn\"\n              icon=\"icons:check-circle\"\n              on-click=\"openAnswer\"\n              noink=\"\"\n            ></paper-icon-button>\n            <paper-tooltip for=\"checkBtn\" position=\"left\"\n              >Reveal Answer</paper-tooltip\n            >\n          </div>\n        </div>\n\n        <div id=\"answer_wrap\">\n          <div class=\"answer\">\n            <slot></slot>\n            <div class=\"more_info\">\n              <a href=\"[[link]]\" target=\"_blank\">More info...</a>\n            </div>\n            <div class=\"close_button\">\n              <paper-icon-button\n                id=\"closeBtn\"\n                icon=\"icons:close\"\n                on-click=\"openAnswer\"\n                noink=\"\"\n              ></paper-icon-button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </paper-card>\n  `,\n\n  is: \"self-check\",\n\n  behaviors: [\n    HAXBehaviors.PropertiesBehaviors,\n    SchemaBehaviors.Schema,\n    A11yBehaviors.A11y,\n    MaterializeCSSBehaviors.ColorBehaviors\n  ],\n\n  properties: {\n    /**\n     * Title.\n     */\n    title: {\n      type: String,\n      value: \"Self-Check\"\n    },\n    /**\n     * Question.\n     */\n    question: {\n      type: String,\n      value: \"\"\n    },\n    /**\n     * Image.\n     */\n    image: {\n      type: String,\n      value: \"\",\n      reflectToAttribute: true\n    },\n    /**\n     * Alt text for image.\n     */\n    alt: {\n      type: String,\n      value: \"\",\n      reflectToAttribute: true\n    },\n    /**\n     * Link for more information.\n     */\n    link: {\n      type: String,\n      value: \"\",\n      reflectToAttribute: true\n    },\n    /**\n     * Property for toggling \"checkBtn\".\n     */\n    correct: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * Adjust text color.\n     */\n    textColor: {\n      type: String,\n      value: \"#ffffff\",\n      reflectToAttribute: true\n    },\n    /**\n     * Text color color.\n     */\n    textColorClass: {\n      type: String,\n      value: null,\n      reflectToAttribute: true,\n      computed: \"_computeColorClass(textColor)\"\n    },\n    /**\n     * Background color.\n     */\n    backgroundColor: {\n      type: String,\n      value: \"#1976d2\",\n      reflectToAttribute: true,\n      observer: \"_backgroundColorChanged\"\n    },\n    /**\n     * Text color color.\n     */\n    backgroundColorClass: {\n      type: String,\n      reflectToAttribute: true,\n      computed: \"_computeColorClass(backgroundColor)\"\n    }\n  },\n\n  /**\n   * Property for toggling \"checkBtn\".\n   */\n\n  openAnswer: function() {\n    this.correct = !this.correct;\n  },\n\n  /**\n   * Attached to the DOM, now fire.\n   */\n  attached: function() {\n    // Establish hax property binding\n    let props = {\n      canScale: true,\n      canPosition: true,\n      canEditSource: false,\n      gizmo: {\n        title: \"Self-Check\",\n        description: \"The user will be able to complete a self-check.\",\n        icon: \"icons:check-circle\",\n        color: \"orange\",\n        groups: [\"Image\", \"Assessment\"],\n        handles: [\n          {\n            type: \"image\",\n            source: \"image\",\n            title: \"question\",\n            description: \"answer\"\n          }\n        ],\n        meta: {\n          author: \"LRNWebComponents\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"title\",\n            title: \"Title\",\n            description: \"The title of the element\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          },\n          {\n            property: \"image\",\n            title: \"Image\",\n            description: \"The image of the element\",\n            inputMethod: \"textfield\",\n            icon: \"editor:insert-photo\"\n          }\n        ],\n        configure: [\n          {\n            property: \"title\",\n            title: \"Title\",\n            description: \"The title of the element\",\n            inputMethod: \"textfield\"\n          },\n          {\n            property: \"image\",\n            title: \"Image\",\n            description: \"The image of the element\",\n            inputMethod: \"textfield\"\n          },\n          {\n            property: \"alt\",\n            title: \"Alt Text\",\n            description: \"Add alt text to the image\",\n            inputMethod: \"alt\"\n          },\n          {\n            slot: \"question\",\n            title: \"Question to ask\",\n            description:\n              \"This is where you enter a question for the self-check.\",\n            inputMethod: \"code-editor\",\n            required: true\n          },\n          {\n            slot: \"\",\n            title: \"Answer\",\n            description:\n              \"This is where you enter a question for the self-check.\",\n            inputMethod: \"code-editor\",\n            required: true\n          },\n          {\n            property: \"backgroundColor\",\n            title: \"Background color\",\n            description: \"Select the background color used\",\n            inputMethod: \"colorpicker\"\n          }\n        ],\n        advanced: []\n      }\n    };\n    this.setHaxProperties(props);\n  },\n\n  /**\n   * Notice background color changed\n   */\n  _backgroundColorChanged: function(newValue, oldValue) {\n    if (typeof newValue !== typeof undefined && newValue != null) {\n      // sees if there's enough contrast and adjusts them accordingly\n      this.computeTextPropContrast(\"textColor\", \"backgroundColor\");\n    }\n  },\n\n  /**\n   * Primary color changed, spread into internals.\n   */\n  _primaryColorChanged: function(newValue, oldValue) {\n    if (newValue != null && typeof this.source !== typeof undefined) {\n      this.videoColor = newValue.substring(1);\n      // aggressive rebuild of source so vimeo picks up\n      // the color change and updates the URL to match\n      var source = this.source;\n      this.set(\"source\", \"\");\n      this.set(\"source\", source);\n    }\n  },\n\n  /**\n   * Make class from color value\n   */\n  _computeColorClass: function(color) {\n    if (color != null && color.toLowerCase() == \"#ffffff\") {\n      return \"white-text\";\n    } else if (color != null && color == \"#000000\") {\n      return \"black-text\";\n    } else if (color != null && color.substring(0, 1) == \"#\") {\n      return this._colorTransform(color.toLowerCase(), \"\", \"\");\n    }\n  }\n});\nexport { SelfCheck };\n"],"names":["SelfCheck","Polymer","_template","html","is","behaviors","HAXBehaviors","PropertiesBehaviors","SchemaBehaviors","Schema","A11yBehaviors","A11y","MaterializeCSSBehaviors","ColorBehaviors","properties","title","type","String","value","question","image","reflectToAttribute","alt","link","correct","Boolean","textColor","textColorClass","computed","backgroundColor","observer","backgroundColorClass","openAnswer","this","attached","setHaxProperties","canScale","canPosition","canEditSource","gizmo","description","icon","color","groups","handles","source","meta","author","settings","quick","property","inputMethod","configure","slot","required","advanced","_backgroundColorChanged","newValue","oldValue","_typeof","computeTextPropContrast","_primaryColorChanged","videoColor","substring","set","_computeColorClass","toLowerCase","_colorTransform"],"mappings":"4tSAqBIA,EAAYC,UAAQ,CACtBC,UAAWC,YA+KXC,GAAI,aAEJC,UAAW,CACTC,aAAaC,oBACbC,gBAAgBC,OAChBC,cAAcC,KACdC,wBAAwBC,gBAG1BC,WAAY,CAIVC,MAAO,CACLC,KAAMC,OACNC,MAAO,cAKTC,SAAU,CACRH,KAAMC,OACNC,MAAO,IAKTE,MAAO,CACLJ,KAAMC,OACNC,MAAO,GACPG,oBAAoB,GAKtBC,IAAK,CACHN,KAAMC,OACNC,MAAO,GACPG,oBAAoB,GAKtBE,KAAM,CACJP,KAAMC,OACNC,MAAO,GACPG,oBAAoB,GAKtBG,QAAS,CACPR,KAAMS,QACNP,OAAO,EACPG,oBAAoB,GAKtBK,UAAW,CACTV,KAAMC,OACNC,MAAO,UACPG,oBAAoB,GAKtBM,eAAgB,CACdX,KAAMC,OACNC,MAAO,KACPG,oBAAoB,EACpBO,SAAU,iCAKZC,gBAAiB,CACfb,KAAMC,OACNC,MAAO,UACPG,oBAAoB,EACpBS,SAAU,2BAKZC,qBAAsB,CACpBf,KAAMC,OACNI,oBAAoB,EACpBO,SAAU,wCAQdI,WAAY,gBACLR,SAAWS,KAAKT,SAMvBU,SAAU,gBAsFHC,iBApFO,CACVC,UAAU,EACVC,aAAa,EACbC,eAAe,EACfC,MAAO,CACLxB,MAAO,aACPyB,YAAa,kDACbC,KAAM,qBACNC,MAAO,SACPC,OAAQ,CAAC,QAAS,cAClBC,QAAS,CACP,CACE5B,KAAM,QACN6B,OAAQ,QACR9B,MAAO,WACPyB,YAAa,WAGjBM,KAAM,CACJC,OAAQ,qBAGZC,SAAU,CACRC,MAAO,CACL,CACEC,SAAU,QACVnC,MAAO,QACPyB,YAAa,2BACbW,YAAa,YACbV,KAAM,gBAER,CACES,SAAU,QACVnC,MAAO,QACPyB,YAAa,2BACbW,YAAa,YACbV,KAAM,wBAGVW,UAAW,CACT,CACEF,SAAU,QACVnC,MAAO,QACPyB,YAAa,2BACbW,YAAa,aAEf,CACED,SAAU,QACVnC,MAAO,QACPyB,YAAa,2BACbW,YAAa,aAEf,CACED,SAAU,MACVnC,MAAO,WACPyB,YAAa,4BACbW,YAAa,OAEf,CACEE,KAAM,WACNtC,MAAO,kBACPyB,YACE,yDACFW,YAAa,cACbG,UAAU,GAEZ,CACED,KAAM,GACNtC,MAAO,SACPyB,YACE,yDACFW,YAAa,cACbG,UAAU,GAEZ,CACEJ,SAAU,kBACVnC,MAAO,mBACPyB,YAAa,mCACbW,YAAa,gBAGjBI,SAAU,OAShBC,wBAAyB,SAASC,EAAUC,iBACtCC,EAAOF,IAA6C,MAAZA,QAErCG,wBAAwB,YAAa,oBAO9CC,qBAAsB,SAASJ,EAAUC,MACvB,MAAZD,iBAAoBE,EAAO1B,KAAKY,QAA6B,MAC1DiB,WAAaL,EAASM,UAAU,OAGjClB,EAASZ,KAAKY,YACbmB,IAAI,SAAU,SACdA,IAAI,SAAUnB,KAOvBoB,mBAAoB,SAASvB,UACd,MAATA,GAAwC,WAAvBA,EAAMwB,cAClB,aACW,MAATxB,GAA0B,WAATA,EACnB,aACW,MAATA,GAA0C,KAAzBA,EAAMqB,UAAU,EAAG,GACtC9B,KAAKkC,gBAAgBzB,EAAMwB,cAAe,GAAI,SADhD"}