{"version":3,"file":"beaker-broker.umd.js","sources":["beaker-broker.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, PolymerElement } from \"@polymer/polymer/polymer-element.js\";\nexport { BeakerBroker };\n/**\n * `beaker-broker`\n * `An element to help check for and broker calls to read and write beaker browser dat sites.\n * This allows for data binding and figuring out if we're in an environment that we can even use this.`\n *\n * @microcopy - language worth noting:\n *  - beaker browser - a transformative, decentralized platform\n *  - dat - a communication protocol for serving sites up p2p\n *\n * @customElement\n * @polymer\n * @demo demo/index.html\n */\nclass BeakerBroker extends PolymerElement {\n  \n  // render function\n  static get template() {\n    return html`\n<style>:host {\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n</style>\n<slot></slot>`;\n  }\n\n  // haxProperty definition\n  static get haxProperties() {\n    return {}\n;\n  }\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {\n  /**\n   * Archive\n   */\n  \"archive\": {\n    \"type\": Object,\n    \"notify\": true\n  },\n  /**\n   * datUrl\n   */\n  \"datUrl\": {\n    \"type\": String,\n    \"value\": \"window.location.host\",\n    \"observer\": \"_datUrlChanged\",\n    \"notify\": true\n  }\n}\n;\n  }\n\n  /**\n   * Store the tag name to make it easier to obtain directly.\n   * @notice function name must be here for tooling to operate correctly\n   */\n  static get tag() {\n    return \"beaker-broker\";\n  }\n  /**\n   * life cycle, element is afixed to the DOM\n   */\n  connectedCallback() {\n    super.connectedCallback();\n    if (typeof DatArchive === typeof undefined) {\n      console.log(\"Beaker is not available from this site loading methodology\");\n    }\n  }\n  /**\n   * notice dat address has changed, build the object for it\n   */\n  async _datUrlChanged(newValue, oldValue) {\n    if (typeof DatArchive !== typeof undefined && newValue) {\n      // load current site, set to archive\n      this.set(\"archive\", new DatArchive(newValue));\n    }\n  }\n\n  /**\n   * Write to file\n   * @usage - this.write('hello.txt', 'things and stuff');\n   */\n  async write(path, data) {\n    // well that was easy\n    await this.archive.writeFile(path, data);\n  }\n\n  /**\n   * Read to file\n   * @var path - location of file\n   * @var type - utf8, base64, hex, binary or specialized ones jpeg / png\n   * @return Promise() with reference to the data in the file if await / async is active\n   * @usage - await this.read('index.html'); to get this file\n   */\n  async read(path, type) {\n    var ftype = \"utf8\";\n    var response;\n    // special cases for image types\n    switch (type) {\n      case \"jpeg\":\n      case \"jpg\":\n        ftype = \"binary\";\n        var buf = await this.archive.readFile(path, ftype);\n        var blob = new Blob([buf], { type: \"image/jpeg\" });\n        response = URL.createObjectURL(blob);\n        break;\n      case \"png\":\n        ftype = \"binary\";\n        var buf = await this.archive.readFile(path, ftype);\n        var blob = new Blob([buf], { type: \"image/png\" });\n        response = URL.createObjectURL(blob);\n        break;\n      case \"base64\":\n        var str = await this.archive.readFile(path, type);\n        response = \"data:image/png;base64,\" + str;\n        break;\n      default:\n        var str = await this.archive.readFile(path, type);\n        response = str;\n        break;\n    }\n    return await response;\n  }\n\n  /**\n   * life cycle, element is removed from the DOM\n   */\n  //disconnectedCallback() {}\n}\nwindow.customElements.define(BeakerBroker.tag, BeakerBroker);\n"],"names":["BeakerBroker","PolymerElement","DatArchive","console","log","newValue","oldValue","set","path","data","this","archive","writeFile","type","ftype","readFile","buf","blob","Blob","response","URL","createObjectURL","str","html","Object","String","window","customElements","define","tag"],"mappings":"67DAmBMA,saAAqBC,4JAwDZC,yBAAAA,cACTC,QAAQC,IAAI,oIAMKC,EAAUC,qHAClBJ,yBAAAA,cAAmCG,QAEvCE,IAAI,UAAW,IAAIL,WAAWG,6JAQ3BG,EAAMC,kGAEVC,KAAKC,QAAQC,UAAUJ,EAAMC,2JAU1BD,EAAMK,gGACXC,EAAQ,YAGJD,SACD,gBACA,eAMA,gBAMA,0CAXHC,EAAQ,kBACQJ,KAAKC,QAAQI,SAASP,EAAMM,iBAAxCE,SACAC,EAAO,IAAIC,KAAK,CAACF,GAAM,CAAEH,KAAM,eACnCM,EAAWC,IAAIC,gBAAgBJ,uCAG/BH,EAAQ,mBACQJ,KAAKC,QAAQI,SAASP,EAAMM,kBAAxCE,SACAC,EAAO,IAAIC,KAAK,CAACF,GAAM,CAAEH,KAAM,cACnCM,EAAWC,IAAIC,gBAAgBJ,iDAGfP,KAAKC,QAAQI,SAASP,EAAMK,kBAAxCS,SACJH,EAAW,yBAA2BG,gDAGtBZ,KAAKC,QAAQI,SAASP,EAAMK,kBAAxCS,SACJH,EAAWG,gDAGFH,oLA7GNI,wDAcA,4CAKA,SAIE,MACDC,eACE,UAKF,MACAC,aACC,gCACG,yBACF,sCAWH,sDAwEXC,OAAOC,eAAeC,OAAO5B,EAAa6B,IAAK7B"}