{"version":3,"file":"simple-concept-network.umd.js","sources":["lib/simple-concept-network-node.js","simple-concept-network.umd.js"],"sourcesContent":["import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@lrnwebcomponents/lrn-icons/lrn-icons.js\";\nimport \"@lrnwebcomponents/materializecss-styles/materializecss-styles.js\";\n/**\n`simple-concept-network-node`\nA small but effective little data visualizer for topics surrounding\na central concept, much like the ELMS:LN snowflake icon.\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n - ELMS:LN - The ELMS: Learning Network \"snowflake\" is a network diagram\n\n*/\nPolymer({\n  _template: html`\n    <style include=\"materializecss-styles\">\n      :host {\n        display: inline-flex;\n        --simple-concept-network-color: #220066;\n        --simple-concept-network-bg: #ffffff;\n      }\n      paper-button {\n        -webkit-transition: 0.6s transform ease-in-out;\n        transition: 0.6s transform ease-in-out;\n        -webkit-clip-path: polygon(\n          50% 0%,\n          100% 25%,\n          100% 75%,\n          50% 100%,\n          0% 75%,\n          0% 25%\n        );\n        clip-path: polygon(\n          50% 0%,\n          100% 25%,\n          100% 75%,\n          50% 100%,\n          0% 75%,\n          0% 25%\n        );\n        color: var(--simple-concept-network-color);\n      }\n      :host([visualization=\"network\"]) paper-button:hover,\n      :host([visualization=\"network\"]) paper-button:focus {\n        opacity: 0.8;\n      }\n      :host([visualization=\"3d\"]) paper-button {\n        -webkit-transform: perspective(600px) rotateX(60deg);\n        -moz-transform: perspective(600px) rotateX(60deg);\n        -ms-transform: perspective(600px) rotateX(60deg);\n        -o-transform: perspective(600px) rotateX(60deg);\n        transform: perspective(600px) rotateX(60deg);\n      }\n      :host([visualization=\"3d\"]) paper-button:hover,\n      :host([visualization=\"3d\"]) paper-button:focus {\n        transform: perspective(0px) rotateX(0deg);\n      }\n      iron-icon {\n        width: 50px;\n        height: 50px;\n        margin: 1px 19px;\n        z-index: 3;\n        color: var(--simple-concept-network-color);\n      }\n      .hexagon {\n        position: relative;\n        width: 88px;\n        height: 50.81px;\n        margin: 25.4px 0;\n        background-size: auto 101.6136px;\n        background-position: center;\n        box-shadow: 0 0 20px rgba(0, 0, 0, 0.6);\n        background-color: var(--simple-concept-network-bg);\n      }\n\n      .hexTop,\n      .hexBottom {\n        position: absolute;\n        z-index: 1;\n        width: 62.23px;\n        height: 62.23px;\n        overflow: hidden;\n        -webkit-transform: scaleY(0.5774) rotate(-45deg);\n        -ms-transform: scaleY(0.5774) rotate(-45deg);\n        transform: scaleY(0.5774) rotate(-45deg);\n        background: inherit;\n        left: 12.89px;\n        box-shadow: 0 0 20px rgba(0, 0, 0, 0.6);\n      }\n\n      /*counter transform the bg image on the caps*/\n      .hexTop:after,\n      .hexBottom:after {\n        content: \"\";\n        position: absolute;\n        width: 88px;\n        height: 50.80682368868707px;\n        -webkit-transform: rotate(45deg) scaleY(1.7321) translateY(-25.4034px);\n        -ms-transform: rotate(45deg) scaleY(1.7321) translateY(-25.4034px);\n        transform: rotate(45deg) scaleY(1.7321) translateY(-25.4034px);\n        -webkit-transform-origin: 0 0;\n        -ms-transform-origin: 0 0;\n        transform-origin: 0 0;\n        background: inherit;\n      }\n\n      .hexTop {\n        top: -31.1127px;\n      }\n\n      .hexTop:after {\n        background-position: center top;\n      }\n\n      .hexBottom {\n        bottom: -31.1127px;\n      }\n\n      .hexBottom:after {\n        background-position: center bottom;\n      }\n\n      .hexagon:after {\n        content: \"\";\n        position: absolute;\n        top: 0px;\n        left: 0;\n        width: 88px;\n        height: 50.8068px;\n        z-index: 2;\n        background: inherit;\n      }\n    </style>\n    <a tabindex=\"-1\" href=\"[[src]]\" disabled\\$=\"[[disabled]]\">\n      <paper-button disabled\\$=\"[[disabled]]\" id=\"button\">\n        <div\n          class=\"hexagon\"\n          style\\$=\"background-image: url([[image]]); background-color:[[color]];\"\n        >\n          <div class=\"hexTop\"></div>\n          <div class=\"hexBottom\"></div>\n          <iron-icon icon=\"[[icon]]\" style\\$=\"color:[[iconColor]];\"\n            >&gt;</iron-icon\n          >\n        </div>\n      </paper-button>\n    </a>\n    <paper-tooltip for=\"button\" position=\"bottom\" offset=\"45\">\n      [[label]]\n    </paper-tooltip>\n  `,\n\n  is: \"simple-concept-network-node\",\n\n  behaviors: [\n    HAXBehaviors.PropertiesBehaviors,\n    MaterializeCSSBehaviors.ColorBehaviors,\n    A11yBehaviors.A11y\n  ],\n\n  properties: {\n    /**\n     * Primary color to use as the background\n     */\n    color: {\n      type: String\n    },\n    /**\n     * Icon color\n     */\n    iconColor: {\n      type: String\n    },\n    /**\n     * Visualization reflected to attribute for styling\n     */\n    visualization: {\n      type: String,\n      reflectToAttribute: true,\n      value: \"3d\"\n    },\n    /**\n     * Icon to present\n     */\n    icon: {\n      type: String\n    },\n    /**\n     * image to present\n     */\n    image: {\n      type: String\n    },\n    /**\n     * disabled status\n     */\n    disabled: {\n      type: Boolean\n    },\n    /**\n     * title / label text\n     */\n    label: {\n      type: String\n    },\n    /**\n     * Longer description used for more info\n     */\n    description: {\n      type: String\n    },\n    /**\n     * source for a link\n     */\n    src: {\n      type: String\n    }\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@lrnwebcomponents/materializecss-styles/materializecss-styles.js\";\nimport \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport \"@lrnwebcomponents/a11y-behaviors/a11y-behaviors.js\";\nimport \"./lib/simple-concept-network-node.js\";\n/**\n`simple-concept-network`\nA small but effective little data visualizer for topics surrounding\na central concept, much like the ELMS:LN snowflake icon.\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n - ELMS:LN - The ELMS: Learning Network \"snowflake\" is a network diagram\n\n*/\nlet SimpleConceptNetwork = Polymer({\n  _template: html`\n    <style include=\"materializecss-styles\">\n      :host {\n        display: block;\n      }\n      :host([visualization=\"network\"]) simple-concept-network-node {\n        position: relative;\n      }\n      :host([visualization=\"network\"])\n        simple-concept-network-node:nth-child(1) {\n        top: 150px;\n        left: 176px;\n      }\n      :host([visualization=\"network\"])\n        simple-concept-network-node:nth-child(2) {\n        top: 0px;\n        left: 60px;\n      }\n      :host([visualization=\"network\"])\n        simple-concept-network-node:nth-child(3) {\n        top: 75px;\n        left: 60px;\n      }\n      :host([visualization=\"network\"])\n        simple-concept-network-node:nth-child(4) {\n        top: 230px;\n        left: -56px;\n      }\n      :host([visualization=\"network\"])\n        simple-concept-network-node:nth-child(5) {\n        top: 300px;\n        left: -282px;\n      }\n      :host([visualization=\"network\"])\n        simple-concept-network-node:nth-child(6) {\n        top: 230px;\n        left: -515px;\n      }\n      :host([visualization=\"network\"])\n        simple-concept-network-node:nth-child(7) {\n        top: 75px;\n        left: -630px;\n      }\n      :host([visualization=\"network\"]) {\n        display: block;\n        min-height: 450px;\n      }\n    </style>\n    <template is=\"dom-repeat\" items=\"[[nodes]]\" as=\"node\">\n      <simple-concept-network-node\n        visualization=\"[[visualization]]\"\n        src=\"[[node.src]]\"\n        icon=\"[[node.icon]]\"\n        icon-color=\"[[node.iconColor]]\"\n        image=\"[[node.image]]\"\n        label=\"[[node.label]]\"\n        color=\"[[node.color]]\"\n        disabled=\"[[node.disabled]]\"\n      ></simple-concept-network-node>\n    </template>\n  `,\n\n  is: \"simple-concept-network\",\n\n  behaviors: [\n    HAXBehaviors.PropertiesBehaviors,\n    MaterializeCSSBehaviors.ColorBehaviors,\n    A11yBehaviors.A11y\n  ],\n\n  observers: [\"_valueChanged(nodes.*)\"],\n\n  properties: {\n    /**\n     * Primary color to use as the background\n     */\n    color: {\n      type: String\n    },\n    /**\n     * Type of visualization\n     */\n    visualization: {\n      type: String,\n      reflectToAttribute: true,\n      value: \"3d\"\n    },\n    /**\n     * List of nodes to template stamp out\n     */\n    nodes: {\n      type: Array,\n      value: [],\n      notify: true\n    }\n  },\n\n  /**\n   * Notice an answer has changed and update the DOM.\n   */\n  _valueChanged: function(e) {\n    for (var i in e.base) {\n      for (var j in e.base[i]) {\n        this.notifyPath(\"nodes.\" + i + \".\" + j);\n      }\n    }\n  },\n\n  /**\n   * Attached.\n   */\n  attached: function() {\n    // Establish hax properties if they exist\n    let props = {\n      canScale: true,\n      canPosition: true,\n      canEditSource: false,\n      gizmo: {\n        title: \"Concept Network\",\n        description:\n          \"A simple way of visualizing data in a small network style configuration.\",\n        icon: \"lrn:network\",\n        color: \"blue\",\n        groups: [\"Image\", \"Visualization\"],\n        handles: [\n          {\n            type: \"image\",\n            source: \"nodes.source\",\n            title: \"nodes.label\",\n            link: \"nodes.src\",\n            description: \"nodes.description\"\n          }\n        ],\n        meta: {\n          author: \"LRNWebComponents\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"color\",\n            title: \"Color\",\n            description: \"Primary / background color\",\n            inputMethod: \"colorpicker\",\n            icon: \"editor:format-color-fill\"\n          }\n        ],\n        configure: [\n          {\n            property: \"color\",\n            title: \"Color\",\n            description: \"Default background color\",\n            inputMethod: \"colorpicker\",\n            icon: \"editor:format-color-fill\"\n          },\n          {\n            property: \"visualization\",\n            title: \"Visualization\",\n            description: \"How to visualize the concept\",\n            inputMethod: \"select\",\n            options: {\n              \"3d\": \"3d plain\",\n              network: \"network\",\n              flat: \"flat\"\n            }\n          },\n          {\n            property: \"nodes\",\n            title: \"Node list\",\n            description: \"List of the items to present in the visual\",\n            inputMethod: \"array\",\n            properties: [\n              {\n                property: \"icon\",\n                title: \"Icon\",\n                description: \"icon to display in the middle\",\n                inputMethod: \"iconpicker\",\n                options: []\n              },\n              {\n                property: \"iconColor\",\n                title: \"Icon Color\",\n                description: \"Color for this icon\",\n                inputMethod: \"colorpicker\"\n              },\n              {\n                property: \"label\",\n                title: \"Label\",\n                description: \"Label\",\n                inputMethod: \"textfield\"\n              },\n              {\n                property: \"image\",\n                title: \"Image\",\n                description: \"Image for the background\",\n                inputMethod: \"textfield\",\n                validationType: \"url\"\n              },\n              {\n                property: \"description\",\n                title: \"Description\",\n                description:\n                  \"A longer description that can be used as part of a modal presentation\",\n                inputMethod: \"textfield\"\n              },\n              {\n                property: \"color\",\n                title: \"Color\",\n                description: \"Color for this node\",\n                inputMethod: \"colorpicker\"\n              },\n              {\n                property: \"src\",\n                title: \"Link\",\n                description: \"Label\",\n                inputMethod: \"textfield\",\n                validationType: \"url\"\n              }\n            ]\n          }\n        ],\n        advanced: []\n      }\n    };\n    this.setHaxProperties(props);\n  }\n});\nexport { SimpleConceptNetwork };\n"],"names":["_template","html","is","behaviors","HAXBehaviors","PropertiesBehaviors","MaterializeCSSBehaviors","ColorBehaviors","A11yBehaviors","A11y","properties","color","type","String","iconColor","visualization","reflectToAttribute","value","icon","image","disabled","Boolean","label","description","src","SimpleConceptNetwork","Polymer","observers","nodes","Array","notify","_valueChanged","e","i","base","j","notifyPath","attached","setHaxProperties","canScale","canPosition","canEditSource","gizmo","title","groups","handles","source","link","meta","author","settings","quick","property","inputMethod","configure","options","network","flat","validationType","advanced"],"mappings":"04VAiBQ,CACNA,UAAWC,YA0IXC,GAAI,8BAEJC,UAAW,CACTC,aAAaC,oBACbC,wBAAwBC,eACxBC,cAAcC,MAGhBC,WAAY,CAIVC,MAAO,CACLC,KAAMC,QAKRC,UAAW,CACTF,KAAMC,QAKRE,cAAe,CACbH,KAAMC,OACNG,oBAAoB,EACpBC,MAAO,MAKTC,KAAM,CACJN,KAAMC,QAKRM,MAAO,CACLP,KAAMC,QAKRO,SAAU,CACRR,KAAMS,SAKRC,MAAO,CACLV,KAAMC,QAKRU,YAAa,CACXX,KAAMC,QAKRW,IAAK,CACHZ,KAAMC,eC3MRY,EAAuBC,UAAQ,CACjC1B,UAAWC,YA8DXC,GAAI,yBAEJC,UAAW,CACTC,aAAaC,oBACbC,wBAAwBC,eACxBC,cAAcC,MAGhBkB,UAAW,CAAC,0BAEZjB,WAAY,CAIVC,MAAO,CACLC,KAAMC,QAKRE,cAAe,CACbH,KAAMC,OACNG,oBAAoB,EACpBC,MAAO,MAKTW,MAAO,CACLhB,KAAMiB,MACNZ,MAAO,GACPa,QAAQ,IAOZC,cAAe,SAASC,OACjB,IAAIC,KAAKD,EAAEE,SACT,IAAIC,KAAKH,EAAEE,KAAKD,QACdG,WAAW,SAAWH,EAAI,IAAME,IAQ3CE,SAAU,gBAiHHC,iBA/GO,CACVC,UAAU,EACVC,aAAa,EACbC,eAAe,EACfC,MAAO,CACLC,MAAO,kBACPpB,YACE,2EACFL,KAAM,cACNP,MAAO,OACPiC,OAAQ,CAAC,QAAS,iBAClBC,QAAS,CACP,CACEjC,KAAM,QACNkC,OAAQ,eACRH,MAAO,cACPI,KAAM,YACNxB,YAAa,sBAGjByB,KAAM,CACJC,OAAQ,qBAGZC,SAAU,CACRC,MAAO,CACL,CACEC,SAAU,QACVT,MAAO,QACPpB,YAAa,6BACb8B,YAAa,cACbnC,KAAM,6BAGVoC,UAAW,CACT,CACEF,SAAU,QACVT,MAAO,QACPpB,YAAa,2BACb8B,YAAa,cACbnC,KAAM,4BAER,CACEkC,SAAU,gBACVT,MAAO,gBACPpB,YAAa,+BACb8B,YAAa,SACbE,QAAS,MACD,WACNC,QAAS,UACTC,KAAM,SAGV,CACEL,SAAU,QACVT,MAAO,YACPpB,YAAa,6CACb8B,YAAa,QACb3C,WAAY,CACV,CACE0C,SAAU,OACVT,MAAO,OACPpB,YAAa,gCACb8B,YAAa,aACbE,QAAS,IAEX,CACEH,SAAU,YACVT,MAAO,aACPpB,YAAa,sBACb8B,YAAa,eAEf,CACED,SAAU,QACVT,MAAO,QACPpB,YAAa,QACb8B,YAAa,aAEf,CACED,SAAU,QACVT,MAAO,QACPpB,YAAa,2BACb8B,YAAa,YACbK,eAAgB,OAElB,CACEN,SAAU,cACVT,MAAO,cACPpB,YACE,wEACF8B,YAAa,aAEf,CACED,SAAU,QACVT,MAAO,QACPpB,YAAa,sBACb8B,YAAa,eAEf,CACED,SAAU,MACVT,MAAO,OACPpB,YAAa,QACb8B,YAAa,YACbK,eAAgB,UAKxBC,SAAU"}