{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "place-holder.js",
      "properties": [
        {
          "name": "iconFromType",
          "type": "string | null | undefined",
          "description": "calculate an icon based on the type that was used",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 4
            },
            "end": {
              "line": 66,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "text",
          "type": "string | null | undefined",
          "description": "Text place holder for describing this place holder element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 4
            },
            "end": {
              "line": 73,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "calcText",
          "type": "string | null | undefined",
          "description": "Calculate text based on the type in the event we have no default.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 4
            },
            "end": {
              "line": 80,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "String"
            }
          }
        },
        {
          "name": "type",
          "type": "string | null | undefined",
          "description": "A media type to visualize and also bubble events off of.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"text\""
        },
        {
          "name": "dragOver",
          "type": "boolean | null | undefined",
          "description": "Bind dragging state to a variable so we can apply CSS.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 4
            },
            "end": {
              "line": 95,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "fireReplaceEvent",
          "description": "Fire an event for things to react to above us",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 2
            },
            "end": {
              "line": 103,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getCalcText",
          "description": "Get the calculated text based on text being empty and type being set.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 2
            },
            "end": {
              "line": 116,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text"
            },
            {
              "name": "type"
            },
            {
              "name": "dragOver"
            }
          ]
        },
        {
          "name": "_getIconFromType",
          "description": "Generate an icon based on the media type selected\nfor the place holder.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 122,
              "column": 2
            },
            "end": {
              "line": 149,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            },
            {
              "name": "dragOver"
            }
          ]
        },
        {
          "name": "ready",
          "description": "Attached event handlers for drag and drop.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 154,
              "column": 2
            },
            "end": {
              "line": 190,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "Attached to the DOM, now fire.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 2
            },
            "end": {
              "line": 238,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 18,
          "column": 26
        },
        "end": {
          "line": 239,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "PlaceHolder",
      "attributes": [
        {
          "name": "icon-from-type",
          "description": "calculate an icon based on the type that was used",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 4
            },
            "end": {
              "line": 66,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "text",
          "description": "Text place holder for describing this place holder element.",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 4
            },
            "end": {
              "line": 73,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "calc-text",
          "description": "Calculate text based on the type in the event we have no default.",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 4
            },
            "end": {
              "line": 80,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "type",
          "description": "A media type to visualize and also bubble events off of.",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "drag-over",
          "description": "Bind dragging state to a variable so we can apply CSS.",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 4
            },
            "end": {
              "line": 95,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "place-holder"
    }
  ]
}
