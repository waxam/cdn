{"version":3,"file":"paper-icon-picker.umd.js","sources":["lib/paper-icon-picker-icon.js","paper-icon-picker.umd.js"],"sourcesContent":["import \"@polymer/iron-icon/iron-icon.js\";\nimport \"@polymer/iron-iconset-svg/iron-iconset-svg.js\";\nvar $_documentContainer = document.createElement(\"div\");\n$_documentContainer.setAttribute(\"style\", \"display: none;\");\n\n$_documentContainer.innerHTML = `<iron-iconset-svg size=\"24\" name=\"swatch\">\n<svg><defs>\n<g id=\"perm-media\"><path d=\"M2 6H0v5h.01L0 20c0 1.1.9 2 2 2h18v-2H2V6zm20-2h-8l-2-2H6c-1.1 0-1.99.9-1.99 2L4 16c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2zM7 15l4.5-6 3.5 4.51 2.5-3.01L21 15H7z\"></path></g>\n<g id=\"format-color-fill\"><path d=\"M16.56 8.94L7.62 0 6.21 1.41l2.38 2.38-5.15 5.15c-.59.59-.59 1.54 0 2.12l5.5 5.5c.29.29.68.44 1.06.44s.77-.15 1.06-.44l5.5-5.5c.59-.58.59-1.53 0-2.12zM5.21 10L10 5.21 14.79 10H5.21zM19 11.5s-2 2.17-2 3.5c0 1.1.9 2 2 2s2-.9 2-2c0-1.33-2-3.5-2-3.5z\"></path><path fill-opacity=\".36\" d=\"M0 20h24v4H0z\"></path></g>\n</defs></svg>\n</iron-iconset-svg>`;\n\ndocument.head.appendChild($_documentContainer);\n\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport { IronMeta } from \"@polymer/iron-meta/iron-meta.js\";\nimport \"@polymer/iron-flex-layout/iron-flex-layout.js\";\nimport \"@polymer/paper-icon-button/paper-icon-button.js\";\nimport \"@polymer/paper-item/paper-item.js\";\nimport \"@polymer/paper-styles/color.js\";\nimport \"@polymer/paper-listbox/paper-listbox.js\";\nimport \"@polymer/paper-menu-button/paper-menu-button.js\";\nimport \"@polymer/iron-list/iron-list.js\";\nimport \"@polymer/iron-icon/iron-icon.js\";\nimport \"@polymer/neon-animation/neon-animation.js\";\nimport \"@polymer/iron-a11y-keys/iron-a11y-keys.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@polymer/iron-iconset-svg/iron-iconset-svg.js\";\nimport \"./lib/paper-icon-picker-icon.js\";\n/**\n@license\nCopyright (c) 2016 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\nThe complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\nThe complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\nCode distributed by Google as part of the polymer project is also\nsubject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n*/\n/**\nThis is a simple icon picker element that will allow you to choose one\nof the Material Design icons from a list of available swatches.\n\nExample:\n\n    <paper-icon-picker></paper-icon-picker>\n\n    <paper-icon-picker icon=\"{{selectedIcon}}\"></paper-icon-picker>\n\nYou can configure the icon palette being used using the `iconList` array and\nthe `columnCount` property, which specifies how many \"generic\" icons (i.e. columns\nin the picker) you want to display.\n\n    <paper-icon-picker column-count=5 icon-list='[\"icons:cloud\", \"icons:face\", \"icons:work\", \"icons:pets\", \"icons:perm-contact-calendar\"]'></paper-icon-picker>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-icon-picker-icon-size` | The size of each of the icon boxes | `26px`\n`--paper-icon-picker-size` | The size of the icon picker | `24px`\n\n@element paper-icon-picker\n@demo demo/index.html\n*/\nlet PaperIconPicker = Polymer({\n  _template: html`\n    <style is=\"custom-style\">\n      :host {\n        display: inline-block;\n        position: relative;\n      }\n\n      :host(:focus) {\n        outline: none;\n      }\n\n      .icon {\n        box-sizing: border-box;\n        width: var(--paper-icon-picker-icon-size, 26px);\n        height: var(--paper-icon-picker-icon-size, 26px);\n        color: #888888;\n        display: inline-block;\n        padding: 0;\n        margin: 0;\n        cursor: pointer;\n        font-size: 0;\n        position: absolute;\n      }\n      .icon iron-icon {\n        width: var(--paper-icon-picker-icon-size, 26px);\n        height: var(--paper-icon-picker-icon-size, 26px);\n      }\n\n      /* If we just scale the paper-item when hovering, this will end up\n       * adding scrollbars to the paper-listbox that are hard to get rid of.\n       * An easy workaround is to use an :after pseudo element instead. */\n      .icon:after {\n        @apply --layout-fit;\n        content: \"\";\n        -webkit-transition: -webkit-transform 0.2s;\n        transition: transform 0.2s;\n        z-index: 0;\n      }\n\n      .icon:hover,\n      .icon:focus {\n        -webkit-transform: scale(1.8, 1.8);\n        transform: scale(1.8, 1.8);\n        outline: none;\n        z-index: 1;\n        background-color: #ffffff;\n        border-radius: 0;\n        border: 1px solid #888888;\n        color: orange !important;\n      }\n\n      paper-item {\n        --paper-item: {\n          margin: 0;\n          padding: 0;\n          min-height: 0;\n        }\n\n        --paper-item-focused-before: {\n          opacity: 0;\n        }\n      }\n\n      paper-listbox {\n        margin: 8px;\n        font-size: 0;\n        @apply --layout-vertical;\n        @apply --layout-wrap;\n      }\n      paper-tooltip {\n        z-index: 1;\n      }\n      .icon-group-1 {\n        color: var(--paper-pink-700);\n      }\n      .icon-group-2 {\n        color: var(--google-green-700);\n      }\n      .icon-group-3 {\n        color: var(--google-blue-700);\n      }\n      .icon-group-4 {\n        color: var(--paper-grey-700);\n      }\n      .icon-group-5 {\n        color: var(--paper-pink-700);\n      }\n      .icon-group-6 {\n        color: var(--google-green-700);\n      }\n      .icon-group-7 {\n        color: var(--google-blue-700);\n      }\n      .icon-group-8 {\n        color: var(--paper-grey-700);\n      }\n      .icon-group-9 {\n        color: var(--paper-pink-700);\n      }\n      .icon-group-10 {\n        color: var(--google-green-700);\n      }\n      .icon-group-11 {\n        color: var(--google-blue-700);\n      }\n      .icon-group-12 {\n        color: var(--paper-grey-700);\n      }\n      .icon-group-13 {\n        color: var(--paper-pink-700);\n      }\n      .icon-group-14 {\n        color: var(--google-green-700);\n      }\n      .icon-group-15 {\n        color: var(--google-blue-700);\n      }\n      .icon-group-16 {\n        color: var(--paper-grey-700);\n      }\n      .icon-group-17 {\n        color: var(--paper-pink-700);\n      }\n      .icon-group-18 {\n        color: var(--google-green-700);\n      }\n      .icon-group-19 {\n        color: var(--google-blue-700);\n      }\n    </style>\n    <paper-menu-button\n      id=\"iconpicker\"\n      on-tap=\"_onOpen\"\n      vertical-align=\"[[verticalAlign]]\"\n      horizontal-align=\"[[horizontalAlign]]\"\n      opened=\"{{opened}}\"\n    >\n      <paper-icon-button\n        id=\"iconButton\"\n        icon=\"swatch:perm-media\"\n        class=\"dropdown-trigger\"\n        alt=\"icon picker\"\n        noink$=\"[[noink]]\"\n        slot=\"dropdown-trigger\"\n      ></paper-icon-button>\n      <iron-list\n        grid\n        items=\"[[renderIconList]]\"\n        id=\"container\"\n        slot=\"dropdown-content\"\n      >\n        <template>\n          <paper-item\n            on-tap=\"_onIconTap\"\n            class$=\"icon-group-[[item.index]] icon\"\n            value=\"[[item.icon]]\"\n          >\n            <iron-icon icon=\"[[item.icon]]\" value=\"[[item.icon]]\"></iron-icon>\n          </paper-item>\n        </template>\n      </iron-list>\n    </paper-menu-button>\n    <paper-tooltip for=\"iconpicker\" position=\"bottom\" offset=\"14\">\n      [[iconText]]\n    </paper-tooltip>\n    <iron-a11y-keys\n      target=\"[[iconpicker]]\"\n      keys=\"escape\"\n      on-keys-pressed=\"close\"\n      stop-keyboard-event-propagation\n    ></iron-a11y-keys>\n  `,\n\n  is: \"paper-icon-picker\",\n  /**\n   * Fired when a icon has been selected\n   *\n   * @event icon-picker-selected\n   */\n\n  properties: {\n    /**\n     * opened state\n     */\n    opened: {\n      type: Boolean\n    },\n    /**\n     * The selected icon, as string (i.e. 'icons:add-box').\n     * value.\n     */\n    icon: {\n      type: String,\n      notify: true,\n      observer: \"_iconChanged\"\n    },\n    /**\n     * icon text off of icon\n     */\n    iconText: {\n      type: String,\n      computed: \"_computedIconText(icon)\"\n    },\n    /**\n     * The icons to be displayed. By default, these are the Material Design\n     * icons.\n     */\n    iconList: {\n      type: Array,\n      notify: true,\n      value: function() {\n        return [];\n      }\n    },\n    /**\n     * Build a list of icons to render based on\n     * what has been found.\n     */\n    renderIconList: {\n      type: Array,\n      computed: \"_computeRenderIconList(iconList)\"\n    },\n    /**\n     * The number of icons to display in the picker.\n     * the Material Design palette has 18 icons\n     */\n    columnCount: {\n      type: Number,\n      value: 8\n    },\n    /**\n     * max rows to display to increase performance of large lists\n     * of icons being loaded\n     */\n    maxRows: {\n      type: Number,\n      value: 6\n    },\n    /**\n     * The orientation against which to align the menu dropdown\n     * horizontally relative to the dropdown trigger.\n     */\n    horizontalAlign: {\n      type: String,\n      value: \"left\",\n      reflectToAttribute: true\n    },\n\n    /**\n     * The orientation against which to align the menu dropdown\n     * vertically relative to the dropdown trigger.\n     */\n    verticalAlign: {\n      type: String,\n      value: \"top\",\n      reflectToAttribute: true\n    },\n\n    /**\n     * If true, the icon picker button will not produce a ripple effect when interacted\n     * with via the pointer.\n     */\n    noink: {\n      type: Boolean\n    }\n  },\n\n  /**\n   * on open event\n   */\n  _onOpen: function(e) {\n    setTimeout(() => {\n      try {\n        this.shadowRoot.querySelector(\"paper-item\").focus();\n      } catch (error) {}\n    }, 500);\n  },\n\n  /**\n   * Close list.\n   */\n  close: function() {\n    this.opened = false;\n  },\n\n  /**\n   * List that we will output to the screen\n   */\n  _computeRenderIconList: function(list) {\n    var renderList = [];\n    var item = {};\n    for (var i in list) {\n      item = {};\n      if (typeof list[i].icon === typeof undefined) {\n        item.icon = list[i];\n      } else {\n        item.icon = list[i].icon;\n      }\n      if (typeof list[i].index === typeof undefined) {\n        item.index = 0;\n      } else {\n        item.index = list[i].index;\n      }\n      renderList.push(item);\n    }\n    return renderList;\n  },\n\n  /**\n   * Icon text from icon selected\n   */\n  _computedIconText: function(icon) {\n    if (icon == \"\") {\n      return \"Select an icon\";\n    }\n    return icon;\n  },\n\n  created: function() {\n    // Note: we won't actually render these icon boxes unless the menu is\n    // actually tapped.\n    this._renderedIcons = false;\n  },\n\n  /**\n   * Attached life cycle\n   */\n  attached: function() {\n    // need to access iconset imperatively now\n    const iconSets = new IronMeta({ type: \"iconset\" });\n    if (\n      this.iconList.length === 0 &&\n      typeof iconSets !== typeof undefined &&\n      iconSets.list &&\n      iconSets.list.length\n    ) {\n      var iconList = [];\n      var index = 0;\n      iconSets.list.forEach(function(item) {\n        index++;\n        item.getIconNames().forEach(icon => {\n          iconList.push({\n            icon: icon,\n            index: index\n          });\n        });\n      });\n      this.set(\"iconList\", iconList);\n    }\n    // Fit the icon boxes in columns. We first need to get the width of\n    // a icon box (which is customizable), and then change the box's\n    // width to fit all the columns.\n    var sizeOfAIconDiv;\n    if (window.ShadyCSS) {\n      sizeOfAIconDiv = ShadyCSS.getComputedStyleValue(\n        this,\n        \"--paper-icon-picker-icon-size\"\n      );\n    } else {\n      sizeOfAIconDiv = getComputedStyle(this).getPropertyValue(\n        \"--paper-icon-picker-icon-size\"\n      );\n    }\n    if (!sizeOfAIconDiv || sizeOfAIconDiv == \"\") {\n      // Default value case\n      sizeOfAIconDiv = 26;\n    } else {\n      sizeOfAIconDiv = sizeOfAIconDiv.replace(\"px\", \"\");\n    }\n\n    var rowCount = Math.round(this.iconList.length / this.columnCount) + 1;\n    // ensure that we don't go beyond 100 shown if this is an insane list\n    if (rowCount > this.maxRows) {\n      rowCount = this.maxRows;\n    }\n    this.$.container.style.height = rowCount * sizeOfAIconDiv + \"px\";\n    this.$.container.style.width = this.columnCount * sizeOfAIconDiv + \"px\";\n  },\n\n  _addOverflowClass: function() {\n    this.$.container.toggleClass(\"opened\", true);\n  },\n\n  _removeOverflowClass: function() {\n    this.$.container.toggleClass(\"opened\", false);\n  },\n\n  _onIconTap: function(e) {\n    this.icon = e.target.value;\n    this.fire(\"icon-picker-selected\", { icon: this.icon });\n    this.$.container.fire(\"iron-select\", this.icon);\n    this.close();\n  },\n\n  _iconChanged: function() {\n    if (this.icon) {\n      this.$.iconButton.icon = this.icon;\n    } else {\n      this.$.iconButton.icon = \"swatch:perm-media\";\n    }\n  }\n});\nexport { PaperIconPicker };\n"],"names":["$_documentContainer","document","createElement","setAttribute","innerHTML","head","appendChild","PaperIconPicker","Polymer","_template","html","is","properties","opened","type","Boolean","icon","String","notify","observer","iconText","computed","iconList","Array","value","renderIconList","columnCount","Number","maxRows","horizontalAlign","reflectToAttribute","verticalAlign","noink","_onOpen","e","setTimeout","_this","shadowRoot","querySelector","focus","error","close","_computeRenderIconList","list","renderList","item","i","_typeof","index","push","_computedIconText","created","_renderedIcons","attached","sizeOfAIconDiv","iconSets","IronMeta","this","length","forEach","getIconNames","set","window","ShadyCSS","getComputedStyleValue","getComputedStyle","getPropertyValue","replace","rowCount","Math","round","$","container","style","height","width","_addOverflowClass","toggleClass","_removeOverflowClass","_onIconTap","target","fire","_iconChanged","iconButton"],"mappings":"g0DAEA,IAAIA,EAAsBC,SAASC,cAAc,w9IACjDF,EAAoBG,aAAa,QAAS,kBAE1CH,EAAoBI,wpBAOpBH,SAASI,KAAKC,YAAYN,OCyCtBO,EAAkBC,UAAQ,CAC5BC,UAAWC,YA6KXC,GAAI,oBAOJC,WAAY,CAIVC,OAAQ,CACNC,KAAMC,SAMRC,KAAM,CACJF,KAAMG,OACNC,QAAQ,EACRC,SAAU,gBAKZC,SAAU,CACRN,KAAMG,OACNI,SAAU,2BAMZC,SAAU,CACRR,KAAMS,MACNL,QAAQ,EACRM,MAAO,iBACE,KAOXC,eAAgB,CACdX,KAAMS,MACNF,SAAU,oCAMZK,YAAa,CACXZ,KAAMa,OACNH,MAAO,GAMTI,QAAS,CACPd,KAAMa,OACNH,MAAO,GAMTK,gBAAiB,CACff,KAAMG,OACNO,MAAO,OACPM,oBAAoB,GAOtBC,cAAe,CACbjB,KAAMG,OACNO,MAAO,MACPM,oBAAoB,GAOtBE,MAAO,CACLlB,KAAMC,UAOVkB,QAAS,SAASC,cAChBC,WAAW,eAEPC,EAAKC,WAAWC,cAAc,cAAcC,QAC5C,MAAOC,MACR,MAMLC,MAAO,gBACA5B,QAAS,GAMhB6B,uBAAwB,SAASC,OAC3BC,EAAa,GACbC,EAAO,OACN,IAAIC,KAAKH,EACZE,EAAO,iBACHE,EAAOJ,EAAKG,GAAG9B,MACjB6B,EAAK7B,KAAO2B,EAAKG,GAEjBD,EAAK7B,KAAO2B,EAAKG,GAAG9B,mBAElB+B,EAAOJ,EAAKG,GAAGE,OACjBH,EAAKG,MAAQ,EAEbH,EAAKG,MAAQL,EAAKG,GAAGE,MAEvBJ,EAAWK,KAAKJ,UAEXD,GAMTM,kBAAmB,SAASlC,SACd,IAARA,EACK,iBAEFA,GAGTmC,QAAS,gBAGFC,gBAAiB,GAMxBC,SAAU,eAyBJC,EAvBEC,EAAW,IAAIC,WAAS,CAAE1C,KAAM,eAEX,IAAzB2C,KAAKnC,SAASoC,sBACdX,EAAOQ,IACPA,EAASZ,MACTY,EAASZ,KAAKe,OACd,KACIpC,EAAW,GACX0B,EAAQ,EACZO,EAASZ,KAAKgB,QAAQ,SAASd,GAC7BG,IACAH,EAAKe,eAAeD,QAAQ,SAAA3C,GAC1BM,EAAS2B,KAAK,CACZjC,KAAMA,EACNgC,MAAOA,aAIRa,IAAI,WAAYvC,GAoBrBgC,GAbAA,EADEQ,OAAOC,SACQA,SAASC,sBACxBP,KACA,iCAGeQ,iBAAiBR,MAAMS,iBACtC,mCAGqC,IAAlBZ,EAIJA,EAAea,QAAQ,KAAM,IAF7B,OAKfC,EAAWC,KAAKC,MAAMb,KAAKnC,SAASoC,OAASD,KAAK/B,aAAe,EAEjE0C,EAAWX,KAAK7B,UAClBwC,EAAWX,KAAK7B,cAEb2C,EAAEC,UAAUC,MAAMC,OAASN,EAAWd,EAAiB,UACvDiB,EAAEC,UAAUC,MAAME,MAAQlB,KAAK/B,YAAc4B,EAAiB,MAGrEsB,kBAAmB,gBACZL,EAAEC,UAAUK,YAAY,UAAU,IAGzCC,qBAAsB,gBACfP,EAAEC,UAAUK,YAAY,UAAU,IAGzCE,WAAY,SAAS7C,QACdlB,KAAOkB,EAAE8C,OAAOxD,WAChByD,KAAK,uBAAwB,CAAEjE,KAAMyC,KAAKzC,YAC1CuD,EAAEC,UAAUS,KAAK,cAAexB,KAAKzC,WACrCyB,SAGPyC,aAAc,WACRzB,KAAKzC,UACFuD,EAAEY,WAAWnE,KAAOyC,KAAKzC,UAEzBuD,EAAEY,WAAWnE,KAAO"}