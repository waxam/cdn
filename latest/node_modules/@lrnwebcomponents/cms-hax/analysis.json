{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`cms-token`\nRender and process a shortcode / token from a content management system.",
      "summary": "",
      "path": "lib/cms-token.js",
      "properties": [
        {
          "name": "loading",
          "type": "boolean | null | undefined",
          "description": "Loading state",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 4
            },
            "end": {
              "line": 95,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "token",
          "type": "string | null | undefined",
          "description": "Token changed (somehow) do the token processing.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 102,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "tokenEndPoint",
          "type": "string | null | undefined",
          "description": "Token end point updated, change the way we do processing.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "bodyData",
          "type": "Object | null | undefined",
          "description": "Body data which is just token with some encapsulation.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 4
            },
            "end": {
              "line": 116,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_tokenChanged\"",
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "_clickInvoked",
          "type": "string | null | undefined",
          "description": "internal tracking for edit button being clicked in HAX presentation",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 4
            },
            "end": {
              "line": 123,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "tokenData",
          "type": "string | null | undefined",
          "description": "Token data from the end point.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_handleTokenResponse\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "tokenPrefix",
          "type": "string | null | undefined",
          "description": "Prefix for the token to be processed",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 4
            },
            "end": {
              "line": 137,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"[\""
        },
        {
          "name": "tokenSuffix",
          "type": "string | null | undefined",
          "description": "Suffix for the token to be processed",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 4
            },
            "end": {
              "line": 144,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"]\""
        },
        {
          "name": "_displayMode",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 148,
              "column": 4
            },
            "end": {
              "line": 152,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_displayModeChanged\"",
              "attributeType": "String"
            }
          },
          "defaultValue": "\"full\""
        }
      ],
      "methods": [
        {
          "name": "_displayModeChanged",
          "description": "Display mode value updated.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 2
            },
            "end": {
              "line": 166,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_generateBodyData",
          "description": "Generate body data.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 2
            },
            "end": {
              "line": 179,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "token"
            },
            {
              "name": "$editingState"
            }
          ]
        },
        {
          "name": "_handleTokenResponse",
          "description": "Handle the response from the token processing endpoint",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 2
            },
            "end": {
              "line": 206,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "wipeSlot",
          "description": "wipe out the slot",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 210,
              "column": 2
            },
            "end": {
              "line": 214,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_tokenChanged",
          "description": "Token end point changed",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 2
            },
            "end": {
              "line": 239,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_windowVisibilityChanged",
          "description": "Window visibility callback to monitor when we are being seen",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 243,
              "column": 2
            },
            "end": {
              "line": 252,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "__tokenClicked",
          "description": "Notice a click on our edit button and set a flag.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 256,
              "column": 2
            },
            "end": {
              "line": 259,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "detached",
          "description": "Detatched life cycle.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 263,
              "column": 2
            },
            "end": {
              "line": 269,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "Attached to the DOM, now fire.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 273,
              "column": 2
            },
            "end": {
              "line": 349,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "postProcessgetHaxJSONSchema",
          "description": "Implements getHaxJSONSchema post processing callback.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 353,
              "column": 2
            },
            "end": {
              "line": 377,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "schema"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 84,
          "column": 8
        },
        "end": {
          "line": 378,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "loading",
          "description": "Loading state",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 4
            },
            "end": {
              "line": 95,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "token",
          "description": "Token changed (somehow) do the token processing.",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 4
            },
            "end": {
              "line": 102,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "token-end-point",
          "description": "Token end point updated, change the way we do processing.",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "body-data",
          "description": "Body data which is just token with some encapsulation.",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 4
            },
            "end": {
              "line": 116,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "token-data",
          "description": "Token data from the end point.",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "token-prefix",
          "description": "Prefix for the token to be processed",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 4
            },
            "end": {
              "line": 137,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "token-suffix",
          "description": "Suffix for the token to be processed",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 4
            },
            "end": {
              "line": 144,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "cms-token"
    },
    {
      "description": "`cms-block`\nRender and process a  / block from a content management system.",
      "summary": "",
      "path": "lib/cms-block.js",
      "properties": [
        {
          "name": "loading",
          "type": "boolean | null | undefined",
          "description": "Loading state",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 73,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "blockModule",
          "type": "string | null | undefined",
          "description": "Module supplying the block",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 4
            },
            "end": {
              "line": 80,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "blockDelta",
          "type": "string | null | undefined",
          "description": "A delta value relative to the module",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "blockEndPoint",
          "type": "string | null | undefined",
          "description": "block end point updated, change the way we do processing.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "bodyData",
          "type": "Object | null | undefined",
          "description": "Body data which is just block with some encapsulation.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 4
            },
            "end": {
              "line": 101,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_blockChanged\"",
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "blockData",
          "type": "string | null | undefined",
          "description": "block data from the end point.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_handleblockResponse\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "blockPrefix",
          "type": "string | null | undefined",
          "description": "Prefix for the block to be processed",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 4
            },
            "end": {
              "line": 115,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"[\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "blockSuffix",
          "type": "string | null | undefined",
          "description": "Suffix for the block to be processed",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 4
            },
            "end": {
              "line": 122,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"]\"",
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_generateBodyData",
          "description": "Generate body data.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 2
            },
            "end": {
              "line": 139,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "blockModule"
            },
            {
              "name": "blockDelta"
            }
          ]
        },
        {
          "name": "_handleblockResponse",
          "description": "Handle the response from the block processing endpoint",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 2
            },
            "end": {
              "line": 166,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "wipeSlot",
          "description": "wipe out the slot",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 2
            },
            "end": {
              "line": 174,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_blockChanged",
          "description": "block end point changed",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 2
            },
            "end": {
              "line": 199,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "Attached to the DOM, now fire.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 203,
              "column": 2
            },
            "end": {
              "line": 281,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "postProcessgetHaxJSONSchema",
          "description": "Implements getHaxJSONSchema post processing callback.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 285,
              "column": 2
            },
            "end": {
              "line": 299,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "schema"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 62,
          "column": 8
        },
        "end": {
          "line": 300,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "loading",
          "description": "Loading state",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 73,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "block-module",
          "description": "Module supplying the block",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 4
            },
            "end": {
              "line": 80,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "block-delta",
          "description": "A delta value relative to the module",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "block-end-point",
          "description": "block end point updated, change the way we do processing.",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "body-data",
          "description": "Body data which is just block with some encapsulation.",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 4
            },
            "end": {
              "line": 101,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "block-data",
          "description": "block data from the end point.",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "block-prefix",
          "description": "Prefix for the block to be processed",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 4
            },
            "end": {
              "line": 115,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "block-suffix",
          "description": "Suffix for the block to be processed",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 4
            },
            "end": {
              "line": 122,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "cms-block"
    },
    {
      "description": "`cms-views`\nRender and process a  / views from a content management system.",
      "summary": "",
      "path": "lib/cms-views.js",
      "properties": [
        {
          "name": "loading",
          "type": "boolean | null | undefined",
          "description": "Loading state",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 73,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "viewsName",
          "type": "string | null | undefined",
          "description": "Name of the views to render",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 4
            },
            "end": {
              "line": 80,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "viewsDisplay",
          "type": "string | null | undefined",
          "description": "Display from the views",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "viewsEndPoint",
          "type": "string | null | undefined",
          "description": "views end point updated, change the way we do processing.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "bodyData",
          "type": "Object | null | undefined",
          "description": "Body data which is just views with some encapsulation.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 4
            },
            "end": {
              "line": 101,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_viewsChanged\"",
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "viewsData",
          "type": "string | null | undefined",
          "description": "views data from the end point.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_handleviewsResponse\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "viewsPrefix",
          "type": "string | null | undefined",
          "description": "Prefix for the views to be processed",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 4
            },
            "end": {
              "line": 115,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"[\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "viewsSuffix",
          "type": "string | null | undefined",
          "description": "Suffix for the views to be processed",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 4
            },
            "end": {
              "line": 122,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"]\"",
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_generateBodyData",
          "description": "Generate body data.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 2
            },
            "end": {
              "line": 134,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "display"
            }
          ]
        },
        {
          "name": "_handleviewsResponse",
          "description": "Handle the response from the views processing endpoint",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 2
            },
            "end": {
              "line": 161,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "wipeSlot",
          "description": "wipe out the slot",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 2
            },
            "end": {
              "line": 169,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_viewsChanged",
          "description": "views end point changed",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 2
            },
            "end": {
              "line": 194,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "Attached to the DOM, now fire.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 2
            },
            "end": {
              "line": 276,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "postProcessgetHaxJSONSchema",
          "description": "Implements getHaxJSONSchema post processing callback.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 280,
              "column": 2
            },
            "end": {
              "line": 294,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "schema"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 62,
          "column": 8
        },
        "end": {
          "line": 295,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "loading",
          "description": "Loading state",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 73,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "views-name",
          "description": "Name of the views to render",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 4
            },
            "end": {
              "line": 80,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "views-display",
          "description": "Display from the views",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "views-end-point",
          "description": "views end point updated, change the way we do processing.",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "body-data",
          "description": "Body data which is just views with some encapsulation.",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 4
            },
            "end": {
              "line": 101,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "views-data",
          "description": "views data from the end point.",
          "sourceRange": {
            "start": {
              "line": 105,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "views-prefix",
          "description": "Prefix for the views to be processed",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 4
            },
            "end": {
              "line": 115,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "views-suffix",
          "description": "Suffix for the views to be processed",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 4
            },
            "end": {
              "line": 122,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "cms-views"
    },
    {
      "description": "`cms-entity`\nRender and process a  / entity from a content management system.",
      "summary": "",
      "path": "lib/cms-entity.js",
      "properties": [
        {
          "name": "loading",
          "type": "boolean | null | undefined",
          "description": "Loading state",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 73,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "entityType",
          "type": "string | null | undefined",
          "description": "Type of entity to load",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 4
            },
            "end": {
              "line": 80,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "entityId",
          "type": "string | null | undefined",
          "description": "ID of the item to load",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "entityDisplayMode",
          "type": "string | null | undefined",
          "description": "Display mode of the entity",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 4
            },
            "end": {
              "line": 94,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "entityEndPoint",
          "type": "string | null | undefined",
          "description": "entity end point updated, change the way we do processing.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "bodyData",
          "type": "Object | null | undefined",
          "description": "Body data which is just entity with some encapsulation.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 104,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_entityChanged\"",
              "readOnly": true,
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "entityData",
          "type": "string | null | undefined",
          "description": "entity data from the end point.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 4
            },
            "end": {
              "line": 115,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_handleEntityResponse\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "entityPrefix",
          "type": "string | null | undefined",
          "description": "Prefix for the entity to be processed",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 4
            },
            "end": {
              "line": 122,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"[\"",
              "attributeType": "String"
            }
          }
        },
        {
          "name": "entitySuffix",
          "type": "string | null | undefined",
          "description": "Suffix for the entity to be processed",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 129,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"]\"",
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_generateBodyData",
          "description": "Generate body data.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 2
            },
            "end": {
              "line": 147,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "entityType"
            },
            {
              "name": "entityId"
            },
            {
              "name": "entityDisplayMode"
            }
          ]
        },
        {
          "name": "_handleEntityResponse",
          "description": "Handle the response from the entity processing endpoint",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 2
            },
            "end": {
              "line": 174,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "wipeSlot",
          "description": "wipe out the slot",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 178,
              "column": 2
            },
            "end": {
              "line": 182,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_entityChanged",
          "description": "entity end point changed",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 2
            },
            "end": {
              "line": 207,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "Attached to the DOM, now fire.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 2
            },
            "end": {
              "line": 301,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "postProcessgetHaxJSONSchema",
          "description": "Implements getHaxJSONSchema post processing callback.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 305,
              "column": 2
            },
            "end": {
              "line": 319,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "schema"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo/index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 62,
          "column": 8
        },
        "end": {
          "line": 320,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "loading",
          "description": "Loading state",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 4
            },
            "end": {
              "line": 73,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "entity-type",
          "description": "Type of entity to load",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 4
            },
            "end": {
              "line": 80,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "entity-id",
          "description": "ID of the item to load",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 4
            },
            "end": {
              "line": 87,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "entity-display-mode",
          "description": "Display mode of the entity",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 4
            },
            "end": {
              "line": 94,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "entity-end-point",
          "description": "entity end point updated, change the way we do processing.",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "body-data",
          "description": "Body data which is just entity with some encapsulation.",
          "sourceRange": {
            "start": {
              "line": 104,
              "column": 4
            },
            "end": {
              "line": 108,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "entity-data",
          "description": "entity data from the end point.",
          "sourceRange": {
            "start": {
              "line": 112,
              "column": 4
            },
            "end": {
              "line": 115,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "entity-prefix",
          "description": "Prefix for the entity to be processed",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 4
            },
            "end": {
              "line": 122,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "entity-suffix",
          "description": "Suffix for the entity to be processed",
          "sourceRange": {
            "start": {
              "line": 126,
              "column": 4
            },
            "end": {
              "line": 129,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "cms-entity"
    },
    {
      "description": "",
      "summary": "",
      "path": "cms-hax.js",
      "properties": [
        {
          "name": "openDefault",
          "type": "boolean | null | undefined",
          "description": "Default the panel to open",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 4
            },
            "end": {
              "line": 78,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "hideExportButton",
          "type": "boolean | null | undefined",
          "description": "Hide the export button, showing it is good for developers\nor those doing QA testing of new elements.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 4
            },
            "end": {
              "line": 86,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "true"
        },
        {
          "name": "hidePanelOps",
          "type": "boolean | null | undefined",
          "description": "Hide the panel operations (save and cancel),",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "hidePreferencesButton",
          "type": "boolean | null | undefined",
          "description": "Hide preferences button",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "align",
          "type": "string | null | undefined",
          "description": "Direction to align the hax edit panel",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 104,
              "column": 4
            },
            "end": {
              "line": 107,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"right\""
        },
        {
          "name": "allowedTags",
          "type": "Array | null | undefined",
          "description": "allowed Tags, usually as dictated by the input filtering\nlayer of the backend system that HAX is riding on.\nWhile not fullproof, this at least will enforce front-end\nfiltering to match what actually is going to be allowed\nto be saved in the first place.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 4
            },
            "end": {
              "line": 117,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Array"
            }
          }
        },
        {
          "name": "endPoint",
          "type": "string | null | undefined",
          "description": "Location to save content to.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 4
            },
            "end": {
              "line": 123,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "method",
          "type": "string | null | undefined",
          "description": "Method to save content.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"PUT\""
        },
        {
          "name": "updatePageData",
          "type": "string | null | undefined",
          "description": "Page data, body of text as a string.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 4
            },
            "end": {
              "line": 136,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "appStoreConnection",
          "type": "Object | null | undefined",
          "description": "Connection object for talking to an app store.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 4
            },
            "end": {
              "line": 142,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "bodyOffsetLeft",
          "type": "number | null | undefined",
          "description": "Offset from the left of the body field",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          },
          "defaultValue": "-164"
        },
        {
          "name": "editMode",
          "type": "boolean | null | undefined",
          "description": "State of the panel",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 4
            },
            "end": {
              "line": 156,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "syncBody",
          "type": "boolean | null | undefined",
          "description": "syncBody",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "bodyValue",
          "type": "string | null | undefined",
          "description": "Only available if syncBody is true; this allows data binding to the value being worked on in hax-body tag",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 4
            },
            "end": {
              "line": 170,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "hideMessage",
          "type": "boolean | null | undefined",
          "description": "Flag to hide the toast.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 4
            },
            "end": {
              "line": 177,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "redirectLocation",
          "type": "string | null | undefined",
          "description": "Optional URL to redirect to once we save.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 4
            },
            "end": {
              "line": 183,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "redirectOnSave",
          "type": "boolean | null | undefined",
          "description": "Option to redirect once we save successfully",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 4
            },
            "end": {
              "line": 190,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true,
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "activeHaxBody",
          "type": "Object | null | undefined",
          "description": "Reference to activeBody.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 4
            },
            "end": {
              "line": 197,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_activeHaxBodyUpdated\"",
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "__imported",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 4
            },
            "end": {
              "line": 201,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          },
          "defaultValue": "false"
        }
      ],
      "methods": [
        {
          "name": "_activeHaxBodyUpdated",
          "description": "Ensure we've imported our content on initial setup",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 207,
              "column": 2
            },
            "end": {
              "line": 219,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_computeRedirectOnSave",
          "description": "Calculate if we have anywhere to redirect to.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 2
            },
            "end": {
              "line": 229,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "redirectLocation"
            }
          ]
        },
        {
          "name": "created",
          "description": "Created life cycle",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 2
            },
            "end": {
              "line": 239,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attached",
          "description": "Attached to the DOM; now we can fire event to the store that\nwe exist and are the thing being edited.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 245,
              "column": 2
            },
            "end": {
              "line": 267,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_haxStorePropertyUpdated",
          "description": "Store updated, sync.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 2
            },
            "end": {
              "line": 284,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_saveFired",
          "description": "_saveFired",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 289,
              "column": 2
            },
            "end": {
              "line": 294,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_handleUpdateResponse",
          "description": "_handleUpdateResponse",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 299,
              "column": 2
            },
            "end": {
              "line": 313,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 27,
          "column": 21
        },
        "end": {
          "line": 314,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "CmsHax",
      "attributes": [
        {
          "name": "open-default",
          "description": "Default the panel to open",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 4
            },
            "end": {
              "line": 78,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hide-export-button",
          "description": "Hide the export button, showing it is good for developers\nor those doing QA testing of new elements.",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 4
            },
            "end": {
              "line": 86,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hide-panel-ops",
          "description": "Hide the panel operations (save and cancel),",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "hide-preferences-button",
          "description": "Hide preferences button",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 4
            },
            "end": {
              "line": 100,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "align",
          "description": "Direction to align the hax edit panel",
          "sourceRange": {
            "start": {
              "line": 104,
              "column": 4
            },
            "end": {
              "line": 107,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "allowed-tags",
          "description": "allowed Tags, usually as dictated by the input filtering\nlayer of the backend system that HAX is riding on.\nWhile not fullproof, this at least will enforce front-end\nfiltering to match what actually is going to be allowed\nto be saved in the first place.",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 4
            },
            "end": {
              "line": 117,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Array | null | undefined"
        },
        {
          "name": "end-point",
          "description": "Location to save content to.",
          "sourceRange": {
            "start": {
              "line": 121,
              "column": 4
            },
            "end": {
              "line": 123,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "method",
          "description": "Method to save content.",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 4
            },
            "end": {
              "line": 130,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "update-page-data",
          "description": "Page data, body of text as a string.",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 4
            },
            "end": {
              "line": 136,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "app-store-connection",
          "description": "Connection object for talking to an app store.",
          "sourceRange": {
            "start": {
              "line": 140,
              "column": 4
            },
            "end": {
              "line": 142,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "body-offset-left",
          "description": "Offset from the left of the body field",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 4
            },
            "end": {
              "line": 149,
              "column": 5
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "edit-mode",
          "description": "State of the panel",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 4
            },
            "end": {
              "line": 156,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "sync-body",
          "description": "syncBody",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 4
            },
            "end": {
              "line": 163,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "body-value",
          "description": "Only available if syncBody is true; this allows data binding to the value being worked on in hax-body tag",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 4
            },
            "end": {
              "line": 170,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "hide-message",
          "description": "Flag to hide the toast.",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 4
            },
            "end": {
              "line": 177,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "redirect-location",
          "description": "Optional URL to redirect to once we save.",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 4
            },
            "end": {
              "line": 183,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "redirect-on-save",
          "description": "Option to redirect once we save successfully",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 4
            },
            "end": {
              "line": 190,
              "column": 5
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "active-hax-body",
          "description": "Reference to activeBody.",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 4
            },
            "end": {
              "line": 197,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "cms-hax"
    }
  ]
}
