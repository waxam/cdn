{"version":3,"file":"lrnsys-layout.umd.js","sources":["lib/lrnsys-button-inner.js","lib/lrnsys-collapselist-item.js","lib/lrnsys-collapselist.js","lib/lrnsys-dialog-toolbar-button.js","lib/lrnsys-dialog-toolbar.js","lib/lrnsys-dialog.js","lib/lrnsys-drawer.js"],"sourcesContent":["import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@lrnwebcomponents/paper-avatar/paper-avatar.js\";\nimport \"@lrnwebcomponents/lrn-icons/lrn-icons.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\n/**\n`lrnsys-button-inner`\n\n\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n      }\n      :host > div > * {\n        vertical-align: middle;\n      }\n      .text-label {\n        margin-left: 8px;\n      }\n      .text-label-only {\n        margin-left: 0;\n      }\n    </style>\n    <div>\n      <template is=\"dom-if\" if=\"[[avatar]]\">\n        <paper-avatar src\\$=\"[[avatar]]\"></paper-avatar>\n      </template>\n      <template is=\"dom-if\" if=\"[[icon]]\">\n        <lrn-icon icon=\"[[icon]]\"></lrn-icon>\n      </template>\n      <template is=\"dom-if\" if=\"[[text]]\">\n        <span class\\$=\"[[_getTextLabelClass()]]\">[[text]]</span>\n      </template>\n    </div>\n    <div><slot name=\"button\"></slot><slot></slot></div>\n  `,\n\n  is: \"lrnsys-button-inner\",\n\n  properties: {\n    /**\n     * Icon to present for clicking.\n     */\n    icon: {\n      type: String\n    },\n    /**\n     * Icon to present for clicking.\n     */\n    avatar: {\n      type: String\n    },\n    /**\n     * Text to present for clicking.\n     */\n    text: {\n      type: String\n    }\n  },\n\n  /**\n   * Find out if the text does not have an avatar or an icon to the left,\n   * and add a class to remove the left margin.\n   */\n  _getTextLabelClass: function() {\n    if (!this.avatar && !this.icon) {\n      return \"text-label-only\";\n    }\n    return \"text-label\";\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/iron-collapse/iron-collapse.js\";\n/**\n`lrnsys-collapselist-item`\n\n\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n        color: var(--lrnsys-collapselist-text-color, #000);\n      }\n      paper-button {\n        height: 48px;\n        padding: 0;\n        margin: 0;\n        min-width: 0.16px;\n        -webkit-justify-content: flex-start;\n        justify-content: flex-start;\n        align-items: center;\n        width: 100%;\n        text-transform: unset;\n        border-radius: 0;\n        background-color: var(--lrnsys-collapselist-item-color, #fff);\n      }\n      paper-button span {\n        pointer-events: none;\n      }\n      .collapse-label {\n        padding: 12px 8px 4px 8px;\n        width: 100%;\n        height: 32px;\n      }\n      :host([opened]) #collapse {\n        border-top: 1px solid var(--lrnsys-collapselist-item-border, #bbb);\n        background-color: var(--lrnsys-collapselist-item-active-color, #eee);\n      }\n      :host([opened]) .collapse-label {\n        font-weight: bold;\n        background-color: var(--lrnsys-collapselist-item-active-color, #eee);\n      }\n      .collapse-content {\n        padding: 16px;\n      }\n    </style>\n    <paper-button\n      on-tap=\"collapseToggle\"\n      id=\"collapse-trigger\"\n      aria-controls=\"collapse\"\n    >\n      <span class=\"collapse-label\"> <slot name=\"label\"></slot> </span>\n    </paper-button>\n    <iron-collapse id=\"collapse\" opened=\"{{opened}}\">\n      <div class=\"collapse-content\"><slot name=\"content\"></slot></div>\n    </iron-collapse>\n  `,\n\n  is: \"lrnsys-collapselist-item\",\n\n  properties: {\n    /**\n     * Whether or not this is default open on render.\n     */\n    opened: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true,\n      notify: true\n    }\n  },\n\n  /**\n   * Toggling collapse on an iron element.\n   */\n  collapseToggle: function(e) {\n    this.$.collapse.toggle();\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/app-layout/app-layout.js\";\nimport \"@lrnwebcomponents/paper-avatar/paper-avatar.js\";\nimport \"@lrnwebcomponents/lrn-icons/lrn-icons.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/iron-collapse/iron-collapse.js\";\n/**\n`lrnsys-collapselist`\n\n\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <style is=\"custom-style\" include=\"simple-colors\">\n      :host {\n        display: block;\n        background-color: var(--simple-colors-background1);\n        --lrnsys-collapselist-text-color: var(--simple-colors-foreground1);\n        --lrnsys-collapselist-item-color: var(--simple-colors-background1);\n        --lrnsys-collapselist-item-active-color: var(\n          --simple-colors-background2\n        );\n        --lrnsys-collapselist-item-border: var(--simple-colors-background5);\n      }\n      ul {\n        list-style-type: none;\n        margin: 0;\n        padding: 0;\n      }\n      ul li {\n        width: 100%;\n        border: 1px solid var(--lrnsys-collapselist-item-border);\n        margin-bottom: -1px;\n      }\n      ul li paper-button {\n        height: 32px;\n        padding: 8px;\n        margin: 0;\n        min-width: 0.16px;\n        -webkit-justify-content: flex-start;\n        justify-content: flex-start;\n        align-items: center;\n        width: 100%;\n        text-transform: unset;\n        border-radius: 0;\n      }\n      ul li paper-button iron-icon,\n      ul li paper-button span {\n        pointer-events: none;\n      }\n      iron-icon {\n        display: inline-block;\n      }\n      .collapse-label {\n        margin-left: 8px;\n      }\n      .collapse-content {\n        padding: 16px;\n      }\n    </style>\n    <ul>\n      <template is=\"dom-repeat\" items=\"{{items}}\" as=\"row\">\n        <li>\n          <lrnsys-collapselist-item>\n            <span slot=\"label\">\n              <iron-icon icon=\"[[row.icon]]\"></iron-icon>\n              <span class=\"collapse-label\">[[row.label]]</span>\n            </span>\n            <span slot=\"content\"> [[row.content]] </span>\n          </lrnsys-collapselist-item>\n        </li>\n      </template>\n    </ul>\n  `,\n\n  is: \"lrnsys-collapselist\",\n\n  properties: {\n    /**\n     * Array of items to present with label and content for the list of collapses.\n     */\n    items: {\n      type: Array\n    }\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/iron-icon/iron-icon.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        display: inline-block;\n      }\n      iron-icon {\n        display: inline-block;\n        height: 16px;\n        width: 16px;\n      }\n    </style>\n    <paper-button raisedon-tap=\"_onTap\" id$=\"[[id]]\" aria-label$=\"[[title]]\">\n      <iron-icon icon=\"[[icon]]\"></iron-icon> [[title]]\n    </paper-button>\n    <paper-tooltip for$=\"[[id]]\" animation-delay=\"200\">[[title]]</paper-tooltip>\n  `,\n\n  is: \"lrnsys-dialog-toolbar-button\",\n\n  properties: {\n    /**\n     * The title of the button.\n     */\n    title: {\n      type: String\n    },\n    /**\n     * The button icon.\n     */\n    icon: {\n      type: String\n    },\n    /**\n     * The button ID.\n     */\n    id: {\n      type: String\n    }\n  },\n\n  /**\n   * Ready lifecycle\n   */\n  ready: function() {\n    this.fire(\"button-initialized\", { id: this.id });\n  },\n\n  /**\n   * Button has been tapped.\n   */\n  _onTap: function(e) {\n    var normalizedEvent = dom(e);\n    var localTarget = normalizedEvent.localTarget;\n    var id = localTarget.getAttribute(\"id\");\n    this.fire(\"dialog-toolbar-button-tapped\", { id: id });\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/app-layout/app-toolbar/app-toolbar.js\";\nimport \"./lrnsys-dialog-toolbar-button.js\";\nPolymer({\n  _template: html`\n    <style is=\"custom-style\">\n      :host {\n        display: block;\n        --app-toolbar-primary-height: 40px;\n        --app-toolbar-secondary-height: 50px;\n        --app-toolbar-secondary-color: var(\n          --lrnsys-dialog-secondary-background-color\n        );\n        --app-toolbar-primary-color: var(\n          --lrnsys-dialog-toolbar-background-color\n        );\n        position: relative;\n        margin: 0;\n        padding: 0;\n      }\n      app-toolbar#primary {\n        color: var(--lrnsys-dialog-color, #000);\n        background-color: var(--app-toolbar-primary-color);\n        z-index: 10;\n        position: relative;\n        height: var(--app-toolbar-primary-height);\n      }\n      app-toolbar#secondary {\n        color: var(--lrnsys-dialog-color, #000);\n        background-color: var(--app-toolbar-secondary-color);\n        z-index: 5;\n        position: absolute;\n        width: 100%;\n        transform: translateY(-100%);\n        transition: all 0.3s ease-in;\n        height: var(--app-toolbar-primary-height);\n        display: flex;\n        justify-content: center;\n        padding: 0;\n      }\n      :host([secondary-visible]) #secondary {\n        transform: translateY(0);\n        height: var(--app-toolbar-secondary-height);\n      }\n      .secondary-buttons {\n        display: flex;\n      }\n      .secondary-buttons ::slotted(*) {\n        display: inline-flex;\n      }\n    </style>\n    <app-toolbar id=\"primary\">\n      <slot name=\"primary\"></slot>\n      <div main-title=\"\"></div>\n      <lrnsys-dialog-toolbar-button\n        icon=\"close\"\n        id=\"close\"\n        title=\"close dialog\"\n      ></lrnsys-dialog-toolbar-button>\n    </app-toolbar>\n    <app-toolbar id=\"secondary\" hidden\\$=\"[[!_secondaryHasChildren]]\">\n      <div class=\"secondary-buttons\">\n        <slot name=\"secondary\" id=\"secondary-slot\"></slot>\n      </div>\n    </app-toolbar>\n  `,\n\n  is: \"lrnsys-dialog-toolbar\",\n\n  listeners: {\n    \"dialog-toolbar-button-tapped\": \"_tapHandler\"\n  },\n\n  properties: {\n    /**\n     * Internal state of secondary toolbar\n     */\n    _secondaryHasChildren: {\n      type: Boolean,\n      value: false\n    }\n  },\n\n  /**\n   * Button tapped\n   */\n  _tapHandler: function(e) {\n    this.fire(\"button-clicked\", e.detail);\n  },\n\n  /**\n   * Ready.\n   */\n  ready: function() {\n    // listen to see if buttons have been initialized in the secondary toolbar\n    this.$.secondary.addEventListener(\"button-initialized\", e => {\n      this._secondaryHasChildren = true;\n    });\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport \"@lrnwebcomponents/paper-avatar/paper-avatar.js\";\nimport \"@lrnwebcomponents/lrn-icons/lrn-icons.js\";\nimport \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport \"@lrnwebcomponents/simple-modal/simple-modal.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/neon-animation/neon-animation.js\";\nimport \"@polymer/neon-animation/neon-animations.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"./lrnsys-button-inner.js\";\n/**\n`lrnsys-dialog`\n\n@demo demo/index.html\n*/\nPolymer({\n  _template: html`\n    <custom-style>\n      <style is=\"custom-style\" include=\"simple-colors\">\n        :host {\n          display: inline-block;\n          --lrnsys-dialog-color: var(--simple-colors-foreground1, #000);\n          --lrnsys-dialog-background-color: var(--simple-colors-background1);\n          --lrnsys-dialog-toolbar-background-color: var(\n            --simple-colors-background3\n          );\n          --lrnsys-dialog-secondary-background-color: rgba(255, 255, 255, 0.7);\n        }\n        :host([dark]) {\n          --lrnsys-dialog-toolbar-background-color: var(\n            --simple-colors-background1\n          );\n          --lrnsys-dialog-background-color: var(--simple-colors-background3);\n          --lrnsys-dialog-secondary-background-color: rgba(0, 0, 0, 0.7);\n        }\n        #dialogtrigger {\n          display: inline-block;\n        }\n      </style>\n    </custom-style>\n    <paper-button\n      class$=\"[[class]]\"\n      id=\"dialogtrigger\"\n      on-tap=\"openDialog\"\n      raised=\"[[raised]]\"\n      disabled$=\"[[disabled]]\"\n      title=\"[[alt]]\"\n      aria-label$=\"[[alt]]\"\n    >\n      <lrnsys-button-inner\n        avatar$=\"[[avatar]]\"\n        icon$=\"[[icon]]\"\n        text$=\"[[text]]\"\n      >\n        <slot name=\"button\" slot=\"button\"></slot>\n      </lrnsys-button-inner>\n    </paper-button>\n    <paper-tooltip for=\"dialogtrigger\" animation-delay=\"0\" hidden$=\"[[!alt]]\"\n      >[[alt]]</paper-tooltip\n    >\n  `,\n\n  is: \"lrnsys-dialog\",\n\n  listeners: {\n    mousedown: \"tapEventOn\",\n    mouseover: \"tapEventOn\",\n    mouseout: \"tapEventOff\"\n  },\n\n  properties: {\n    /**\n     * Icon to present for clicking.\n     */\n    icon: {\n      type: String\n    },\n    /**\n     * If the button should be visually lifted off the UI.\n     */\n    raised: {\n      type: Boolean\n    },\n    /**\n     * Icon to present for clicking.\n     */\n    avatar: {\n      type: String\n    },\n    /**\n     * Text to present for clicking.\n     */\n    text: {\n      type: String\n    },\n    /**\n     * Alt / hover text for this link\n     */\n    alt: {\n      type: String,\n      reflectToAttribute: true\n    },\n    /**\n     * Header for the dialog\n     */\n    header: {\n      type: String\n    },\n    /**\n     * Disabled state.\n     */\n    disabled: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Classes to add / subtract based on the item being hovered\n     */\n    hoverClass: {\n      type: String\n    },\n    /**\n     * Default heading classes.\n     */\n    headingClass: {\n      type: String,\n      value: \"white-text black\"\n    },\n    /**\n     * Support for dynamic loading of iron-image elements that are in the content slot.\n     */\n    dynamicImages: {\n      type: Boolean,\n      value: false\n    },\n    /**\n     * Tracks if focus state is applied\n     */\n    focusState: {\n      type: Boolean,\n      value: false\n    }\n  },\n\n  /**\n   * Handle a focus/tap event and add the hoverclasses\n   * to the classList array for paper-button.\n   */\n  tapEventOn: function(e) {\n    const root = this;\n    if (typeof root.hoverClass !== typeof undefined) {\n      var classes = root.hoverClass.split(\" \");\n      classes.forEach(function(item, index) {\n        if (item != \"\") {\n          root.$.dialogtrigger.classList.add(item);\n        }\n      });\n    }\n  },\n\n  /**\n   * Handle a mouse out event and remove the hoverclasses\n   * from the classList array for paper-button.\n   */\n  tapEventOff: function(e) {\n    const root = this;\n    if (typeof root.hoverClass !== typeof undefined) {\n      var classes = root.hoverClass.split(\" \");\n      classes.forEach(function(item, index) {\n        if (item != \"\") {\n          root.$.dialogtrigger.classList.remove(item);\n        }\n      });\n    }\n  },\n\n  /**\n   * Toggle the drawer to open / close.\n   */\n  openDialog: function() {\n    // assemble everything in the slot\n    let nodes = dom(this).getEffectiveChildNodes();\n    let h = document.createElement(\"span\");\n    let c = document.createElement(\"span\");\n    let node = {};\n    for (var i in nodes) {\n      if (typeof nodes[i].tagName !== typeof undefined) {\n        switch (nodes[i].getAttribute(\"slot\")) {\n          case \"toolbar-primary\":\n          case \"toolbar-secondary\":\n          case \"toolbar\":\n          case \"header\":\n            node = nodes[i].cloneNode(true);\n            h.appendChild(node);\n            break;\n          case \"button\":\n            // do nothing\n            break;\n          default:\n            node = nodes[i].cloneNode(true);\n            if (this.dynamicImages && node.tagName === \"IRON-IMAGE\") {\n              node.preventLoad = false;\n              node.removeAttribute(\"prevent-load\");\n            }\n            c.appendChild(node);\n            break;\n        }\n      }\n    }\n    const evt = new CustomEvent(\"simple-modal-show\", {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        title: this.header,\n        elements: {\n          header: h,\n          content: c\n        },\n        invokedBy: this.$.dialogtrigger\n      }\n    });\n    this.dispatchEvent(evt);\n  },\n\n  /**\n   * Handle toggle for mouse class and manage classList array for paper-button.\n   */\n  focusToggle: function(e) {\n    const root = this;\n    root.fire(\"focus-changed\", { focus: root.focusState });\n    // see if it has hover classes\n    if (typeof root.hoverClass !== typeof undefined) {\n      // break class into array\n      var classes = root.hoverClass.split(\" \");\n      // run through each and add or remove classes\n      classes.forEach(function(item, index) {\n        if (item != \"\") {\n          if (root.focusState) {\n            root.$.dialogtrigger.classList.add(item);\n          } else {\n            root.$.dialogtrigger.classList.remove(item);\n          }\n        }\n      });\n    }\n    root.focusState = !root.focusState;\n  },\n\n  /**\n   * Ready lifecycle\n   */\n  ready: function() {\n    this.__modal = window.simpleModal.requestAvailability();\n  },\n\n  /**\n   * Attached lifecycle\n   */\n  attached: function() {\n    this.$.dialogtrigger.addEventListener(\n      \"focused-changed\",\n      this.focusToggle.bind(this)\n    );\n  },\n  /**\n   * detached lifecycle\n   */\n  detached: function() {\n    this.$.dialogtrigger.removeEventListener(\n      \"focused-changed\",\n      this.focusToggle.bind(this)\n    );\n  }\n});\n","import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport { dom } from \"@polymer/polymer/lib/legacy/polymer.dom.js\";\nimport \"@lrnwebcomponents/simple-colors/simple-colors.js\";\nimport \"@lrnwebcomponents/simple-drawer/simple-drawer.js\";\nimport \"@lrnwebcomponents/paper-avatar/paper-avatar.js\";\nimport \"@polymer/app-layout/app-layout.js\";\nimport \"@polymer/paper-tooltip/paper-tooltip.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/iron-icons/iron-icons.js\";\nimport \"./lrnsys-button-inner.js\";\n/**\n * `lrnsys-drawer`\n *\n * @demo demo/index.html\n */\nPolymer({\n  _template: html`\n    <style is=\"custom-style\" include=\"simple-colors\">\n      :host {\n        display: block;\n        --lrnsys-drawer-color: var(--simple-colors-foreground1);\n        --lrnsys-drawer-background-color: var(--simple-colors-background1);\n      }\n      paper-button {\n        display: inline-block;\n      }\n    </style>\n    <paper-button\n      class\\$=\"[[class]]\"\n      id=\"flyouttrigger\"\n      on-tap=\"toggleDrawer\"\n      raised=\"[[raised]]\"\n      disabled\\$=\"[[disabled]]\"\n      title=\"[[alt]]\"\n    >\n      <lrnsys-button-inner avatar=\"[[avatar]]\" icon=\"[[icon]]\" text=\"[[text]]\">\n        <slot name=\"button\"></slot>\n      </lrnsys-button-inner>\n    </paper-button>\n    <paper-tooltip for=\"flyouttrigger\" animation-delay=\"0\"\n      >[[alt]]</paper-tooltip\n    >\n  `,\n\n  is: \"lrnsys-drawer\",\n\n  listeners: {\n    mousedown: \"tapEventOn\",\n    mouseover: \"tapEventOn\",\n    mouseout: \"tapEventOff\"\n  },\n\n  properties: {\n    /**\n     * State for if it is currently open.\n     */\n    opened: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * If the button should be visually lifted off the UI.\n     */\n    raised: {\n      type: Boolean,\n      reflectToAttribute: true\n    },\n    /**\n     * Icon to present for clicking.\n     */\n    icon: {\n      type: String\n    },\n    /**\n     * Icon to present for clicking.\n     */\n    avatar: {\n      type: String\n    },\n    /**\n     * Text to present for clicking.\n     */\n    text: {\n      type: String\n    },\n    /**\n     * Side of the screen to align the flyout (right or left)\n     */\n    align: {\n      type: String,\n      value: \"left\"\n    },\n    /**\n     * Alt / hover text for this link\n     */\n    alt: {\n      type: String,\n      reflectToAttribute: true\n    },\n    /**\n     * Header for the drawer\n     */\n    header: {\n      type: String\n    },\n    /**\n     * Disabled state.\n     */\n    disabled: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * Classes to add / subtract based on the item being hovered\n     */\n    hoverClass: {\n      type: String\n    },\n    /**\n     * Heading classes to apply downstream.\n     */\n    headingClass: {\n      type: String,\n      value: \"white-text black\"\n    },\n    /**\n     * Tracks if focus state is applied\n     */\n    focusState: {\n      type: Boolean,\n      value: false\n    }\n  },\n\n  /**\n   * Ready lifecycle\n   */\n  ready: function() {\n    this.__modal = window.simpleDrawer.requestAvailability();\n  },\n\n  /**\n   * Attached lifecycle\n   */\n  attached: function() {\n    this.$.flyouttrigger.addEventListener(\n      \"focused-changed\",\n      this.focusToggle.bind(this)\n    );\n  },\n  /**\n   * detached lifecycle\n   */\n  detached: function() {\n    this.$.flyouttrigger.removeEventListener(\n      \"focused-changed\",\n      this.focusToggle.bind(this)\n    );\n  },\n\n  /**\n   * Handle a mouse on event and add the hoverclasses\n   * to the classList array for paper-button.\n   */\n  tapEventOn: function(e) {\n    if (typeof this.hoverClass !== typeof undefined) {\n      var classes = this.hoverClass.split(\" \");\n      classes.forEach((item, index) => {\n        if (item != \"\") {\n          this.$.flyouttrigger.classList.add(item);\n        }\n      });\n    }\n  },\n\n  /**\n   * Handle a mouse out event and remove the hoverclasses\n   * from the classList array for paper-button.\n   */\n  tapEventOff: function(e) {\n    if (typeof this.hoverClass !== typeof undefined) {\n      var classes = this.hoverClass.split(\" \");\n      classes.forEach((item, index) => {\n        if (item != \"\") {\n          this.$.flyouttrigger.classList.remove(item);\n        }\n      });\n    }\n  },\n\n  /**\n   * Toggle the drawer to open / close.\n   */\n  toggleDrawer: function() {\n    // assemble everything in the slot\n    let nodes = dom(this).getEffectiveChildNodes();\n    let h = document.createElement(\"span\");\n    let c = document.createElement(\"span\");\n    for (var i in nodes) {\n      if (typeof nodes[i].tagName !== typeof undefined) {\n        switch (nodes[i].getAttribute(\"slot\")) {\n          case \"header\":\n            h.appendChild(nodes[i].cloneNode(true));\n            break;\n          default:\n            c.appendChild(nodes[i].cloneNode(true));\n            break;\n        }\n      }\n    }\n    const evt = new CustomEvent(\"simple-drawer-show\", {\n      bubbles: true,\n      cancelable: true,\n      detail: {\n        title: this.header,\n        elements: { content: c, header: h },\n        invokedBy: this.$.flyouttrigger,\n        align: this.align,\n        size: \"30%\",\n        clone: false\n      }\n    });\n    this.dispatchEvent(evt);\n  },\n\n  /**\n   * Handle toggle for mouse class and manage classList array for paper-button.\n   */\n  focusToggle: function(e) {\n    this.fire(\"focus-changed\", { focus: this.focusState });\n    // see if it has hover classes\n    if (typeof this.hoverClass !== typeof undefined) {\n      // break class into array\n      var classes = this.hoverClass.split(\" \");\n      // run through each and add or remove classes\n      classes.forEach((item, index) => {\n        if (item != \"\") {\n          if (this.focusState) {\n            this.$.flyouttrigger.classList.add(item);\n          } else {\n            this.$.flyouttrigger.classList.remove(item);\n          }\n        }\n      });\n    }\n    this.focusState = !this.focusState;\n  },\n\n  /**\n   * Find out if the text does not have an avatar or an icon to the left,\n   * and add a class to remove the left margin.\n   */\n  _getTextLabelClass: function() {\n    if (!this.avatar && !this.icon) {\n      return \"text-label-only\";\n    }\n    return \"text-label\";\n  }\n});\n"],"names":["_template","html","is","properties","icon","type","String","avatar","text","_getTextLabelClass","this","opened","Boolean","value","reflectToAttribute","notify","collapseToggle","e","$","collapse","toggle","items","Array","title","id","ready","fire","_onTap","dom","localTarget","getAttribute","listeners","_secondaryHasChildren","_tapHandler","detail","secondary","addEventListener","_this","mousedown","mouseover","mouseout","raised","alt","header","disabled","hoverClass","headingClass","dynamicImages","focusState","tapEventOn","root","_typeof","split","forEach","item","index","dialogtrigger","classList","add","tapEventOff","remove","openDialog","nodes","getEffectiveChildNodes","h","document","createElement","c","node","i","tagName","cloneNode","appendChild","preventLoad","removeAttribute","evt","CustomEvent","bubbles","cancelable","elements","content","invokedBy","dispatchEvent","focusToggle","focus","__modal","window","simpleModal","requestAvailability","attached","bind","detached","removeEventListener","align","simpleDrawer","flyouttrigger","_this2","toggleDrawer","size","clone","_this3"],"mappings":"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"}