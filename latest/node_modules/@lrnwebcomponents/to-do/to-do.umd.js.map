{"version":3,"file":"to-do.umd.js","sources":["to-do.umd.js"],"sourcesContent":["import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/paper-checkbox/paper-checkbox.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/paper-card/paper-card.js\";\nimport \"@polymer/paper-input/paper-input.js\";\nimport \"@lrnwebcomponents/materializecss-styles/materializecss-styles.js\";\nimport \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\nimport \"@lrnwebcomponents/schema-behaviors/schema-behaviors.js\";\n\n/**\n`to-do`\nA LRN element\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n -\n -\n\n*/\nlet ToDo = Polymer({\n  _template: html`\n    <style>\n      :host {\n        display: block;\n      }\n      :host([hide-form]) ul {\n        border: 1px solid black;\n      }\n      paper-card {\n        width: 100%;\n        padding: 8px;\n      }\n      .task-list-wrapper {\n        width: 100%;\n        height: 100%;\n        border: 2px solid black;\n        list-style: none;\n        padding: 0;\n      }\n      .task-list-wrapper li {\n        padding: 8px;\n      }\n      .task-list-wrapper li:nth-child(even) {\n        background-color: #f5f5f5;\n      }\n      .task-list-wrapper li:nth-child(odd) {\n        background-color: #e5e5e5;\n      }\n      .task-list-wrapper li:hover {\n        background-color: #ffffff;\n      }\n      .task-list-wrapper li:active {\n        background-color: #ffffff;\n      }\n      .task-list-wrapper li:focus {\n        background-color: #ffffff;\n      }\n      h3 {\n        margin: 4px;\n        padding: 0;\n        font-size: 20px;\n      }\n    </style>\n    <paper-card heading=\"[[name]]\" elevation=\"2\">\n      <div class=\"card-content\">\n        <div hidden\\$=\"[[hideForm]]\">\n          <paper-input label=\"Task to accomplish\" id=\"itemtext\"></paper-input>\n          <paper-button raised=\"\" id=\"itembutton\" on-tap=\"_addItemToList\"\n            >Add item</paper-button\n          >\n        </div>\n        <ul class=\"task-list-wrapper\">\n          <template is=\"dom-repeat\" items=\"[[items]]\" as=\"item\">\n            <li data-item-id\\$=\"[[item.id]]\">\n              <paper-checkbox\n                checked=\"{{item.value}}\"\n                disabled=\"[[item.disabled]]\"\n                >[[item.label]]</paper-checkbox\n              >\n            </li>\n          </template>\n        </ul>\n      </div>\n    </paper-card>\n  `,\n\n  is: \"to-do\",\n\n  behaviors: [HAXBehaviors.PropertiesBehaviors],\n\n  observers: [\"_valueChanged(items.*)\"],\n\n  properties: {\n    /**\n     * Allow for hiding the input form for new data.\n     */\n    hideForm: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * Whether or not the list of items is disabled\n     * checkboxes.\n     */\n    disabledList: {\n      type: Boolean,\n      value: false,\n      reflectToAttribute: true\n    },\n    /**\n     * Name of this to do list\n     */\n    name: {\n      type: String,\n      value: \"To do list\"\n    },\n    /**\n     * Items\n     */\n    items: {\n      type: Array,\n      value: [],\n      notify: true\n    }\n  },\n\n  /**\n   * Ensure the values change.\n   */\n  _valueChanged: function(e) {\n    for (var i in e.base) {\n      for (var j in e.base[i]) {\n        this.notifyPath(\"items.\" + i + \".\" + j);\n      }\n    }\n  },\n\n  /**\n   * Add a new item to the list.\n   */\n  _addItemToList: function(e) {\n    if (\n      this.$.itemtext.value != \"\" &&\n      typeof this.$.itemtext.value !== typeof undefined\n    ) {\n      this.push(\"items\", {\n        label: this.$.itemtext.value,\n        value: false,\n        disabled: this.disabledList,\n        id: \"item-id-\" + this.items.length\n      });\n      this.$.itemtext.value = \"\";\n    }\n  },\n\n  /**\n   * Attached to the DOM, now fire.\n   */\n  attached: function() {\n    // Establish hax property binding\n    let props = {\n      canScale: true,\n      canPosition: true,\n      canEditSource: false,\n      gizmo: {\n        title: \"To do list\",\n        description: \"A list of things to do so people can keep calm.\",\n        icon: \"icons:list\",\n        color: \"grey\",\n        groups: [\"List\"],\n        handles: [],\n        meta: {\n          author: \"LRNWebComponents\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"name\",\n            title: \"Name\",\n            description: \"The name of this to do list\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          }\n        ],\n        configure: [\n          {\n            property: \"name\",\n            title: \"Name\",\n            description: \"The name of this to do list\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          },\n          {\n            property: \"items\",\n            title: \"List of items\",\n            description: \"List of items to display in our list.\",\n            inputMethod: \"array\",\n            properties: [\n              {\n                property: \"label\",\n                title: \"Task\",\n                description: \"Name of the task\",\n                inputMethod: \"textfield\",\n                required: true\n              },\n              {\n                property: \"value\",\n                title: \"Done\",\n                description: \"Completion state\",\n                inputMethod: \"boolean\"\n              }\n            ]\n          }\n        ],\n        advanced: []\n      }\n    };\n    this.setHaxProperties(props);\n  }\n});\nexport { ToDo };\n"],"names":["ToDo","Polymer","_template","html","is","behaviors","HAXBehaviors","PropertiesBehaviors","observers","properties","hideForm","type","Boolean","value","reflectToAttribute","disabledList","name","String","items","Array","notify","_valueChanged","e","i","base","j","notifyPath","_addItemToList","this","$","itemtext","_typeof","push","label","disabled","id","length","attached","setHaxProperties","canScale","canPosition","canEditSource","gizmo","title","description","icon","color","groups","handles","meta","author","settings","quick","property","inputMethod","configure","required","advanced"],"mappings":"qzJAoBIA,EAAOC,UAAQ,CACjBC,UAAWC,YAkEXC,GAAI,QAEJC,UAAW,CAACC,aAAaC,qBAEzBC,UAAW,CAAC,0BAEZC,WAAY,CAIVC,SAAU,CACRC,KAAMC,QACNC,OAAO,EACPC,oBAAoB,GAMtBC,aAAc,CACZJ,KAAMC,QACNC,OAAO,EACPC,oBAAoB,GAKtBE,KAAM,CACJL,KAAMM,OACNJ,MAAO,cAKTK,MAAO,CACLP,KAAMQ,MACNN,MAAO,GACPO,QAAQ,IAOZC,cAAe,SAASC,OACjB,IAAIC,KAAKD,EAAEE,SACT,IAAIC,KAAKH,EAAEE,KAAKD,QACdG,WAAW,SAAWH,EAAI,IAAME,IAQ3CE,eAAgB,SAASL,GAEI,IAAzBM,KAAKC,EAAEC,SAASjB,qBAChBkB,EAAOH,KAAKC,EAAEC,SAASjB,cAElBmB,KAAK,QAAS,CACjBC,MAAOL,KAAKC,EAAEC,SAASjB,MACvBA,OAAO,EACPqB,SAAUN,KAAKb,aACfoB,GAAI,WAAaP,KAAKV,MAAMkB,cAEzBP,EAAEC,SAASjB,MAAQ,KAO5BwB,SAAU,gBA4DHC,iBA1DO,CACVC,UAAU,EACVC,aAAa,EACbC,eAAe,EACfC,MAAO,CACLC,MAAO,aACPC,YAAa,kDACbC,KAAM,aACNC,MAAO,OACPC,OAAQ,CAAC,QACTC,QAAS,GACTC,KAAM,CACJC,OAAQ,qBAGZC,SAAU,CACRC,MAAO,CACL,CACEC,SAAU,OACVV,MAAO,OACPC,YAAa,8BACbU,YAAa,YACbT,KAAM,iBAGVU,UAAW,CACT,CACEF,SAAU,OACVV,MAAO,OACPC,YAAa,8BACbU,YAAa,YACbT,KAAM,gBAER,CACEQ,SAAU,QACVV,MAAO,gBACPC,YAAa,wCACbU,YAAa,QACb7C,WAAY,CACV,CACE4C,SAAU,QACVV,MAAO,OACPC,YAAa,mBACbU,YAAa,YACbE,UAAU,GAEZ,CACEH,SAAU,QACVV,MAAO,OACPC,YAAa,mBACbU,YAAa,cAKrBG,SAAU"}