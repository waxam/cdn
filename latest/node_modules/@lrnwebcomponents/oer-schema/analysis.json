{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "",
      "summary": "",
      "path": "oer-schema.js",
      "properties": [
        {
          "name": "schemaResourceID",
          "type": "string | null | undefined",
          "description": "Unique Resource ID, generated when schemaMap processes.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@lrnwebcomponents/schema-behaviors/schema-behaviors.js",
            "start": {
              "line": 26,
              "column": 4
            },
            "end": {
              "line": 29,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\"",
          "inheritedFrom": "SchemaBehaviors.Schema"
        },
        {
          "name": "schemaMap",
          "type": "Object | null | undefined",
          "description": "Schema Map for this element.",
          "privacy": "public",
          "sourceRange": {
            "file": "../@lrnwebcomponents/schema-behaviors/schema-behaviors.js",
            "start": {
              "line": 33,
              "column": 4
            },
            "end": {
              "line": 46,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "observer": "\"_schemaMapChanged\"",
              "attributeType": "Object"
            }
          },
          "defaultValue": "{\"prefix\":{\"oer\":\"http://oerschema.org/\",\"schema\":\"http://schema.org/\",\"dc\":\"http://purl.org/dc/terms/\",\"foaf\":\"http://xmlns.com/foaf/0.1/\",\"cc\":\"http://creativecommons.org/ns#\",\"bib\":\"http://bib.schema.org\"}}",
          "inheritedFrom": "SchemaBehaviors.Schema"
        },
        {
          "name": "text",
          "type": "string | null | undefined",
          "description": "Text to wire into the middle of the element.\nThis is easier to manage then slotted data though\nthis supports both methods.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 30,
              "column": 4
            },
            "end": {
              "line": 33,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"\""
        },
        {
          "name": "oerProperty",
          "type": "string | null | undefined",
          "description": "Property value for this oer resource",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 37,
              "column": 4
            },
            "end": {
              "line": 40,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"name\""
        },
        {
          "name": "typeof",
          "type": "string | null | undefined",
          "description": "Property value for this oer resource",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 4
            },
            "end": {
              "line": 47,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          },
          "defaultValue": "\"Resource\""
        },
        {
          "name": "relatedResource",
          "type": "string | null | undefined",
          "description": "Related Resource ID",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 4
            },
            "end": {
              "line": 53,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "generateResourceID",
          "description": "Generate a uinque ID",
          "privacy": "public",
          "sourceRange": {
            "file": "../@lrnwebcomponents/schema-behaviors/schema-behaviors.js",
            "start": {
              "line": 51,
              "column": 2
            },
            "end": {
              "line": 68,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "SchemaBehaviors.Schema"
        },
        {
          "name": "_schemaMapChanged",
          "description": "Notice the schema map has changed, reprocess attributes.",
          "privacy": "protected",
          "sourceRange": {
            "file": "../@lrnwebcomponents/schema-behaviors/schema-behaviors.js",
            "start": {
              "line": 72,
              "column": 2
            },
            "end": {
              "line": 94,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "newValue"
            },
            {
              "name": "oldValue"
            }
          ],
          "return": {
            "type": "void"
          },
          "inheritedFrom": "SchemaBehaviors.Schema"
        },
        {
          "name": "attached",
          "description": "Attached to the DOM, now fire.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 2
            },
            "end": {
              "line": 133,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "latestSchema",
          "description": "Latest copy of the official schema.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 2
            },
            "end": {
              "line": 879,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "types",
          "description": "Provide types from the schema",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 884,
              "column": 2
            },
            "end": {
              "line": 899,
              "column": 3
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 9,
          "column": 24
        },
        "end": {
          "line": 900,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "OerSchema",
      "attributes": [
        {
          "name": "schema-resource-i-d",
          "description": "Unique Resource ID, generated when schemaMap processes.",
          "sourceRange": {
            "file": "../@lrnwebcomponents/schema-behaviors/schema-behaviors.js",
            "start": {
              "line": 26,
              "column": 4
            },
            "end": {
              "line": 29,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined",
          "inheritedFrom": "SchemaBehaviors.Schema"
        },
        {
          "name": "schema-map",
          "description": "Schema Map for this element.",
          "sourceRange": {
            "file": "../@lrnwebcomponents/schema-behaviors/schema-behaviors.js",
            "start": {
              "line": 33,
              "column": 4
            },
            "end": {
              "line": 46,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object | null | undefined",
          "inheritedFrom": "SchemaBehaviors.Schema"
        },
        {
          "name": "text",
          "description": "Text to wire into the middle of the element.\nThis is easier to manage then slotted data though\nthis supports both methods.",
          "sourceRange": {
            "start": {
              "line": 30,
              "column": 4
            },
            "end": {
              "line": 33,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "oer-property",
          "description": "Property value for this oer resource",
          "sourceRange": {
            "start": {
              "line": 37,
              "column": 4
            },
            "end": {
              "line": 40,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "typeof",
          "description": "Property value for this oer resource",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 4
            },
            "end": {
              "line": 47,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "related-resource",
          "description": "Related Resource ID",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 4
            },
            "end": {
              "line": 53,
              "column": 5
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "oer-schema"
    }
  ]
}
