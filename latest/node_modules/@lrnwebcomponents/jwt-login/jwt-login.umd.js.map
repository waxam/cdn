{"version":3,"file":"jwt-login.umd.js","sources":["jwt-login.umd.js"],"sourcesContent":["import { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@polymer/iron-ajax/iron-ajax.js\";\n/**\n`jwt-login`\na simple element to check for and fetch JWTs\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n- jwt - a json web token which is an encrypted security token to talk\n\n*/\nlet JwtLogin = Polymer({\n  _template: html`\n    <style>\n      :host {\n        visibility: hidden;\n      }\n    </style>\n    <iron-ajax\n      id=\"loginrequest\"\n      method=\"GET\"\n      url=\"[[url]]\"\n      handle-as=\"json\"\n      on-response=\"loginResponse\"\n    >\n    </iron-ajax>\n  `,\n\n  is: \"jwt-login\",\n\n  properties: {\n    /**\n     * url\n     */\n    url: {\n      type: String\n    },\n    /**\n     * Key that contains the token in local storage\n     */\n    key: {\n      type: String,\n      value: \"jwt\"\n    },\n    /**\n     * JSON Web token to securely pass around\n     */\n    jwt: {\n      type: String,\n      notify: true\n    }\n  },\n\n  /**\n   * Ready life cycle\n   */\n  ready: function() {\n    // set jwt from local storage bin\n    this.jwt = localStorage.getItem(this.key);\n    this.fire(\"jwt-token\", this.jwt);\n  },\n\n  /**\n   * Request a user login if we need one or log out\n   */\n  toggleLogin: function() {\n    // null is default, if we don't have anything go get one\n    if (this.jwt == null) {\n      this.$.loginrequest.generateRequest();\n    } else {\n      localStorage.removeItem(this.key);\n      this.jwt = null;\n      this.fire(\"jwt-logged-in\", false);\n    }\n  },\n\n  /**\n   * Login bridge to get a JWT and hang onto it\n   */\n  loginResponse: function(e) {\n    this.jwt = e.detail.response;\n    if (this.jwt == null || this.jwt == \"\") {\n      this.fire(\"jwt-logged-in\", false);\n    } else {\n      // set the jwt into local storage so we can reference later\n      localStorage.setItem(this.key, this.jwt);\n      this.fire(\"jwt-token\", this.jwt);\n      this.fire(\"jwt-logged-in\", true);\n    }\n  }\n});\nexport { JwtLogin };\n"],"names":["JwtLogin","Polymer","_template","html","is","properties","url","type","String","key","value","jwt","notify","ready","localStorage","getItem","this","fire","toggleLogin","$","loginrequest","generateRequest","removeItem","loginResponse","e","detail","response","setItem"],"mappings":"ywBAYIA,EAAWC,UAAQ,CACrBC,UAAWC,YAgBXC,GAAI,YAEJC,WAAY,CAIVC,IAAK,CACHC,KAAMC,QAKRC,IAAK,CACHF,KAAMC,OACNE,MAAO,OAKTC,IAAK,CACHJ,KAAMC,OACNI,QAAQ,IAOZC,MAAO,gBAEAF,IAAMG,aAAaC,QAAQC,KAAKP,UAChCQ,KAAK,YAAaD,KAAKL,MAM9BO,YAAa,WAEK,MAAZF,KAAKL,SACFQ,EAAEC,aAAaC,mBAEpBP,aAAaQ,WAAWN,KAAKP,UACxBE,IAAM,UACNM,KAAK,iBAAiB,KAO/BM,cAAe,SAASC,QACjBb,IAAMa,EAAEC,OAAOC,SACJ,MAAZV,KAAKL,KAA2B,IAAZK,KAAKL,SACtBM,KAAK,iBAAiB,IAG3BH,aAAaa,QAAQX,KAAKP,IAAKO,KAAKL,UAC/BM,KAAK,YAAaD,KAAKL,UACvBM,KAAK,iBAAiB"}