{"version":3,"file":"hero-banner.umd.js","sources":["hero-banner.umd.js"],"sourcesContent":["/**\n * Copyright 2018 The Pennsylvania State University\n * @license Apache-2.0, see License.md for full text.\n */\nimport { html, Polymer } from \"@polymer/polymer/polymer-legacy.js\";\nimport \"@lrnwebcomponents/materializecss-styles/materializecss-styles.js\";\nimport \"@polymer/paper-button/paper-button.js\";\nimport \"@polymer/iron-image/iron-image.js\";\nimport \"@lrnwebcomponents/a11y-behaviors/a11y-behaviors.js\";\nimport \"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js\";\n/**\n`hero-banner`\nThat thing no one wants to make over and over again yet always does...\n\n@demo demo/index.html\n\n@microcopy - the mental model for this element\n -\n -\n\n*/\nlet HeroBanner = Polymer({\n  _template: html`\n    <style include=\"materializecss-styles\">\n      :host {\n        display: block;\n        width: 100%;\n        min-height: 600px;\n        height: 100%;\n        max-height: 600px;\n        overflow: hidden;\n        position: relative;\n      }\n      .image {\n        position: absolute;\n        left: 0;\n        right: 0;\n      }\n      .itemwrapper {\n        position: absolute;\n        bottom: 10%;\n        left: 10%;\n        width: 50%;\n      }\n      .title {\n        background-color: rgba(0, 0, 0, 0.5);\n        padding: 10px 16px;\n        font-size: 32px;\n        color: #ffffff;\n        margin: 4px 0;\n        font-family: \"Roboto\";\n        font-weight: 500;\n      }\n      .details {\n        background-color: rgba(0, 0, 0, 0.5);\n        padding: 10px 16px;\n        font-size: 16px;\n        color: #ffffff;\n        margin: 4px 0;\n        font-family: \"Roboto\";\n      }\n      .linkbutton {\n        padding: 0;\n        margin: 8px 0;\n        color: #ffffff;\n        text-decoration: none;\n        font-family: \"Roboto\";\n      }\n      .linkbutton paper-button {\n        text-transform: none;\n        font-weight: bold;\n      }\n      @media screen and (max-width: 720px) {\n        .title {\n          font-size: 20px;\n        }\n        .details {\n          font-size: 12px;\n        }\n        .itemwrapper {\n          left: 5%;\n          width: 50%;\n        }\n      }\n      @media screen and (max-width: 500px) {\n        .title {\n          font-size: 16px;\n        }\n        .details {\n          display: none;\n        }\n        .itemwrapper {\n          left: 0;\n          width: 300px;\n        }\n      }\n    </style>\n    <iron-image\n      class=\"image\"\n      src\\$=\"[[image]]\"\n      fade=\"\"\n      preload=\"\"\n      sizing=\"cover\"\n      style=\"background-color:grey;width: 100%;height: 100%;\"\n    ></iron-image>\n    <div class=\"itemwrapper\">\n      <div class=\"title\">[[title]]</div>\n      <div class=\"details\">[[details]]</div>\n      <a class=\"linkbutton\" href\\$=\"[[buttonLink]]\"\n        ><paper-button\n          raised=\"\"\n          class\\$=\"[[buttonColorClass]] [[textColorClass]]\"\n          >[[buttonText]]</paper-button\n        ></a\n      >\n    </div>\n  `,\n\n  is: \"hero-banner\",\n\n  behaviors: [\n    HAXBehaviors.PropertiesBehaviors,\n    A11yBehaviors.A11y,\n    MaterializeCSSBehaviors.ColorBehaviors\n  ],\n\n  properties: {\n    /**\n     * Title\n     */\n    title: {\n      type: String,\n      value: \"Title\"\n    },\n    /**\n     * Image\n     */\n    image: {\n      type: String\n    },\n    /**\n     * Details / teaser text\n     */\n    details: {\n      type: String,\n      value: \"Details\"\n    },\n    /**\n     * button label\n     */\n    buttonText: {\n      type: String,\n      value: \"Find out more\"\n    },\n    /**\n     * Color of the button\n     */\n    buttonColor: {\n      type: String,\n      value: \"red darken-4\",\n      observer: \"_buttonColorChanged\"\n    },\n    /**\n     * Button color class.\n     */\n    buttonColorClass: {\n      type: String,\n      reflectToAttribute: true,\n      computed: \"_computeColorClass(buttonColor)\"\n    },\n    /**\n     * url for the button\n     */\n    buttonLink: {\n      type: String\n    },\n    /**\n     * Text color.\n     */\n    textColor: {\n      type: String,\n      value: \"#FFFFFF\",\n      reflectToAttribute: true\n    },\n    /**\n     * Text color class.\n     */\n    textColorClass: {\n      type: String,\n      value: null,\n      reflectToAttribute: true,\n      computed: \"_computeColorClass(textColor)\"\n    }\n  },\n\n  /**\n   * Notice secondary color changed\n   */\n  _buttonColorChanged: function(newValue, oldValue) {\n    if (typeof newValue !== typeof undefined && newValue != null) {\n      // sees if there's enough contrast and adjusts them accordingly\n      this.computeTextPropContrast(\"textColor\", \"buttonColor\");\n    }\n  },\n\n  /**\n   * Make class from color value\n   */\n  _computeColorClass: function(color) {\n    if (color != null && color.toLowerCase() == \"#ffffff\") {\n      return \"white-text\";\n    } else if (color != null && color == \"#000000\") {\n      return \"black-text\";\n    } else if (color != null && color.substring(0, 1) == \"#\") {\n      return this._colorTransform(color.toLowerCase(), \"\", \"\");\n    }\n  },\n\n  /**\n   * Attached to the DOM, now fire.\n   */\n  attached: function() {\n    // Establish hax property binding\n    let props = {\n      canScale: false,\n      canPosition: false,\n      canEditSource: false,\n      gizmo: {\n        title: \"Hero image\",\n        description:\n          \"Typically fancy banner image calling your attention to something.\",\n        icon: \"image:panorama\",\n        color: \"red\",\n        groups: [\"Image\", \"Media\"],\n        handles: [\n          {\n            type: \"image\",\n            source: \"image\",\n            title: \"title\",\n            description: \"details\",\n            link: \"buttonLink\"\n          }\n        ],\n        meta: {\n          author: \"LRNWebComponents\"\n        }\n      },\n      settings: {\n        quick: [\n          {\n            property: \"title\",\n            title: \"Title\",\n            description: \"The title of the element\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          },\n          {\n            property: \"image\",\n            title: \"Image\",\n            description: \"URL of the image\",\n            inputMethod: \"textfield\",\n            icon: \"image:panorama\"\n          },\n          {\n            property: \"details\",\n            title: \"Details\",\n            description: \"Additional text detail / teaser data\",\n            inputMethod: \"textfield\",\n            icon: \"editor:text-fields\"\n          },\n          {\n            property: \"buttonText\",\n            title: \"Button\",\n            description: \"Label of the button\",\n            inputMethod: \"textfield\",\n            icon: \"icons:radio-button-unchecked\"\n          },\n          {\n            property: \"buttonColor\",\n            title: \"Button - Color\",\n            description: \"Color of the button\",\n            inputMethod: \"colorpicker\",\n            icon: \"editor:format-color-fill\"\n          },\n          {\n            property: \"buttonLink\",\n            title: \"Button - Link\",\n            description: \"Label of the button\",\n            inputMethod: \"textfield\",\n            validationType: \"url\",\n            icon: \"icons:link\"\n          }\n        ],\n        configure: [\n          {\n            property: \"title\",\n            title: \"Title\",\n            description: \"The title of the element\",\n            inputMethod: \"textfield\",\n            icon: \"editor:title\"\n          },\n          {\n            property: \"image\",\n            title: \"Image\",\n            description: \"URL of the image\",\n            inputMethod: \"textfield\",\n            icon: \"image:panorama\"\n          },\n          {\n            property: \"details\",\n            title: \"Details\",\n            description: \"Additional text detail / teaser data\",\n            inputMethod: \"textfield\",\n            icon: \"editor:text-fields\"\n          },\n          {\n            property: \"buttonText\",\n            title: \"Button\",\n            description: \"Label of the button\",\n            inputMethod: \"textfield\",\n            icon: \"icons:radio-button-unchecked\"\n          },\n          {\n            property: \"buttonColor\",\n            title: \"Button - Color\",\n            description: \"Color of the button\",\n            inputMethod: \"colorpicker\",\n            icon: \"editor:format-color-fill\"\n          },\n          {\n            property: \"buttonLink\",\n            title: \"Button - Link\",\n            description: \"Label of the button\",\n            inputMethod: \"textfield\",\n            validationType: \"url\",\n            icon: \"icons:link\"\n          }\n        ],\n        advanced: []\n      }\n    };\n    this.setHaxProperties(props);\n  }\n});\nexport { HeroBanner };\n"],"names":["HeroBanner","Polymer","_template","html","is","behaviors","HAXBehaviors","PropertiesBehaviors","A11yBehaviors","A11y","MaterializeCSSBehaviors","ColorBehaviors","properties","title","type","String","value","image","details","buttonText","buttonColor","observer","buttonColorClass","reflectToAttribute","computed","buttonLink","textColor","textColorClass","_buttonColorChanged","newValue","oldValue","_typeof","computeTextPropContrast","_computeColorClass","color","toLowerCase","substring","this","_colorTransform","attached","setHaxProperties","canScale","canPosition","canEditSource","gizmo","description","icon","groups","handles","source","link","meta","author","settings","quick","property","inputMethod","validationType","configure","advanced"],"mappings":"qmLAqBIA,EAAaC,UAAQ,CACvBC,UAAWC,YAgGXC,GAAI,cAEJC,UAAW,CACTC,aAAaC,oBACbC,cAAcC,KACdC,wBAAwBC,gBAG1BC,WAAY,CAIVC,MAAO,CACLC,KAAMC,OACNC,MAAO,SAKTC,MAAO,CACLH,KAAMC,QAKRG,QAAS,CACPJ,KAAMC,OACNC,MAAO,WAKTG,WAAY,CACVL,KAAMC,OACNC,MAAO,iBAKTI,YAAa,CACXN,KAAMC,OACNC,MAAO,eACPK,SAAU,uBAKZC,iBAAkB,CAChBR,KAAMC,OACNQ,oBAAoB,EACpBC,SAAU,mCAKZC,WAAY,CACVX,KAAMC,QAKRW,UAAW,CACTZ,KAAMC,OACNC,MAAO,UACPO,oBAAoB,GAKtBI,eAAgB,CACdb,KAAMC,OACNC,MAAO,KACPO,oBAAoB,EACpBC,SAAU,kCAOdI,oBAAqB,SAASC,EAAUC,iBAClCC,EAAOF,IAA6C,MAAZA,QAErCG,wBAAwB,YAAa,gBAO9CC,mBAAoB,SAASC,UACd,MAATA,GAAwC,WAAvBA,EAAMC,cAClB,aACW,MAATD,GAA0B,WAATA,EACnB,aACW,MAATA,GAA0C,KAAzBA,EAAME,UAAU,EAAG,GACtCC,KAAKC,gBAAgBJ,EAAMC,cAAe,GAAI,SADhD,GAQTI,SAAU,gBAwHHC,iBAtHO,CACVC,UAAU,EACVC,aAAa,EACbC,eAAe,EACfC,MAAO,CACL/B,MAAO,aACPgC,YACE,oEACFC,KAAM,iBACNZ,MAAO,MACPa,OAAQ,CAAC,QAAS,SAClBC,QAAS,CACP,CACElC,KAAM,QACNmC,OAAQ,QACRpC,MAAO,QACPgC,YAAa,UACbK,KAAM,eAGVC,KAAM,CACJC,OAAQ,qBAGZC,SAAU,CACRC,MAAO,CACL,CACEC,SAAU,QACV1C,MAAO,QACPgC,YAAa,2BACbW,YAAa,YACbV,KAAM,gBAER,CACES,SAAU,QACV1C,MAAO,QACPgC,YAAa,mBACbW,YAAa,YACbV,KAAM,kBAER,CACES,SAAU,UACV1C,MAAO,UACPgC,YAAa,uCACbW,YAAa,YACbV,KAAM,sBAER,CACES,SAAU,aACV1C,MAAO,SACPgC,YAAa,sBACbW,YAAa,YACbV,KAAM,gCAER,CACES,SAAU,cACV1C,MAAO,iBACPgC,YAAa,sBACbW,YAAa,cACbV,KAAM,4BAER,CACES,SAAU,aACV1C,MAAO,gBACPgC,YAAa,sBACbW,YAAa,YACbC,eAAgB,MAChBX,KAAM,eAGVY,UAAW,CACT,CACEH,SAAU,QACV1C,MAAO,QACPgC,YAAa,2BACbW,YAAa,YACbV,KAAM,gBAER,CACES,SAAU,QACV1C,MAAO,QACPgC,YAAa,mBACbW,YAAa,YACbV,KAAM,kBAER,CACES,SAAU,UACV1C,MAAO,UACPgC,YAAa,uCACbW,YAAa,YACbV,KAAM,sBAER,CACES,SAAU,aACV1C,MAAO,SACPgC,YAAa,sBACbW,YAAa,YACbV,KAAM,gCAER,CACES,SAAU,cACV1C,MAAO,iBACPgC,YAAa,sBACbW,YAAa,cACbV,KAAM,4BAER,CACES,SAAU,aACV1C,MAAO,gBACPgC,YAAa,sBACbW,YAAa,YACbC,eAAgB,MAChBX,KAAM,eAGVa,SAAU"}