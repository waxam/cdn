var _templateObject=babelHelpers.taggedTemplateLiteral(["\n    <style include=\"materializecss-styles\">\n      :host {\n        display: block;\n      }\n      :host([visualization=\"network\"]) simple-concept-network-node {\n        position: relative;\n      }\n      :host([visualization=\"network\"])\n        simple-concept-network-node:nth-child(1) {\n        top: 150px;\n        left: 176px;\n      }\n      :host([visualization=\"network\"])\n        simple-concept-network-node:nth-child(2) {\n        top: 0px;\n        left: 60px;\n      }\n      :host([visualization=\"network\"])\n        simple-concept-network-node:nth-child(3) {\n        top: 75px;\n        left: 60px;\n      }\n      :host([visualization=\"network\"])\n        simple-concept-network-node:nth-child(4) {\n        top: 230px;\n        left: -56px;\n      }\n      :host([visualization=\"network\"])\n        simple-concept-network-node:nth-child(5) {\n        top: 300px;\n        left: -282px;\n      }\n      :host([visualization=\"network\"])\n        simple-concept-network-node:nth-child(6) {\n        top: 230px;\n        left: -515px;\n      }\n      :host([visualization=\"network\"])\n        simple-concept-network-node:nth-child(7) {\n        top: 75px;\n        left: -630px;\n      }\n      :host([visualization=\"network\"]) {\n        display: block;\n        min-height: 450px;\n      }\n    </style>\n    <template is=\"dom-repeat\" items=\"[[nodes]]\" as=\"node\">\n      <simple-concept-network-node\n        visualization=\"[[visualization]]\"\n        src=\"[[node.src]]\"\n        icon=\"[[node.icon]]\"\n        icon-color=\"[[node.iconColor]]\"\n        image=\"[[node.image]]\"\n        label=\"[[node.label]]\"\n        color=\"[[node.color]]\"\n        disabled=\"[[node.disabled]]\"\n      ></simple-concept-network-node>\n    </template>\n  "],["\n    <style include=\"materializecss-styles\">\n      :host {\n        display: block;\n      }\n      :host([visualization=\"network\"]) simple-concept-network-node {\n        position: relative;\n      }\n      :host([visualization=\"network\"])\n        simple-concept-network-node:nth-child(1) {\n        top: 150px;\n        left: 176px;\n      }\n      :host([visualization=\"network\"])\n        simple-concept-network-node:nth-child(2) {\n        top: 0px;\n        left: 60px;\n      }\n      :host([visualization=\"network\"])\n        simple-concept-network-node:nth-child(3) {\n        top: 75px;\n        left: 60px;\n      }\n      :host([visualization=\"network\"])\n        simple-concept-network-node:nth-child(4) {\n        top: 230px;\n        left: -56px;\n      }\n      :host([visualization=\"network\"])\n        simple-concept-network-node:nth-child(5) {\n        top: 300px;\n        left: -282px;\n      }\n      :host([visualization=\"network\"])\n        simple-concept-network-node:nth-child(6) {\n        top: 230px;\n        left: -515px;\n      }\n      :host([visualization=\"network\"])\n        simple-concept-network-node:nth-child(7) {\n        top: 75px;\n        left: -630px;\n      }\n      :host([visualization=\"network\"]) {\n        display: block;\n        min-height: 450px;\n      }\n    </style>\n    <template is=\"dom-repeat\" items=\"[[nodes]]\" as=\"node\">\n      <simple-concept-network-node\n        visualization=\"[[visualization]]\"\n        src=\"[[node.src]]\"\n        icon=\"[[node.icon]]\"\n        icon-color=\"[[node.iconColor]]\"\n        image=\"[[node.image]]\"\n        label=\"[[node.label]]\"\n        color=\"[[node.color]]\"\n        disabled=\"[[node.disabled]]\"\n      ></simple-concept-network-node>\n    </template>\n  "]);import{html,Polymer}from"@polymer/polymer/polymer-legacy.js";import"@lrnwebcomponents/materializecss-styles/materializecss-styles.js";import"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js";import"@lrnwebcomponents/a11y-behaviors/a11y-behaviors.js";import"./lib/simple-concept-network-node.js";var SimpleConceptNetwork=Polymer({_template:html(_templateObject),is:"simple-concept-network",behaviors:[HAXBehaviors.PropertiesBehaviors,MaterializeCSSBehaviors.ColorBehaviors,A11yBehaviors.A11y],observers:["_valueChanged(nodes.*)"],properties:{color:{type:String},visualization:{type:String,reflectToAttribute:!0,value:"3d"},nodes:{type:Array,value:[],notify:!0}},_valueChanged:function(b){for(var c in b.base)for(var d in b.base[c])this.notifyPath("nodes."+c+"."+d)},attached:function(){this.setHaxProperties({canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"Concept Network",description:"A simple way of visualizing data in a small network style configuration.",icon:"lrn:network",color:"blue",groups:["Image","Visualization"],handles:[{type:"image",source:"nodes.source",title:"nodes.label",link:"nodes.src",description:"nodes.description"}],meta:{author:"LRNWebComponents"}},settings:{quick:[{property:"color",title:"Color",description:"Primary / background color",inputMethod:"colorpicker",icon:"editor:format-color-fill"}],configure:[{property:"color",title:"Color",description:"Default background color",inputMethod:"colorpicker",icon:"editor:format-color-fill"},{property:"visualization",title:"Visualization",description:"How to visualize the concept",inputMethod:"select",options:{"3d":"3d plain",network:"network",flat:"flat"}},{property:"nodes",title:"Node list",description:"List of the items to present in the visual",inputMethod:"array",properties:[{property:"icon",title:"Icon",description:"icon to display in the middle",inputMethod:"iconpicker",options:[]},{property:"iconColor",title:"Icon Color",description:"Color for this icon",inputMethod:"colorpicker"},{property:"label",title:"Label",description:"Label",inputMethod:"textfield"},{property:"image",title:"Image",description:"Image for the background",inputMethod:"textfield",validationType:"url"},{property:"description",title:"Description",description:"A longer description that can be used as part of a modal presentation",inputMethod:"textfield"},{property:"color",title:"Color",description:"Color for this node",inputMethod:"colorpicker"},{property:"src",title:"Link",description:"Label",inputMethod:"textfield",validationType:"url"}]}],advanced:[]}})}});export{SimpleConceptNetwork};