var _templateObject=babelHelpers.taggedTemplateLiteral(["\n    <custom-style>\n      <style is=\"custom-style\">\n        :host {\n          display: block;\n          color: #ffffff;\n        }\n        app-toolbar {\n          background-color: #3e3e3e;\n          color: white;\n          padding: 0 0 0 16px;\n        }\n        hax-context-item {\n          margin: 0;\n          width: 40px;\n          height: 40px;\n        }\n        #elementoptions {\n          height: inherit;\n        }\n        #input {\n          color: #ffffff;\n        }\n        paper-checkbox {\n          --paper-checkbox-label-color: #ffffff;\n        }\n        .input-mixer-label {\n          padding-left: 4px;\n        }\n        paper-textarea,\n        paper-input {\n          --paper-input-container-color: #bbbbff;\n          --paper-input-container-focus-color: #ffffff;\n          --paper-input-container-invalid-color: #ffaaaa;\n          --paper-input-container-input-color: #ffffff;\n          --paper-input-container-shared-input-style: {\n            color: #ffffff;\n            background: transparent;\n            margin: 0;\n            padding: 0;\n            min-width: 320px;\n            line-height: 16px;\n            font-size: 16px;\n            margin-top: -8px;\n            margin-bottom: 8px;\n            outline: none;\n            border: none;\n          }\n        }\n        .input-method {\n          color: #ffffff;\n        }\n      </style>\n    </custom-style>\n    <app-toolbar>\n      <template is=\"dom-if\" if=\"[[__inputselect]]\">\n        <span class=\"input-mixer-label\">[[label]]</span>\n        <hax-context-item-menu selected=\"{{value}}\" icon=\"[[icon]]\" id=\"input\">\n          <slot></slot>\n        </hax-context-item-menu>\n      </template>\n      <span class=\"input-method\">\n        <template is=\"dom-if\" if=\"[[__inputtextarea]]\">\n          <paper-textarea\n            id=\"input\"\n            label=\"[[label]]\"\n            value=\"{{value}}\"\n            auto-validate=\"\"\n            pattern=\"[[validation]]\"\n            required=\"[[required]]\"\n          ></paper-textarea>\n        </template>\n        <template is=\"dom-if\" if=\"[[__inputtextfield]]\">\n          <paper-input\n            id=\"input\"\n            type=\"[[validationType]]\"\n            label=\"[[label]]\"\n            value=\"{{value}}\"\n            auto-validate=\"\"\n            pattern=\"[[validation]]\"\n            required=\"[[required]]\"\n          ></paper-input>\n        </template>\n        <template is=\"dom-if\" if=\"[[__inputboolean]]\">\n          <paper-checkbox id=\"input\" checked=\"{{value}}\"\n            >[[label]]</paper-checkbox\n          >\n        </template>\n        <template is=\"dom-if\" if=\"[[__inputflipboolean]]\">\n          <paper-checkbox id=\"input\" checked=\"{{value}}\"\n            >[[label]]</paper-checkbox\n          >\n        </template>\n        <template is=\"dom-if\" if=\"[[__inputcolorpicker]]\">\n          <span>[[label]]</span>\n          <simple-colors-picker\n            id=\"input\"\n            value=\"{{value}}\"\n          ></simple-colors-picker>\n        </template>\n      </span>\n      <paper-tooltip for=\"input\" position=\"top\" offset=\"14\">\n        [[description]]\n      </paper-tooltip>\n      <hax-context-item\n        id=\"updatebutton\"\n        icon=\"subdirectory-arrow-right\"\n        label$=\"Update [[label]]\"\n        event-name=\"hax-update-tap\"\n      ></hax-context-item>\n    </app-toolbar>\n  "],["\n    <custom-style>\n      <style is=\"custom-style\">\n        :host {\n          display: block;\n          color: #ffffff;\n        }\n        app-toolbar {\n          background-color: #3e3e3e;\n          color: white;\n          padding: 0 0 0 16px;\n        }\n        hax-context-item {\n          margin: 0;\n          width: 40px;\n          height: 40px;\n        }\n        #elementoptions {\n          height: inherit;\n        }\n        #input {\n          color: #ffffff;\n        }\n        paper-checkbox {\n          --paper-checkbox-label-color: #ffffff;\n        }\n        .input-mixer-label {\n          padding-left: 4px;\n        }\n        paper-textarea,\n        paper-input {\n          --paper-input-container-color: #bbbbff;\n          --paper-input-container-focus-color: #ffffff;\n          --paper-input-container-invalid-color: #ffaaaa;\n          --paper-input-container-input-color: #ffffff;\n          --paper-input-container-shared-input-style: {\n            color: #ffffff;\n            background: transparent;\n            margin: 0;\n            padding: 0;\n            min-width: 320px;\n            line-height: 16px;\n            font-size: 16px;\n            margin-top: -8px;\n            margin-bottom: 8px;\n            outline: none;\n            border: none;\n          }\n        }\n        .input-method {\n          color: #ffffff;\n        }\n      </style>\n    </custom-style>\n    <app-toolbar>\n      <template is=\"dom-if\" if=\"[[__inputselect]]\">\n        <span class=\"input-mixer-label\">[[label]]</span>\n        <hax-context-item-menu selected=\"{{value}}\" icon=\"[[icon]]\" id=\"input\">\n          <slot></slot>\n        </hax-context-item-menu>\n      </template>\n      <span class=\"input-method\">\n        <template is=\"dom-if\" if=\"[[__inputtextarea]]\">\n          <paper-textarea\n            id=\"input\"\n            label=\"[[label]]\"\n            value=\"{{value}}\"\n            auto-validate=\"\"\n            pattern=\"[[validation]]\"\n            required=\"[[required]]\"\n          ></paper-textarea>\n        </template>\n        <template is=\"dom-if\" if=\"[[__inputtextfield]]\">\n          <paper-input\n            id=\"input\"\n            type=\"[[validationType]]\"\n            label=\"[[label]]\"\n            value=\"{{value}}\"\n            auto-validate=\"\"\n            pattern=\"[[validation]]\"\n            required=\"[[required]]\"\n          ></paper-input>\n        </template>\n        <template is=\"dom-if\" if=\"[[__inputboolean]]\">\n          <paper-checkbox id=\"input\" checked=\"{{value}}\"\n            >[[label]]</paper-checkbox\n          >\n        </template>\n        <template is=\"dom-if\" if=\"[[__inputflipboolean]]\">\n          <paper-checkbox id=\"input\" checked=\"{{value}}\"\n            >[[label]]</paper-checkbox\n          >\n        </template>\n        <template is=\"dom-if\" if=\"[[__inputcolorpicker]]\">\n          <span>[[label]]</span>\n          <simple-colors-picker\n            id=\"input\"\n            value=\"{{value}}\"\n          ></simple-colors-picker>\n        </template>\n      </span>\n      <paper-tooltip for=\"input\" position=\"top\" offset=\"14\">\n        [[description]]\n      </paper-tooltip>\n      <hax-context-item\n        id=\"updatebutton\"\n        icon=\"subdirectory-arrow-right\"\n        label\\$=\"Update [[label]]\"\n        event-name=\"hax-update-tap\"\n      ></hax-context-item>\n    </app-toolbar>\n  "]);import{html,Polymer}from"@polymer/polymer/polymer-legacy.js";import{dom}from"@polymer/polymer/lib/legacy/polymer.dom.js";import"@polymer/app-layout/app-toolbar/app-toolbar.js";import"@polymer/paper-input/paper-textarea.js";import"@polymer/paper-input/paper-input.js";import"@polymer/paper-checkbox/paper-checkbox.js";import"@polymer/paper-slider/paper-slider.js";import"@polymer/paper-tooltip/paper-tooltip.js";import"./simple-colors-picker.js";import"./hax-context-item-menu.js";import"./hax-context-item.js";Polymer({_template:html(_templateObject),is:"hax-input-mixer",listeners:{"hax-context-item-selected":"_haxContextOperation"},properties:{value:{type:String,value:null},label:{type:String,reflectToAttribute:!0},validation:{type:String,reflectToAttribute:!0},validationType:{type:String,reflectToAttribute:!0},required:{type:Boolean,reflectToAttribute:!0},options:{type:Object,value:{},reflectToAttribute:!0},icon:{type:String,value:"android",reflectToAttribute:!0},description:{type:String,reflectToAttribute:!0},inputMethod:{type:String,value:null,reflectToAttribute:!0,observer:"_inputMethodChanged"},propertyToBind:{type:String,reflectToAttribute:!0},slotToBind:{type:String,reflectToAttribute:!0}},ready:function(){this._resetInputMethods()},_inputMethodChanged:function(b,c){var d=this;if(null!=b&&("undefined"===typeof c?"undefined":babelHelpers.typeof(c))!=="undefined"){var f=b,g=this.validInputMethods();if(g.includes(f)){this._resetInputMethods(),this["__input"+f]=!0;for(var h=dom(this);null!==h.firstChild;)h.removeChild(h.firstChild);if("select"===f&&babelHelpers.typeof(this.options)!=="undefined")for(val in this.options)item=document.createElement("paper-item"),item.attributes.value=val,item.innerHTML=this.options[val],h.appendChild(item);setTimeout(function(){"function"===typeof d.shadowRoot.querySelector("#input").hideMenu&&d.shadowRoot.querySelector("#input").hideMenu(),d.shadowRoot.querySelector("#input").focus()},200)}}},validInputMethods:function(){return["flipboolean","boolean","select","confirm","textfield","textarea","datepicker","colorpicker","number"]},_resetInputMethods:function(){for(var b=this.validInputMethods(),c=0;c<b.length;c++)this["__input"+b[c]]=!1},_haxContextOperation:function(b){var c=b.detail;switch(c.eventName){case"hax-update-tap":if("boolean"==this.inputMethod)this.value=this.value;else if("flipboolean"==this.inputMethod)this.value=!this.value;else if("select"==this.inputMethod){var d=0;for(val in this.options){if(d==this.value){this.value=val;continue}d++}}var f={value:this.value,propertyToBind:this.propertyToBind,slotToBind:this.slotToBind};this.fire("hax-input-mixer-update",{inputMixer:f});}}});