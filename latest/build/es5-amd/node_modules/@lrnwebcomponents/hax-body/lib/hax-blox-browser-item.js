var _templateObject=babelHelpers.taggedTemplateLiteral(["\n    <style include=\"materializecss-styles-colors\">\n      :host {\n        display: inline-flex;\n      }\n      :host([elevation=\"1\"]) {\n        -webkit-transform: scale(1, 1);\n        transform: scale(1, 1);\n      }\n      :host([elevation=\"2\"]) {\n        -webkit-transform: scale(1.4, 1.4);\n        transform: scale(1.4, 1.4);\n      }\n      paper-card {\n        margin: 4px 0;\n        border-radius: 10px;\n      }\n      paper-button {\n        color: #222222;\n        text-transform: none;\n        margin: 0;\n        background-color: #ffffff;\n        height: 80px !important;\n        width: 200px !important;\n        display: flex;\n        border-radius: 10px;\n        border: 4px solid #cccccc;\n        min-width: unset;\n      }\n      paper-button .item-title {\n        font-size: 14px;\n        display: inline-flex;\n      }\n      .flip-icon {\n        transform: rotateY(180deg);\n      }\n      iron-icon {\n        width: 40px;\n        height: 40px;\n        display: inline-block;\n      }\n      @media screen and (max-width: 550px) {\n        paper-button .item-title {\n          font-size: 12px;\n        }\n      }\n    </style>\n    <paper-card id=\"card\" elevation=\"[[elevation]]\">\n      <paper-button\n        id=\"button\"\n        on-tap=\"_fireEvent\"\n        data-voicecommand$=\"select [[title]]\"\n      >\n        <div class=\"button-inner\">\n          <iron-icon icon=\"[[icon]]\"></iron-icon>\n          <div class=\"item-title\">[[title]]</div>\n        </div>\n      </paper-button>\n    </paper-card>\n  "],["\n    <style include=\"materializecss-styles-colors\">\n      :host {\n        display: inline-flex;\n      }\n      :host([elevation=\"1\"]) {\n        -webkit-transform: scale(1, 1);\n        transform: scale(1, 1);\n      }\n      :host([elevation=\"2\"]) {\n        -webkit-transform: scale(1.4, 1.4);\n        transform: scale(1.4, 1.4);\n      }\n      paper-card {\n        margin: 4px 0;\n        border-radius: 10px;\n      }\n      paper-button {\n        color: #222222;\n        text-transform: none;\n        margin: 0;\n        background-color: #ffffff;\n        height: 80px !important;\n        width: 200px !important;\n        display: flex;\n        border-radius: 10px;\n        border: 4px solid #cccccc;\n        min-width: unset;\n      }\n      paper-button .item-title {\n        font-size: 14px;\n        display: inline-flex;\n      }\n      .flip-icon {\n        transform: rotateY(180deg);\n      }\n      iron-icon {\n        width: 40px;\n        height: 40px;\n        display: inline-block;\n      }\n      @media screen and (max-width: 550px) {\n        paper-button .item-title {\n          font-size: 12px;\n        }\n      }\n    </style>\n    <paper-card id=\"card\" elevation=\"[[elevation]]\">\n      <paper-button\n        id=\"button\"\n        on-tap=\"_fireEvent\"\n        data-voicecommand\\$=\"select [[title]]\"\n      >\n        <div class=\"button-inner\">\n          <iron-icon icon=\"[[icon]]\"></iron-icon>\n          <div class=\"item-title\">[[title]]</div>\n        </div>\n      </paper-button>\n    </paper-card>\n  "]);import{html,Polymer}from"@polymer/polymer/polymer-legacy.js";import"@polymer/paper-button/paper-button.js";import"@polymer/paper-card/paper-card.js";import"@polymer/iron-icon/iron-icon.js";import"@lrnwebcomponents/materializecss-styles/lib/colors.js";Polymer({_template:html(_templateObject),is:"hax-blox-browser-item",listeners:{mousedown:"tapEventOn",mouseover:"tapEventOn",mouseout:"tapEventOff",focusin:"tapEventOn",focusout:"tapEventOff"},properties:{title:{type:String},bloxReference:{type:Object},icon:{type:String},author:{type:String},description:{type:String},examples:{type:Array},status:{type:Array},layout:{type:String},tag:{type:String},elevation:{type:Number,value:1,reflectToAttribute:!0}},tapEventOn:function(){this.elevation=2},tapEventOff:function(){this.elevation=1},_fireEvent:function(){for(var f,c="",d=0;d<this.blox.length;d++)f=window.HaxStore.haxElementToNode(this.blox[d].tag,this.blox[d].content,this.blox[d].properties),c+=window.HaxStore.haxNodeToContent(f);var g={tag:"grid-plate",properties:{layout:this.layout},content:c};this.fire("hax-insert-content",g),window.HaxStore.instance.haxBloxPicker.close()}});