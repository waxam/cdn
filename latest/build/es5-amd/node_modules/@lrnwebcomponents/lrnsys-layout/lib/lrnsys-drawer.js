var _templateObject=babelHelpers.taggedTemplateLiteral(["\n    <style is=\"custom-style\" include=\"simple-colors\">\n      :host {\n        display: block;\n        --lrnsys-drawer-color: var(--simple-colors-foreground1);\n        --lrnsys-drawer-background-color: var(--simple-colors-background1);\n      }\n      paper-button {\n        display: inline-block;\n      }\n    </style>\n    <paper-button\n      class$=\"[[class]]\"\n      id=\"flyouttrigger\"\n      on-tap=\"toggleDrawer\"\n      raised=\"[[raised]]\"\n      disabled$=\"[[disabled]]\"\n      title=\"[[alt]]\"\n    >\n      <lrnsys-button-inner avatar=\"[[avatar]]\" icon=\"[[icon]]\" text=\"[[text]]\">\n        <slot name=\"button\"></slot>\n      </lrnsys-button-inner>\n    </paper-button>\n    <paper-tooltip for=\"flyouttrigger\" animation-delay=\"0\"\n      >[[alt]]</paper-tooltip\n    >\n  "],["\n    <style is=\"custom-style\" include=\"simple-colors\">\n      :host {\n        display: block;\n        --lrnsys-drawer-color: var(--simple-colors-foreground1);\n        --lrnsys-drawer-background-color: var(--simple-colors-background1);\n      }\n      paper-button {\n        display: inline-block;\n      }\n    </style>\n    <paper-button\n      class\\$=\"[[class]]\"\n      id=\"flyouttrigger\"\n      on-tap=\"toggleDrawer\"\n      raised=\"[[raised]]\"\n      disabled\\$=\"[[disabled]]\"\n      title=\"[[alt]]\"\n    >\n      <lrnsys-button-inner avatar=\"[[avatar]]\" icon=\"[[icon]]\" text=\"[[text]]\">\n        <slot name=\"button\"></slot>\n      </lrnsys-button-inner>\n    </paper-button>\n    <paper-tooltip for=\"flyouttrigger\" animation-delay=\"0\"\n      >[[alt]]</paper-tooltip\n    >\n  "]);import{html,Polymer}from"@polymer/polymer/polymer-legacy.js";import{dom}from"@polymer/polymer/lib/legacy/polymer.dom.js";import"@lrnwebcomponents/simple-colors/simple-colors.js";import"@lrnwebcomponents/simple-drawer/simple-drawer.js";import"@lrnwebcomponents/paper-avatar/paper-avatar.js";import"@polymer/app-layout/app-layout.js";import"@polymer/paper-tooltip/paper-tooltip.js";import"@polymer/paper-button/paper-button.js";import"@polymer/iron-icons/iron-icons.js";import"./lrnsys-button-inner.js";Polymer({_template:html(_templateObject),is:"lrnsys-drawer",listeners:{mousedown:"tapEventOn",mouseover:"tapEventOn",mouseout:"tapEventOff"},properties:{opened:{type:Boolean,value:!1,reflectToAttribute:!0},raised:{type:Boolean,reflectToAttribute:!0},icon:{type:String},avatar:{type:String},text:{type:String},align:{type:String,value:"left"},alt:{type:String,reflectToAttribute:!0},header:{type:String},disabled:{type:Boolean,value:!1,reflectToAttribute:!0},hoverClass:{type:String},headingClass:{type:String,value:"white-text black"},focusState:{type:Boolean,value:!1}},ready:function(){this.__modal=window.simpleDrawer.requestAvailability()},attached:function(){this.$.flyouttrigger.addEventListener("focused-changed",this.focusToggle.bind(this))},detached:function(){this.$.flyouttrigger.removeEventListener("focused-changed",this.focusToggle.bind(this))},tapEventOn:function(){var d=this;if(babelHelpers.typeof(this.hoverClass)!=="undefined"){var f=this.hoverClass.split(" ");f.forEach(function(g){""!=g&&d.$.flyouttrigger.classList.add(g)})}},tapEventOff:function(){var d=this;if(babelHelpers.typeof(this.hoverClass)!=="undefined"){var f=this.hoverClass.split(" ");f.forEach(function(g){""!=g&&d.$.flyouttrigger.classList.remove(g)})}},toggleDrawer:function(){var b=dom(this).getEffectiveChildNodes(),d=document.createElement("span"),f=document.createElement("span");for(var g in b)if(babelHelpers.typeof(b[g].tagName)!=="undefined")switch(b[g].getAttribute("slot")){case"header":d.appendChild(b[g].cloneNode(!0));break;default:f.appendChild(b[g].cloneNode(!0));}var j=new CustomEvent("simple-drawer-show",{bubbles:!0,cancelable:!0,detail:{title:this.header,elements:{content:f,header:d},invokedBy:this.$.flyouttrigger,align:this.align,size:"30%",clone:!1}});this.dispatchEvent(j)},focusToggle:function(){var d=this;if(this.fire("focus-changed",{focus:this.focusState}),babelHelpers.typeof(this.hoverClass)!=="undefined"){var f=this.hoverClass.split(" ");f.forEach(function(g){""!=g&&(d.focusState?d.$.flyouttrigger.classList.add(g):d.$.flyouttrigger.classList.remove(g))})}this.focusState=!this.focusState},_getTextLabelClass:function(){return this.avatar||this.icon?"text-label":"text-label-only"}});