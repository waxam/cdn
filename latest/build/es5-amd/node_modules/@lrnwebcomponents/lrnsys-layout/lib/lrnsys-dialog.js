var _templateObject=babelHelpers.taggedTemplateLiteral(["\n    <custom-style>\n      <style is=\"custom-style\" include=\"simple-colors\">\n        :host {\n          display: inline-block;\n          --lrnsys-dialog-color: var(--simple-colors-foreground1, #000);\n          --lrnsys-dialog-background-color: var(--simple-colors-background1);\n          --lrnsys-dialog-toolbar-background-color: var(\n            --simple-colors-background3\n          );\n          --lrnsys-dialog-secondary-background-color: rgba(255, 255, 255, 0.7);\n        }\n        :host([dark]) {\n          --lrnsys-dialog-toolbar-background-color: var(\n            --simple-colors-background1\n          );\n          --lrnsys-dialog-background-color: var(--simple-colors-background3);\n          --lrnsys-dialog-secondary-background-color: rgba(0, 0, 0, 0.7);\n        }\n        #dialogtrigger {\n          display: inline-block;\n        }\n      </style>\n    </custom-style>\n    <paper-button\n      class$=\"[[class]]\"\n      id=\"dialogtrigger\"\n      on-tap=\"openDialog\"\n      raised=\"[[raised]]\"\n      disabled$=\"[[disabled]]\"\n      title=\"[[alt]]\"\n      aria-label$=\"[[alt]]\"\n    >\n      <lrnsys-button-inner\n        avatar$=\"[[avatar]]\"\n        icon$=\"[[icon]]\"\n        text$=\"[[text]]\"\n      >\n        <slot name=\"button\" slot=\"button\"></slot>\n      </lrnsys-button-inner>\n    </paper-button>\n    <paper-tooltip for=\"dialogtrigger\" animation-delay=\"0\" hidden$=\"[[!alt]]\"\n      >[[alt]]</paper-tooltip\n    >\n  "],["\n    <custom-style>\n      <style is=\"custom-style\" include=\"simple-colors\">\n        :host {\n          display: inline-block;\n          --lrnsys-dialog-color: var(--simple-colors-foreground1, #000);\n          --lrnsys-dialog-background-color: var(--simple-colors-background1);\n          --lrnsys-dialog-toolbar-background-color: var(\n            --simple-colors-background3\n          );\n          --lrnsys-dialog-secondary-background-color: rgba(255, 255, 255, 0.7);\n        }\n        :host([dark]) {\n          --lrnsys-dialog-toolbar-background-color: var(\n            --simple-colors-background1\n          );\n          --lrnsys-dialog-background-color: var(--simple-colors-background3);\n          --lrnsys-dialog-secondary-background-color: rgba(0, 0, 0, 0.7);\n        }\n        #dialogtrigger {\n          display: inline-block;\n        }\n      </style>\n    </custom-style>\n    <paper-button\n      class$=\"[[class]]\"\n      id=\"dialogtrigger\"\n      on-tap=\"openDialog\"\n      raised=\"[[raised]]\"\n      disabled$=\"[[disabled]]\"\n      title=\"[[alt]]\"\n      aria-label$=\"[[alt]]\"\n    >\n      <lrnsys-button-inner\n        avatar$=\"[[avatar]]\"\n        icon$=\"[[icon]]\"\n        text$=\"[[text]]\"\n      >\n        <slot name=\"button\" slot=\"button\"></slot>\n      </lrnsys-button-inner>\n    </paper-button>\n    <paper-tooltip for=\"dialogtrigger\" animation-delay=\"0\" hidden$=\"[[!alt]]\"\n      >[[alt]]</paper-tooltip\n    >\n  "]);import{html,Polymer}from"@polymer/polymer/polymer-legacy.js";import{dom}from"@polymer/polymer/lib/legacy/polymer.dom.js";import"@lrnwebcomponents/paper-avatar/paper-avatar.js";import"@lrnwebcomponents/lrn-icons/lrn-icons.js";import"@lrnwebcomponents/simple-colors/simple-colors.js";import"@lrnwebcomponents/simple-modal/simple-modal.js";import"@polymer/paper-tooltip/paper-tooltip.js";import"@polymer/paper-button/paper-button.js";import"@polymer/neon-animation/neon-animation.js";import"@polymer/neon-animation/neon-animations.js";import"@polymer/iron-icons/iron-icons.js";import"./lrnsys-button-inner.js";Polymer({_template:html(_templateObject),is:"lrnsys-dialog",listeners:{mousedown:"tapEventOn",mouseover:"tapEventOn",mouseout:"tapEventOff"},properties:{icon:{type:String},raised:{type:Boolean},avatar:{type:String},text:{type:String},alt:{type:String,reflectToAttribute:!0},header:{type:String},disabled:{type:Boolean,value:!1},hoverClass:{type:String},headingClass:{type:String,value:"white-text black"},dynamicImages:{type:Boolean,value:!1},focusState:{type:Boolean,value:!1}},tapEventOn:function(){var d=this;if(babelHelpers.typeof(d.hoverClass)!=="undefined"){var f=d.hoverClass.split(" ");f.forEach(function(g){""!=g&&d.$.dialogtrigger.classList.add(g)})}},tapEventOff:function(){var d=this;if(babelHelpers.typeof(d.hoverClass)!=="undefined"){var f=d.hoverClass.split(" ");f.forEach(function(g){""!=g&&d.$.dialogtrigger.classList.remove(g)})}},openDialog:function(){var b=dom(this).getEffectiveChildNodes(),d=document.createElement("span"),f=document.createElement("span"),g={};for(var j in b)if(babelHelpers.typeof(b[j].tagName)!=="undefined")switch(b[j].getAttribute("slot")){case"toolbar-primary":case"toolbar-secondary":case"toolbar":case"header":g=b[j].cloneNode(!0),d.appendChild(g);break;case"button":break;default:g=b[j].cloneNode(!0),this.dynamicImages&&"IRON-IMAGE"===g.tagName&&(g.preventLoad=!1,g.removeAttribute("prevent-load")),f.appendChild(g);}var k=new CustomEvent("simple-modal-show",{bubbles:!0,cancelable:!0,detail:{title:this.header,elements:{header:d,content:f},invokedBy:this.$.dialogtrigger}});this.dispatchEvent(k)},focusToggle:function(){var d=this;if(d.fire("focus-changed",{focus:d.focusState}),babelHelpers.typeof(d.hoverClass)!=="undefined"){var f=d.hoverClass.split(" ");f.forEach(function(g){""!=g&&(d.focusState?d.$.dialogtrigger.classList.add(g):d.$.dialogtrigger.classList.remove(g))})}d.focusState=!d.focusState},ready:function(){this.__modal=window.simpleModal.requestAvailability()},attached:function(){this.$.dialogtrigger.addEventListener("focused-changed",this.focusToggle.bind(this))},detached:function(){this.$.dialogtrigger.removeEventListener("focused-changed",this.focusToggle.bind(this))}});