var _templateObject=babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n        }\n\n        :host([hidden]) {\n          display: none;\n        }\n        :host ::slotted(*) {\n          font-size: 14px;\n          @apply --simple-modal-content;\n        }\n\n        .content {\n          padding: 8px 24px;\n          @apply --simple-modal-content-container;\n        }\n        #dialog {\n          display: block;\n          margin: auto;\n          width: auto;\n          height: auto;\n          z-index: 1000;\n          min-width: 50vw;\n          min-height: 50vh;\n          @apply --simple-modal-dialog;\n        }\n        .buttons {\n          padding: 8px 24px;\n          @apply --simple-modal-buttons;\n        }\n\n        #close {\n          top: 0;\n          font-size: 14px;\n          text-transform: none;\n          right: 0;\n          position: absolute;\n          padding: 4px;\n          margin: 4px;\n          color: var(--simple-modal-header-color, #ffffff);\n          background-color: transparent;\n          min-width: unset;\n          line-height: 32px;\n          @apply --simple-modal-close;\n        }\n\n        #close iron-icon {\n          display: inline-block;\n          color: var(--simple-modal-header-color, #ffffff);\n          width: 16px;\n          height: 16px;\n          margin-right: 4px;\n          @apply --simple-modal-close-icon;\n        }\n\n        .top {\n          display: flex;\n          margin-top: 0;\n          justify-content: space-between;\n          background-color: var(--simple-modal-header-background, #20427b);\n          color: var(--simple-modal-header-color, #ffffff);\n          padding: 8px 16px;\n          @apply --simple-modal-top;\n        }\n        .top h2 {\n          flex: auto;\n          color: var(--simple-modal-header-color, #ffffff);\n          font-size: 32px;\n          text-transform: capitalize;\n          padding: 0;\n          line-height: 32px;\n          margin: 8px;\n          @apply --simple-modal-heading;\n        }\n      </style>\n      <paper-dialog\n        id=\"dialog\"\n        entry-animation=\"scale-up-animation\"\n        exit-animation=\"fade-out-animation\"\n        opened=\"{{opened}}\"\n        with-backdrop\n        always-on-top\n      >\n        <div class=\"top\">\n          <h2 hidden$=\"[[!title]]\">[[title]]</h2>\n          <slot name=\"header\"></slot>\n          <paper-button id=\"close\" dialog-dismiss hidden$=\"[[!opened]]\">\n            <iron-icon icon=\"[[closeIcon]]\"></iron-icon> [[closeLabel]]\n          </paper-button>\n        </div>\n        <paper-dialog-scrollable>\n          <slot name=\"content\"></slot>\n        </paper-dialog-scrollable>\n        <div class=\"buttons\"><slot name=\"buttons\"></slot></div>\n      </paper-dialog>\n    "],["\n      <style>\n        :host {\n          display: block;\n        }\n\n        :host([hidden]) {\n          display: none;\n        }\n        :host ::slotted(*) {\n          font-size: 14px;\n          @apply --simple-modal-content;\n        }\n\n        .content {\n          padding: 8px 24px;\n          @apply --simple-modal-content-container;\n        }\n        #dialog {\n          display: block;\n          margin: auto;\n          width: auto;\n          height: auto;\n          z-index: 1000;\n          min-width: 50vw;\n          min-height: 50vh;\n          @apply --simple-modal-dialog;\n        }\n        .buttons {\n          padding: 8px 24px;\n          @apply --simple-modal-buttons;\n        }\n\n        #close {\n          top: 0;\n          font-size: 14px;\n          text-transform: none;\n          right: 0;\n          position: absolute;\n          padding: 4px;\n          margin: 4px;\n          color: var(--simple-modal-header-color, #ffffff);\n          background-color: transparent;\n          min-width: unset;\n          line-height: 32px;\n          @apply --simple-modal-close;\n        }\n\n        #close iron-icon {\n          display: inline-block;\n          color: var(--simple-modal-header-color, #ffffff);\n          width: 16px;\n          height: 16px;\n          margin-right: 4px;\n          @apply --simple-modal-close-icon;\n        }\n\n        .top {\n          display: flex;\n          margin-top: 0;\n          justify-content: space-between;\n          background-color: var(--simple-modal-header-background, #20427b);\n          color: var(--simple-modal-header-color, #ffffff);\n          padding: 8px 16px;\n          @apply --simple-modal-top;\n        }\n        .top h2 {\n          flex: auto;\n          color: var(--simple-modal-header-color, #ffffff);\n          font-size: 32px;\n          text-transform: capitalize;\n          padding: 0;\n          line-height: 32px;\n          margin: 8px;\n          @apply --simple-modal-heading;\n        }\n      </style>\n      <paper-dialog\n        id=\"dialog\"\n        entry-animation=\"scale-up-animation\"\n        exit-animation=\"fade-out-animation\"\n        opened=\"{{opened}}\"\n        with-backdrop\n        always-on-top\n      >\n        <div class=\"top\">\n          <h2 hidden$=\"[[!title]]\">[[title]]</h2>\n          <slot name=\"header\"></slot>\n          <paper-button id=\"close\" dialog-dismiss hidden$=\"[[!opened]]\">\n            <iron-icon icon=\"[[closeIcon]]\"></iron-icon> [[closeLabel]]\n          </paper-button>\n        </div>\n        <paper-dialog-scrollable>\n          <slot name=\"content\"></slot>\n        </paper-dialog-scrollable>\n        <div class=\"buttons\"><slot name=\"buttons\"></slot></div>\n      </paper-dialog>\n    "]);import{html,PolymerElement}from"@polymer/polymer/polymer-element.js";import{dom}from"@polymer/polymer/lib/legacy/polymer.dom.js";import*as async from"@polymer/polymer/lib/utils/async.js";import"@polymer/paper-dialog/paper-dialog.js";import"@polymer/paper-dialog-scrollable/paper-dialog-scrollable.js";import"@polymer/paper-button/paper-button.js";import"@polymer/iron-icons/iron-icons.js";import"@polymer/iron-icon/iron-icon.js";import"@polymer/neon-animation/animations/scale-up-animation.js";import"@polymer/neon-animation/animations/fade-out-animation.js";window.simpleModal=window.simpleModal||{},window.simpleModal.requestAvailability=function(){return window.simpleModal.instance||(window.simpleModal.instance=document.createElement("simple-modal"),document.body.appendChild(window.simpleModal.instance)),window.simpleModal.instance};var SimpleModal=function(a){function b(){return babelHelpers.classCallCheck(this,b),babelHelpers.possibleConstructorReturn(this,(b.__proto__||Object.getPrototypeOf(b)).apply(this,arguments))}return babelHelpers.inherits(b,a),babelHelpers.createClass(b,[{key:"connectedCallback",value:function(){babelHelpers.get(b.prototype.__proto__||Object.getPrototypeOf(b.prototype),"connectedCallback",this).call(this),window.addEventListener("simple-modal-hide",this.close.bind(this)),window.addEventListener("simple-modal-show",this.showEvent.bind(this))}},{key:"_resizeContent",value:function(){async.microTask.run(function(){window.dispatchEvent(new Event("resize"))})}},{key:"showEvent",value:function(d){var f=this;if(this.opened){for(;null!==dom(this).firstChild;)dom(this).removeChild(dom(this).firstChild);setTimeout(function(){f.show(d.detail.title,d.detail.elements,d.detail.invokedBy,d.detail.clone)},100)}else this.show(d.detail.title,d.detail.elements,d.detail.invokedBy,d.detail.clone)}},{key:"show",value:function(d,f,g){var h=this,j=3<arguments.length&&void 0!==arguments[3]&&arguments[3];this.set("invokedBy",g),this.title=d;var k,l=["header","content","buttons"];for(var m in l)f[l[m]]&&(k=j?f[l[m]].cloneNode(!0):f[l[m]],k.setAttribute("slot",l[m]),dom(this).appendChild(k));setTimeout(function(){h.opened=!0,h._resizeContent()},100)}},{key:"animationEnded",value:function(){var f=this;for(this.title="";null!==dom(this).firstChild;)dom(this).removeChild(dom(this).firstChild);this.invokedBy&&async.microTask.run(function(){setTimeout(function(){f.invokedBy.focus()},500)})}},{key:"close",value:function(){this.$.dialog.close()}},{key:"_openedChanged",value:function(d){if(("undefined"===typeof d?"undefined":babelHelpers.typeof(d))!=="undefined"&&!d){this.animationEnded();var g=new CustomEvent("simple-modal-closed",{bubbles:!0,cancelable:!0,detail:{opened:!1,invokedBy:this.invokedBy}});this.dispatchEvent(g)}else if(d){var h=new CustomEvent("simple-modal-opened",{bubbles:!0,cancelable:!0,detail:{opened:!0,invokedBy:this.invokedBy}});this.dispatchEvent(h)}}},{key:"disconnectedCallback",value:function(){babelHelpers.get(b.prototype.__proto__||Object.getPrototypeOf(b.prototype),"disconnectedCallback",this).call(this),window.removeEventListener("simple-modal-hide",this.close.bind(this)),window.removeEventListener("simple-modal-show",this.showEvent.bind(this))}}],[{key:"template",get:function(){return html(_templateObject)}},{key:"properties",get:function(){return{title:{name:"title",type:String,value:""},opened:{name:"opened",type:Boolean,value:!1,reflectToAttribute:!0,observer:"_openedChanged"},closeLabel:{name:"closeLabel",type:String,value:"Close"},closeIcon:{name:"closeIcon",type:String,value:"cancel"},invokedBy:{name:"invokedBy",type:Object}}}},{key:"tag",get:function(){return"simple-modal"}}]),b}(PolymerElement);window.customElements.define(SimpleModal.tag,SimpleModal);export{SimpleModal};