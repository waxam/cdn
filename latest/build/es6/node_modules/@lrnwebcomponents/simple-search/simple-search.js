import{html,PolymerElement}from"@polymer/polymer/polymer-element.js";import"@polymer/iron-icons/iron-icons.js";import"@polymer/paper-input/paper-input.js";import"@polymer/paper-tooltip/paper-tooltip.js";import"./lib/simple-search-content.js";export{SimpleSearch};class SimpleSearch extends PolymerElement{static get is(){return"simple-search"}static get properties(){return{alwaysFloatLabel:{type:Boolean,value:!1},caseSensitive:{type:Boolean,value:null},controls:{type:String,value:null},nextButtonDisabled:{type:Boolean,computed:"_isNavButtonDisabled(resultPointer,resultCount,resultsSpan,1)"},nextButtonIcon:{type:String,value:"arrow-forward"},nextButtonLabel:{type:String,value:"next result"},noLabelFloat:{type:Boolean,value:!1},noResults:{type:Boolean,computed:"_hasNoResults(resultCount)"},noSearch:{type:Boolean,computed:"_hasNoSearch(searchTerms)"},prevButtonDisabled:{type:Boolean,computed:"_isNavButtonDisabled(resultPointer,resultCount,resultsSpan,-1)"},prevButtonIcon:{type:String,value:"arrow-back"},prevButtonLabel:{type:String,value:"previous result"},resultCount:{type:Number,value:0},resultPointer:{type:Number,value:0},resultsSpan:{type:String,computed:"_getResultsSpan(noSearch,resultPointer,resultCount)"},searchInputIcon:{type:String,value:"search"},searchInputLabel:{type:String,value:"search"},searchTerms:{type:Array,value:[]},target:{type:Object,value:null}}}static get template(){return html`
      <style is="custom-style">
        :host {
          display: flex;
          align-items: flex-end;
          justify-content: space-between;
          width: 100%;
        }
        :host #input {
          flex-grow: 2;
          margin-right: 4px;
          --paper-input-container-input-color: var(
            --simple-search-input-text-color,
            #000
          );
          --paper-input-container-focus-color: var(
            --simple-search-input-line-color,
            #000
          );
          --paper-input-container-color: var(
            --simple-search-input-placeholder-color,
            #222
          );
          color: var(--simple-search-input-placeholder-color, #222);
          @apply --simple-search-container;
        }
        :host #xofy {
          margin: 8px;
        }
        :host button {
          margin: 8px 0 8px;
          color: var(--simple-search-button-color, #111);
          background-color: var(--simple-search-button-bg-color, #eee);
          border-color: var(--simple-search-button-border-color, #ccc);
          @apply --simple-search-button;
        }
        :host button:not([disabled]):focus,
        :host button:not([disabled]):hover {
          cursor: pointer;
          color: var(--simple-search-button-hover-color, #000);
          background-color: var(--simple-search-button-hover-bg-color, #fff);
          border-color: var(--simple-search-button-hover-border-color, #ddd);
          @apply --simple-search-button-hover;
        }
        :host button[disabled] {
          cursor: not-allowed;
          color: var(--simple-search-button-disabled-color, #999);
          background-color: var(--simple-search-button-disabled-bg-color, #eee);
          border-color: var(--simple-search-button-disabled-border-color, #ccc);
          @apply --simple-search-button-disabled;
        }
        :host button:not([controls]) {
          display: none;
        }
        :host [shrink-hide] {
          display: none;
        }
      </style>
      <paper-input
        id="input"
        always-float-label\$="[[alwaysFloatLabel]]"
        label="[[searchInputLabel]]"
        no-label-float\$="[[noLabelFloat]]"
        on-change="_handleChange"
      >
        <iron-icon icon="[[searchInputIcon]]" slot="prefix"></iron-icon>
      </paper-input>
      <div id="xofy" shrink-hide\$="[[noSearch]]"></div>
      <div shrink-hide\$="[[noResults]]">
        <button
          id="prev"
          aria-label="[[prevButtonLabel]]"
          aria-role="button"
          controls\$="[[controls]]"
          disabled\$="[[prevButtonDisabled]]"
          on-tap="_navigateResults"
          tabindex="0"
        >
          <iron-icon icon="[[prevButtonIcon]]"></iron-icon>
        </button>
        <paper-tooltip for="prev">[[prevButtonLabel]]</paper-tooltip>
        <button
          id="next"
          aria-label="[[nextButtonLabel]]"
          aria-role="button"
          controls\$="[[controls]]"
          disabled\$="[[nextButtonDisabled]]"
          on-tap="_navigateResults"
          tabindex="0"
        >
          <iron-icon icon\$="[[nextButtonIcon]]"></iron-icon>
        </button>
        <paper-tooltip for="next">[[nextButtonLabel]]</paper-tooltip>
      </div>
    `}ready(){super.ready();let a=this,b=a.$.input;a._getSearchText(b.value)}_handleChange(a){let b=this;b._getSearchText(b.$.input.value),b.resultCount=0,b.resultPointer=0,b.dispatchEvent(new CustomEvent("simple-search",{detail:{search:b,content:a}}))}_hasNoResults(a){return 1>a}_hasNoSearch(a){return 1>a.length}_getResultsSpan(a,b,c){let d="";return d=0<c&&0<b?b+"/"+c:" "+c,this.$.xofy.innerHTML=d,this.$.xofy.innerHTML}_navigateResults(a){let b=this,c="next"===a.currentTarget.id?1:-1;0<this.resultPointer+c&&this.resultPointer+c<=this.resultCount&&(this.resultPointer+=c,this.dispatchEvent(new CustomEvent("goto-result",{detail:this.resultPointer})))}_isNavButtonDisabled(a,b,c,d){return""==c||0>=a+d||a+d>b}_getSearchText(a){let b=[];if(a!==void 0&&null!==a){b=a.split(/[\"\']/gm);for(let c=0;c<b.length;c++)b[c]=b[c].trim(),""===b[c]&&b.splice(c,1)}this.set("searchTerms",[]),this.set("searchTerms",b.slice(0))}findMatches(a){let b=this,c=b.searchTerms,d=this.caseSensitive?"gm":"gim",f=a.slice(0),g=function(h){for(let j=0;j<f.length;j++)if(!1===f[j].matched){let k=new RegExp("\\b"+h+"\\b",d),l=f[j].text,m=l.search(k),n=m+h.length;if(-1<m){b.resultCount+=1;let o=l.slice(0,m),p=l.slice(m,n),q=l.slice(n,l.length),r=f.splice(j,1,{matched:!1,text:o,searchObject:b},{matched:!0,matchNumber:b.resultCount,text:p,searchObject:b},{matched:!1,text:q,searchObject:b})}}};for(let h=0;h<c.length;h++)g(c[h]);return b.resultPointer=0,f}}customElements.define(SimpleSearch.is,SimpleSearch);