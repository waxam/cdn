import{html,PolymerElement}from"@polymer/polymer/polymer-element.js";export{SimpleSearchContent};class SimpleSearchContent extends PolymerElement{static get is(){return"simple-search-content"}static get properties(){return{content:{type:String,value:null}}}static get template(){return html`
      <style>
        :host #content {
          @apply --simple-search-content;
        }
        :host #content[match-number] {
          color: var(--simple-search-match-text-color, #000);
          background-color: var(--simple-search-match-bg-color, #f0f0f0);
          border: 1px solid;
          border-color: var(--simple-search-match-border-color, #ddd);
          padding: 0.16px 4px;
          border-radius: 0.16px;
          font-weight: bold;
          @apply --simple-search-match;
        }
      </style>
      <span id="content">
        <template is="dom-repeat" items="[[_searchedContent]]">
          <span
            match-number\$="[[item.matchNumber]]"
            tabindex\$="[[_getTabIndex(item.matchNumber)]]"
            >[[item.text]]</span
          >
        </template>
      </span>
    `}enableSearch(a){let b=this,c=[{matched:!1,text:b.content}];null===c[0].text&&(c[0].text=b.innerHTML),this.setContent(c),a.addEventListener("simple-search",function(){this.setContent(c),this.setContent(a.findMatches(c))}),a.addEventListener("goto-result",d=>{this.focus(d.detail)})}setContent(a){this._searchedContent=a}focus(a){let b=this.$.content.querySelector("[match-number=\""+a+"\"]");b!==void 0&&null!==b&&b.focus()}_getTabIndex(a){return a!==void 0&&null!==a?"1":""}}customElements.define(SimpleSearchContent.is,SimpleSearchContent);