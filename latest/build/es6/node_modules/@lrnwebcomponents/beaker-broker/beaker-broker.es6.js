import{html,PolymerElement}from"./node_modules/@polymer/polymer/polymer-element.js";export{BeakerBroker};class BeakerBroker extends PolymerElement{static get template(){return html`
<style>:host {
  display: block;
}

:host([hidden]) {
  display: none;
}
</style>
<slot></slot>`}static get haxProperties(){return{}}static get properties(){return{archive:{type:Object,notify:!0},datUrl:{type:String,value:"window.location.host",observer:"_datUrlChanged",notify:!0}}}static get tag(){return"beaker-broker"}connectedCallback(){super.connectedCallback(),typeof DatArchive==="undefined"&&console.log("Beaker is not available from this site loading methodology")}async _datUrlChanged(a){typeof DatArchive!=="undefined"&&a&&this.set("archive",new DatArchive(a))}async write(a,b){await this.archive.writeFile(a,b)}async read(a,b){var d,c="utf8";switch(b){case"jpeg":case"jpg":c="binary";var e=await this.archive.readFile(a,c),f=new Blob([e],{type:"image/jpeg"});d=URL.createObjectURL(f);break;case"png":c="binary";var e=await this.archive.readFile(a,c),f=new Blob([e],{type:"image/png"});d=URL.createObjectURL(f);break;case"base64":var g=await this.archive.readFile(a,b);d="data:image/png;base64,"+g;break;default:var g=await this.archive.readFile(a,b);d=g;}return await d}}window.customElements.define(BeakerBroker.tag,BeakerBroker);