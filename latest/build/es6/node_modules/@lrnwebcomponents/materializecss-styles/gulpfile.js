const gulp=require("gulp"),fs=require("fs"),path=require("path"),_=require("lodash"),rename=require("gulp-rename"),replace=require("gulp-replace"),stripCssComments=require("strip-css-comments"),decomment=require("decomment"),sourcemaps=require("gulp-sourcemaps"),packageJson=require("./package.json");gulp.task("merge",()=>{return gulp.src("./src/"+packageJson.wcfactory.elementName+".js").pipe(replace(/extends\s+PolymerElement\s+{/g,(a,b,c)=>{const d=c.slice(b).split("\n").join(" "),[,e]=/templateUrl\([^)]*\)\s*{\s*return\s+"([^"]+)"/.exec(d);let f=fs.readFileSync(path.join("./src",e)).toString().trim();f=decomment(f);const[,h]=/styleUrl\([^)]*\)\s*{\s*return\s+"([^"]+)"/.exec(d),i=path.join("./src",h);let j=fs.readFileSync(i);return j=stripCssComments(j).trim(),`${a}
  static get template() {
    return html\`
<style>
${j}
</style>
${f}\`;
  }
  // properties available to the custom element for data binding
  static get properties() {
    return ${"{}"};
  }`})).pipe(gulp.dest("./"))}),gulp.task("build",()=>{const a=require("child_process").spawn;let b=a("polymer",["build"]);return b.on("close",function(c){console.log("child process exited with code "+c)})}),gulp.task("analyze",()=>{var a=require("child_process").exec;return a("polymer analyze --input demo/index.html > analysis.json",function(b){null!==b&&console.log("exec error: "+b)})}),gulp.task("compile",()=>{return gulp.src("./build/es6/"+packageJson.wcfactory.elementName+".js").pipe(rename({suffix:".es6"})).pipe(gulp.dest("./")),gulp.src("./build/es5-amd/"+packageJson.wcfactory.elementName+".js").pipe(rename({suffix:".amd"})).pipe(gulp.dest("./")),gulp.src("./"+packageJson.wcfactory.elementName+".js").pipe(replace(/^(import .*?)(['"]\.\.\/(?!\.\.\/).*)(\.js['"];)$/gm,"$1$2.umd$3")).pipe(rename({suffix:".umd"})).pipe(gulp.dest("./"))}),gulp.task("watch",()=>{return gulp.watch("./src/*",gulp.series("merge","analyze"))}),gulp.task("sourcemaps",()=>{return gulp.src("./"+packageJson.wcfactory.elementName+".es6.js").pipe(sourcemaps.init()).pipe(sourcemaps.write("./"))}),gulp.task("dev",gulp.series("merge","analyze","watch")),gulp.task("default",gulp.series("merge","analyze","build","compile","sourcemaps"));