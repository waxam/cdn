import{html,Polymer}from"@polymer/polymer/polymer-legacy.js";import{dom}from"@polymer/polymer/lib/legacy/polymer.dom.js";import"@polymer/iron-list/iron-list.js";import"@polymer/iron-icon/iron-icon.js";import"@polymer/iron-icons/iron-icons.js";import"@polymer/paper-button/paper-button.js";import"@polymer/paper-dialog/paper-dialog.js";import"@polymer/paper-dialog-scrollable/paper-dialog-scrollable.js";import"@polymer/paper-ripple/paper-ripple.js";import"@polymer/paper-toast/paper-toast.js";import"@polymer/paper-icon-button/paper-icon-button.js";import"@polymer/neon-animation/neon-animation.js";import"@polymer/neon-animation/animations/scale-up-animation.js";import"@polymer/neon-animation/animations/scale-down-animation.js";import"@lrnwebcomponents/materializecss-styles/materializecss-styles.js";import"@lrnwebcomponents/simple-colors/simple-colors.js";import"./hax-app-picker-item.js";Polymer({_template:html`
    <style is="custom-style" include="materializecss-styles simple-colors">
      :host {
        display: block;
        --hax-app-picker-dialog-background-color: var(
          --simple-colors-default-theme-light-green-1
        );
      }
      hax-app-picker-item {
        -webkit-transition: 0.3s all linear;
        transition: 0.3s all linear;
        display: inline-flex;
      }
      #closedialog {
        float: right;
        top: 15px;
        right: 0;
        position: absolute;
        padding: 4px;
        margin: 0;
        color: var(--simple-colors-default-theme-light-green-1, green);
        background-color: transparent;
        width: 40px;
        height: 40px;
        min-width: unset;
      }
      #ironlist {
        width: 100%;
        height: 30vh;
      }
      #dialog {
        min-width: 30vw;
        min-height: 30vh;
        height: 30vw;
        width: 30vh;
        padding: 8px;
        overflow: hidden;
        background-color: rgba(0, 0, 0, 0.9);
        border-radius: 16px;
        z-index: 1000000;
        border: 2px solid var(--simple-colors-default-theme-light-green-1);
        @apply --hax-app-picker-dialog;
      }
      #title,
      .element-button > div {
        color: var(--hax-app-picker-dialog-text-color, #ffffff);
      }
      #title {
        padding: 16px;
        border-bottom: 2px solid
          var(--simple-colors-default-theme-light-green-1);
        margin: 0;
        width: calc(100% - 32px);
        color: var(--hax-app-picker-dialog-text-color, #ffffff);
        @apply --paper-font-title;
        @apply --hax-app-picker-dialog-title;
      }
      #buttonlist {
        display: block;
        text-align: left;
        margin: -32px;
        padding: 32px;
        overflow-x: hidden;
        overflow-y: auto;
        --paper-dialog-scrollable: {
          padding: 0 0 78px 0;
        }
      }
      @media (orientation: landscape) {
        #buttonlist,
        #ironlist,
        #dialog {
          width: 40vw;
          height: 50vh;
        }
      }
      @media (orientation: portrait) {
        #buttonlist,
        #ironlist,
        #dialog {
          width: 50vw;
          height: 60vh;
        }
      }
      .element-button {
        display: inline-block;
        width: 72px;
        margin: 8px 4px;
        text-align: center;
      }
      @media screen and (max-width: 550px) {
        #buttonlist,
        #ironlist,
        #dialog {
          max-width: 80%;
          overflow: auto;
        }
        .element-button {
          width: 54px;
          margin: 0px;
        }
      }
    </style>
    <paper-dialog id="dialog" with-backdrop always-on-top>
      <h3 id="title">[[title]]</h3>
      <paper-dialog-scrollable id="buttonlist">
        <iron-list id="ironlist" items="[[selectionList]]" as="element" grid>
          <template>
            <div>
              <hax-app-picker-item
                id$="picker-item-[[index]]"
                class="element-button"
                on-tap="_selected"
                data-selected\$="[[index]]"
                label="[[element.title]]"
                icon="[[element.icon]]"
                color="[[element.color]]"
              ></hax-app-picker-item>
            </div>
          </template>
        </iron-list>
      </paper-dialog-scrollable>
      <paper-button id="closedialog" on-tap="close">
        <iron-icon icon="icons:cancel" title="Close dialog"></iron-icon>
      </paper-button>
    </paper-dialog>
  `,is:"hax-app-picker",listeners:{"iron-overlay-canceled":"close","iron-overlay-closed":"close"},properties:{_elements:{type:Array,value:[]},selectionList:{type:Array,value:[]},title:{type:String,value:"Pick an options"},pickerType:{type:String,value:"gizmo"},opened:{type:Boolean,value:!1,observer:"_openedChanged"}},attached:function(){this.fire("hax-register-app-picker",this)},ready:function(){document.body.appendChild(this)},close:function(){this.opened=!1},_openedChanged:function(a){typeof a!==typeof void 0&&(a?(this.$.dialog.open(),setTimeout(()=>{this.$.ironlist.fire("iron-resize"),window.dispatchEvent(new Event("resize"))},100),document.body.style.overflow="hidden"):(this.$.dialog.close(),document.body.style.overflow=null))},presentOptions:function(a,b,c="Select an option",d="gizmo"){this.title=c,this.pickerType=d;var f=[];switch(d){case"gizmo":for(var g in a)a[g].__type=b,f[g]={icon:a[g].gizmo.icon,title:a[g].gizmo.title,color:a[g].gizmo.color};break;case"app":for(var g in a)f[g]={icon:a[g].details.icon,title:a[g].details.title,color:a[g].details.color};break;default:f=a;}this._elements=a,this.set("selectionList",[]),this.set("selectionList",f),this.opened=!0,setTimeout(()=>{this.shadowRoot.querySelector("#picker-item-0").focus()},100)},_selected:function(a){var b=dom(a);let c=b.localTarget.getAttribute("data-selected");a.preventDefault(),a.stopPropagation(),typeof this._elements[c]!==typeof void 0&&("gizmo"==this.pickerType?(window.HaxStore.write("activeHaxElement",this._elements[c],this),"__convert"===this._elements[c].__type&&(window.HaxStore.instance.haxManager.editExistingNode=!0),window.HaxStore.instance.haxManager.selectStep("configure"),window.HaxStore.instance.haxManager.open()):"delete"==this.pickerType?"Yes"===this._elements[c].title&&(window.HaxStore.instance.activeHaxBody.activeNode===window.HaxStore.instance.activeHaxBody.activeContainerNode?window.HaxStore.instance.activeHaxBody.haxDeleteNode(window.HaxStore.instance.activeHaxBody.activeNode):window.HaxStore.instance.activeHaxBody.haxDeleteNode(window.HaxStore.instance.activeHaxBody.activeNode,window.HaxStore.instance.activeHaxBody.activeContainerNode),window.HaxStore.toast("Element deleted",2e3)):this.fire("hax-app-picker-selection",this._elements[c])),this.opened=!1}});