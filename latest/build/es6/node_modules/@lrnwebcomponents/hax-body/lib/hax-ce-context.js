import{html,Polymer}from"@polymer/polymer/polymer-legacy.js";import{dom}from"@polymer/polymer/lib/legacy/polymer.dom.js";import"@polymer/app-layout/app-toolbar/app-toolbar.js";import"@polymer/paper-input/paper-textarea.js";import"@polymer/paper-input/paper-input.js";import"@polymer/paper-checkbox/paper-checkbox.js";import"./simple-colors-picker.js";import"./hax-context-item-menu.js";import"./hax-context-item.js";import"./hax-toolbar.js";Polymer({_template:html`
    <style>
      :host {
        display: block;
        height: 32px;
        background-color: white;
      }
      hax-context-item {
        margin: 0;
        height: 32px;
      }
      .human-name {
        font-size: 16px;
        border-top-left-radius: 25%;
        border-top-right-radius: 25%;
        line-height: 16px;
        font-family: sans-serif;
        width: -webkit-fit-content;
        width: -moz-max-content;
        width: fit-content;
        background-color: white;
      }
      .human-name-inner {
        font-size: 16px;
        border-top-left-radius: 25%;
        border-top-right-radius: 25%;
        margin: -32px 0px 0 34px;
        line-height: 16px;
        padding: 8px 16px 8px 8px;
        font-family: sans-serif;
        width: -webkit-fit-content;
        width: -moz-max-content;
        width: fit-content;
        background-color: black;
        color: white;
        opacity: 0.4;
        transition: 0.6s all ease;
      }
      :host(:hover) .human-name-inner {
        opacity: 1;
      }
      :host(.hax-context-pin-top) hax-toolbar {
        position: fixed;
        top: 64px;
        opacity: 0.95;
      }
      :host(.hax-context-pin-bottom) hax-toolbar {
        position: fixed;
        bottom: 0;
        opacity: 0.95;
      }
    </style>
    <div class="human-name">
      <div class="human-name-inner">[[humanName]]</div>
    </div>
    <hax-toolbar hax-properties="[[haxProperties]]" size="{{ceSize}}">
      <slot slot="primary"></slot>
      <hax-context-item
        slot="primary"
        icon="icons:settings"
        label="Settings"
        event-name="hax-manager-configure"
        hidden$="[[!__hasSettingsForm]]"
      ></hax-context-item>
      <hax-context-item
        slot="primary"
        icon="icons:view-quilt"
        label="[[__parentName]]"
        event-name="hax-manager-configure-container"
        hidden$="[[!__hasParentSettingsForm]]"
      ></hax-context-item>
    </hax-toolbar>
  `,is:"hax-ce-context",properties:{ceSize:{type:Number,value:100,observer:"_ceSizeChanged"},haxProperties:{type:Object,value:{},observer:"_haxPropertiesChanged"},humanName:{type:String}},setHaxProperties:function(a){this.set("haxProperties",{}),this.set("haxProperties",a)},_ceSizeChanged:function(a,b){typeof a!==typeof void 0&&typeof b!==typeof void 0&&this.fire("hax-context-item-selected",{eventName:"hax-size-change",value:a})},_haxPropertiesChanged:function(a,b){if(typeof b!=="undefined"&&typeof a.settings!=="undefined"){let e=dom(this);for(;null!==e.firstChild;)e.removeChild(e.firstChild);let f=a.settings.quick,g=a.settings.configure,h=a.settings.advanced;if(this.__hasSettingsForm=(g.length||h.length)&&"HR"!==a.element.tagName,this.__hasParentSettingsForm=!1,window.HaxStore.instance.activeContainerNode!==window.HaxStore.instance.activeNode)switch(this.__hasParentSettingsForm=!0,window.HaxStore.instance.activeContainerNode.tagName){case"P":case"UL":case"OL":case"DIV":this.__parentName="Text block settings";break;case"GRID-PLATE":this.__parentName="Layout settings";break;default:this.__parentName=window.HaxStore.instance.activeContainerNode.tagName.replace("-"," ").toLowerCase(),+" settings";}this.humanName="undefined"===typeof a.gizmo.title?window.HaxStore.instance.activeNode.tagName.replace("-"," ").toLowerCase():a.gizmo.title;for(var c,d=0;d<f.length;d++){let j=f[d];c=document.createElement("hax-context-item"),c.eventName="hax-edit-property",c.label=j.title,c.options=j.options,c.icon=j.icon,c.inputMethod=j.inputMethod,c.required=j.required,c.options=j.options,c.validation=j.validation,c.validationType=j.validationType,c.description=j.description,typeof j.property==="undefined"?typeof j.attribute==="undefined"?c.slotToBind=j.slot:c.propertyToBind=j.attribute:c.propertyToBind=j.property,e.appendChild(c)}}}});