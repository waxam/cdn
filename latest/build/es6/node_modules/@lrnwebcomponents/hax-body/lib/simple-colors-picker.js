import{html,Polymer}from"@polymer/polymer/polymer-legacy.js";import"@polymer/iron-icons/iron-icons.js";import"@polymer/iron-icons/image-icons.js";import"./simple-colors-picker-swatch.js";import"@lrnwebcomponents/simple-colors/simple-colors.js";Polymer({_template:html`
    <custom-style>
      <style is="custom-style">
        :host {
          display: inline-block;
          position: relative;
        }
        :host,
        :host #button,
        :host #palette {
          margin: 0;
          padding: 0;
        }
        :host #collapse {
          position: absolute;
          top: var(--simple-colors-picker-preview-size, 20px);
          margin-top: 12px;
        }
        :host([disabled]) #collapse,
        :host([collapsed]) #collapse {
          height: 0;
          overflow: hidden;
          transition: all 0.25s;
          transition-delay: 0.25s;
        }
        :host #palette {
          position: absolute;
          left: 0;
          right: 0;
          display: table;
          border-collapse: collapse;
          z-index: 1000;
          border: 1px solid;
          border-color: var(
            --simple-colors-picker-button-border-color,
            --simple-colors-background3
          );
        }
        :host .row {
          display: table-row;
        }
        :host simple-colors-picker-swatch {
          display: table-cell;
          padding-top: var(--simple-colors-picker-swatch-size, 20px);
          padding-left: var(--simple-colors-picker-swatch-size, 20px);
        }
        :host simple-colors-picker-swatch[disabled] {
          display: none;
        }
        :host .sr-only {
          display: table-cell;
          font-size: 0;
        }
        :host #button {
          display: flex;
          align-items: center;
          border: 1px solid;
          border-radius: 4px;
          color: var(
            --simple-colors-picker-button-color,
            --simple-colors-foreground2
          );
          border-color: var(
            --simple-colors-picker-button-border-color,
            --simple-colors-background3
          );
          background-color: var(
            --simple-colors-picker-button-bg-color,
            --simple-colors-background2
          );
        }
        :host([disabled]) #button,
        :host #button[disabled] {
          color: var(
            --simple-colors-picker-button-disabled-color,
            --simple-colors-foreground4
          );
          border-color: var(
            --simple-colors-picker-button-disabled-border-color,
            --simple-colors-background5
          );
          background-color: var(
            --simple-colors-picker-button-disabled-bg-color,
            --simple-colors-background4
          );
          cursor: not-allowed;
        }
        :host(:not([disabled])) #button:focus,
        :host(:not([disabled])) #button:hover {
          color: var(
            --simple-colors-picker-button-hover-color,
            --simple-colors-foreground1
          );
          border-color: var(
            --simple-colors-picker-button-hover-color,
            --simple-colors-background5
          );
          background-color: var(
            --simple-colors-picker-button-hover-bg-color,
            --simple-colors-background1
          );
        }
        :host #button > div {
          margin: 5px;
          border: 1px solid;
          flex-grow: 1;
          border-color: var(
            --simple-colors-picker-button-hover-color,
            --simple-colors-background5
          );
          display: inline-block;
        }
        :host #button > div,
        :host #button > div iron-icon {
          width: var(--simple-colors-picker-preview-size, 20px);
          height: var(--simple-colors-picker-preview-size, 20px);
        }
        :host(:not([collapsed])) #icon {
          transform: rotate(-90deg);
          transition: transform 0.25s;
        }
        :host #empty {
          padding: 15px;
        }
        @media screen and (max-width: 600px) {
          :host {
            position: static;
          }
          :host #collapse {
            top: 0;
            margin-top: 0;
            position: relative;
          }
          :host #palette {
            position: sticky;
          }
        }
      </style>
    </custom-style>
    <button id="button" label="[[label]]" disabled\$="[[disabled]]">
      <div id="swatch" style="[[selectedStyle]]">
        <iron-icon id="texture" icon="image:texture"></iron-icon>
      </div>
      <span id="icon"><iron-icon icon="arrow-drop-down"></iron-icon></span>
    </button>
    <div id="collapse" aria-collapsed="[[collapse]]">
      <div id="palette">
        <div id="empty">No colors available.</div>
        <template
          id="rows"
          is="dom-repeat"
          items="[[swatches]]"
          as="row"
          index-as="level"
        >
          <div class="row">
            <span id="level" class="sr-only">lightness level [[level]]</span>
            <template
              id="swatches"
              is="dom-repeat"
              items="[[row]]"
              as="swatch"
              index-as="order"
            >
              <simple-colors-picker-swatch
                aria-describedby="level"
                disabled="[[disabled]]"
                hex="[[swatch.hex]]"
                label="[[swatch.label]]"
                level="[[swatch.level]]"
                order="[[order]]"
                role="button"
                selected="[[swatch.selected]]"
                tabindex="0"
              >
              </simple-colors-picker-swatch>
            </template>
          </div>
        </template>
      </div>
    </div>
  `,is:"simple-colors-picker",listeners:{"click-swatch":"_onClickSwatch","previous-swatch":"_onPreviousSwatch","next-swatch":"_onNextSwatch","previous-level":"_onPreviousLevel","next-level":"_onNextLevel"},properties:{theme:{type:String,value:null},contrast:{type:String,value:null},contrastLargeText:{type:Boolean,value:!1},disabled:{type:Boolean,value:!1,reflectToAttribute:!0},collapsed:{type:Boolean,value:!0,reflectToAttribute:!0},label:{type:String,value:"Pick a color."},swatches:{type:Array,value:[]},value:{type:Object,value:null},selectedStyle:{type:String,computed:"_setSelectedStyle(value)"}},ready:function(){let a=this;a.updateSwatches(a.contrast,a.contrastLargeText),a.$.button.addEventListener("click",function(){a.toggleCollapse()}),a.$.button.addEventListener("keyup",function(b){(13===b.keyCode||32===b.keyCode)&&a.toggleCollapse(!1)})},updateSwatches:function(a,b){a=null===a?this.contrast:a,b=null===b?this.contrastLargeText:b,this.contrast=a,this.contrastLargeText=b;let c=this,d=a!==void 0&&null!==a,f=!1,g=1,h=!0,k=[],l=0;if(c.__hexCodes!==void 0&&null!==c.__hexCodes){if(d){let m=a.replace("--simple-colors-","").split("-theme-"),n=1<m.length?m[0]:"",o=m[m.length-1].split("-");f=1<o[0].length;let p=o[o.length-1];h=-1<p.indexOf("foreground"),size=!b,g=p[p.length-1]}for(let n,m=0;m<c.__hexCodes.colorLevels.length;m++){for(let o in n=[],c.__hexCodes){let p=f||"grey"!==o?c.__wcagaa.colors:c.__wcagaa.greys,q=b?p.large[parseInt(g)-1]:p.small[parseInt(g)-1];if("colorLevels"!==o&&"accent"!==o&&c.__hexCodes.hasOwnProperty(o)){let r=f&&"grey"!==o,s=!1,t="light"===c.theme&&h||"dark"===c.theme&&!h;!t&&(5>m||10-m>q)?s=!0:t&&(4<m||m+1>q)&&(s=!0),d&&(r||s)||(n.push({label:o,level:m+1,hex:c.__hexCodes[o][m],selected:!1}),l++)}}k.push(n)}}c.$.empty.style.display=0<l?"none":"block",c.$.rows.style.display=0===l?"none":"block",c._updateSelection(k)},_onClickSwatch:function(a){console.log("_onClickSwatch",a);let f,g,b="dark"===this.theme,c=null===this.theme?"":"-"+this.theme+"-theme",d=a.detail.label.replace(/([a-z])([A-Z])/g,"$1-$2").toLowerCase(),h=parseInt(a.detail.level),k=a.detail.hex;b?6>a.detail.level?f=!1:(f=!0,h=11-h):6>a.detail.level?f=!0:(f=!1,h=11-h),"dark"===c&&(f=!f),d="grey"===d?"":d,g=f?"foreground":"background",this.value={cssVariable:"--simple-colors"+c+"-"+d+"-"+g+h,hexCode:k},this._updateSelection(this.swatches),this.toggleCollapse(!0)},_updateSelection:function(a){let b=this,c=b.value!==void 0&&null!==b.value&&b.value.hexCode!==void 0;if(a!==void 0&&0<a.length){let d=[];for(let g,f=0;f<a.length;f++){g=[];for(let k,h=0;h<a[f].length;h++)k=a[f][h],k.selected=c&&b.value.hexCode===k.hex,g.push(k);d.push(g)}b.set("swatches",[]),b.$.rows.render(),b.set("swatches",d),b.$.rows.render()}},_onPreviousSwatch:function(a){let b=this.shadowRoot.querySelector("simple-colors-picker-swatch[order=\""+(a.detail.order-1)+"\"][level=\""+a.detail.level+"\"]");null!==b&&b.focus()},_onNextSwatch:function(a){let b=this.shadowRoot.querySelector("simple-colors-picker-swatch[order=\""+(a.detail.order+1)+"\"][level=\""+a.detail.level+"\"]");null!==b&&b.focus()},_onPreviousLevel:function(a){let b=this.shadowRoot.querySelector("simple-colors-picker-swatch[order=\""+a.detail.order+"\"][level=\""+(a.detail.level+1)+"\"]");null!==b&&b.focus()},_onNextLevel:function(a){let b=this.shadowRoot.querySelector("simple-colors-picker-swatch[order=\""+a.detail.order+"\"][level=\""+(a.detail.level-1)+"\"]");null!==b&&b.focus()},_setSelectedStyle:function(a){let b=null===a?"transparent":a.hexCode;return this.$.texture.style.display=null===a?"block":"none",void 0===this.__init?this.fire("change",this.value):this.__init=!0,"background: "+b+";"},toggleCollapse:function(a){a=a===void 0?!this.collapsed:a,this.collapsed=a,this.fire("toggleCollapse",this)}});