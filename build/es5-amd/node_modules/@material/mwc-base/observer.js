define(["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.observer = void 0;

  var observer = function observer(_observer) {
    return (// eslint-disable-next-line @typescript-eslint/no-explicit-any
      function (proto, propName) {
        // if we haven't wrapped `updated` in this class, do so
        if (!proto.constructor._observers) {
          proto.constructor._observers = new Map();
          var userUpdated = proto.updated;

          proto.updated = function (changedProperties) {
            var _this = this;

            userUpdated.call(this, changedProperties);
            changedProperties.forEach(function (v, k) {
              var observer = _this.constructor._observers.get(k);

              if (observer !== undefined) {
                observer.call(_this, _this[k], v);
              }
            });
          }; // clone any existing observers (superclasses)

        } else if (!proto.constructor.hasOwnProperty('_observers')) {
          var observers = proto.constructor._observers;
          proto.constructor._observers = new Map();
          observers.forEach( // eslint-disable-next-line @typescript-eslint/no-explicit-any
          function (v, k) {
            return proto.constructor._observers.set(k, v);
          });
        } // set this method


        proto.constructor._observers.set(propName, _observer);
      }
    );
  };

  _exports.observer = observer;
});