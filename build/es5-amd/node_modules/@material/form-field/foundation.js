define(["exports", "../../tslib/tslib.es6.js", "../base/foundation.js", "./constants.js"], function (_exports, _tslibEs, _foundation, _constants) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.default = _exports.MDCFormFieldFoundation = void 0;

  /**
   * @license
   * Copyright 2017 Google Inc.
   *
   * Permission is hereby granted, free of charge, to any person obtaining a copy
   * of this software and associated documentation files (the "Software"), to deal
   * in the Software without restriction, including without limitation the rights
   * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
   * copies of the Software, and to permit persons to whom the Software is
   * furnished to do so, subject to the following conditions:
   *
   * The above copyright notice and this permission notice shall be included in
   * all copies or substantial portions of the Software.
   *
   * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
   * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
   * THE SOFTWARE.
   */
  var MDCFormFieldFoundation =
  /** @class */
  function (_super) {
    (0, _tslibEs.__extends)(MDCFormFieldFoundation, _super);

    function MDCFormFieldFoundation(adapter) {
      var _this = _super.call(this, (0, _tslibEs.__assign)((0, _tslibEs.__assign)({}, MDCFormFieldFoundation.defaultAdapter), adapter)) || this;

      _this.click = function () {
        _this.handleClick();
      };

      return _this;
    }

    Object.defineProperty(MDCFormFieldFoundation, "cssClasses", {
      get: function get() {
        return _constants.cssClasses;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(MDCFormFieldFoundation, "strings", {
      get: function get() {
        return _constants.strings;
      },
      enumerable: true,
      configurable: true
    });
    Object.defineProperty(MDCFormFieldFoundation, "defaultAdapter", {
      get: function get() {
        return {
          activateInputRipple: function activateInputRipple() {
            return undefined;
          },
          deactivateInputRipple: function deactivateInputRipple() {
            return undefined;
          },
          deregisterInteractionHandler: function deregisterInteractionHandler() {
            return undefined;
          },
          registerInteractionHandler: function registerInteractionHandler() {
            return undefined;
          }
        };
      },
      enumerable: true,
      configurable: true
    });

    MDCFormFieldFoundation.prototype.init = function () {
      this.adapter.registerInteractionHandler('click', this.click);
    };

    MDCFormFieldFoundation.prototype.destroy = function () {
      this.adapter.deregisterInteractionHandler('click', this.click);
    };

    MDCFormFieldFoundation.prototype.handleClick = function () {
      var _this = this;

      this.adapter.activateInputRipple();
      requestAnimationFrame(function () {
        _this.adapter.deactivateInputRipple();
      });
    };

    return MDCFormFieldFoundation;
  }(_foundation.MDCFoundation);

  _exports.MDCFormFieldFoundation = MDCFormFieldFoundation;
  // tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.
  var _default = MDCFormFieldFoundation;
  _exports.default = _default;
});