define(["exports", "../../tslib/tslib.es6.js", "../mwc-icon/mwc-icon.js", "../mwc-ripple/mwc-ripple.js", "../mwc-ripple/ripple-handlers.js", "../../lit-element/lit-element.js", "../../lit-html/directives/class-map.js"], function (_exports, _tslibEs, _mwcIcon, _mwcRipple, _rippleHandlers, _litElement, _classMap) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.ButtonBase = void 0;

  function _templateObject4_c641bbd0577c11eb974577f038855fc7() {
    var data = babelHelpers.taggedTemplateLiteral(["\n    <mwc-icon class=\"mdc-button__icon\">\n      ", "\n    </mwc-icon>"]);

    _templateObject4_c641bbd0577c11eb974577f038855fc7 = function _templateObject4_c641bbd0577c11eb974577f038855fc7() {
      return data;
    };

    return data;
  }

  function _templateObject3_c641bbd0577c11eb974577f038855fc7() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <button\n          id=\"button\"\n          class=\"mdc-button ", "\"\n          ?disabled=\"", "\"\n          aria-label=\"", "\"\n          @focus=\"", "\"\n          @blur=\"", "\"\n          @mousedown=\"", "\"\n          @mouseenter=\"", "\"\n          @mouseleave=\"", "\"\n          @touchstart=\"", "\"\n          @touchend=\"", "\"\n          @touchcancel=\"", "\">\n        ", "\n        <span class=\"leading-icon\">\n          <slot name=\"icon\">\n            ", "\n          </slot>\n        </span>\n        <span class=\"mdc-button__label\">", "</span>\n        <slot></slot>\n        <span class=\"trailing-icon\">\n          <slot name=\"trailingIcon\">\n            ", "\n          </slot>\n        </span>\n      </button>"]);

    _templateObject3_c641bbd0577c11eb974577f038855fc7 = function _templateObject3_c641bbd0577c11eb974577f038855fc7() {
      return data;
    };

    return data;
  }

  function _templateObject2_c641bbd0577c11eb974577f038855fc7() {
    var data = babelHelpers.taggedTemplateLiteral(["<mwc-ripple .primary=\"", "\" .disabled=\"", "\"></mwc-ripple>"]);

    _templateObject2_c641bbd0577c11eb974577f038855fc7 = function _templateObject2_c641bbd0577c11eb974577f038855fc7() {
      return data;
    };

    return data;
  }

  function _templateObject_c641bbd0577c11eb974577f038855fc7() {
    var data = babelHelpers.taggedTemplateLiteral(["", ""]);

    _templateObject_c641bbd0577c11eb974577f038855fc7 = function _templateObject_c641bbd0577c11eb974577f038855fc7() {
      return data;
    };

    return data;
  }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  /** @soyCompatible */
  var ButtonBase = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(ButtonBase, _LitElement);

    var _super = _createSuper(ButtonBase);

    function ButtonBase() {
      var _this;

      babelHelpers.classCallCheck(this, ButtonBase);
      _this = _super.apply(this, arguments);
      _this.raised = false;
      _this.unelevated = false;
      _this.outlined = false;
      _this.dense = false;
      _this.disabled = false;
      _this.trailingIcon = false;
      _this.fullwidth = false;
      _this.icon = '';
      _this.label = '';
      _this.shouldRenderRipple = false;
      _this.rippleHandlers = new _rippleHandlers.RippleHandlers(function () {
        _this.shouldRenderRipple = true;
        return _this.ripple;
      });
      return _this;
    }
    /** @soyCompatible */


    babelHelpers.createClass(ButtonBase, [{
      key: "renderRipple",
      value: function renderRipple() {
        var filled = this.raised || this.unelevated;
        return (0, _litElement.html)(_templateObject_c641bbd0577c11eb974577f038855fc7(), this.shouldRenderRipple ? (0, _litElement.html)(_templateObject2_c641bbd0577c11eb974577f038855fc7(), !filled, this.disabled) : '');
      }
    }, {
      key: "createRenderRoot",
      value: function createRenderRoot() {
        return this.attachShadow({
          mode: 'open',
          delegatesFocus: true
        });
      }
    }, {
      key: "focus",
      value: function focus() {
        var buttonElement = this.buttonElement;

        if (buttonElement) {
          this.rippleHandlers.startFocus();
          buttonElement.focus();
        }
      }
    }, {
      key: "blur",
      value: function blur() {
        var buttonElement = this.buttonElement;

        if (buttonElement) {
          this.rippleHandlers.endFocus();
          buttonElement.blur();
        }
      }
      /** @soyCompatible */

    }, {
      key: "render",
      value: function render() {
        /** @classMap */
        var classes = {
          'mdc-button--raised': this.raised,
          'mdc-button--unelevated': this.unelevated,
          'mdc-button--outlined': this.outlined,
          'mdc-button--dense': this.dense
        };
        return (0, _litElement.html)(_templateObject3_c641bbd0577c11eb974577f038855fc7(), (0, _classMap.classMap)(classes), this.disabled, this.label || this.icon, this.handleRippleFocus, this.handleRippleBlur, this.handleRippleActivate, this.handleRippleMouseEnter, this.handleRippleMouseLeave, this.handleRippleActivate, this.handleRippleDeactivate, this.handleRippleDeactivate, this.renderRipple(), this.icon && !this.trailingIcon ? this.renderIcon() : '', this.label, this.icon && this.trailingIcon ? this.renderIcon() : '');
      }
      /** @soyCompatible */

    }, {
      key: "renderIcon",
      value: function renderIcon() {
        return (0, _litElement.html)(_templateObject4_c641bbd0577c11eb974577f038855fc7(), this.icon);
      }
    }, {
      key: "handleRippleActivate",
      value: function handleRippleActivate(evt) {
        var _this2 = this;

        var onUp = function onUp() {
          window.removeEventListener('mouseup', onUp);

          _this2.handleRippleDeactivate();
        };

        window.addEventListener('mouseup', onUp);
        this.rippleHandlers.startPress(evt);
      }
    }, {
      key: "handleRippleDeactivate",
      value: function handleRippleDeactivate() {
        this.rippleHandlers.endPress();
      }
    }, {
      key: "handleRippleMouseEnter",
      value: function handleRippleMouseEnter() {
        this.rippleHandlers.startHover();
      }
    }, {
      key: "handleRippleMouseLeave",
      value: function handleRippleMouseLeave() {
        this.rippleHandlers.endHover();
      }
    }, {
      key: "handleRippleFocus",
      value: function handleRippleFocus() {
        this.rippleHandlers.startFocus();
      }
    }, {
      key: "handleRippleBlur",
      value: function handleRippleBlur() {
        this.rippleHandlers.endFocus();
      }
    }]);
    return ButtonBase;
  }(_litElement.LitElement);

  _exports.ButtonBase = ButtonBase;
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    type: Boolean
  })], ButtonBase.prototype, "raised", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    type: Boolean
  })], ButtonBase.prototype, "unelevated", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    type: Boolean
  })], ButtonBase.prototype, "outlined", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    type: Boolean
  })], ButtonBase.prototype, "dense", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    type: Boolean,
    reflect: true
  })], ButtonBase.prototype, "disabled", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    type: Boolean,
    attribute: 'trailingicon'
  })], ButtonBase.prototype, "trailingIcon", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    type: Boolean,
    reflect: true
  })], ButtonBase.prototype, "fullwidth", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    type: String
  })], ButtonBase.prototype, "icon", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    type: String
  })], ButtonBase.prototype, "label", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.query)('#button')], ButtonBase.prototype, "buttonElement", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.queryAsync)('mwc-ripple')], ButtonBase.prototype, "ripple", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.internalProperty)()], ButtonBase.prototype, "shouldRenderRipple", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.eventOptions)({
    passive: true
  })], ButtonBase.prototype, "handleRippleActivate", null);
});