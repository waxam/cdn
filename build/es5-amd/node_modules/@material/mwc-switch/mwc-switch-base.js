define(["exports", "../../tslib/tslib.es6.js", "../mwc-ripple/mwc-ripple.js", "../mwc-base/form-element.js", "../mwc-base/observer.js", "../mwc-ripple/ripple-handlers.js", "../switch/foundation.js", "../../lit-element/lit-element.js"], function (_exports, _tslibEs, _mwcRipple, _formElement, _observer, _rippleHandlers, _foundation, _litElement) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SwitchBase = void 0;
  _foundation = babelHelpers.interopRequireDefault(_foundation);

  function _templateObject4_729b1ef0552d11ebb4022f4768b4777e() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <div class=\"mdc-switch\">\n        <div class=\"mdc-switch__track\"></div>\n        <div class=\"mdc-switch__thumb-underlay\">\n          ", "\n          <div class=\"mdc-switch__thumb\">\n            <input\n              type=\"checkbox\"\n              id=\"basic-switch\"\n              class=\"mdc-switch__native-control\"\n              role=\"switch\"\n              @change=\"", "\"\n              @focus=\"", "\"\n              @blur=\"", "\"\n              @mousedown=\"", "\"\n              @mouseenter=\"", "\"\n              @mouseleave=\"", "\"\n              @touchstart=\"", "\"\n              @touchend=\"", "\"\n              @touchcancel=\"", "\">\n          </div>\n        </div>\n      </div>"]);

    _templateObject4_729b1ef0552d11ebb4022f4768b4777e = function _templateObject4_729b1ef0552d11ebb4022f4768b4777e() {
      return data;
    };

    return data;
  }

  function _templateObject3_729b1ef0552d11ebb4022f4768b4777e() {
    var data = babelHelpers.taggedTemplateLiteral([""]);

    _templateObject3_729b1ef0552d11ebb4022f4768b4777e = function _templateObject3_729b1ef0552d11ebb4022f4768b4777e() {
      return data;
    };

    return data;
  }

  function _templateObject2_729b1ef0552d11ebb4022f4768b4777e() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        <mwc-ripple \n          .accent=\"", "\" \n          .disabled=\"", "\" \n          unbounded>\n        </mwc-ripple>"]);

    _templateObject2_729b1ef0552d11ebb4022f4768b4777e = function _templateObject2_729b1ef0552d11ebb4022f4768b4777e() {
      return data;
    };

    return data;
  }

  function _templateObject_729b1ef0552d11ebb4022f4768b4777e() {
    var data = babelHelpers.taggedTemplateLiteral(["", ""]);

    _templateObject_729b1ef0552d11ebb4022f4768b4777e = function _templateObject_729b1ef0552d11ebb4022f4768b4777e() {
      return data;
    };

    return data;
  }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  var SwitchBase = /*#__PURE__*/function (_FormElement) {
    babelHelpers.inherits(SwitchBase, _FormElement);

    var _super = _createSuper(SwitchBase);

    function SwitchBase() {
      var _this;

      babelHelpers.classCallCheck(this, SwitchBase);
      _this = _super.apply(this, arguments);
      _this.checked = false;
      _this.disabled = false;
      _this.shouldRenderRipple = false;
      _this.mdcFoundationClass = _foundation.default;
      _this.rippleHandlers = new _rippleHandlers.RippleHandlers(function () {
        _this.shouldRenderRipple = true;
        return _this.ripple;
      });
      return _this;
    }

    babelHelpers.createClass(SwitchBase, [{
      key: "changeHandler",
      value: function changeHandler(e) {
        this.mdcFoundation.handleChange(e); // catch "click" event and sync properties

        this.checked = this.formElement.checked;
      }
    }, {
      key: "createAdapter",
      value: function createAdapter() {
        var _this2 = this;

        return Object.assign(Object.assign({}, (0, _formElement.addHasRemoveClass)(this.mdcRoot)), {
          setNativeControlChecked: function setNativeControlChecked(checked) {
            _this2.formElement.checked = checked;
          },
          setNativeControlDisabled: function setNativeControlDisabled(disabled) {
            _this2.formElement.disabled = disabled;
          },
          setNativeControlAttr: function setNativeControlAttr(attr, value) {
            _this2.formElement.setAttribute(attr, value);
          }
        });
      }
    }, {
      key: "renderRipple",
      value: function renderRipple() {
        return (0, _litElement.html)(_templateObject_729b1ef0552d11ebb4022f4768b4777e(), this.shouldRenderRipple ? (0, _litElement.html)(_templateObject2_729b1ef0552d11ebb4022f4768b4777e(), this.checked, this.disabled) : (0, _litElement.html)(_templateObject3_729b1ef0552d11ebb4022f4768b4777e()));
      }
    }, {
      key: "focus",
      value: function focus() {
        var formElement = this.formElement;

        if (formElement) {
          this.rippleHandlers.startFocus();
          formElement.focus();
        }
      }
    }, {
      key: "blur",
      value: function blur() {
        var formElement = this.formElement;

        if (formElement) {
          this.rippleHandlers.endFocus();
          formElement.blur();
        }
      }
    }, {
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject4_729b1ef0552d11ebb4022f4768b4777e(), this.renderRipple(), this.changeHandler, this.handleRippleFocus, this.handleRippleBlur, this.handleRippleMouseDown, this.handleRippleMouseEnter, this.handleRippleMouseLeave, this.handleRippleTouchStart, this.handleRippleDeactivate, this.handleRippleDeactivate);
      }
    }, {
      key: "handleRippleMouseDown",
      value: function handleRippleMouseDown(event) {
        var _this3 = this;

        var onUp = function onUp() {
          window.removeEventListener('mouseup', onUp);

          _this3.handleRippleDeactivate();
        };

        window.addEventListener('mouseup', onUp);
        this.rippleHandlers.startPress(event);
      }
    }, {
      key: "handleRippleTouchStart",
      value: function handleRippleTouchStart(event) {
        this.rippleHandlers.startPress(event);
      }
    }, {
      key: "handleRippleDeactivate",
      value: function handleRippleDeactivate() {
        this.rippleHandlers.endPress();
      }
    }, {
      key: "handleRippleMouseEnter",
      value: function handleRippleMouseEnter() {
        this.rippleHandlers.startHover();
      }
    }, {
      key: "handleRippleMouseLeave",
      value: function handleRippleMouseLeave() {
        this.rippleHandlers.endHover();
      }
    }, {
      key: "handleRippleFocus",
      value: function handleRippleFocus() {
        this.rippleHandlers.startFocus();
      }
    }, {
      key: "handleRippleBlur",
      value: function handleRippleBlur() {
        this.rippleHandlers.endFocus();
      }
    }]);
    return SwitchBase;
  }(_formElement.FormElement);

  _exports.SwitchBase = SwitchBase;
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    type: Boolean
  }), (0, _observer.observer)(function (value) {
    this.mdcFoundation.setChecked(value);
  })], SwitchBase.prototype, "checked", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    type: Boolean
  }), (0, _observer.observer)(function (value) {
    this.mdcFoundation.setDisabled(value);
  })], SwitchBase.prototype, "disabled", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.query)('.mdc-switch')], SwitchBase.prototype, "mdcRoot", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.query)('input')], SwitchBase.prototype, "formElement", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.queryAsync)('mwc-ripple')], SwitchBase.prototype, "ripple", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.internalProperty)()], SwitchBase.prototype, "shouldRenderRipple", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.eventOptions)({
    passive: true
  })], SwitchBase.prototype, "handleRippleMouseDown", null);
  (0, _tslibEs.__decorate)([(0, _litElement.eventOptions)({
    passive: true
  })], SwitchBase.prototype, "handleRippleTouchStart", null);
});