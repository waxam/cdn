define(["exports", "../../tslib/tslib.es6.js", "../mwc-base/base-element.js", "../ripple/foundation.js", "../../lit-element/lit-element.js", "../../lit-html/directives/class-map.js", "../../lit-html/directives/style-map.js"], function (_exports, _tslibEs, _baseElement, _foundation, _litElement, _classMap, _styleMap) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.RippleBase = void 0;
  _foundation = babelHelpers.interopRequireDefault(_foundation);

  function _templateObject_4505ec20d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        <div class=\"mdc-ripple-surface mdc-ripple-upgraded ", "\"\n          style=\"", "\"\n          ?data-mdc-ripple-is-unbounded=\"", "\">\n        </div>"]);

    _templateObject_4505ec20d34d11ea880ba1e93364c49c = function _templateObject_4505ec20d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  /** @soyCompatible */
  var RippleBase =
  /*#__PURE__*/
  function (_BaseElement) {
    babelHelpers.inherits(RippleBase, _BaseElement);

    function RippleBase() {
      var _this;

      babelHelpers.classCallCheck(this, RippleBase);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(RippleBase).apply(this, arguments));
      _this.primary = false;
      _this.accent = false;
      _this.unbounded = false;
      _this.disabled = false;
      _this.light = false;
      _this.hovering = false;
      _this.bgFocused = false;
      _this.fgActivation = false;
      _this.fgDeactivation = false;
      _this.fgScale = '';
      _this.fgSize = '';
      _this.translateStart = '';
      _this.translateEnd = '';
      _this.leftPos = '';
      _this.topPos = '';
      _this.mdcFoundationClass = _foundation.default;
      return _this;
    }

    babelHelpers.createClass(RippleBase, [{
      key: "createAdapter",
      value: function createAdapter() {
        var _this2 = this;

        return {
          browserSupportsCssVars: function browserSupportsCssVars() {
            return true;
          },
          isUnbounded: function isUnbounded() {
            return _this2.unbounded;
          },
          isSurfaceActive: function isSurfaceActive() {
            return (_this2.parentElement || _this2).matches(':active');
          },
          isSurfaceDisabled: function isSurfaceDisabled() {
            return _this2.disabled;
          },
          addClass: function addClass(className) {
            switch (className) {
              case 'mdc-ripple-upgraded--background-focused':
                _this2.bgFocused = true;
                break;

              case 'mdc-ripple-upgraded--foreground-activation':
                _this2.fgActivation = true;
                break;

              case 'mdc-ripple-upgraded--foreground-deactivation':
                _this2.fgDeactivation = true;
                break;

              default:
                break;
            }
          },
          removeClass: function removeClass(className) {
            switch (className) {
              case 'mdc-ripple-upgraded--background-focused':
                _this2.bgFocused = false;
                break;

              case 'mdc-ripple-upgraded--foreground-activation':
                _this2.fgActivation = false;
                break;

              case 'mdc-ripple-upgraded--foreground-deactivation':
                _this2.fgDeactivation = false;
                break;

              default:
                break;
            }
          },
          containsEventTarget: function containsEventTarget() {
            return true;
          },
          registerInteractionHandler: function registerInteractionHandler() {
            return undefined;
          },
          deregisterInteractionHandler: function deregisterInteractionHandler() {
            return undefined;
          },
          registerDocumentInteractionHandler: function registerDocumentInteractionHandler() {
            return undefined;
          },
          deregisterDocumentInteractionHandler: function deregisterDocumentInteractionHandler() {
            return undefined;
          },
          registerResizeHandler: function registerResizeHandler() {
            return undefined;
          },
          deregisterResizeHandler: function deregisterResizeHandler() {
            return undefined;
          },
          updateCssVariable: function updateCssVariable(varName, value) {
            switch (varName) {
              case '--mdc-ripple-fg-scale':
                _this2.fgScale = value;
                break;

              case '--mdc-ripple-fg-size':
                _this2.fgSize = value;
                break;

              case '--mdc-ripple-fg-translate-end':
                _this2.translateEnd = value;
                break;

              case '--mdc-ripple-fg-translate-start':
                _this2.translateStart = value;
                break;

              case '--mdc-ripple-left':
                _this2.leftPos = value;
                break;

              case '--mdc-ripple-top':
                _this2.topPos = value;
                break;

              default:
                break;
            }
          },
          computeBoundingRect: function computeBoundingRect() {
            return (_this2.parentElement || _this2).getBoundingClientRect();
          },
          getWindowPageOffset: function getWindowPageOffset() {
            return {
              x: window.pageXOffset,
              y: window.pageYOffset
            };
          }
        };
      }
    }, {
      key: "activate",
      value: function activate(ev) {
        var _this3 = this;

        this.waitForFoundation(function () {
          _this3.mdcFoundation.activate(ev);
        });
      }
    }, {
      key: "deactivate",
      value: function deactivate() {
        var _this4 = this;

        this.waitForFoundation(function () {
          _this4.mdcFoundation.deactivate();
        });
      }
    }, {
      key: "handleFocus",
      value: function handleFocus() {
        var _this5 = this;

        this.waitForFoundation(function () {
          _this5.mdcFoundation.handleFocus();
        });
      }
    }, {
      key: "handleBlur",
      value: function handleBlur() {
        var _this6 = this;

        this.waitForFoundation(function () {
          _this6.mdcFoundation.handleBlur();
        });
      }
    }, {
      key: "handleMouseEnter",
      value: function handleMouseEnter() {
        this.hovering = true;
      }
    }, {
      key: "handleMouseLeave",
      value: function handleMouseLeave() {
        this.hovering = false;
      }
      /**
       * Wait for the MDCFoundation to be created by `firstUpdated`
       */

    }, {
      key: "waitForFoundation",
      value: function waitForFoundation(fn) {
        if (this.mdcFoundation) {
          fn();
        } else {
          this.updateComplete.then(fn);
        }
      }
      /** @soyCompatible */

    }, {
      key: "render",
      value: function render() {
        /** @classMap */
        var classes = {
          'mdc-ripple-upgraded--unbounded': this.unbounded,
          'mdc-ripple-upgraded--background-focused': this.bgFocused,
          'mdc-ripple-upgraded--foreground-activation': this.fgActivation,
          'mdc-ripple-upgraded--foreground-deactivation': this.fgDeactivation,
          'hover': this.hovering,
          'primary': this.primary,
          'accent': this.accent,
          'disabled': this.disabled,
          'light': this.light
        };
        return (0, _litElement.html)(_templateObject_4505ec20d34d11ea880ba1e93364c49c(), (0, _classMap.classMap)(classes), (0, _styleMap.styleMap)({
          '--mdc-ripple-fg-scale': this.fgScale,
          '--mdc-ripple-fg-size': this.fgSize,
          '--mdc-ripple-fg-translate-end': this.translateEnd,
          '--mdc-ripple-fg-translate-start': this.translateStart,
          '--mdc-ripple-left': this.leftPos,
          '--mdc-ripple-top': this.topPos
        }), this.unbounded);
      }
    }]);
    return RippleBase;
  }(_baseElement.BaseElement);

  _exports.RippleBase = RippleBase;
  (0, _tslibEs.__decorate)([(0, _litElement.query)('.mdc-ripple-surface')], RippleBase.prototype, "mdcRoot", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    type: Boolean
  })], RippleBase.prototype, "primary", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    type: Boolean
  })], RippleBase.prototype, "accent", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    type: Boolean
  })], RippleBase.prototype, "unbounded", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    type: Boolean
  })], RippleBase.prototype, "disabled", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    type: Boolean
  })], RippleBase.prototype, "light", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    attribute: false
  })], RippleBase.prototype, "hovering", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    attribute: false
  })], RippleBase.prototype, "bgFocused", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    attribute: false
  })], RippleBase.prototype, "fgActivation", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    attribute: false
  })], RippleBase.prototype, "fgDeactivation", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    attribute: false
  })], RippleBase.prototype, "fgScale", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    attribute: false
  })], RippleBase.prototype, "fgSize", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    attribute: false
  })], RippleBase.prototype, "translateStart", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    attribute: false
  })], RippleBase.prototype, "translateEnd", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    attribute: false
  })], RippleBase.prototype, "leftPos", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    attribute: false
  })], RippleBase.prototype, "topPos", void 0);
});