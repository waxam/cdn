define(["exports", "../../tslib/tslib.es6.js", "../form-field/foundation.js", "../mwc-base/base-element.js", "../mwc-base/form-element.js", "../mwc-base/observer.js", "../mwc-base/utils.js", "../../lit-element/lit-element.js", "../../lit-html/directives/class-map.js"], function (_exports, _tslibEs, _foundation, _baseElement, _formElement, _observer, _utils, _litElement, _classMap) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.FormfieldBase = void 0;
  _foundation = babelHelpers.interopRequireDefault(_foundation);

  function _templateObject_449aa730d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <div class=\"mdc-form-field ", "\">\n        <slot></slot>\n        <label class=\"mdc-label\"\n               @click=\"", "\">", "</label>\n      </div>"]);

    _templateObject_449aa730d34d11ea880ba1e93364c49c = function _templateObject_449aa730d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  var FormfieldBase =
  /*#__PURE__*/
  function (_BaseElement) {
    babelHelpers.inherits(FormfieldBase, _BaseElement);

    function FormfieldBase() {
      var _this;

      babelHelpers.classCallCheck(this, FormfieldBase);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(FormfieldBase).apply(this, arguments));
      _this.alignEnd = false;
      _this.label = '';
      _this.mdcFoundationClass = _foundation.default;
      return _this;
    }

    babelHelpers.createClass(FormfieldBase, [{
      key: "createAdapter",
      value: function createAdapter() {
        var _this2 = this;

        return {
          registerInteractionHandler: function registerInteractionHandler(type, handler) {
            _this2.labelEl.addEventListener(type, handler);
          },
          deregisterInteractionHandler: function deregisterInteractionHandler(type, handler) {
            _this2.labelEl.removeEventListener(type, handler);
          },
          activateInputRipple: function () {
            var _activateInputRipple = babelHelpers.asyncToGenerator(
            /*#__PURE__*/
            regeneratorRuntime.mark(function _callee() {
              var input, ripple;
              return regeneratorRuntime.wrap(function _callee$(_context) {
                while (1) {
                  switch (_context.prev = _context.next) {
                    case 0:
                      input = _this2.input;

                      if (!babelHelpers.instanceof(input, _formElement.FormElement)) {
                        _context.next = 6;
                        break;
                      }

                      _context.next = 4;
                      return input.ripple;

                    case 4:
                      ripple = _context.sent;

                      if (ripple) {
                        ripple.activate();
                      }

                    case 6:
                    case "end":
                      return _context.stop();
                  }
                }
              }, _callee);
            }));

            function activateInputRipple() {
              return _activateInputRipple.apply(this, arguments);
            }

            return activateInputRipple;
          }(),
          deactivateInputRipple: function () {
            var _deactivateInputRipple = babelHelpers.asyncToGenerator(
            /*#__PURE__*/
            regeneratorRuntime.mark(function _callee2() {
              var input, ripple;
              return regeneratorRuntime.wrap(function _callee2$(_context2) {
                while (1) {
                  switch (_context2.prev = _context2.next) {
                    case 0:
                      input = _this2.input;

                      if (!babelHelpers.instanceof(input, _formElement.FormElement)) {
                        _context2.next = 6;
                        break;
                      }

                      _context2.next = 4;
                      return input.ripple;

                    case 4:
                      ripple = _context2.sent;

                      if (ripple) {
                        ripple.deactivate();
                      }

                    case 6:
                    case "end":
                      return _context2.stop();
                  }
                }
              }, _callee2);
            }));

            function deactivateInputRipple() {
              return _deactivateInputRipple.apply(this, arguments);
            }

            return deactivateInputRipple;
          }()
        };
      }
    }, {
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_449aa730d34d11ea880ba1e93364c49c(), (0, _classMap.classMap)({
          'mdc-form-field--align-end': this.alignEnd
        }), this._labelClick, this.label);
      }
    }, {
      key: "_labelClick",
      value: function _labelClick() {
        var input = this.input;

        if (input) {
          input.focus();
          input.click();
        }
      }
    }, {
      key: "input",
      get: function get() {
        return (0, _utils.findAssignedElement)(this.slotEl, '*');
      }
    }]);
    return FormfieldBase;
  }(_baseElement.BaseElement);

  _exports.FormfieldBase = FormfieldBase;
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    type: Boolean
  })], FormfieldBase.prototype, "alignEnd", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.property)({
    type: String
  }), (0, _observer.observer)(
  /*#__PURE__*/
  function () {
    var _ref = babelHelpers.asyncToGenerator(
    /*#__PURE__*/
    regeneratorRuntime.mark(function _callee3(label) {
      var input;
      return regeneratorRuntime.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              input = this.input;

              if (!input) {
                _context3.next = 10;
                break;
              }

              if (!(input.localName === 'input')) {
                _context3.next = 6;
                break;
              }

              input.setAttribute('aria-label', label);
              _context3.next = 10;
              break;

            case 6:
              if (!babelHelpers.instanceof(input, _formElement.FormElement)) {
                _context3.next = 10;
                break;
              }

              _context3.next = 9;
              return input.updateComplete;

            case 9:
              input.setAriaLabel(label);

            case 10:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3, this);
    }));

    return function (_x) {
      return _ref.apply(this, arguments);
    };
  }())], FormfieldBase.prototype, "label", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.query)('.mdc-form-field')], FormfieldBase.prototype, "mdcRoot", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.query)('slot')], FormfieldBase.prototype, "slotEl", void 0);
  (0, _tslibEs.__decorate)([(0, _litElement.query)('label')], FormfieldBase.prototype, "labelEl", void 0);
});