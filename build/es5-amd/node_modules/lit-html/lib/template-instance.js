define(["exports","./dom.js","./template.js"],function(_exports,_dom,_template){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.TemplateInstance=void 0;/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */ /**
 * @module lit-html
 */ /**
 * An instance of a `Template` that can be attached to the DOM and updated
 * with new values.
 */var TemplateInstance=/*#__PURE__*/function(){function TemplateInstance(template,processor,options){babelHelpers.classCallCheck(this,TemplateInstance);this._parts=[];this.template=template;this.processor=processor;this.options=options}babelHelpers.createClass(TemplateInstance,[{key:"update",value:function update(values){var i=0,_iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;try{for(var _iterator=this._parts[Symbol.iterator](),_step,part;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){part=_step.value;if(part!==void 0){part.setValue(values[i])}i++}}catch(err){_didIteratorError=!0;_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&null!=_iterator.return){_iterator.return()}}finally{if(_didIteratorError){throw _iteratorError}}}var _iteratorNormalCompletion2=!0,_didIteratorError2=!1,_iteratorError2=void 0;try{for(var _iterator2=this._parts[Symbol.iterator](),_step2,_part;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=!0){_part=_step2.value;if(_part!==void 0){_part.commit()}}}catch(err){_didIteratorError2=!0;_iteratorError2=err}finally{try{if(!_iteratorNormalCompletion2&&null!=_iterator2.return){_iterator2.return()}}finally{if(_didIteratorError2){throw _iteratorError2}}}}},{key:"_clone",value:function _clone(){var _this=this,fragment=_dom.isCEPolyfill?this.template.element.content.cloneNode(!0):document.importNode(this.template.element.content,!0),parts=this.template.parts,partIndex=0,nodeIndex=0,_prepareInstance=function _prepareInstance(fragment){// Edge needs all 4 parameters present; IE11 needs 3rd parameter to be
// null
var walker=document.createTreeWalker(fragment,133/* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,null,!1),node=walker.nextNode();// Loop through all the nodes and parts of a template
while(partIndex<parts.length&&null!==node){var part=parts[partIndex];// Consecutive Parts may have the same node index, in the case of
// multiple bound attributes on an element. So each iteration we either
// increment the nodeIndex, if we aren't on a node with a part, or the
// partIndex if we are. By not incrementing the nodeIndex when we find a
// part, we allow for the next part to be associated with the current
// node if neccessasry.
if(!(0,_template.isTemplatePartActive)(part)){_this._parts.push(void 0);partIndex++}else if(nodeIndex===part.index){if("node"===part.type){var _part2=_this.processor.handleTextExpression(_this.options);_part2.insertAfterNode(node.previousSibling);_this._parts.push(_part2)}else{var _this$_parts;(_this$_parts=_this._parts).push.apply(_this$_parts,babelHelpers.toConsumableArray(_this.processor.handleAttributeExpressions(node,part.name,part.strings,_this.options)))}partIndex++}else{nodeIndex++;if("TEMPLATE"===node.nodeName){_prepareInstance(node.content)}node=walker.nextNode()}}};_prepareInstance(fragment);if(_dom.isCEPolyfill){document.adoptNode(fragment);customElements.upgrade(fragment)}return fragment}}]);return TemplateInstance}();//# sourceMappingURL=template-instance.js.map
_exports.TemplateInstance=TemplateInstance});