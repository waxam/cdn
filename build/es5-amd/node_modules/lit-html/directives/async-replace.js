define(["exports", "../lit-html.js", "../directive.js", "../async-directive.js", "./private-async-helpers.js"], function (_exports, _litHtml, _directive, _asyncDirective, _privateAsyncHelpers) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.asyncReplace = _exports.AsyncReplaceDirective = void 0;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * @license
   * Copyright 2017 Google LLC
   * SPDX-License-Identifier: BSD-3-Clause
   */
  var o = /*#__PURE__*/function (_s) {
    babelHelpers.inherits(o, _s);

    var _super = _createSuper(o);

    function o() {
      var _this;

      babelHelpers.classCallCheck(this, o);
      _this = _super.apply(this, arguments), _this._$CG = new _privateAsyncHelpers.PseudoWeakRef(babelHelpers.assertThisInitialized(_this)), _this._$CK = new _privateAsyncHelpers.Pauser();
      return _this;
    }

    babelHelpers.createClass(o, [{
      key: "render",
      value: function render(i, s) {
        return _litHtml.noChange;
      }
    }, {
      key: "update",
      value: function update(i, _ref) {
        var _ref2 = babelHelpers.slicedToArray(_ref, 2),
            s = _ref2[0],
            r = _ref2[1];

        if (this.isConnected || this.disconnected(), s === this._$CX) return;
        this._$CX = s;
        var e = 0;
        var _o = this._$CG,
            h = this._$CK;
        return (0, _privateAsyncHelpers.forAwaitOf)(s, /*#__PURE__*/function () {
          var _ref3 = babelHelpers.asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(t) {
            var i;
            return regeneratorRuntime.wrap(function _callee$(_context) {
              while (1) {
                switch (_context.prev = _context.next) {
                  case 0:
                    if (!h.get()) {
                      _context.next = 5;
                      break;
                    }

                    _context.next = 3;
                    return h.get();

                  case 3:
                    _context.next = 0;
                    break;

                  case 5:
                    i = _o.deref();

                    if (!(void 0 !== i)) {
                      _context.next = 10;
                      break;
                    }

                    if (!(i._$CX !== s)) {
                      _context.next = 9;
                      break;
                    }

                    return _context.abrupt("return", !1);

                  case 9:
                    void 0 !== r && (t = r(t, e)), i.commitValue(t, e), e++;

                  case 10:
                    return _context.abrupt("return", !0);

                  case 11:
                  case "end":
                    return _context.stop();
                }
              }
            }, _callee);
          }));

          return function (_x) {
            return _ref3.apply(this, arguments);
          };
        }()), _litHtml.noChange;
      }
    }, {
      key: "commitValue",
      value: function commitValue(t, i) {
        this.setValue(t);
      }
    }, {
      key: "disconnected",
      value: function disconnected() {
        this._$CG.disconnect(), this._$CK.pause();
      }
    }, {
      key: "reconnected",
      value: function reconnected() {
        this._$CG.reconnect(this), this._$CK.resume();
      }
    }]);
    return o;
  }(_asyncDirective.AsyncDirective);

  _exports.AsyncReplaceDirective = o;
  var h = (0, _directive.directive)(o);
  _exports.asyncReplace = h;
});