define(["exports", "../utils/resizeObservers.js", "../ResizeObserverEntry.js", "./calculateDepthForNode.js", "./calculateBoxSize.js"], function (_exports, _resizeObservers, _ResizeObserverEntry, _calculateDepthForNode, _calculateBoxSize) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.broadcastActiveObservations = void 0;

  var broadcastActiveObservations = function broadcastActiveObservations() {
    var shallowestDepth = Infinity;
    var callbacks = [];

    _resizeObservers.resizeObservers.forEach(function processObserver(ro) {
      if (ro.activeTargets.length === 0) {
        return;
      }

      var entries = [];
      ro.activeTargets.forEach(function processTarget(ot) {
        var entry = new _ResizeObserverEntry.ResizeObserverEntry(ot.target);
        var targetDepth = (0, _calculateDepthForNode.calculateDepthForNode)(ot.target);
        entries.push(entry);
        ot.lastReportedSize = (0, _calculateBoxSize.calculateBoxSize)(ot.target, ot.observedBox);

        if (targetDepth < shallowestDepth) {
          shallowestDepth = targetDepth;
        }
      });
      callbacks.push(function resizeObserverCallback() {
        ro.callback.call(ro.observer, entries, ro.observer);
      });
      ro.activeTargets.splice(0, ro.activeTargets.length);
    });

    for (var _i = 0, callbacks_1 = callbacks; _i < callbacks_1.length; _i++) {
      var callback = callbacks_1[_i];
      callback();
    }

    return shallowestDepth;
  };

  _exports.broadcastActiveObservations = broadcastActiveObservations;
});