/*jshint multistr: true */ // TODO: Should we split up the generic parts needed by the editor(and others), and the parts needed to "run" H5Ps?
/** @namespace */var H5P=window.H5P=window.H5P||{};/**
 * Tells us if we're inside of an iframe.
 * @member {boolean}
 */H5P.isFramed=window.self!==window.parent;/**
 * jQuery instance of current window.
 * @member {H5P.jQuery}
 */H5P.$window=H5P.jQuery(window);/**
 * List over H5P instances on the current page.
 * @member {Array}
 */H5P.instances=[];// Detect if we support fullscreen, and what prefix to use.
if(document.documentElement.requestFullScreen){/**
   * Browser prefix to use when entering fullscreen mode.
   * undefined means no fullscreen support.
   * @member {string}
   */H5P.fullScreenBrowserPrefix=""}else if(document.documentElement.webkitRequestFullScreen){H5P.safariBrowser=navigator.userAgent.match(/version\/([.\d]+)/i);H5P.safariBrowser=null===H5P.safariBrowser?0:parseInt(H5P.safariBrowser[1]);// Do not allow fullscreen for safari < 7.
if(0===H5P.safariBrowser||6<H5P.safariBrowser){H5P.fullScreenBrowserPrefix="webkit"}}else if(document.documentElement.mozRequestFullScreen){H5P.fullScreenBrowserPrefix="moz"}else if(document.documentElement.msRequestFullscreen){H5P.fullScreenBrowserPrefix="ms"}/**
 * Keep track of when the H5Ps where started.
 *
 * @type {Object[]}
 */H5P.opened={};/**
 * Initialize H5P content.
 * Scans for ".h5p-content" in the document and initializes H5P instances where found.
 *
 * @param {Object} target DOM Element
 */H5P.init=function(target){// Useful jQuery object.
if(H5P.$body===void 0){H5P.$body=H5P.jQuery(document.body)}// Determine if we can use full screen
if(H5P.fullscreenSupported===void 0){/**
     * Use this variable to check if fullscreen is supported. Fullscreen can be
     * restricted when embedding since not all browsers support the native
     * fullscreen, and the semi-fullscreen solution doesn't work when embedded.
     * @type {boolean}
     */H5P.fullscreenSupported=!H5PIntegration.fullscreenDisabled&&!H5P.fullscreenDisabled&&(!(H5P.isFramed&&!1!==H5P.externalEmbed)||!!(document.fullscreenEnabled||document.webkitFullscreenEnabled||document.mozFullScreenEnabled));// -We should consider document.msFullscreenEnabled when they get their
// -element sizing corrected. Ref. https://connect.microsoft.com/IE/feedback/details/838286/ie-11-incorrectly-reports-dom-element-sizes-in-fullscreen-mode-when-fullscreened-element-is-within-an-iframe
// Update: Seems to be no need as they've moved on to Webkit
}// Deprecated variable, kept to maintain backwards compatability
if(H5P.canHasFullScreen===void 0){/**
     * @deprecated since version 1.11
     * @type {boolean}
     */H5P.canHasFullScreen=H5P.fullscreenSupported}// H5Ps added in normal DIV.
H5P.jQuery(".h5p-content:not(.h5p-initialized)",target).each(function(){var $element=H5P.jQuery(this).addClass("h5p-initialized"),$container=H5P.jQuery("<div class=\"h5p-container\"></div>").appendTo($element),contentId=$element.data("content-id"),contentData=H5PIntegration.contents["cid-"+contentId];if(contentData===void 0){return H5P.error("No data for content id "+contentId+". Perhaps the library is gone?")}var library={library:contentData.library,params:JSON.parse(contentData.jsonContent),metadata:contentData.metadata};H5P.getUserData(contentId,"state",function(err,previousState){if(previousState){library.userDatas={state:previousState}}else if(null===previousState&&H5PIntegration.saveFreq){// Content has been reset. Display dialog.
delete contentData.contentUserData;var dialog=new H5P.Dialog("content-user-data-reset","Data Reset","<p>"+H5P.t("contentChanged")+"</p><p>"+H5P.t("startingOver")+"</p><div class=\"h5p-dialog-ok-button\" tabIndex=\"0\" role=\"button\">OK</div>",$container);H5P.jQuery(dialog).on("dialog-opened",function(event,$dialog){var closeDialog=function closeDialog(event){if("click"===event.type||32===event.which){dialog.close();H5P.deleteUserData(contentId,"state",0)}};$dialog.find(".h5p-dialog-ok-button").click(closeDialog).keypress(closeDialog);H5P.trigger(instance,"resize")}).on("dialog-closed",function(){H5P.trigger(instance,"resize")});dialog.open()}// If previousState is false we don't have a previous state
});// Create new instance.
var instance=H5P.newRunnable(library,contentId,$container,!0,{standalone:!0});// Check if we should add and display a fullscreen button for this H5P.
if(1==contentData.fullScreen&&H5P.fullscreenSupported){H5P.jQuery("<div class=\"h5p-content-controls\">"+"<div role=\"button\" "+"tabindex=\"0\" "+"class=\"h5p-enable-fullscreen\" "+"aria-label=\""+H5P.t("fullscreen")+"\" "+"title=\""+H5P.t("fullscreen")+"\">"+"</div>"+"</div>").prependTo($container).children().click(function(){H5P.fullScreen($container,instance)}).keydown(function(e){if(32===e.which||13===e.which){H5P.fullScreen($container,instance);return!1}})}/**
     * Create action bar
     */var displayOptions=contentData.displayOptions,displayFrame=!1;if(displayOptions.frame){// Special handling of copyrights
if(displayOptions.copyright){var copyrights=H5P.getCopyrights(instance,library.params,contentId,library.metadata);if(!copyrights){displayOptions.copyright=!1}}// Create action bar
var actionBar=new H5P.ActionBar(displayOptions),$actions=actionBar.getDOMElement();actionBar.on("reuse",function(){H5P.openReuseDialog($actions,contentData,library,instance,contentId);instance.triggerXAPI("accessed-reuse")});actionBar.on("copyrights",function(){var dialog=new H5P.Dialog("copyrights",H5P.t("copyrightInformation"),copyrights,$container);dialog.open(!0);instance.triggerXAPI("accessed-copyright")});actionBar.on("embed",function(){H5P.openEmbedDialog($actions,contentData.embedCode,contentData.resizeCode,{width:$element.width(),height:$element.height()},instance);instance.triggerXAPI("accessed-embed")});if(actionBar.hasActions()){displayFrame=!0;$actions.insertAfter($container)}}$element.addClass(displayFrame?"h5p-frame":"h5p-no-frame");// Keep track of when we started
H5P.opened[contentId]=new Date;// Handle events when the user finishes the content. Useful for logging exercise results.
H5P.on(instance,"finish",function(event){if(event.data!==void 0){H5P.setFinished(contentId,event.data.score,event.data.maxScore,event.data.time)}});// Listen for xAPI events.
H5P.on(instance,"xAPI",H5P.xAPICompletedListener);// Auto save current state if supported
if(!1!==H5PIntegration.saveFreq&&(babelHelpers.instanceof(instance.getCurrentState,Function)||"function"===typeof instance.getCurrentState)){var saveTimer,save=function save(){var state=instance.getCurrentState();if(state!==void 0){H5P.setUserData(contentId,"state",state,{deleteOnChange:!0})}if(H5PIntegration.saveFreq){// Continue autosave
saveTimer=setTimeout(save,1e3*H5PIntegration.saveFreq)}};if(H5PIntegration.saveFreq){// Start autosave
saveTimer=setTimeout(save,1e3*H5PIntegration.saveFreq)}// xAPI events will schedule a save in three seconds.
H5P.on(instance,"xAPI",function(event){var verb=event.getVerb();if("completed"===verb||"progressed"===verb){clearTimeout(saveTimer);saveTimer=setTimeout(save,3e3)}})}if(H5P.isFramed){var resizeDelay;if(!1===H5P.externalEmbed){// Internal embed
// Make it possible to resize the iframe when the content changes size. This way we get no scrollbars.
var iframe=window.frameElement,resizeIframe=function resizeIframe(){if(window.parent.H5P.isFullscreen){return;// Skip if full screen.
}// Retain parent size to avoid jumping/scrolling
var parentHeight=iframe.parentElement.style.height;iframe.parentElement.style.height=iframe.parentElement.clientHeight+"px";// Note:  Force layout reflow
//        This fixes a flickering bug for embedded content on iPads
//        @see https://github.com/h5p/h5p-moodle-plugin/issues/237
iframe.getBoundingClientRect();// Reset iframe height, in case content has shrinked.
iframe.style.height="1px";// Resize iframe so all content is visible.
iframe.style.height=iframe.contentDocument.body.scrollHeight+"px";// Free parent
iframe.parentElement.style.height=parentHeight};H5P.on(instance,"resize",function(){// Use a delay to make sure iframe is resized to the correct size.
clearTimeout(resizeDelay);resizeDelay=setTimeout(function(){resizeIframe()},1)})}else if(H5P.communicator){// External embed
var parentIsFriendly=!1;// Handle that the resizer is loaded after the iframe
H5P.communicator.on("ready",function(){H5P.communicator.send("hello")});// Handle hello message from our parent window
H5P.communicator.on("hello",function(){// Initial setup/handshake is done
parentIsFriendly=!0;// Make iframe responsive
document.body.style.height="auto";// Hide scrollbars for correct size
document.body.style.overflow="hidden";// Content need to be resized to fit the new iframe size
H5P.trigger(instance,"resize")});// When resize has been prepared tell parent window to resize
H5P.communicator.on("resizePrepared",function(){H5P.communicator.send("resize",{scrollHeight:document.body.scrollHeight})});H5P.communicator.on("resize",function(){H5P.trigger(instance,"resize")});H5P.on(instance,"resize",function(){if(H5P.isFullscreen){return;// Skip iframe resize
}// Use a delay to make sure iframe is resized to the correct size.
clearTimeout(resizeDelay);resizeDelay=setTimeout(function(){// Only resize if the iframe can be resized
if(parentIsFriendly){H5P.communicator.send("prepareResize",{scrollHeight:document.body.scrollHeight,clientHeight:document.body.clientHeight})}else{H5P.communicator.send("hello")}},0)})}}if(!H5P.isFramed||!1===H5P.externalEmbed){// Resize everything when window is resized.
H5P.jQuery(window.parent).resize(function(){if(window.parent.H5P.isFullscreen){// Use timeout to avoid bug in certain browsers when exiting fullscreen. Some browser will trigger resize before the fullscreenchange event.
H5P.trigger(instance,"resize")}else{H5P.trigger(instance,"resize")}})}H5P.instances.push(instance);// Resize content.
H5P.trigger(instance,"resize")});// Insert H5Ps that should be in iframes.
H5P.jQuery("iframe.h5p-iframe:not(.h5p-initialized)",target).each(function(){var contentId=H5P.jQuery(this).addClass("h5p-initialized").data("content-id");this.contentDocument.open();this.contentDocument.write("<!doctype html><html class=\"h5p-iframe\"><head>"+H5P.getHeadTags(contentId)+"</head><body><div class=\"h5p-content\" data-content-id=\""+contentId+"\"/></body></html>");this.contentDocument.close()})};/**
 * Loop through assets for iframe content and create a set of tags for head.
 *
 * @private
 * @param {number} contentId
 * @returns {string} HTML
 */H5P.getHeadTags=function(contentId){var createStyleTags=function createStyleTags(styles){for(var tags="",i=0;i<styles.length;i++){tags+="<link rel=\"stylesheet\" href=\""+styles[i]+"\">"}return tags},createScriptTags=function createScriptTags(scripts){for(var tags="",i=0;i<scripts.length;i++){tags+="<script src=\""+scripts[i]+"\"></script>"}return tags};return"<base target=\"_parent\">"+createStyleTags(H5PIntegration.core.styles)+createStyleTags(H5PIntegration.contents["cid-"+contentId].styles)+createScriptTags(H5PIntegration.core.scripts)+createScriptTags(H5PIntegration.contents["cid-"+contentId].scripts)+"<script>H5PIntegration = window.parent.H5PIntegration; var H5P = H5P || {}; H5P.externalEmbed = false;</script>"};/**
 * When embedded the communicator helps talk to the parent page.
 *
 * @type {Communicator}
 */H5P.communicator=function(){/**
   * @class
   * @private
   */function Communicator(){var self=this,actionHandlers={};// Maps actions to functions
// Register message listener
window.addEventListener("message",function receiveMessage(event){if(window.parent!==event.source||"h5p"!==event.data.context){return;// Only handle messages from parent and in the correct context
}if(actionHandlers[event.data.action]!==void 0){actionHandlers[event.data.action](event.data)}},!1);/**
     * Register action listener.
     *
     * @param {string} action What you are waiting for
     * @param {function} handler What you want done
     */self.on=function(action,handler){actionHandlers[action]=handler};/**
     * Send a message to the all mighty father.
     *
     * @param {string} action
     * @param {Object} [data] payload
     */self.send=function(action,data){if(data===void 0){data={}}data.context="h5p";data.action=action;// Parent origin can be anything
window.parent.postMessage(data,"*")}}return window.postMessage&&window.addEventListener?new Communicator:void 0}();/**
 * Enter semi fullscreen for the given H5P instance
 *
 * @param {H5P.jQuery} $element Content container.
 * @param {Object} instance
 * @param {function} exitCallback Callback function called when user exits fullscreen.
 * @param {H5P.jQuery} $body For internal use. Gives the body of the iframe.
 */H5P.semiFullScreen=function($element,instance,exitCallback,body){H5P.fullScreen($element,instance,exitCallback,body,!0)};/**
 * Enter fullscreen for the given H5P instance.
 *
 * @param {H5P.jQuery} $element Content container.
 * @param {Object} instance
 * @param {function} exitCallback Callback function called when user exits fullscreen.
 * @param {H5P.jQuery} $body For internal use. Gives the body of the iframe.
 * @param {Boolean} forceSemiFullScreen
 */H5P.fullScreen=function($element,instance,exitCallback,body,forceSemiFullScreen){if(H5P.exitFullScreen!==void 0){return;// Cannot enter new fullscreen until previous is over
}if(H5P.isFramed&&!1===H5P.externalEmbed){// Trigger resize on wrapper in parent window.
window.parent.H5P.fullScreen($element,instance,exitCallback,H5P.$body.get(),forceSemiFullScreen);H5P.isFullscreen=!0;H5P.exitFullScreen=function(){window.parent.H5P.exitFullScreen()};H5P.on(instance,"exitFullScreen",function(){H5P.isFullscreen=!1;H5P.exitFullScreen=void 0});return}var $container=$element,$classes,$iframe,$body;if(body===void 0){$body=H5P.$body}else{// We're called from an iframe.
$body=H5P.jQuery(body);$classes=$body.add($element.get());var iframeSelector="#h5p-iframe-"+$element.parent().data("content-id");$iframe=H5P.jQuery(iframeSelector);$element=$iframe.parent();// Put iframe wrapper in fullscreen, not container.
}$classes=$element.add(H5P.$body).add($classes);/**
   * Prepare for resize by setting the correct styles.
   *
   * @private
   * @param {string} classes CSS
   */var before=function before(classes){$classes.addClass(classes);if($iframe!==void 0){// Set iframe to its default size(100%).
$iframe.css("height","")}},entered=function entered(){// Do not rely on window resize events.
H5P.trigger(instance,"resize");H5P.trigger(instance,"focus");H5P.trigger(instance,"enterFullScreen")},done=function done(classes){H5P.isFullscreen=!1;$classes.removeClass(classes);// Do not rely on window resize events.
H5P.trigger(instance,"resize");H5P.trigger(instance,"focus");H5P.exitFullScreen=void 0;if(exitCallback!==void 0){exitCallback()}H5P.trigger(instance,"exitFullScreen")};/**
   * Gets called when fullscreen mode has been entered.
   * Resizes and sets focus on content.
   *
   * @private
   */H5P.isFullscreen=!0;if(H5P.fullScreenBrowserPrefix===void 0||!0===forceSemiFullScreen){// Create semi fullscreen.
if(H5P.isFramed){return;// TODO: Should we support semi-fullscreen for IE9 & 10 ?
}before("h5p-semi-fullscreen");var $disable=H5P.jQuery("<div role=\"button\" tabindex=\"0\" class=\"h5p-disable-fullscreen\" title=\""+H5P.t("disableFullscreen")+"\" aria-label=\""+H5P.t("disableFullscreen")+"\"></div>").appendTo($container.find(".h5p-content-controls")),keyup,disableSemiFullscreen=H5P.exitFullScreen=function(){if(prevViewportContent){// Use content from the previous viewport tag
h5pViewport.content=prevViewportContent}else{// Remove viewport tag
head.removeChild(h5pViewport)}$disable.remove();$body.unbind("keyup",keyup);done("h5p-semi-fullscreen")};keyup=function keyup(event){if(27===event.keyCode){disableSemiFullscreen()}};$disable.click(disableSemiFullscreen);$body.keyup(keyup);// Disable zoom
for(var prevViewportContent,h5pViewport,metaTags=document.getElementsByTagName("meta"),i=0;i<metaTags.length;i++){if("viewport"===metaTags[i].name){// Use the existing viewport tag
h5pViewport=metaTags[i];prevViewportContent=h5pViewport.content;break}}if(!prevViewportContent){// Create a new viewport tag
h5pViewport=document.createElement("meta");h5pViewport.name="viewport"}h5pViewport.content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0";if(!prevViewportContent){// Insert the new viewport tag
var head=document.getElementsByTagName("head")[0];head.appendChild(h5pViewport)}entered()}else{// Create real fullscreen.
before("h5p-fullscreen");var first,eventName="ms"===H5P.fullScreenBrowserPrefix?"MSFullscreenChange":H5P.fullScreenBrowserPrefix+"fullscreenchange";document.addEventListener(eventName,function(){if(first===void 0){// We are entering fullscreen mode
first=!1;entered();return}// We are exiting fullscreen
done("h5p-fullscreen");document.removeEventListener(eventName,arguments.callee,!1)});if(""===H5P.fullScreenBrowserPrefix){$element[0].requestFullScreen()}else{var method="ms"===H5P.fullScreenBrowserPrefix?"msRequestFullscreen":H5P.fullScreenBrowserPrefix+"RequestFullScreen",params="webkit"===H5P.fullScreenBrowserPrefix&&0===H5P.safariBrowser?Element.ALLOW_KEYBOARD_INPUT:void 0;$element[0][method](params)}// Allows everone to exit
H5P.exitFullScreen=function(){if(""===H5P.fullScreenBrowserPrefix){document.exitFullscreen()}else if("moz"===H5P.fullScreenBrowserPrefix){document.mozCancelFullScreen()}else{document[H5P.fullScreenBrowserPrefix+"ExitFullscreen"]()}}}};/**
 * Find the path to the content files based on the id of the content.
 * Also identifies and returns absolute paths.
 *
 * @param {string} path
 *   Relative to content folder or absolute.
 * @param {number} contentId
 *   ID of the content requesting the path.
 * @returns {string}
 *   Complete URL to path.
 */H5P.getPath=function(path,contentId){var hasProtocol=function hasProtocol(path){return path.match(/^[a-z0-9]+:\/\//i)};if(hasProtocol(path)){return path}var prefix,isTmpFile="#tmp"===path.substr(-4,4);if(contentId!==void 0&&!isTmpFile){// Check for custom override URL
if(H5PIntegration.contents!==void 0&&H5PIntegration.contents["cid-"+contentId]){prefix=H5PIntegration.contents["cid-"+contentId].contentUrl}if(!prefix){prefix=H5PIntegration.url+"/content/"+contentId}}else if(window.H5PEditor!==void 0){prefix=H5PEditor.filesPath}else{return}if(!hasProtocol(prefix)){// Use absolute urls
prefix=window.location.protocol+"//"+window.location.host+prefix}return prefix+"/"+path};/**
 * THIS FUNCTION IS DEPRECATED, USE getPath INSTEAD
 * Will be remove march 2016.
 *
 * Find the path to the content files folder based on the id of the content
 *
 * @deprecated
 *   Will be removed march 2016.
 * @param contentId
 *   Id of the content requesting the path
 * @returns {string}
 *   URL
 */H5P.getContentPath=function(contentId){return H5PIntegration.url+"/content/"+contentId};/**
 * Get library class constructor from H5P by classname.
 * Note that this class will only work for resolve "H5P.NameWithoutDot".
 * Also check out {@link H5P.newRunnable}
 *
 * Used from libraries to construct instances of other libraries' objects by name.
 *
 * @param {string} name Name of library
 * @returns {Object} Class constructor
 */H5P.classFromName=function(name){var arr=name.split(".");return this[arr[arr.length-1]]};/**
 * A safe way of creating a new instance of a runnable H5P.
 *
 * @param {Object} library
 *   Library/action object form params.
 * @param {number} contentId
 *   Identifies the content.
 * @param {H5P.jQuery} [$attachTo]
 *   Element to attach the instance to.
 * @param {boolean} [skipResize]
 *   Skip triggering of the resize event after attaching.
 * @param {Object} [extras]
 *   Extra parameters for the H5P content constructor
 * @returns {Object}
 *   Instance.
 */H5P.newRunnable=function(library,contentId,$attachTo,skipResize,extras){var nameSplit,versionSplit,machineName;try{nameSplit=library.library.split(" ",2);machineName=nameSplit[0];versionSplit=nameSplit[1].split(".",2)}catch(err){return H5P.error("Invalid library string: "+library.library)}if(!0!==babelHelpers.instanceof(library.params,Object)||!0===babelHelpers.instanceof(library.params,Array)){H5P.error("Invalid library params for: "+library.library);return H5P.error(library.params)}// Find constructor function
var constructor;try{nameSplit=nameSplit[0].split(".");constructor=window;for(var i=0;i<nameSplit.length;i++){constructor=constructor[nameSplit[i]]}if("function"!==typeof constructor){throw null}}catch(err){return H5P.error("Unable to find constructor for: "+library.library)}if(extras===void 0){extras={}}if(library.subContentId){extras.subContentId=library.subContentId}if(library.userDatas&&library.userDatas.state&&H5PIntegration.saveFreq){extras.previousState=library.userDatas.state}if(library.metadata){extras.metadata=library.metadata}// Makes all H5P libraries extend H5P.ContentType:
var standalone=extras.standalone||!1;// This order makes it possible for an H5P library to override H5P.ContentType functions!
constructor.prototype=H5P.jQuery.extend({},H5P.ContentType(standalone).prototype,constructor.prototype);var instance;// Some old library versions have their own custom third parameter.
// Make sure we don't send them the extras.
// (they will interpret it as something else)
if(-1<H5P.jQuery.inArray(library.library,["H5P.CoursePresentation 1.0","H5P.CoursePresentation 1.1","H5P.CoursePresentation 1.2","H5P.CoursePresentation 1.3"])){instance=new constructor(library.params,contentId)}else{instance=new constructor(library.params,contentId,extras)}if(instance.$===void 0){instance.$=H5P.jQuery(instance)}if(instance.contentId===void 0){instance.contentId=contentId}if(instance.subContentId===void 0&&library.subContentId){instance.subContentId=library.subContentId}if(instance.parent===void 0&&extras&&extras.parent){instance.parent=extras.parent}if(instance.libraryInfo===void 0){instance.libraryInfo={versionedName:library.library,versionedNameNoSpaces:machineName+"-"+versionSplit[0]+"."+versionSplit[1],machineName:machineName,majorVersion:versionSplit[0],minorVersion:versionSplit[1]}}if($attachTo!==void 0){$attachTo.toggleClass("h5p-standalone",standalone);instance.attach($attachTo);H5P.trigger(instance,"domChanged",{$target:$attachTo,library:machineName,key:"newLibrary"},{bubbles:!0,external:!0});if(skipResize===void 0||!skipResize){// Resize content.
H5P.trigger(instance,"resize")}}return instance};/**
 * Used to print useful error messages. (to JavaScript error console)
 *
 * @param {*} err Error to print.
 */H5P.error=function(err){if(window.console!==void 0&&console.error!==void 0){console.error(err.stack?err.stack:err)}};/**
 * Translate text strings.
 *
 * @param {string} key
 *   Translation identifier, may only contain a-zA-Z0-9. No spaces or special chars.
 * @param {Object} [vars]
 *   Data for placeholders.
 * @param {string} [ns]
 *   Translation namespace. Defaults to H5P.
 * @returns {string}
 *   Translated text
 */H5P.t=function(key,vars,ns){if(ns===void 0){ns="H5P"}if(H5PIntegration.l10n[ns]===void 0){return"[Missing translation namespace \""+ns+"\"]"}if(H5PIntegration.l10n[ns][key]===void 0){return"[Missing translation \""+key+"\" in \""+ns+"\"]"}var translation=H5PIntegration.l10n[ns][key];if(vars!==void 0){// Replace placeholder with variables.
for(var placeholder in vars){translation=translation.replace(placeholder,vars[placeholder])}}return translation};/**
 * Creates a new popup dialog over the H5P content.
 *
 * @class
 * @param {string} name
 *   Used for html class.
 * @param {string} title
 *   Used for header.
 * @param {string} content
 *   Displayed inside the dialog.
 * @param {H5P.jQuery} $element
 *   Which DOM element the dialog should be inserted after.
 */H5P.Dialog=function(name,title,content,$element){/** @alias H5P.Dialog# */var self=this,$dialog=H5P.jQuery("<div class=\"h5p-popup-dialog h5p-"+name+"-dialog\">                              <div class=\"h5p-inner\">                                <h2>"+title+"</h2>                                <div class=\"h5p-scroll-content\">"+content+"</div>                                <div class=\"h5p-close\" role=\"button\" tabindex=\"0\" aria-label=\""+H5P.t("close")+"\" title=\""+H5P.t("close")+"\"></div>                              </div>                            </div>").insertAfter($element).click(function(){self.close()}).children(".h5p-inner").click(function(){return!1}).find(".h5p-close").click(function(){self.close()}).end().find("a").click(function(e){e.stopPropagation()}).end().end();/**
   * Opens the dialog.
   */self.open=function(scrollbar){if(scrollbar){$dialog.css("height","100%")}setTimeout(function(){$dialog.addClass("h5p-open");// Fade in
// Triggering an event, in case something has to be done after dialog has been opened.
H5P.jQuery(self).trigger("dialog-opened",[$dialog])},1)};/**
   * Closes the dialog.
   */self.close=function(){$dialog.removeClass("h5p-open");// Fade out
setTimeout(function(){$dialog.remove();H5P.jQuery(self).trigger("dialog-closed",[$dialog])},200)}};/**
 * Gather copyright information for the given content.
 *
 * @param {Object} instance
 *   H5P instance to get copyright information for.
 * @param {Object} parameters
 *   Parameters of the content instance.
 * @param {number} contentId
 *   Identifies the H5P content
 * @param {Object} metadata
 *   Metadata of the content instance.
 * @returns {string} Copyright information.
 */H5P.getCopyrights=function(instance,parameters,contentId,metadata){var copyrights;if(instance.getCopyrights!==void 0){try{// Use the instance's own copyright generator
copyrights=instance.getCopyrights()}catch(err){// Failed, prevent crashing page.
}}if(copyrights===void 0){// Create a generic flat copyright list
copyrights=new H5P.ContentCopyrights;H5P.findCopyrights(copyrights,parameters,contentId)}var metadataCopyrights=H5P.buildMetadataCopyrights(metadata,instance.libraryInfo.machineName);if(metadataCopyrights!==void 0){copyrights.addMediaInFront(metadataCopyrights)}if(copyrights!==void 0){// Convert to string
copyrights=copyrights.toString()}return copyrights};/**
 * Gather a flat list of copyright information from the given parameters.
 *
 * @param {H5P.ContentCopyrights} info
 *   Used to collect all information in.
 * @param {(Object|Array)} parameters
 *   To search for file objects in.
 * @param {number} contentId
 *   Used to insert thumbnails for images.
 * @param {Object} extras - Extras.
 * @param {object} extras.metadata - Metadata
 * @param {object} extras.machineName - Library name of some kind.
 *   Metadata of the content instance.
 */H5P.findCopyrights=function(info,parameters,contentId,extras){// If extras are
if(extras){extras.params=parameters;buildFromMetadata(extras,extras.machineName,contentId)}var lastContentTypeName;// Cycle through parameters
for(var field in parameters){if(!parameters.hasOwnProperty(field)){continue;// Do not check
}/**
     * @deprecated This hack should be removed after 2017-11-01
     * The code that was using this was removed by HFP-574
     * This note was seen on 2018-04-04, and consultation with
     * higher authorities lead to keeping the code for now ;-)
     */if("overrideSettings"===field){console.warn("The semantics field 'overrideSettings' is DEPRECATED and should not be used.");console.warn(parameters);continue}var value=parameters[field];if(value&&value.library&&"string"===typeof value.library){lastContentTypeName=value.library.split(" ")[0]}else if(value&&value.library&&"object"===babelHelpers.typeof(value.library)){lastContentTypeName=value.library.library&&"string"===typeof value.library.library?value.library.library.split(" ")[0]:lastContentTypeName}if(babelHelpers.instanceof(value,Array)){// Cycle through array
H5P.findCopyrights(info,value,contentId)}else if(babelHelpers.instanceof(value,Object)){buildFromMetadata(value,lastContentTypeName,contentId);// Check if object is a file with copyrights (old core)
if(value.copyright===void 0||value.copyright.license===void 0||value.path===void 0||value.mime===void 0){// Nope, cycle throught object
H5P.findCopyrights(info,value,contentId)}else{// Found file, add copyrights
var copyrights=new H5P.MediaCopyright(value.copyright);if(value.width!==void 0&&value.height!==void 0){copyrights.setThumbnail(new H5P.Thumbnail(H5P.getPath(value.path,contentId),value.width,value.height))}info.addMedia(copyrights)}}}function buildFromMetadata(data,name,contentId){if(data.metadata){var metadataCopyrights=H5P.buildMetadataCopyrights(data.metadata,name);if(metadataCopyrights!==void 0){if(data.params&&"Image"===data.params.contentName&&data.params.file){var path=data.params.file.path,width=data.params.file.width,height=data.params.file.height;metadataCopyrights.setThumbnail(new H5P.Thumbnail(H5P.getPath(path,contentId),width,height))}info.addMedia(metadataCopyrights)}}}};H5P.buildMetadataCopyrights=function(metadata){if(metadata&&metadata.license!==void 0&&"U"!==metadata.license){var dataset={contentType:metadata.contentType,title:metadata.title,author:metadata.authors&&0<metadata.authors.length?metadata.authors.map(function(author){return author.role?author.name+" ("+author.role+")":author.name}).join(", "):void 0,source:metadata.source,year:metadata.yearFrom?metadata.yearFrom+(metadata.yearTo?"-"+metadata.yearTo:""):void 0,license:metadata.license,version:metadata.licenseVersion,licenseExtras:metadata.licenseExtras,changes:metadata.changes&&0<metadata.changes.length?metadata.changes.map(function(change){return change.log+(change.author?", "+change.author:"")+(change.date?", "+change.date:"")}).join(" / "):void 0};return new H5P.MediaCopyright(dataset)}};/**
 * Display a dialog containing the download button and copy button.
 *
 * @param {H5P.jQuery} $element
 * @param {Object} contentData
 * @param {Object} library
 * @param {Object} instance
 * @param {number} contentId
 */H5P.openReuseDialog=function($element,contentData,library,instance,contentId){var html="";if(contentData.displayOptions.export){html+="<button type=\"button\" class=\"h5p-big-button h5p-download-button\"><div class=\"h5p-button-title\">Download as an .h5p file</div><div class=\"h5p-button-description\">.h5p files may be uploaded to any web-site where H5P content may be created.</div></button>"}if(contentData.displayOptions.export&&contentData.displayOptions.copy){html+="<div class=\"h5p-horizontal-line-text\"><span>or</span></div>"}if(contentData.displayOptions.copy){html+="<button type=\"button\" class=\"h5p-big-button h5p-copy-button\"><div class=\"h5p-button-title\">Copy content</div><div class=\"h5p-button-description\">Copied content may be pasted anywhere this content type is supported on this website.</div></button>"}var dialog=new H5P.Dialog("reuse",H5P.t("reuseContent"),html,$element);// Selecting embed code when dialog is opened
H5P.jQuery(dialog).on("dialog-opened",function(e,$dialog){H5P.jQuery("<a href=\"https://h5p.org/node/442225\" target=\"_blank\">More Info</a>").click(function(e){e.stopPropagation()}).appendTo($dialog.find("h2"));$dialog.find(".h5p-download-button").click(function(){window.location.href=contentData.exportUrl;instance.triggerXAPI("downloaded");dialog.close()});$dialog.find(".h5p-copy-button").click(function(){var item=new H5P.ClipboardItem(library);item.contentId=contentId;H5P.setClipboard(item);instance.triggerXAPI("copied");dialog.close();H5P.attachToastTo(H5P.jQuery(".h5p-content:first")[0],H5P.t("contentCopied"),{position:{horizontal:"centered",vertical:"centered",noOverflowX:!0}})});H5P.trigger(instance,"resize")}).on("dialog-closed",function(){H5P.trigger(instance,"resize")});dialog.open()};/**
 * Display a dialog containing the embed code.
 *
 * @param {H5P.jQuery} $element
 *   Element to insert dialog after.
 * @param {string} embedCode
 *   The embed code.
 * @param {string} resizeCode
 *   The advanced resize code
 * @param {Object} size
 *   The content's size.
 * @param {number} size.width
 * @param {number} size.height
 */H5P.openEmbedDialog=function($element,embedCode,resizeCode,size,instance){var fullEmbedCode=embedCode+resizeCode,dialog=new H5P.Dialog("embed",H5P.t("embed"),"<textarea class=\"h5p-embed-code-container\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\"></textarea>"+H5P.t("size")+": <input type=\"text\" value=\""+Math.ceil(size.width)+"\" class=\"h5p-embed-size\"/> \xD7 <input type=\"text\" value=\""+Math.ceil(size.height)+"\" class=\"h5p-embed-size\"/> px<br/><div role=\"button\" tabindex=\"0\" class=\"h5p-expander\">"+H5P.t("showAdvanced")+"</div><div class=\"h5p-expander-content\"><p>"+H5P.t("advancedHelp")+"</p><textarea class=\"h5p-embed-code-container\" autocorrect=\"off\" autocapitalize=\"off\" spellcheck=\"false\">"+resizeCode+"</textarea></div>",$element);// Selecting embed code when dialog is opened
H5P.jQuery(dialog).on("dialog-opened",function(event,$dialog){var $inner=$dialog.find(".h5p-inner"),$scroll=$inner.find(".h5p-scroll-content"),diff=$scroll.outerHeight()-$scroll.innerHeight(),positionInner=function positionInner(){H5P.trigger(instance,"resize")},$w=$dialog.find(".h5p-embed-size:eq(0)"),$h=$dialog.find(".h5p-embed-size:eq(1)"),getNum=function getNum($e,d){var num=parseFloat($e.val());if(isNaN(num)){return d}return Math.ceil(num)},updateEmbed=function updateEmbed(){$dialog.find(".h5p-embed-code-container:first").val(fullEmbedCode.replace(":w",getNum($w,size.width)).replace(":h",getNum($h,size.height)))};$w.change(updateEmbed);$h.change(updateEmbed);updateEmbed();// Select text and expand textareas
$dialog.find(".h5p-embed-code-container").each(function(){H5P.jQuery(this).css("height",this.scrollHeight+"px").focus(function(){H5P.jQuery(this).select()})});$dialog.find(".h5p-embed-code-container").eq(0).select();positionInner();// Expand advanced embed
var expand=function expand(){var $expander=H5P.jQuery(this),$content=$expander.next();if($content.is(":visible")){$expander.removeClass("h5p-open").text(H5P.t("showAdvanced"));$content.hide()}else{$expander.addClass("h5p-open").text(H5P.t("hideAdvanced"));$content.show()}$dialog.find(".h5p-embed-code-container").each(function(){H5P.jQuery(this).css("height",this.scrollHeight+"px")});positionInner()};$dialog.find(".h5p-expander").click(expand).keypress(function(event){if(32===event.keyCode){expand.apply(this)}})}).on("dialog-closed",function(){H5P.trigger(instance,"resize")});dialog.open()};/**
 * Show a toast message.
 *
 * The reference element could be dom elements the toast should be attached to,
 * or e.g. the document body for general toast messages.
 *
 * @param {DOM} element Reference element to show toast message for.
 * @param {string} message Message to show.
 * @param {object} [config] Configuration.
 * @param {string} [config.style=h5p-toast] Style name for the tooltip.
 * @param {number} [config.duration=3000] Toast message length in ms.
 * @param {object} [config.position] Relative positioning of the toast.
 * @param {string} [config.position.horizontal=centered] [before|left|centered|right|after].
 * @param {string} [config.position.vertical=below] [above|top|centered|bottom|below].
 * @param {number} [config.position.offsetHorizontal=0] Extra horizontal offset.
 * @param {number} [config.position.offsetVertical=0] Extra vetical offset.
 * @param {boolean} [config.position.noOverflowLeft=false] True to prevent overflow left.
 * @param {boolean} [config.position.noOverflowRight=false] True to prevent overflow right.
 * @param {boolean} [config.position.noOverflowTop=false] True to prevent overflow top.
 * @param {boolean} [config.position.noOverflowBottom=false] True to prevent overflow bottom.
 * @param {boolean} [config.position.noOverflowX=false] True to prevent overflow left and right.
 * @param {boolean} [config.position.noOverflowY=false] True to prevent overflow top and bottom.
 * @param {object} [config.position.overflowReference=document.body] DOM reference for overflow.
 */H5P.attachToastTo=function(element,message,config){if(element===void 0||message===void 0){return}var eventPath=function eventPath(evt){var path=evt.composedPath&&evt.composedPath()||evt.path,target=evt.target;if(null!=path){// Safari doesn't include Window, but it should.
return 0>path.indexOf(window)?path.concat(window):path}if(target===window){return[window]}function getParents(node,memo){memo=memo||[];var parentNode=node.parentNode;if(!parentNode){return memo}else{return getParents(parentNode,memo.concat(parentNode))}}return[target].concat(getParents(target),window)},clickHandler=function clickHandler(event){/*
     * A common use case will be to attach toasts to buttons that are clicked.
     * The click would remove the toast message instantly without this check.
     * Children of the clicked element are also ignored.
     */var path=eventPath(event);if(-1!==path.indexOf(element)){return}clearTimeout(timer);removeToast()},removeToast=function removeToast(){document.removeEventListener("click",clickHandler);if(toast.parentNode){toast.parentNode.removeChild(toast)}},getToastCoordinates=function getToastCoordinates(element,toast,position){position=position||{};position.offsetHorizontal=position.offsetHorizontal||0;position.offsetVertical=position.offsetVertical||0;var toastRect=toast.getBoundingClientRect(),elementRect=element.getBoundingClientRect(),left=0,top=0;// Compute horizontal position
switch(position.horizontal){case"before":left=elementRect.left-toastRect.width-position.offsetHorizontal;break;case"after":left=elementRect.left+elementRect.width+position.offsetHorizontal;break;case"left":left=elementRect.left+position.offsetHorizontal;break;case"right":left=elementRect.left+elementRect.width-toastRect.width-position.offsetHorizontal;break;case"centered":left=elementRect.left+elementRect.width/2-toastRect.width/2+position.offsetHorizontal;break;default:left=elementRect.left+elementRect.width/2-toastRect.width/2+position.offsetHorizontal;}// Compute vertical position
switch(position.vertical){case"above":top=elementRect.top-toastRect.height-position.offsetVertical;break;case"below":top=elementRect.top+elementRect.height+position.offsetVertical;break;case"top":top=elementRect.top+position.offsetVertical;break;case"bottom":top=elementRect.top+elementRect.height-toastRect.height-position.offsetVertical;break;case"centered":top=elementRect.top+elementRect.height/2-toastRect.height/2+position.offsetVertical;break;default:top=elementRect.top+elementRect.height+position.offsetVertical;}// Prevent overflow
var overflowElement=document.body,bounds=overflowElement.getBoundingClientRect();if((position.noOverflowLeft||position.noOverflowX)&&left<bounds.x){left=bounds.x}if((position.noOverflowRight||position.noOverflowX)&&left+toastRect.width>bounds.x+bounds.width){left=bounds.x+bounds.width-toastRect.width}if((position.noOverflowTop||position.noOverflowY)&&top<bounds.y){top=bounds.y}if((position.noOverflowBottom||position.noOverflowY)&&top+toastRect.height>bounds.y+bounds.height){left=bounds.y+bounds.height-toastRect.height}return{left:left,top:top}};/**
   * Handle click while toast is showing.
   */ // Sanitization
config=config||{};config.style=config.style||"h5p-toast";config.duration=config.duration||3e3;// Build toast
var toast=document.createElement("div");toast.setAttribute("id",config.style);toast.classList.add("h5p-toast-disabled");toast.classList.add(config.style);var msg=document.createElement("span");msg.innerHTML=message;toast.appendChild(msg);document.body.appendChild(toast);// The message has to be set before getting the coordinates
var coordinates=getToastCoordinates(element,toast,config.position);toast.style.left=Math.round(coordinates.left)+"px";toast.style.top=Math.round(coordinates.top)+"px";toast.classList.remove("h5p-toast-disabled");var timer=setTimeout(removeToast,config.duration);// The toast can also be removed by clicking somewhere
document.addEventListener("click",clickHandler)};/**
 * Copyrights for a H5P Content Library.
 *
 * @class
 */H5P.ContentCopyrights=function(){var label,media=[],content=[];/**
   * Set label.
   *
   * @param {string} newLabel
   */this.setLabel=function(newLabel){label=newLabel};/**
   * Add sub content.
   *
   * @param {H5P.MediaCopyright} newMedia
   */this.addMedia=function(newMedia){if(newMedia!==void 0){media.push(newMedia)}};/**
   * Add sub content in front.
   *
   * @param {H5P.MediaCopyright} newMedia
   */this.addMediaInFront=function(newMedia){if(newMedia!==void 0){media.unshift(newMedia)}};/**
   * Add sub content.
   *
   * @param {H5P.ContentCopyrights} newContent
   */this.addContent=function(newContent){if(newContent!==void 0){content.push(newContent)}};/**
   * Print content copyright.
   *
   * @returns {string} HTML.
   */this.toString=function(){// Add media rights
for(var html="",i=0;i<media.length;i++){html+=media[i]}// Add sub content rights
for(i=0;i<content.length;i++){html+=content[i]}if(""!==html){// Add a label to this info
if(label!==void 0){html="<h3>"+label+"</h3>"+html}// Add wrapper
html="<div class=\"h5p-content-copyrights\">"+html+"</div>"}return html}};/**
 * A ordered list of copyright fields for media.
 *
 * @class
 * @param {Object} copyright
 *   Copyright information fields.
 * @param {Object} [labels]
 *   Translation of labels.
 * @param {Array} [order]
 *   Order of the fields.
 * @param {Object} [extraFields]
 *   Add extra copyright fields.
 */H5P.MediaCopyright=function(copyright,labels,order,extraFields){var thumbnail,list=new H5P.DefinitionList,getLabel=function getLabel(fieldName){if(labels===void 0||labels[fieldName]===void 0){return H5P.t(fieldName)}return labels[fieldName]},humanizeLicense=function humanizeLicense(license,version){var copyrightLicense=H5P.copyrightLicenses[license],value="";// Build license string
if(!("PD"===license&&version)){// Add license label
value+=copyrightLicense.hasOwnProperty("label")?copyrightLicense.label:copyrightLicense}// Check for version info
var versionInfo;if(copyrightLicense.versions){if(copyrightLicense.versions.default&&(!version||!copyrightLicense.versions[version])){version=copyrightLicense.versions.default}if(version&&copyrightLicense.versions[version]){versionInfo=copyrightLicense.versions[version]}}if(versionInfo){// Add license version
if(value){value+=" "}value+=versionInfo.hasOwnProperty("label")?versionInfo.label:versionInfo}// Add link if specified
var link;if(copyrightLicense.hasOwnProperty("link")){link=copyrightLicense.link.replace(":version",copyrightLicense.linkVersions?copyrightLicense.linkVersions[version]:version)}else if(versionInfo&&copyrightLicense.hasOwnProperty("link")){link=versionInfo.link}if(link){value="<a href=\""+link+"\" target=\"_blank\">"+value+"</a>"}// Generate parenthesis
var parenthesis="";if("PD"!==license&&"C"!==license){parenthesis+=license}if(version&&"CC0 1.0"!==version){if(parenthesis&&"GNU GPL"!==license){parenthesis+=" "}parenthesis+=version}if(parenthesis){value+=" ("+parenthesis+")"}if("C"===license){value+=" &copy;"}return value};if(copyright!==void 0){// Add the extra fields
for(var field in extraFields){if(extraFields.hasOwnProperty(field)){copyright[field]=extraFields[field]}}if(order===void 0){// Set default order
order=["contentType","title","license","author","year","source","licenseExtras","changes"]}for(var i=0,fieldName;i<order.length;i++){fieldName=order[i];if(copyright[fieldName]!==void 0&&""!==copyright[fieldName]){var humanValue=copyright[fieldName];if("license"===fieldName){humanValue=humanizeLicense(copyright.license,copyright.version)}if("source"===fieldName){humanValue=humanValue?"<a href=\""+humanValue+"\" target=\"_blank\">"+humanValue+"</a>":void 0}list.add(new H5P.Field(getLabel(fieldName),humanValue))}}}/**
   * Set thumbnail.
   *
   * @param {H5P.Thumbnail} newThumbnail
   */this.setThumbnail=function(newThumbnail){thumbnail=newThumbnail};/**
   * Checks if this copyright is undisclosed.
   * I.e. only has the license attribute set, and it's undisclosed.
   *
   * @returns {boolean}
   */this.undisclosed=function(){if(1===list.size()){var field=list.get(0);if(field.getLabel()===getLabel("license")&&field.getValue()===humanizeLicense("U")){return!0}}return!1};/**
   * Print media copyright.
   *
   * @returns {string} HTML.
   */this.toString=function(){var html="";if(this.undisclosed()){return html;// No need to print a copyright with a single undisclosed license.
}if(thumbnail!==void 0){html+=thumbnail}html+=list;if(""!==html){html="<div class=\"h5p-media-copyright\">"+html+"</div>"}return html}};/**
 * A simple and elegant class for creating thumbnails of images.
 *
 * @class
 * @param {string} source
 * @param {number} width
 * @param {number} height
 */H5P.Thumbnail=function(source,width,height){var thumbWidth,thumbHeight=100;if(width!==void 0){thumbWidth=Math.round(thumbHeight*(width/height))}/**
   * Print thumbnail.
   *
   * @returns {string} HTML.
   */this.toString=function(){return"<img src=\""+source+"\" alt=\""+H5P.t("thumbnail")+"\" class=\"h5p-thumbnail\" height=\""+thumbHeight+"\""+(thumbWidth===void 0?"":" width=\""+thumbWidth+"\"")+"/>"}};/**
 * Simple data structure class for storing a single field.
 *
 * @class
 * @param {string} label
 * @param {string} value
 */H5P.Field=function(label,value){/**
   * Public. Get field label.
   *
   * @returns {String}
   */this.getLabel=function(){return label};/**
   * Public. Get field value.
   *
   * @returns {String}
   */this.getValue=function(){return value}};/**
 * Simple class for creating a definition list.
 *
 * @class
 */H5P.DefinitionList=function(){var fields=[];/**
   * Add field to list.
   *
   * @param {H5P.Field} field
   */this.add=function(field){fields.push(field)};/**
   * Get Number of fields.
   *
   * @returns {number}
   */this.size=function(){return fields.length};/**
   * Get field at given index.
   *
   * @param {number} index
   * @returns {H5P.Field}
   */this.get=function(index){return fields[index]};/**
   * Print definition list.
   *
   * @returns {string} HTML.
   */this.toString=function(){for(var html="",i=0,field;i<fields.length;i++){field=fields[i];html+="<dt>"+field.getLabel()+"</dt><dd>"+field.getValue()+"</dd>"}return""===html?html:"<dl class=\"h5p-definition-list\">"+html+"</dl>"}};/**
 * THIS FUNCTION/CLASS IS DEPRECATED AND WILL BE REMOVED.
 *
 * Helper object for keeping coordinates in the same format all over.
 *
 * @deprecated
 *   Will be removed march 2016.
 * @class
 * @param {number} x
 * @param {number} y
 * @param {number} w
 * @param {number} h
 */H5P.Coords=function(x,y,w,h){if(!babelHelpers.instanceof(this,H5P.Coords))return new H5P.Coords(x,y,w,h);/** @member {number} */this.x=0;/** @member {number} */this.y=0;/** @member {number} */this.w=1;/** @member {number} */this.h=1;if("object"===babelHelpers.typeof(x)){this.x=x.x;this.y=x.y;this.w=x.w;this.h=x.h}else{if(x!==void 0){this.x=x}if(y!==void 0){this.y=y}if(w!==void 0){this.w=w}if(h!==void 0){this.h=h}}return this};/**
 * Parse library string into values.
 *
 * @param {string} library
 *   library in the format "machineName majorVersion.minorVersion"
 * @returns {Object}
 *   library as an object with machineName, majorVersion and minorVersion properties
 *   return false if the library parameter is invalid
 */H5P.libraryFromString=function(library){var regExp=/(.+)\s(\d+)\.(\d+)$/g,res=regExp.exec(library);if(null!==res){return{machineName:res[1],majorVersion:parseInt(res[2]),minorVersion:parseInt(res[3])}}else{return!1}};/**
 * Get the path to the library
 *
 * @param {string} library
 *   The library identifier in the format "machineName-majorVersion.minorVersion".
 * @returns {string}
 *   The full path to the library.
 */H5P.getLibraryPath=function(library){if(H5PIntegration.urlLibraries!==void 0){// This is an override for those implementations that has a different libraries URL, e.g. Moodle
return H5PIntegration.urlLibraries+"/"+library}else{return H5PIntegration.url+"/libraries/"+library}};/**
 * Recursivly clone the given object.
 *
 * @param {Object|Array} object
 *   Object to clone.
 * @param {boolean} [recursive]
 * @returns {Object|Array}
 *   A clone of object.
 */H5P.cloneObject=function(object,recursive){// TODO: Consider if this needs to be in core. Doesn't $.extend do the same?
var clone=babelHelpers.instanceof(object,Array)?[]:{};for(var i in object){if(object.hasOwnProperty(i)){if(recursive!==void 0&&recursive&&"object"===babelHelpers.typeof(object[i])){clone[i]=H5P.cloneObject(object[i],recursive)}else{clone[i]=object[i]}}}return clone};/**
 * Remove all empty spaces before and after the value.
 *
 * @param {string} value
 * @returns {string}
 */H5P.trim=function(value){return value.replace(/^\s+|\s+$/g,"");// TODO: Only include this or String.trim(). What is best?
// I'm leaning towards implementing the missing ones: http://kangax.github.io/compat-table/es5/
// So should we make this function deprecated?
};/**
 * Check if JavaScript path/key is loaded.
 *
 * @param {string} path
 * @returns {boolean}
 */H5P.jsLoaded=function(path){H5PIntegration.loadedJs=H5PIntegration.loadedJs||[];return-1!==H5P.jQuery.inArray(path,H5PIntegration.loadedJs)};/**
 * Check if styles path/key is loaded.
 *
 * @param {string} path
 * @returns {boolean}
 */H5P.cssLoaded=function(path){H5PIntegration.loadedCss=H5PIntegration.loadedCss||[];return-1!==H5P.jQuery.inArray(path,H5PIntegration.loadedCss)};/**
 * Shuffle an array in place.
 *
 * @param {Array} array
 *   Array to shuffle
 * @returns {Array}
 *   The passed array is returned for chaining.
 */H5P.shuffleArray=function(array){// TODO: Consider if this should be a part of core. I'm guessing very few libraries are going to use it.
if(!babelHelpers.instanceof(array,Array)){return}var i=array.length,j,tempi,tempj;if(0===i)return!1;while(--i){j=Math.floor(Math.random()*(i+1));tempi=array[i];tempj=array[j];array[i]=tempj;array[j]=tempi}return array};/**
 * Post finished results for user.
 *
 * @deprecated
 *   Do not use this function directly, trigger the finish event instead.
 *   Will be removed march 2016
 * @param {number} contentId
 *   Identifies the content
 * @param {number} score
 *   Achieved score/points
 * @param {number} maxScore
 *   The maximum score/points that can be achieved
 * @param {number} [time]
 *   Reported time consumption/usage
 */H5P.setFinished=function(contentId,score,maxScore,time){var validScore="number"===typeof score||babelHelpers.instanceof(score,Number);if(validScore&&!0===H5PIntegration.postUserStatistics){/**
     * Return unix timestamp for the given JS Date.
     *
     * @private
     * @param {Date} date
     * @returns {Number}
     */var toUnix=function toUnix(date){return Math.round(date.getTime()/1e3)};// Post the results
H5P.jQuery.post(H5PIntegration.ajax.setFinished,{contentId:contentId,score:score,maxScore:maxScore,opened:toUnix(H5P.opened[contentId]),finished:toUnix(new Date),time:time})}};// Add indexOf to browsers that lack them. (IEs)
if(!Array.prototype.indexOf){Array.prototype.indexOf=function(needle){for(var i=0;i<this.length;i++){if(this[i]===needle){return i}}return-1}}// Need to define trim() since this is not available on older IEs,
// and trim is used in several libs
if(String.prototype.trim===void 0){String.prototype.trim=function(){return H5P.trim(this)}}/**
 * Trigger an event on an instance
 *
 * Helper function that triggers an event if the instance supports event handling
 *
 * @param {Object} instance
 *   Instance of H5P content
 * @param {string} eventType
 *   Type of event to trigger
 * @param {*} data
 * @param {Object} extras
 */H5P.trigger=function(instance,eventType,data,extras){// Try new event system first
if(instance.trigger!==void 0){instance.trigger(eventType,data,extras)}// Try deprecated event system
else if(instance.$!==void 0&&instance.$.trigger!==void 0){instance.$.trigger(eventType)}};/**
 * Register an event handler
 *
 * Helper function that registers an event handler for an event type if
 * the instance supports event handling
 *
 * @param {Object} instance
 *   Instance of H5P content
 * @param {string} eventType
 *   Type of event to listen for
 * @param {H5P.EventCallback} handler
 *   Callback that gets triggered for events of the specified type
 */H5P.on=function(instance,eventType,handler){// Try new event system first
if(instance.on!==void 0){instance.on(eventType,handler)}// Try deprecated event system
else if(instance.$!==void 0&&instance.$.on!==void 0){instance.$.on(eventType,handler)}};/**
 * Generate random UUID
 *
 * @returns {string} UUID
 */H5P.createUUID=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(char){var random=0|16*Math.random(),newChar="x"===char?random:8|3&random;return newChar.toString(16)})};/**
 * Create title
 *
 * @param {string} rawTitle
 * @param {number} maxLength
 * @returns {string}
 */H5P.createTitle=function(rawTitle,maxLength){if(!rawTitle){return""}if(maxLength===void 0){maxLength=60}var title=H5P.jQuery("<div></div>").text(// Strip tags
rawTitle.replace(/(<([^>]+)>)/gi,"")// Escape
).text();if(title.length>maxLength){title=title.substr(0,maxLength-3)+"..."}return title};// Wrap in privates
(function($){/**
   * Creates ajax requests for inserting, updateing and deleteing
   * content user data.
   *
   * @private
   * @param {number} contentId What content to store the data for.
   * @param {string} dataType Identifies the set of data for this content.
   * @param {string} subContentId Identifies sub content
   * @param {function} [done] Callback when ajax is done.
   * @param {object} [data] To be stored for future use.
   * @param {boolean} [preload=false] Data is loaded when content is loaded.
   * @param {boolean} [invalidate=false] Data is invalidated when content changes.
   * @param {boolean} [async=true]
   */function contentUserDataAjax(contentId,dataType,subContentId,done,data,preload,invalidate,async){if(H5PIntegration.user===void 0){// Not logged in, no use in saving.
done("Not signed in.");return}var options={url:H5PIntegration.ajax.contentUserData.replace(":contentId",contentId).replace(":dataType",dataType).replace(":subContentId",subContentId?subContentId:0),dataType:"json",async:async===void 0?!0:async};if(data!==void 0){options.type="POST";options.data={data:null===data?0:data,preload:preload?1:0,invalidate:invalidate?1:0}}else{options.type="GET"}if(done!==void 0){options.error=function(xhr,error){done(error)};options.success=function(response){if(!response.success){done(response.message);return}if(!1===response.data||response.data===void 0){done();return}done(void 0,response.data)}}$.ajax(options)}/**
   * Get user data for given content.
   *
   * @param {number} contentId
   *   What content to get data for.
   * @param {string} dataId
   *   Identifies the set of data for this content.
   * @param {function} done
   *   Callback with error and data parameters.
   * @param {string} [subContentId]
   *   Identifies which data belongs to sub content.
   */H5P.getUserData=function(contentId,dataId,done,subContentId){if(!subContentId){subContentId=0;// Default
}H5PIntegration.contents=H5PIntegration.contents||{};var content=H5PIntegration.contents["cid-"+contentId]||{},preloadedData=content.contentUserData;if(preloadedData&&preloadedData[subContentId]&&preloadedData[subContentId][dataId]!==void 0){if("RESET"===preloadedData[subContentId][dataId]){done(void 0,null);return}try{done(void 0,JSON.parse(preloadedData[subContentId][dataId]))}catch(err){done(err)}}else{contentUserDataAjax(contentId,dataId,subContentId,function(err,data){if(err||data===void 0){done(err,data);return;// Error or no data
}// Cache in preloaded
if(content.contentUserData===void 0){content.contentUserData=preloadedData={}}if(preloadedData[subContentId]===void 0){preloadedData[subContentId]={}}preloadedData[subContentId][dataId]=data;// Done. Try to decode JSON
try{done(void 0,JSON.parse(data))}catch(e){done(e)}})}};/**
   * Get crossorigin option that is set for site. Usefull for setting crossorigin policy for elements.
   *
   * @returns {string|null} Returns the string that should be set as crossorigin policy for elements or null if
   * no policy is set.
   */H5P.getCrossOrigin=function(url){var crossorigin=H5PIntegration.crossorigin,urlRegex=H5PIntegration.crossoriginRegex;return crossorigin&&urlRegex&&url.match(urlRegex)?crossorigin:null};/**
   * Async error handling.
   *
   * @callback H5P.ErrorCallback
   * @param {*} error
   */ /**
   * Set user data for given content.
   *
   * @param {number} contentId
   *   What content to get data for.
   * @param {string} dataId
   *   Identifies the set of data for this content.
   * @param {Object} data
   *   The data that is to be stored.
   * @param {Object} [extras]
   *   Extra properties
   * @param {string} [extras.subContentId]
   *   Identifies which data belongs to sub content.
   * @param {boolean} [extras.preloaded=true]
   *   If the data should be loaded when content is loaded.
   * @param {boolean} [extras.deleteOnChange=false]
   *   If the data should be invalidated when the content changes.
   * @param {H5P.ErrorCallback} [extras.errorCallback]
   *   Callback with error as parameters.
   * @param {boolean} [extras.async=true]
   */H5P.setUserData=function(contentId,dataId,data,extras){var options=H5P.jQuery.extend(!0,{},{subContentId:0,preloaded:!0,deleteOnChange:!1,async:!0},extras);try{data=JSON.stringify(data)}catch(err){if(options.errorCallback){options.errorCallback(err)}return;// Failed to serialize.
}var content=H5PIntegration.contents["cid-"+contentId];if(content===void 0){content=H5PIntegration.contents["cid-"+contentId]={}}if(!content.contentUserData){content.contentUserData={}}var preloadedData=content.contentUserData;if(preloadedData[options.subContentId]===void 0){preloadedData[options.subContentId]={}}if(data===preloadedData[options.subContentId][dataId]){return;// No need to save this twice.
}preloadedData[options.subContentId][dataId]=data;contentUserDataAjax(contentId,dataId,options.subContentId,function(error){if(options.errorCallback&&error){options.errorCallback(error)}},data,options.preloaded,options.deleteOnChange,options.async)};/**
   * Delete user data for given content.
   *
   * @param {number} contentId
   *   What content to remove data for.
   * @param {string} dataId
   *   Identifies the set of data for this content.
   * @param {string} [subContentId]
   *   Identifies which data belongs to sub content.
   */H5P.deleteUserData=function(contentId,dataId,subContentId){if(!subContentId){subContentId=0;// Default
}// Remove from preloaded/cache
var preloadedData=H5PIntegration.contents["cid-"+contentId].contentUserData;if(preloadedData&&preloadedData[subContentId]&&preloadedData[subContentId][dataId]){delete preloadedData[subContentId][dataId]}contentUserDataAjax(contentId,dataId,subContentId,void 0,null)};/**
   * Function for getting content for a certain ID
   *
   * @param {number} contentId
   * @return {Object}
   */H5P.getContentForInstance=function(contentId){var key="cid-"+contentId,exists=H5PIntegration&&H5PIntegration.contents&&H5PIntegration.contents[key];return exists?H5PIntegration.contents[key]:void 0};/**
   * Prepares the content parameters for storing in the clipboard.
   *
   * @class
   * @param {Object} parameters The parameters for the content to store
   * @param {string} [genericProperty] If only part of the parameters are generic, which part
   * @param {string} [specificKey] If the parameters are specific, what content type does it fit
   * @returns {Object} Ready for the clipboard
   */H5P.ClipboardItem=function(parameters,genericProperty,specificKey){var self=this,setDimensionsFromFile=function setDimensionsFromFile(){if(!self.generic){return}var params=self.specific[self.generic];if(!params.params.file||!params.params.file.width||!params.params.file.height){return}self.width=20;// %
self.height=params.params.file.height/params.params.file.width*self.width};/**
     * Set relative dimensions when params contains a file with a width and a height.
     * Very useful to be compatible with wysiwyg editors.
     *
     * @private
     */if(!genericProperty){genericProperty="action";parameters={action:parameters}}self.specific=parameters;if(genericProperty&&parameters[genericProperty]){self.generic=genericProperty}if(specificKey){self.from=specificKey}if(window.H5PEditor&&H5PEditor.contentId){self.contentId=H5PEditor.contentId}if(!self.specific.width&&!self.specific.height){setDimensionsFromFile()}};/**
   * Store item in the H5P Clipboard.
   *
   * @param {H5P.ClipboardItem|*} clipboardItem
   */H5P.clipboardify=function(clipboardItem){if(!babelHelpers.instanceof(clipboardItem,H5P.ClipboardItem)){clipboardItem=new H5P.ClipboardItem(clipboardItem)}H5P.setClipboard(clipboardItem)};/**
   * Retrieve parsed clipboard data.
   *
   * @return {Object}
   */H5P.getClipboard=function(){return parseClipboard()};/**
   * Set item in the H5P Clipboard.
   *
   * @param {H5P.ClipboardItem|object} clipboardItem - Data to be set.
   */H5P.setClipboard=function(clipboardItem){localStorage.setItem("h5pClipboard",JSON.stringify(clipboardItem));// Trigger an event so all 'Paste' buttons may be enabled.
H5P.externalDispatcher.trigger("datainclipboard",{reset:!1})};/**
   * Get config for a library
   *
   * @param string machineName
   * @return Object
   */H5P.getLibraryConfig=function(machineName){var hasConfig=H5PIntegration.libraryConfig&&H5PIntegration.libraryConfig[machineName];return hasConfig?H5PIntegration.libraryConfig[machineName]:{}};/**
   * Get item from the H5P Clipboard.
   *
   * @private
   * @return {Object}
   */var parseClipboard=function parseClipboard(){var clipboardData=localStorage.getItem("h5pClipboard");if(!clipboardData){return}// Try to parse clipboard dat
try{clipboardData=JSON.parse(clipboardData)}catch(err){console.error("Unable to parse JSON from clipboard.",err);return}// Update file URLs and reset content Ids
recursiveUpdate(clipboardData.specific,function(path){var isTmpFile="#tmp"===path.substr(-4,4);if(!isTmpFile&&clipboardData.contentId){// Comes from existing content
if(H5PEditor.contentId){// .. to existing content
return"../"+clipboardData.contentId+"/"+path}else{// .. to new content
return(H5PEditor.contentRelUrl?H5PEditor.contentRelUrl:"../content/")+clipboardData.contentId+"/"+path}}return path;// Will automatically be looked for in tmp folder
});if(clipboardData.generic){// Use reference instead of key
clipboardData.generic=clipboardData.specific[clipboardData.generic]}return clipboardData},recursiveUpdate=function recursiveUpdate(params,handler){for(var prop in params){if(params.hasOwnProperty(prop)&&babelHelpers.instanceof(params[prop],Object)){var obj=params[prop];if(obj.path!==void 0&&obj.mime!==void 0){obj.path=handler(obj.path)}else{if(obj.library!==void 0&&obj.subContentId!==void 0){// Avoid multiple content with same ID
delete obj.subContentId}recursiveUpdate(obj,handler)}}}};/**
   * Update file URLs and reset content IDs.
   * Useful when copying content.
   *
   * @private
   * @param {object} params Reference
   * @param {function} handler Modifies the path to work when pasted
   */ // Init H5P when page is fully loadded
$(document).ready(function(){window.addEventListener("storage",function(event){// Pick up clipboard changes from other tabs
if("h5pClipboard"===event.key){// Trigger an event so all 'Paste' buttons may be enabled.
H5P.externalDispatcher.trigger("datainclipboard",{reset:null===event.newValue})}});var ccVersions={default:"4.0","4.0":H5P.t("licenseCC40"),"3.0":H5P.t("licenseCC30"),2.5:H5P.t("licenseCC25"),"2.0":H5P.t("licenseCC20"),"1.0":H5P.t("licenseCC10")};/**
     * Maps copyright license codes to their human readable counterpart.
     *
     * @type {Object}
     */H5P.copyrightLicenses={U:H5P.t("licenseU"),"CC BY":{label:H5P.t("licenseCCBY"),link:"http://creativecommons.org/licenses/by/:version",versions:ccVersions},"CC BY-SA":{label:H5P.t("licenseCCBYSA"),link:"http://creativecommons.org/licenses/by-sa/:version",versions:ccVersions},"CC BY-ND":{label:H5P.t("licenseCCBYND"),link:"http://creativecommons.org/licenses/by-nd/:version",versions:ccVersions},"CC BY-NC":{label:H5P.t("licenseCCBYNC"),link:"http://creativecommons.org/licenses/by-nc/:version",versions:ccVersions},"CC BY-NC-SA":{label:H5P.t("licenseCCBYNCSA"),link:"http://creativecommons.org/licenses/by-nc-sa/:version",versions:ccVersions},"CC BY-NC-ND":{label:H5P.t("licenseCCBYNCND"),link:"http://creativecommons.org/licenses/by-nc-nd/:version",versions:ccVersions},"CC0 1.0":{label:H5P.t("licenseCC010"),link:"https://creativecommons.org/publicdomain/zero/1.0/"},"GNU GPL":{label:H5P.t("licenseGPL"),link:"http://www.gnu.org/licenses/gpl-:version-standalone.html",linkVersions:{v3:"3.0",v2:"2.0",v1:"1.0"},versions:{default:"v3",v3:H5P.t("licenseV3"),v2:H5P.t("licenseV2"),v1:H5P.t("licenseV1")}},PD:{label:H5P.t("licensePD"),versions:{"CC0 1.0":{label:H5P.t("licenseCC010"),link:"https://creativecommons.org/publicdomain/zero/1.0/"},"CC PDM":{label:H5P.t("licensePDM"),link:"https://creativecommons.org/publicdomain/mark/1.0/"}}},"ODC PDDL":"<a href=\"http://opendatacommons.org/licenses/pddl/1.0/\" target=\"_blank\">Public Domain Dedication and Licence</a>","CC PDM":{label:H5P.t("licensePDM"),link:"https://creativecommons.org/publicdomain/mark/1.0/"},C:H5P.t("licenseC")};/**
     * Indicates if H5P is embedded on an external page using iframe.
     * @member {boolean} H5P.externalEmbed
     */ // Relay events to top window. This must be done before H5P.init
// since events may be fired on initialization.
if(H5P.isFramed&&!1===H5P.externalEmbed){H5P.externalDispatcher.on("*",function(event){window.parent.H5P.externalDispatcher.trigger.call(this,event)})}/**
     * Prevent H5P Core from initializing. Must be overriden before document ready.
     * @member {boolean} H5P.preventInit
     */if(!H5P.preventInit){// Note that this start script has to be an external resource for it to
// load in correct order in IE9.
H5P.init(document.body)}if(!1!==H5PIntegration.saveFreq){// When was the last state stored
var lastStoredOn=0,storeCurrentState=function storeCurrentState(){// Make sure at least 250 ms has passed since last save
var currentTime=new Date().getTime();if(250<currentTime-lastStoredOn){lastStoredOn=currentTime;for(var i=0,instance;i<H5P.instances.length;i++){instance=H5P.instances[i];if(babelHelpers.instanceof(instance.getCurrentState,Function)||"function"===typeof instance.getCurrentState){var state=instance.getCurrentState();if(state!==void 0){// Async is not used to prevent the request from being cancelled.
H5P.setUserData(instance.contentId,"state",state,{deleteOnChange:!0,async:!1})}}}}};// Store the current state of the H5P when leaving the page.
// iPad does not support beforeunload, therefore using unload
H5P.$window.one("beforeunload unload",function(){// Only want to do this once
H5P.$window.off("pagehide beforeunload unload");storeCurrentState()});// pagehide is used on iPad when tabs are switched
H5P.$window.on("pagehide",storeCurrentState)}})})(H5P.jQuery);