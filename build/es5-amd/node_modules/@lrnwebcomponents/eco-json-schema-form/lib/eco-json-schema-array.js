define(["exports", "../../../@polymer/polymer/polymer-element.js", "../../../@polymer/polymer/lib/legacy/polymer.dom.js", "../../../@polymer/polymer/lib/utils/render-status.js", "../../../@polymer/app-localize-behavior/app-localize-behavior.js", "../../../@polymer/polymer/lib/legacy/class.js", "../../../@polymer/iron-flex-layout/iron-flex-layout-classes.js", "../../../@polymer/iron-icons/iron-icons.js", "../../../@polymer/iron-icons/editor-icons.js", "../../../@polymer/paper-icon-button/paper-icon-button.js", "../../a11y-collapse/a11y-collapse.js", "../../a11y-collapse/lib/a11y-collapse-group.js", "./eco-json-schema-object.js"], function (_exports, _polymerElement, _polymerDom, _renderStatus, _appLocalizeBehavior, _class, _ironFlexLayoutClasses, _ironIcons, _editorIcons, _paperIconButton, _a11yCollapse, _a11yCollapseGroup, _ecoJsonSchemaObject) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.EcoJsonSchemaArray = void 0;

  function _templateObject_e3829960b46e11e9978b67ee5ebb8bc8() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <custom-style>\n        <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\">\n          :host {\n            color: var(--eco-json-form-color);\n            background-color: var(--eco-json-form-bg);\n            font-family: var(--eco-json-form-font-family);\n          }\n          :host ([hidden]) {\n            display: none;\n          }\n          :host fieldset {\n            border-radius: var(--eco-json-form-border-radius);\n            border-style: solid;\n            border-width: 1px;\n            border-color: var(--eco-json-form-faded-color);\n            transition: all 0.5s;\n          }\n          :host legend {\n            transition: all 0.5s;\n            color: var(--eco-json-form-faded-color);\n          }\n          :host fieldset:focus #legend,\n          :host fieldset:focus-within #legend {\n            color: var(--eco-json-form-active-color);\n          }\n          :host .array-item-button {\n            color: var(--eco-json-form-faded-color);\n            background-color: var(--eco-json-form-bg);\n            text-transform: none;\n            margin-bottom: 0;\n          }\n          :host .array-item-button:focus,\n          :host .array-item-button:hover {\n            color: var(--eco-json-form-active-color);\n          }\n          :host .add-array-item iron-icon {\n            padding: 8px;\n          }\n          :host .add-array-item {\n            color: var(--eco-json-form-add-color);\n            border-radius: 0 0 var(--eco-json-form-border-radius);\n            border: 1px solid var(--eco-json-form-bg);\n            margin: 0;\n            padding: 0 8px 0 16px;\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n          }\n          :host .add-array-item:focus,\n          :host .add-array-item:hover {\n            color: var(--eco-json-form-add-color);\n            background-color: var(--eco-json-form-faded-bg);\n            border: 1px solid var(--eco-json-form-faded-color);\n          }\n          :host .remove-array-item {\n            color: var(--eco-json-form-remove-color);\n            background-color: var(--eco-json-form-bg);\n            margin: 15px 0 0 0;\n            border-radius: 100%;\n          }\n          :host .remove-array-item:focus,\n          :host .remove-array-item:hover {\n            color: var(--eco-json-form-remove-color);\n            background-color: var(--eco-json-form-faded-bg);\n          }\n          :host a11y-collapse-group {\n            margin: 0;\n            border-radius: var(--eco-json-form-border-radius);\n            --a11y-collapse-border: 1px solid var(--eco-json-form-faded-color);\n          }\n          :host a11y-collapse {\n            --a11y-collapse-padding-right: 8px;\n            border: 1px solid var(--eco-json-form-bg);\n            --a11y-collapse-heading: {\n              color: var(--eco-json-form-faded-color);\n              background-color: var(--eco-json-form-bg);\n              font-weight: normal;\n              margin: 0;\n            }\n            --a11y-collapse-icon: {\n              padding: 8px;\n            }\n          }\n          :host a11y-collapse:focus,\n          :host a11y-collapse:hover,\n          :host a11y-collapse[expanded] {\n            border: 1px solid var(--eco-json-form-faded-color);\n            --a11y-collapse-heading: {\n              color: var(--eco-json-form-color);\n              background-color: var(--eco-json-form-faded-bg);\n              font-weight: normal;\n              margin: 0;\n            }\n          }\n          :host p[slot=\"heading\"] {\n            margin: 0;\n          }\n          :host div[slot=\"content\"] > div {\n            width: 100%;\n            display: flex;\n            align-items: flex-end;\n            justify-content: space-between;\n          }\n          :host eco-json-schema-object {\n            flex: 1 0 auto;\n          }\n        </style>\n      </custom-style>\n      <fieldset>\n        <legend id=\"legend\" class=\"flex\" hidden$=\"[[!label]]\">\n          [[label]]\n        </legend>\n        <a11y-collapse-group\n          id=\"form\"\n          icon=\"settings\"\n          class=\"vertical flex layout\"\n          global-options=\"[[globalOptions]]\"\n        >\n          <template\n            is=\"dom-repeat\"\n            items=\"[[__validatedSchema]]\"\n            as=\"item\"\n            restamp\n          >\n            <a11y-collapse accordion id$=\"item-[[index]]\">\n              <p slot=\"heading\">\n                {{_getHeading(item.value.*,item.label,index)}}\n              </p>\n              <div slot=\"content\">\n                <div>\n                  <eco-json-schema-object\n                    id=\"schemaobject\"\n                    controls$=\"item-[[index]]\"\n                    item=\"[[index]]\"\n                    autofocus$=\"[[autofocus]]\"\n                    on-value-changed=\"_valueChanged\"\n                    hide-line-numbers$=\"[[hideLineNumbers]]\"\n                    schema=\"[[item]]\"\n                    value=\"{{item.value}}\"\n                  >\n                  </eco-json-schema-object>\n                  <paper-icon-button\n                    id=\"remove-[[index]]\"\n                    icon=\"icons:delete\"\n                    aria-label=\"Remove this item\"\n                    aria-describedby=\"item-[[index]]\"\n                    class=\"remove-array-item array-item-button\"\n                    controls=\"item-[[index]]\"\n                    on-tap=\"_onRemoveItem\"\n                    role=\"button\"\n                  >\n                  </paper-icon-button>\n                  <paper-tooltip for=\"remove-[[index]]\"\n                    >Remove this item</paper-tooltip\n                  >\n                </div>\n              </div>\n            </a11y-collapse>\n          </template>\n        </a11y-collapse-group>\n        <paper-button\n          class=\"add-array-item array-item-button\"\n          on-click=\"_onAddItem\"\n          role=\"button\"\n        >\n          Add an item\n          <iron-icon icon=\"add-circle\"></iron-icon>\n        </paper-button>\n      </fieldset>\n    "], ["\n      <custom-style>\n        <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\">\n          :host {\n            color: var(--eco-json-form-color);\n            background-color: var(--eco-json-form-bg);\n            font-family: var(--eco-json-form-font-family);\n          }\n          :host ([hidden]) {\n            display: none;\n          }\n          :host fieldset {\n            border-radius: var(--eco-json-form-border-radius);\n            border-style: solid;\n            border-width: 1px;\n            border-color: var(--eco-json-form-faded-color);\n            transition: all 0.5s;\n          }\n          :host legend {\n            transition: all 0.5s;\n            color: var(--eco-json-form-faded-color);\n          }\n          :host fieldset:focus #legend,\n          :host fieldset:focus-within #legend {\n            color: var(--eco-json-form-active-color);\n          }\n          :host .array-item-button {\n            color: var(--eco-json-form-faded-color);\n            background-color: var(--eco-json-form-bg);\n            text-transform: none;\n            margin-bottom: 0;\n          }\n          :host .array-item-button:focus,\n          :host .array-item-button:hover {\n            color: var(--eco-json-form-active-color);\n          }\n          :host .add-array-item iron-icon {\n            padding: 8px;\n          }\n          :host .add-array-item {\n            color: var(--eco-json-form-add-color);\n            border-radius: 0 0 var(--eco-json-form-border-radius);\n            border: 1px solid var(--eco-json-form-bg);\n            margin: 0;\n            padding: 0 8px 0 16px;\n            display: flex;\n            align-items: center;\n            justify-content: space-between;\n          }\n          :host .add-array-item:focus,\n          :host .add-array-item:hover {\n            color: var(--eco-json-form-add-color);\n            background-color: var(--eco-json-form-faded-bg);\n            border: 1px solid var(--eco-json-form-faded-color);\n          }\n          :host .remove-array-item {\n            color: var(--eco-json-form-remove-color);\n            background-color: var(--eco-json-form-bg);\n            margin: 15px 0 0 0;\n            border-radius: 100%;\n          }\n          :host .remove-array-item:focus,\n          :host .remove-array-item:hover {\n            color: var(--eco-json-form-remove-color);\n            background-color: var(--eco-json-form-faded-bg);\n          }\n          :host a11y-collapse-group {\n            margin: 0;\n            border-radius: var(--eco-json-form-border-radius);\n            --a11y-collapse-border: 1px solid var(--eco-json-form-faded-color);\n          }\n          :host a11y-collapse {\n            --a11y-collapse-padding-right: 8px;\n            border: 1px solid var(--eco-json-form-bg);\n            --a11y-collapse-heading: {\n              color: var(--eco-json-form-faded-color);\n              background-color: var(--eco-json-form-bg);\n              font-weight: normal;\n              margin: 0;\n            }\n            --a11y-collapse-icon: {\n              padding: 8px;\n            }\n          }\n          :host a11y-collapse:focus,\n          :host a11y-collapse:hover,\n          :host a11y-collapse[expanded] {\n            border: 1px solid var(--eco-json-form-faded-color);\n            --a11y-collapse-heading: {\n              color: var(--eco-json-form-color);\n              background-color: var(--eco-json-form-faded-bg);\n              font-weight: normal;\n              margin: 0;\n            }\n          }\n          :host p[slot=\"heading\"] {\n            margin: 0;\n          }\n          :host div[slot=\"content\"] > div {\n            width: 100%;\n            display: flex;\n            align-items: flex-end;\n            justify-content: space-between;\n          }\n          :host eco-json-schema-object {\n            flex: 1 0 auto;\n          }\n        </style>\n      </custom-style>\n      <fieldset>\n        <legend id=\"legend\" class=\"flex\" hidden\\$=\"[[!label]]\">\n          [[label]]\n        </legend>\n        <a11y-collapse-group\n          id=\"form\"\n          icon=\"settings\"\n          class=\"vertical flex layout\"\n          global-options=\"[[globalOptions]]\"\n        >\n          <template\n            is=\"dom-repeat\"\n            items=\"[[__validatedSchema]]\"\n            as=\"item\"\n            restamp\n          >\n            <a11y-collapse accordion id$=\"item-[[index]]\">\n              <p slot=\"heading\">\n                {{_getHeading(item.value.*,item.label,index)}}\n              </p>\n              <div slot=\"content\">\n                <div>\n                  <eco-json-schema-object\n                    id=\"schemaobject\"\n                    controls$=\"item-[[index]]\"\n                    item=\"[[index]]\"\n                    autofocus$=\"[[autofocus]]\"\n                    on-value-changed=\"_valueChanged\"\n                    hide-line-numbers$=\"[[hideLineNumbers]]\"\n                    schema=\"[[item]]\"\n                    value=\"{{item.value}}\"\n                  >\n                  </eco-json-schema-object>\n                  <paper-icon-button\n                    id=\"remove-[[index]]\"\n                    icon=\"icons:delete\"\n                    aria-label=\"Remove this item\"\n                    aria-describedby=\"item-[[index]]\"\n                    class=\"remove-array-item array-item-button\"\n                    controls=\"item-[[index]]\"\n                    on-tap=\"_onRemoveItem\"\n                    role=\"button\"\n                  >\n                  </paper-icon-button>\n                  <paper-tooltip for=\"remove-[[index]]\"\n                    >Remove this item</paper-tooltip\n                  >\n                </div>\n              </div>\n            </a11y-collapse>\n          </template>\n        </a11y-collapse-group>\n        <paper-button\n          class=\"add-array-item array-item-button\"\n          on-click=\"_onAddItem\"\n          role=\"button\"\n        >\n          Add an item\n          <iron-icon icon=\"add-circle\"></iron-icon>\n        </paper-button>\n      </fieldset>\n    "]);

    _templateObject_e3829960b46e11e9978b67ee5ebb8bc8 = function _templateObject_e3829960b46e11e9978b67ee5ebb8bc8() {
      return data;
    };

    return data;
  }

  /**
  `eco-json-schema-array` takes in a JSON schema of type array and builds a form,
  exposing a `value` property that represents an array described by the schema.
  
  Please see the `eco-json-schema-object` documentation for further information.
  
  @group eco Elements
  @element eco-json-schema-array
  * @demo demo/index.html
  */
  var EcoJsonSchemaArray =
  /*#__PURE__*/
  function (_mixinBehaviors) {
    babelHelpers.inherits(EcoJsonSchemaArray, _mixinBehaviors);

    function EcoJsonSchemaArray() {
      babelHelpers.classCallCheck(this, EcoJsonSchemaArray);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(EcoJsonSchemaArray).apply(this, arguments));
    }

    babelHelpers.createClass(EcoJsonSchemaArray, [{
      key: "_onAddItem",

      /**
       * handles adding an array item
       * @param {event} e the add item button tap event
       */
      value: function _onAddItem(e) {
        var schema = JSON.parse(JSON.stringify(this.schema.items));
        schema.value = {};
        this.push("__validatedSchema", schema);
      }
      /**
       * handles removing an array item
       * @param {event} e the remove item button tap event
       */

    }, {
      key: "_onRemoveItem",
      value: function _onRemoveItem(e) {
        this._valueChanged(e);

        var id = e.target.controls.split("-");
        this.splice("__validatedSchema", id[1], 1);
      }
      /**
       * labels the collapse heading based on a given property
       * @param {object} item the array item
       * @param {string} prop the property that will populate the collapse heading
       * @param {number} index the  index of the item
       */

    }, {
      key: "_getHeading",
      value: function _getHeading(item, prop, index) {
        return item && item.base && prop && item.base[prop] && typeof item.base[prop] === "string" && item.base[prop].trim("") !== "" ? item.base[prop].trim("") : "Item ".concat(index + 1);
      }
      /**
       * Handles data changes
       * @param {event} e the change event
       */

    }, {
      key: "_valueChanged",
      value: function _valueChanged(e) {
        var root = this,
            val = this.__validatedSchema.map(function (item) {
          return item.value;
        });

        this.notifyPath("value.*");
        this.set("value", val);
        this.dispatchEvent(new CustomEvent("value-changed", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: root
        }));
      }
      /**
       * fires when the fields array changes
       * @param {object} oldValue the old value
       * @param {object} newValue the new value
       */

    }, {
      key: "_schemaChanged",
      value: function _schemaChanged(oldValue, newValue) {
        var root = this; //prevent a potential feedback loop

        if (JSON.stringify(oldValue) !== JSON.stringify(newValue)) {
          this._setValues();
        }

        this.dispatchEvent(new CustomEvent("schema-changed", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: root
        }));
      }
      /**
       * when either the fields or the value changes, updates the schema and form to match
       */

    }, {
      key: "_setValues",
      value: function _setValues() {
        var schema = [];

        for (var i = 0; i < this.schema.value.length; i++) {
          var item = this.schema.value[i];
          schema[i] = JSON.parse(JSON.stringify(this.schema.items));

          for (var prop in item) {
            if (schema[i].properties[prop]) schema[i].properties[prop].value = item[prop];
          }
        }

        this.notifyPath("__validatedSchema.*");
        this.__validatedSchema = schema;
      }
    }], [{
      key: "tag",
      get: function get() {
        return "eco-json-schema-array";
      }
    }, {
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_e3829960b46e11e9978b67ee5ebb8bc8());
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * automatically set focus on the first field if that field has autofocus
           */
          autofocus: {
            type: "Boolean",
            value: false
          },
          globalOptions: {
            type: Object,
            value: {
              icon: "settings",
              tooltip: "configure item"
            }
          },

          /**
           * hide code-editor line numbers
           */
          hideLineNumbers: {
            type: Boolean,
            value: false
          },
          label: {
            type: String
          },
          schema: {
            type: Object,
            notify: true,
            observer: "_schemaChanged"
          },
          value: {
            type: Array,
            notify: true,
            value: []
          },

          /**
           * Fields to conver to JSON Schema.
           */
          __validatedSchema: {
            type: Array,
            value: [],
            notify: true
          }
        };
      }
    }]);
    return EcoJsonSchemaArray;
  }((0, _class.mixinBehaviors)([_appLocalizeBehavior.AppLocalizeBehavior], _polymerElement.PolymerElement));

  _exports.EcoJsonSchemaArray = EcoJsonSchemaArray;
  window.customElements.define(EcoJsonSchemaArray.tag, EcoJsonSchemaArray);
});