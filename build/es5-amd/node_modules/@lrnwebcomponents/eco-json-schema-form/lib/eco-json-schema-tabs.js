define(["exports", "../../../@polymer/polymer/polymer-element.js", "../../../@polymer/app-localize-behavior/app-localize-behavior.js", "../../../@polymer/polymer/lib/legacy/class.js", "../../a11y-tabs/a11y-tabs.js", "../../../@polymer/polymer/lib/utils/render-status.js", "../../../@polymer/polymer/lib/elements/dom-repeat.js"], function (_exports, _polymerElement, _appLocalizeBehavior, _class, _a11yTabs, _renderStatus, _domRepeat) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.EcoJsonSchemaTabs = void 0;

  function _templateObject_8db2a770c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <custom-style>\n        <style is=\"custom-style\" include=\"iron-flex iron-flex-alignment\">\n          :host{\n            color: var(--eco-json-form-color);\n            background-color: var(--eco-json-form-bg);\n            font-family: var(--eco-json-form-font-family);\n          }\n          :host ([hidden]) {\n            display: none;\n          }\n          :host a11y-tabs {\n            --a11y-tabs-color: var(--eco-json-form-faded-color);\n            --a11y-tabs-focus-color: var(--eco-json-form-color);\n            --a11y-tabs-border-color: var(--eco-json-form-faded-color);\n            --a11y-tabs-border-radius: var(--eco-json-form-border-radius);\n            --a11y-tabs-background: var(--eco-json-form-bg);\n            --a11y-tabs-faded-background: var(--eco-json-form-faded-bg);\n            --a11y-tabs-justify-tabs: flex-start;\n            --ally-tabs-wrap: unset;\n            --a11y-tabs-content-padding: 4px 8px;\n            --a11y-tabs-button-padding: 8px;\n            --a11y-tabs-vertical-button-padding: unset;\n            --a11y-tabs-horizontal-border-radius: unset;\n            --a11y-tabs-vertical-border-radius: unset;\n            --a11y-tabs-horizontal-button-padding: 2px 5px;\n          }\n          :host a11y-tabs:focus,\n          :host a11y-tabs:focus-within {\n            --a11y-tabs-border-color: : var(--eco-json-form-focus-color);\n          }\n          :host .tab-title {\n            position: absolute;\n            left: -99999px;\n            height: 0;\n            overflow: hidden;\n          }\n        </style>\n      </custom-style>\n      <a11y-tabs id$=\"[[schema.property]]\" layout-breakpoint=\"0\">\n        <template\n          is=\"dom-repeat\"\n          items=\"[[schema.properties]]\"\n          as=\"item\"\n          restamp\n        >\n          <a11y-tab\n            id$=\"item-[[index]]\"\n            icon$=\"[[item.icon]]\"\n            disabled$=\"[[item.disabled]]\"\n            label$=\"[[item.label]]\"\n          >\n            <div hidden$=\"[[!item.description]]\">[[item.description]]</div>\n            <div\n              id$=\"[[item.property]]\"\n              class=\"item-fields\"\n              data-index$=\"[[index]]\"\n            ></div>\n          </a11y-tab>\n        </template>\n      </a11y-tabs>\n    "]);

    _templateObject_8db2a770c96f11ea8be5e1d5fe7ec787 = function _templateObject_8db2a770c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  /**
  `eco-json-schema-tabs` takes in a JSON schema of type array and builds a form,
  exposing a `value` property that represents an array described by the schema.
  
  Please see the `eco-json-schema-object` documentation for further information.
  
  @group eco Elements
  @element eco-json-schema-tabs
  * @demo demo/index.html
  */
  var EcoJsonSchemaTabs =
  /*#__PURE__*/
  function (_mixinBehaviors) {
    babelHelpers.inherits(EcoJsonSchemaTabs, _mixinBehaviors);

    function EcoJsonSchemaTabs() {
      babelHelpers.classCallCheck(this, EcoJsonSchemaTabs);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(EcoJsonSchemaTabs).apply(this, arguments));
    }

    babelHelpers.createClass(EcoJsonSchemaTabs, [{
      key: "ready",
      value: function ready() {
        babelHelpers.get(babelHelpers.getPrototypeOf(EcoJsonSchemaTabs.prototype), "ready", this).call(this);

        this._schemaChanged();
      }
      /**
       * updates the array fields if the schema (which includes values) changes
       */

    }, {
      key: "_schemaChanged",
      value: function _schemaChanged() {
        var _this = this;

        //make sure the content is there first
        (0, _renderStatus.afterNextRender)(this, function () {
          _this.shadowRoot.querySelectorAll(".item-fields").forEach(function (item) {
            var index = item.getAttribute("data-index"),
                propertyName = _this.propertyName,
                tab = _this.schema.properties[index],
                prop = tab.name,
                prefix = "".concat(propertyName, ".").concat(prop);

            _this.dispatchEvent(new CustomEvent("build-fieldset", {
              bubbles: false,
              cancelable: true,
              composed: true,
              detail: {
                container: item,
                path: prefix,
                prefix: prefix,
                properties: tab.schema.properties,
                type: EcoJsonSchemaTabs.tag,
                value: tab.value || {}
              }
            }));
          });
        });
      }
    }], [{
      key: "tag",
      get: function get() {
        return "eco-json-schema-tabs";
      }
    }, {
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_8db2a770c96f11ea8be5e1d5fe7ec787());
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          propertyName: {
            type: String,
            value: null
          },
          schema: {
            type: Object,
            value: {}
          }
        };
      }
    }]);
    return EcoJsonSchemaTabs;
  }((0, _class.mixinBehaviors)([_appLocalizeBehavior.AppLocalizeBehavior], _polymerElement.PolymerElement));

  _exports.EcoJsonSchemaTabs = EcoJsonSchemaTabs;
  window.customElements.define(EcoJsonSchemaTabs.tag, EcoJsonSchemaTabs);
});