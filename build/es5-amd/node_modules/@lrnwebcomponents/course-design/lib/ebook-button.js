define(["../../../lit-element/lit-element.js", "../../simple-icon/lib/simple-icons.js", "../../simple-icon/lib/simple-icon-lite.js"], function (_litElement, _simpleIcons, _simpleIconLite) {
  "use strict";

  function _templateObject2_6cbcdb20545d11eba21e89082e94d7aa() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: inline-block;\n          --paper-button-click-state: #000;\n          --paper-button-title: #000;\n          --link-color: #aeaeae;\n        }\n\n        button {\n          min-height: 48px;\n          text-transform: none;\n          padding: 10px 25px 10px 0;\n        }\n\n        button:active,\n        button:focus,\n        button:hover {\n          color: var(--paper-button-click-state);\n          outline: 2px solid black;\n          cursor: pointer;\n        }\n\n        simple-icon-lite {\n          height: 55px;\n          width: 55px;\n          margin-right: 5px;\n        }\n\n        .title {\n          color: var(--paper-button-title);\n          font-size: 16px;\n          font-weight: bold;\n          display: inline-flex;\n        }\n        a,\n        a:-webkit-any-link {\n          display: block;\n          color: var(--link-color);\n          text-decoration: none;\n        }\n      "]);

    _templateObject2_6cbcdb20545d11eba21e89082e94d7aa = function _templateObject2_6cbcdb20545d11eba21e89082e94d7aa() {
      return data;
    };

    return data;
  }

  function _templateObject_6cbcdb20545d11eba21e89082e94d7aa() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <div id=\"button wrapper\">\n        <a href=\"", "\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <button id=\"book\">\n            <simple-icon-lite icon=\"book\"></simple-icon-lite>\n            <div class=\"title\">", "</div>\n          </button>\n        </a>\n      </div>\n    "]);

    _templateObject_6cbcdb20545d11eba21e89082e94d7aa = function _templateObject_6cbcdb20545d11eba21e89082e94d7aa() {
      return data;
    };

    return data;
  }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  var EbookButton = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(EbookButton, _LitElement);

    var _super = _createSuper(EbookButton);

    babelHelpers.createClass(EbookButton, null, [{
      key: "properties",
      get: function get() {
        return {
          link: {
            type: String
          },
          title: {
            type: String
          }
        };
      }
    }, {
      key: "haxProperties",
      get: function get() {
        return {
          canScale: false,
          canPosition: true,
          canEditSource: false,
          gizmo: {
            title: "Ebook-Button",
            description: "A button that links to an Ebook.",
            icon: "icons:bookmark",
            color: "blue",
            groups: [""],
            handles: [{
              type: "",
              source: "",
              title: "",
              description: ""
            }],
            meta: {
              author: "LRNWebComponents"
            }
          },
          settings: {
            configure: [{
              property: "title",
              title: "Title",
              description: "The title of the button.",
              inputMethod: "textfield",
              icon: "editor:title"
            }, {
              property: "link",
              title: "Link",
              description: "The link  for the button.",
              inputMethod: "textfield",
              icon: "editor:insert-link"
            }],
            advanced: []
          }
        };
      }
    }]);

    function EbookButton() {
      var _this;

      babelHelpers.classCallCheck(this, EbookButton);
      _this = _super.call(this);
      _this.link = "";
      _this.title = "";
      return _this;
    }

    babelHelpers.createClass(EbookButton, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_6cbcdb20545d11eba21e89082e94d7aa(), this.link, this.title);
      }
    }], [{
      key: "styles",
      get: function get() {
        return [(0, _litElement.css)(_templateObject2_6cbcdb20545d11eba21e89082e94d7aa())];
      }
    }, {
      key: "tag",
      get: function get() {
        return "ebook-button";
      }
    }]);
    return EbookButton;
  }(_litElement.LitElement);

  customElements.define(EbookButton.tag, EbookButton);
});