define(["../../../lit-element/lit-element.js", "../../simple-icon/lib/simple-icons.js", "../../simple-icon/lib/simple-icon-lite.js"], function (_litElement, _simpleIcons, _simpleIconLite) {
  "use strict";

  function _templateObject4_1c1543305a6e11eb8957f34616f75140() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n\n        #wrap {\n          display: flex;\n          background-color: var(--block-quote-background-color, #f5f5f5);\n          border-left: solid;\n          border-left-width: 8px;\n          border-left-color: var(--block-quote-border-color, #747474);\n          padding: 25px;\n        }\n\n        @media screen and (max-width: 1200px) {\n          #wrap {\n            flex-direction: column;\n            border: none;\n          }\n        }\n\n        #inner_wrap {\n          display: flex;\n          flex-direction: column;\n          flex: 1 1 auto;\n          padding: 20px 20px 0;\n        }\n\n        #quote {\n          font-style: italic;\n          line-height: 1.4;\n        }\n\n        #iconflip {\n          -moz-transform: scaleX(-1);\n          -o-transform: scaleX(-1);\n          -webkit-transform: scaleX(-1);\n          transform: scaleX(-1);\n          filter: FlipH;\n          -ms-filter: \"FlipH\";\n        }\n\n        simple-icon-lite {\n          color: #747474;\n          height: 30px;\n          width: 30px;\n        }\n\n        #image {\n          background-repeat: no-repeat;\n          background-size: cover;\n          background-position: center;\n          width: 100%;\n          max-width: var(--block-quote-image-max-width, 200px);\n          height: auto;\n        }\n\n        @media screen and (max-width: 1200px) {\n          #image {\n            height: 200px;\n            margin: 0 auto 0;\n            border: solid;\n            border-width: 6px;\n            border-color: var(--block-quote-border-color, #747474);\n            border-radius: 50%;\n          }\n        }\n\n        #citation {\n          font-size: 16px;\n        }\n      "]);

    _templateObject4_1c1543305a6e11eb8957f34616f75140 = function _templateObject4_1c1543305a6e11eb8957f34616f75140() {
      return data;
    };

    return data;
  }

  function _templateObject3_1c1543305a6e11eb8957f34616f75140() {
    var data = babelHelpers.taggedTemplateLiteral([" <p>-- ", "</p> "]);

    _templateObject3_1c1543305a6e11eb8957f34616f75140 = function _templateObject3_1c1543305a6e11eb8957f34616f75140() {
      return data;
    };

    return data;
  }

  function _templateObject2_1c1543305a6e11eb8957f34616f75140() {
    var data = babelHelpers.taggedTemplateLiteral(["\n              <div\n                id=\"image\"\n                style=\"background-image:url(", ");\"\n                alt=\"", "\"\n              ></div>\n            "]);

    _templateObject2_1c1543305a6e11eb8957f34616f75140 = function _templateObject2_1c1543305a6e11eb8957f34616f75140() {
      return data;
    };

    return data;
  }

  function _templateObject_1c1543305a6e11eb8957f34616f75140() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <div id=\"wrap\">\n        ", "\n        <div id=\"quote_wrap\">\n          <div id=\"inner_wrap\">\n            <div id=\"quote\">\n              <simple-icon-lite\n                id=\"iconflip\"\n                icon=\"editor:format-quote\"\n              ></simple-icon-lite>\n              <slot></slot>\n              <slot name=\"quote\"></slot>\n              <simple-icon-lite icon=\"editor:format-quote\"></simple-icon-lite>\n            </div>\n            <div id=\"citation\">\n              ", "\n            </div>\n          </div>\n        </div>\n      </div>\n    "]);

    _templateObject_1c1543305a6e11eb8957f34616f75140 = function _templateObject_1c1543305a6e11eb8957f34616f75140() {
      return data;
    };

    return data;
  }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  var BlockQuote = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(BlockQuote, _LitElement);

    var _super = _createSuper(BlockQuote);

    babelHelpers.createClass(BlockQuote, null, [{
      key: "properties",
      get: function get() {
        return {
          citation: {
            type: String
          },
          image: {
            type: String
          },
          alt: {
            type: String
          }
        };
      }
    }, {
      key: "haxProperties",
      get: function get() {
        return {
          canScale: true,
          canPosition: true,
          canEditSource: true,
          gizmo: {
            title: "Blockquote",
            description: "Designed Quote",
            icon: "editor:format-quote",
            color: "blue",
            groups: ["text", "education"],
            meta: {
              author: "LRNWebComponents"
            }
          },
          settings: {
            configure: [{
              property: "citation",
              title: "Citation",
              description: "The citation of the element",
              inputMethod: "textfield",
              icon: "icons:book"
            }, {
              property: "alt",
              title: "Alt",
              description: "The alt text for the image",
              inputMethod: "textfield",
              icon: "editor:text-fields"
            }, {
              property: "image",
              title: "Image",
              description: "The image of the element",
              inputMethod: "haxupload",
              validationType: "url",
              icon: "editor:insert-photo"
            }, {
              slot: "",
              title: "Quote",
              description: "This is where you enter a quote.",
              inputMethod: "code-editor",
              required: true
            }],
            advanced: []
          },
          demoSchema: [{
            tag: "block-quote",
            properties: {
              citation: ""
            },
            content: "<p></p>"
          }]
        };
      }
    }]);

    function BlockQuote() {
      var _this;

      babelHelpers.classCallCheck(this, BlockQuote);
      _this = _super.call(this);
      _this.citation = "";
      _this.image = "";
      _this.alt = "";
      return _this;
    }

    babelHelpers.createClass(BlockQuote, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_1c1543305a6e11eb8957f34616f75140(), this.image ? (0, _litElement.html)(_templateObject2_1c1543305a6e11eb8957f34616f75140(), this.image, this.alt) : "", this.citation ? (0, _litElement.html)(_templateObject3_1c1543305a6e11eb8957f34616f75140(), this.citation) : "");
      }
    }], [{
      key: "tag",
      get: function get() {
        return "block-quote";
      }
    }, {
      key: "styles",
      get: function get() {
        return [(0, _litElement.css)(_templateObject4_1c1543305a6e11eb8957f34616f75140())];
      }
    }]);
    return BlockQuote;
  }(_litElement.LitElement);

  customElements.define(BlockQuote.tag, BlockQuote);
});