define(["../../../lit-element/lit-element.js", "../../haxcms-elements/lib/core/haxcms-site-store.js", "../../../mobx/dist/mobx.esm.js", "./course-intro-lesson-plan.js"], function (_litElement, _haxcmsSiteStore, _mobxEsm, _courseIntroLessonPlan) {
  "use strict";

  function _templateObject3_6cb82030545d11eba21e89082e94d7aa() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n        #title {\n          color: white;\n          font-family: \"Lato\";\n          text-transform: uppercase;\n          font-weight: 400;\n          text-align: center;\n          letter-spacing: 4.48px;\n          font-size: 1.4em;\n        }\n        #plans-container {\n          background: white;\n          margin: 0 auto;\n          max-width: 900px;\n        }\n      "]);

    _templateObject3_6cb82030545d11eba21e89082e94d7aa = function _templateObject3_6cb82030545d11eba21e89082e94d7aa() {
      return data;
    };

    return data;
  }

  function _templateObject2_6cb82030545d11eba21e89082e94d7aa() {
    var data = babelHelpers.taggedTemplateLiteral(["<course-intro-lesson-plan\n              title=", "\n              position=", "\n              description=", "\n              link=", "\n            ></course-intro-lesson-plan>"]);

    _templateObject2_6cb82030545d11eba21e89082e94d7aa = function _templateObject2_6cb82030545d11eba21e89082e94d7aa() {
      return data;
    };

    return data;
  }

  function _templateObject_6cb82030545d11eba21e89082e94d7aa() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <h2 id=\"title\">Lesson Plan</h2>\n      <div id=\"plans-container\">\n        ", "\n      </div>\n    "]);

    _templateObject_6cb82030545d11eba21e89082e94d7aa = function _templateObject_6cb82030545d11eba21e89082e94d7aa() {
      return data;
    };

    return data;
  }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  var CourseIntroLessonPlans = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(CourseIntroLessonPlans, _LitElement);

    var _super = _createSuper(CourseIntroLessonPlans);

    babelHelpers.createClass(CourseIntroLessonPlans, null, [{
      key: "properties",
      get: function get() {
        return {
          items: {
            type: Array
          }
        };
      }
    }]);

    function CourseIntroLessonPlans() {
      var _this;

      babelHelpers.classCallCheck(this, CourseIntroLessonPlans);
      _this = _super.call(this);
      _this.items = [];
      _this._disposer = (0, _mobxEsm.autorun)(function () {
        _this._itemsChanged((0, _mobxEsm.toJS)(_haxcmsSiteStore.store.routerManifest.items));
      });
      return _this;
    }

    babelHelpers.createClass(CourseIntroLessonPlans, [{
      key: "_itemsChanged",
      value: function _itemsChanged(items) {
        this.items = [];
        this.items = items.filter(function (i) {
          return typeof i.metadata !== "undefined" && typeof i.metadata.courselist !== "undefined" && typeof i.metadata.courselist.show !== "undefined" && i.metadata.courselist.show === true;
        });
      }
    }, {
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_6cb82030545d11eba21e89082e94d7aa(), this.items.map(function (plan) {
          return (0, _litElement.html)(_templateObject2_6cb82030545d11eba21e89082e94d7aa(), plan.title, plan.metadata.courselist.position, plan.metadata.courselist.description ? plan.metadata.courselist.description : "", plan.slug);
        }));
      }
    }], [{
      key: "styles",
      get: function get() {
        return [(0, _litElement.css)(_templateObject3_6cb82030545d11eba21e89082e94d7aa())];
      }
    }, {
      key: "tag",
      get: function get() {
        return "course-intro-lesson-plans";
      }
    }]);
    return CourseIntroLessonPlans;
  }(_litElement.LitElement);

  customElements.define(CourseIntroLessonPlans.tag, CourseIntroLessonPlans);
});