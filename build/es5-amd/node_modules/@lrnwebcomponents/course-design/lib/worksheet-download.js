define(["exports", "../../../lit-element/lit-element.js", "../../simple-icon/lib/simple-icons.js", "../../simple-icon/lib/simple-icon-lite.js"], function (_exports, _litElement, _simpleIcons, _simpleIconLite) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.WorksheetDownload = void 0;

  function _templateObject2_bbc0852054f111eba18757df1555c032() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n\n        a {\n          text-decoration: none;\n          color: #0c7cd5;\n          display: block;\n        }\n\n        button {\n          text-transform: none;\n          border: solid 2px #dcdcdc;\n          width: 100%;\n          margin: 0 auto 0;\n          min-height: 48px;\n          text-align: center;\n        }\n\n        button:active,\n        button:focus,\n        button:hover {\n          cursor: pointer;\n          background-color: #0c7cd5;\n          color: #fff;\n        }\n\n        simple-icon {\n          margin-right: 5px;\n        }\n      "]);

    _templateObject2_bbc0852054f111eba18757df1555c032 = function _templateObject2_bbc0852054f111eba18757df1555c032() {
      return data;
    };

    return data;
  }

  function _templateObject_bbc0852054f111eba18757df1555c032() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <div id=\"button_wrap\">\n        <a\n          tabindex=\"-1\"\n          href=\"", "\"\n          target=\"_blank\"\n          download\n          rel=\"noopener noreferrer\"\n        >\n          <button>\n            <simple-icon-lite icon=\"icons:file-download\"></simple-icon-lite\n            >", "\n          </button>\n        </a>\n      </div>\n    "]);

    _templateObject_bbc0852054f111eba18757df1555c032 = function _templateObject_bbc0852054f111eba18757df1555c032() {
      return data;
    };

    return data;
  }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  var WorksheetDownload = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(WorksheetDownload, _LitElement);

    var _super = _createSuper(WorksheetDownload);

    babelHelpers.createClass(WorksheetDownload, null, [{
      key: "properties",
      get: function get() {
        return {
          title: {
            type: String
          },
          link: {
            type: String
          }
        };
      }
    }, {
      key: "tag",
      get: function get() {
        return "worksheet-download";
      }
    }, {
      key: "haxProperties",
      get: function get() {
        return {
          canScale: false,
          canPosition: true,
          canEditSource: false,
          gizmo: {
            title: "Worksheet-Download",
            description: "A button for displaying files available for download.",
            icon: "icons:file-download",
            color: "blue",
            meta: {
              author: "LRNWebComponents"
            }
          },
          settings: {
            configure: [{
              property: "title",
              title: "Title",
              description: "The title of the download.",
              inputMethod: "textfield",
              icon: "editor:title"
            }, {
              property: "link",
              title: "Link",
              description: "The link for the download.",
              inputMethod: "textfield",
              icon: "editor:insert-link"
            }],
            advanced: []
          }
        };
      }
    }]);

    function WorksheetDownload() {
      var _this;

      babelHelpers.classCallCheck(this, WorksheetDownload);
      _this = _super.call(this);
      _this.title = "";
      _this.link = "";
      return _this;
    }

    babelHelpers.createClass(WorksheetDownload, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_bbc0852054f111eba18757df1555c032(), this.link, this.title);
      }
    }], [{
      key: "styles",
      get: function get() {
        return [(0, _litElement.css)(_templateObject2_bbc0852054f111eba18757df1555c032())];
      }
    }]);
    return WorksheetDownload;
  }(_litElement.LitElement);

  _exports.WorksheetDownload = WorksheetDownload;
  customElements.define(WorksheetDownload.tag, WorksheetDownload);
});