define(["exports","../../../@polymer/polymer/polymer-element.js"],function(_exports,_polymerElement){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.ImgLoader=void 0;function _templateObject_630ffb00991711e9a339815674c2f1cf(){var data=babelHelpers.taggedTemplateLiteral(["\n      <img id=\"img\" hidden=\"\" src=\"[[src]]\" />\n    "]);_templateObject_630ffb00991711e9a339815674c2f1cf=function _templateObject_630ffb00991711e9a339815674c2f1cf(){return data};return data}/*
`img-loader` preloads images

all `img-loader` code comes from <a href="https://github.com/PolymerElements/iron-image/blob/master/iron-image.html">iron image</a>
*/var ImgLoader=/*#__PURE__*/function(_PolymerElement){babelHelpers.inherits(ImgLoader,_PolymerElement);function ImgLoader(){babelHelpers.classCallCheck(this,ImgLoader);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(ImgLoader).apply(this,arguments))}babelHelpers.createClass(ImgLoader,[{key:"ready",value:function ready(){babelHelpers.get(babelHelpers.getPrototypeOf(ImgLoader.prototype),"ready",this).call(this);var img=this.$.img;img.onload=function(){if(this.$.img.src!==this._resolveSrc(this.src))return;this._setLoading(!1);this._setLoaded(!0);this._setError(!1)}.bind(this);img.onerror=function(){if(this.$.img.src!==this._resolveSrc(this.src))return;this._reset();this._setLoading(!1);this._setLoaded(!1);this._setError(!0)}.bind(this);this._resolvedSrc=""}},{key:"_srcChanged",value:function _srcChanged(newSrc,oldSrc){var newResolvedSrc=this._resolveSrc(newSrc);if(newResolvedSrc===this._resolvedSrc)return;this._resolvedSrc=newResolvedSrc;this._reset();this._load(newSrc)}},{key:"_load",value:function _load(src){if(src){this.$.img.src=src}else{this.$.img.removeAttribute("src")}this._setLoading(!!src);this._setLoaded(!1);this._setError(!1)}},{key:"_reset",value:function _reset(){this.$.img.removeAttribute("src");this._setLoading(!1);this._setLoaded(!1);this._setError(!1)}},{key:"_resolveSrc",value:function _resolveSrc(testSrc){var baseURI=/** @type {string} */this.ownerDocument.baseURI;return new URL(this.resolveUrl(testSrc,baseURI),baseURI).href}}],[{key:"template",get:function get(){return(0,_polymerElement.html)(_templateObject_630ffb00991711e9a339815674c2f1cf())}},{key:"tag",get:function get(){return"img-loader"}},{key:"properties",get:function get(){return{src:{observer:"_srcChanged",type:String},/**
       * Read-only value that is true when the image is loaded.
       */loaded:{notify:!0,readOnly:!0,type:Boolean,value:!1},/**
       * Read-only value that tracks the loading state of the image when the `preload`
       * option is used.
       */loading:{notify:!0,readOnly:!0,type:Boolean,value:!1},/**
       * Read-only value that indicates that the last set `src` failed to load.
       */error:{notify:!0,readOnly:!0,type:Boolean,value:!1}}}}]);return ImgLoader}(_polymerElement.PolymerElement);_exports.ImgLoader=ImgLoader;window.customElements.define(ImgLoader.tag,ImgLoader)});