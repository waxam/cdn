define(["exports", "../../@polymer/polymer/polymer-element.js", "../../@polymer/app-route/app-route.js", "../../@polymer/app-route/app-location.js", "../../@polymer/iron-pages/iron-pages.js", "../paper-stepper/paper-stepper.js", "./lib/gene-crossover-1.js", "./lib/gene-crossover-2.js", "./lib/gene-crossover-3.js", "./lib/gene-crossover-4.js", "./lib/gene-crossover-5.js"], function (_exports, _polymerElement, _appRoute, _appLocation, _ironPages, _paperStepper, _geneCrossover, _geneCrossover2, _geneCrossover3, _geneCrossover4, _geneCrossover5) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.GeneCrossover = void 0;

  function _templateObject_9d1b58c0e48111e9b5c6f7b0a264592f() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <style include=\"animation-shared-styles\">\n        :host {\n          display: block;\n        }\n        h1,\n        h2,\n        h3,\n        h4,\n        h5,\n        h6 {\n          font-family: \"Open Sans\", sans-serif;\n          text-transform: uppercase;\n          letter-spacing: 2px;\n          color: #6d6e71;\n          text-align: center;\n          font-size: 19.2px;\n        }\n\n        p {\n          font-family: \"Open Sans\", sans-serif;\n        }\n      </style>\n\n      <!-- Pages -->\n      <iron-pages selected=\"[[activePage]]\">\n        <gene-crossover-1\n          selected=\"[[_isActive(activePage, 0)]]\"\n        ></gene-crossover-1>\n        <gene-crossover-2\n          selected=\"[[_isActive(activePage, 1)]]\"\n        ></gene-crossover-2>\n        <gene-crossover-3\n          selected=\"[[_isActive(activePage, 2)]]\"\n        ></gene-crossover-3>\n        <gene-crossover-4\n          selected=\"[[_isActive(activePage, 3)]]\"\n        ></gene-crossover-4>\n        <!--\n        <gene-crossover-5 selected=\"[[_isActive(activePage, 4)]]\"></gene-crossover-5>\n      -->\n      </iron-pages>\n\n      <!-- Counter -->\n      <template is=\"dom-if\" if=\"[[count]]\">\n        <paper-stepper selected=\"{{activePage}}\" progress-bar=\"\">\n          <template is=\"dom-repeat\" items=\"[[_countToArray(count)]]\">\n            <paper-step></paper-step>\n          </template>\n        </paper-stepper>\n      </template>\n    "]);

    _templateObject_9d1b58c0e48111e9b5c6f7b0a264592f = function _templateObject_9d1b58c0e48111e9b5c6f7b0a264592f() {
      return data;
    };

    return data;
  }

  /**
   * `gene-crossover`
   * `Gene animations`
   *
   * @demo demo/index.html
   *
   * @microcopy - the mental model for this element
   *  -
   */
  var GeneCrossover =
  /*#__PURE__*/
  function (_PolymerElement) {
    babelHelpers.inherits(GeneCrossover, _PolymerElement);

    function GeneCrossover() {
      babelHelpers.classCallCheck(this, GeneCrossover);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(GeneCrossover).apply(this, arguments));
    }

    babelHelpers.createClass(GeneCrossover, [{
      key: "_isActive",
      value: function _isActive(activePage, index) {
        return activePage === index;
      }
    }, {
      key: "_countToArray",
      value: function _countToArray(count) {
        var array = [];

        if (count) {
          for (var i = 0; i < count; i++) {
            array.push(i);
          }
        }

        return array;
      }
    }, {
      key: "ready",
      value: function ready() {
        babelHelpers.get(babelHelpers.getPrototypeOf(GeneCrossover.prototype), "ready", this).call(this);
        var ironPages = this.shadowRoot.querySelector("iron-pages");

        if (ironPages.children) {
          if (ironPages.children.length) {
            this.count = ironPages.children.length;
          }
        }
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_9d1b58c0e48111e9b5c6f7b0a264592f());
      }
    }, {
      key: "tag",
      get: function get() {
        return "gene-crossover";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          activePage: {
            type: String,
            value: 0
          },
          count: {
            type: Number,
            value: 0
          }
        };
      }
    }]);
    return GeneCrossover;
  }(_polymerElement.PolymerElement);

  _exports.GeneCrossover = GeneCrossover;
  window.customElements.define(GeneCrossover.tag, GeneCrossover);
});