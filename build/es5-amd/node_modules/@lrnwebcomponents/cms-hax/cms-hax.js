define(["exports","require","../../lit-element/lit-element.js","../../@polymer/iron-ajax/iron-ajax.js","../h-a-x/h-a-x.js"],function(_exports,_require,_litElement,_ironAjax,_hAX){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.CmsHax=void 0;_require=babelHelpers.interopRequireWildcard(_require);function _templateObject2_f77cb26072ab11eab01767e8389e9c27(){var data=babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n          font-size: 16px;\n          box-sizing: content-box;\n        }\n      "]);_templateObject2_f77cb26072ab11eab01767e8389e9c27=function _templateObject2_f77cb26072ab11eab01767e8389e9c27(){return data};return data}function _templateObject_f77cb26072ab11eab01767e8389e9c27(){var data=babelHelpers.taggedTemplateLiteral(["\n      <iron-ajax\n        id=\"pageupdateajax\"\n        url=\"","\"\n        method=\"","\"\n        content-type=\"application/json\"\n        handle-as=\"json\"\n        @response=\"","\"\n      ></iron-ajax>\n      <h-a-x app-store=\"","\"></h-a-x>\n    "]);_templateObject_f77cb26072ab11eab01767e8389e9c27=function _templateObject_f77cb26072ab11eab01767e8389e9c27(){return data};return data}/**
 * `cms-hax`
 * @element cms-hax
 * @demo ../../demo/index.html
 */var CmsHax=/*#__PURE__*/function(_LitElement){babelHelpers.inherits(CmsHax,_LitElement);babelHelpers.createClass(CmsHax,[{key:"render",value:function render(){return(0,_litElement.html)(_templateObject_f77cb26072ab11eab01767e8389e9c27(),this.endPoint,this.method,this._handleUpdateResponse,this.__appStore)}},{key:"decodeHTMLEntities",value:function decodeHTMLEntities(text){for(var entities=[["amp","&"],["apos","'"],["#x27","'"],["#x2F","/"],["#39","'"],["#47","/"],["lt","<"],["gt",">"],["nbsp"," "],["quot","\""]],i=0,max=entities.length;i<max;++i){text=text.replace(new RegExp("&"+entities[i][0]+";","g"),entities[i][1])}return text}},{key:"_activeHaxBodyUpdated",/**
   * Ensure we've imported our content on initial setup
   */value:function _activeHaxBodyUpdated(bodyElement,ready){// ensure we import our content once we get an initial registration of active body
if(null!=bodyElement&&ready&&!this.__imported){this.__imported=!0;// see what's inside of this, in a template tag
var children=this.querySelector("template");// convert this template content into the real thing
// this helps with correctly preserving everything on the way down
if(null!=children){bodyElement.importContent(children.innerHTML)}}}/**
   * Calculate if we have anywhere to redirect to.
   */},{key:"_computeRedirectOnSave",value:function _computeRedirectOnSave(redirectLocation){if(babelHelpers.typeof(redirectLocation)!==("undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))){return!0}return!1}/**
   * Set certain data bound values to the store once it's ready
   */},{key:"_noticeTagChanges",value:function _noticeTagChanges(openDefault,allowedTags,hidePanelOps,offsetMargin,hidePreferencesButton,elementAlign){if(window.HaxStore.ready){// double check because this can cause issues
if(allowedTags){window.HaxStore.instance.validTagList=allowedTags}setTimeout(function(){window.HaxStore.instance.haxTray.hidePanelOps=hidePanelOps;window.HaxStore.instance.haxTray.offsetMargin=offsetMargin;window.HaxStore.instance.haxTray.hidePreferencesButton=hidePreferencesButton;window.HaxStore.instance.haxTray.elementAlign=elementAlign},0);if(openDefault){window.HaxStore.write("editMode",openDefault,this)}}}/**
   * LitElement ready
   */},{key:"firstUpdated",value:function firstUpdated(){this.__applyMO();this.__ready=!0}/**
   * Set certain data bound values to the store once it's ready
   */},{key:"_storeReady",value:function _storeReady(e){var _this2=this;// delay as there can be some timing issues with attributes in CMSs
setTimeout(function(){// trigger the update of different parts of the global state
_this2._noticeTagChanges(_this2.openDefault,_this2.allowedTags,_this2.hidePanelOps,_this2.offsetMargin,_this2.hidePreferencesButton,_this2.elementAlign);_this2.__applyMO()},0)}/**
   * Created life cycle
   */}],[{key:"styles",/**
   * LitElement constructable styles enhancement
   */get:function get(){return[(0,_litElement.css)(_templateObject2_f77cb26072ab11eab01767e8389e9c27())]}},{key:"tag",get:function get(){return"cms-hax"}},{key:"properties",get:function get(){return{__ready:{type:Boolean},/**
       * Default the panel to open
       */openDefault:{type:Boolean,reflect:!0,attribute:"open-default"},/**
       * Hide the panel operations (save and cancel),
       */hidePanelOps:{type:Boolean,attribute:"hide-panel-ops"},offsetMargin:{type:String,reflect:!0,attribute:"offset-margin"},/**
       * Hide preferences button
       */hidePreferencesButton:{type:Boolean,attribute:"hide-preferences-button"},/**
       * Direction to elementAlign the hax edit panel
       */elementAlign:{type:String,attribute:"element-align"},/**
       * allowed Tags, usually as dictated by the input filtering
       * layer of the backend system that HAX is riding on.
       * While not fullproof, this at least will enforce front-end
       * filtering to match what actually is going to be allowed
       * to be saved in the first place.
       */allowedTags:{type:Array},/**
       * Location to save content to.
       */endPoint:{type:String,attribute:"end-point"},/**
       * Method to save content.
       */method:{type:String},/**
       * Connection object for talking to an app store.
       */appStoreConnection:{type:String,attribute:"app-store-connection"},__appStore:{type:String},/**
       * State of the panel
       */editMode:{type:Boolean,reflect:!0,attribute:"edit-mode"},/**
       * syncBody
       */syncBody:{type:Boolean,attribute:"sync-body"},/**
       * Only available if syncBody is true; this allows data binding to the value being worked on in hax-body tag
       */bodyValue:{type:String,attribute:"body-value"},/**
       * Flag to hide the toast.
       */hideMessage:{type:Boolean,attribute:"hide-message"},/**
       * Optional URL to redirect to once we save.
       */redirectLocation:{type:String,attribute:"redirect-location"},/**
       * Option to redirect once we save successfully
       */redirectOnSave:{type:Boolean,attribute:"redirect-on-save"},/**
       * Reference to activeBody.
       */activeHaxBody:{type:Object},__imported:{type:Boolean}}}}]);function CmsHax(){var _this;babelHelpers.classCallCheck(this,CmsHax);_this=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(CmsHax).call(this));window.addEventListener("hax-store-property-updated",_this._haxStorePropertyUpdated.bind(babelHelpers.assertThisInitialized(_this)));window.addEventListener("hax-store-ready",_this._storeReady.bind(babelHelpers.assertThisInitialized(_this)));window.addEventListener("hax-save",_this._saveFired.bind(babelHelpers.assertThisInitialized(_this)));_this.__lock=!1;_this.endPoint=null;_this.openDefault=!1;_this.hidePanelOps=!1;_this.hidePreferencesButton=!1;_this.elementAlign="right";_this.method="PUT";_this.syncBody=!1;_this.bodyValue="";_this.hideMessage=!1;_this.__imported=!1;new Promise(function(res,rej){return _require.default(["./lib/cms-token.js"],res,rej)});new Promise(function(res,rej){return _require.default(["./lib/cms-block.js"],res,rej)});new Promise(function(res,rej){return _require.default(["./lib/cms-views.js"],res,rej)});new Promise(function(res,rej){return _require.default(["./lib/cms-entity.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../simple-toast/simple-toast.js"],res,rej)}).then(function(){window.SimpleToast.requestAvailability()});return _this}babelHelpers.createClass(CmsHax,[{key:"_makeAppStore",value:function _makeAppStore(val){this.__appStore=this.decodeHTMLEntities(val)}},{key:"updated",value:function updated(changedProperties){var _this3=this;changedProperties.forEach(function(oldValue,propName){if("redirectLocation"==propName){_this3.redirectOnSave=_this3._computeRedirectOnSave(_this3[propName])}if("activeHaxBody"==propName||"__ready"==propName){_this3._activeHaxBodyUpdated(_this3.activeHaxBody,_this3.__ready)}if("appStoreConnection"==propName){_this3._makeAppStore(_this3[propName])}if(["openDefault","allowedTags","hidePanelOps","offsetMargin","hidePreferencesButton","elementAlign"].includes(propName)){_this3._noticeTagChanges(_this3.openDefault,_this3.allowedTags,_this3.hidePanelOps,_this3.offsetMargin,_this3.hidePreferencesButton,_this3.elementAlign)}})}/**
   * detached life cycle
   */},{key:"disconnectedCallback",value:function disconnectedCallback(){if(this._observer){this._observer.disconnect();this._observer=null}babelHelpers.get(babelHelpers.getPrototypeOf(CmsHax.prototype),"disconnectedCallback",this).call(this)}/**
   * Attached to the DOM; now we can fire event to the store that
   * we exist and are the thing being edited.
   */},{key:"connectedCallback",value:function connectedCallback(){babelHelpers.get(babelHelpers.getPrototypeOf(CmsHax.prototype),"connectedCallback",this).call(this);this.__applyMO()}},{key:"__applyMO",value:function __applyMO(){var _this4=this;// notice ANY change to body and bubble up, only when we are attached though
if(!this._observer&&this.syncBody&&window.HaxStore&&window.HaxStore.instance&&window.HaxStore.instance.activeHaxBody){this._observer=new MutationObserver(function(mutations){if(!_this4.__lock){_this4.__lock=!0;_this4.dispatchEvent(new CustomEvent("hax-body-content-changed",{bubbles:!0,cancelable:!0,composed:!0,detail:window.HaxStore.instance.activeHaxBody.haxToContent()}));setTimeout(function(){_this4.__lock=!1},100)}});this._observer.observe(window.HaxStore.instance.activeHaxBody,{childList:!0,subtree:!0})}}/**
   * Store updated, sync.
   */},{key:"_haxStorePropertyUpdated",value:function _haxStorePropertyUpdated(e){if(e.detail&&babelHelpers.typeof(e.detail.value)!==("undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))&&e.detail.property){if("object"===babelHelpers.typeof(e.detail.value)){this[e.detail.property]={}}this[e.detail.property]=e.detail.value}}/**
   * _saveFired
   */},{key:"_saveFired",value:function _saveFired(e){// generate sanitized content
if(this.endPoint){this.shadowRoot.querySelector("#pageupdateajax").body=window.HaxStore.instance.activeHaxBody.haxToContent();// send the request
this.shadowRoot.querySelector("#pageupdateajax").generateRequest()}}/**
   * _handleUpdateResponse
   */},{key:"_handleUpdateResponse",value:function _handleUpdateResponse(e){var _this5=this;if(!this.hideMessage){var evt=new CustomEvent("simple-toast-show",{bubbles:!0,cancelable:!0,composed:!0,detail:{text:"Saved!",duration:3e3}});window.dispatchEvent(evt);// custom event for things that want to know we just saved
this.dispatchEvent(new CustomEvent("cms-hax-saved",{bubbles:!0,cancelable:!0,composed:!0,detail:!0}));// support auto redirecting on save if that's been requested
// in the integration point
if(this.redirectOnSave){setTimeout(function(){// trigger redirect
window.location=_this5.redirectLocation},500)}}}}]);return CmsHax}(_litElement.LitElement);_exports.CmsHax=CmsHax;window.customElements.define(CmsHax.tag,CmsHax)});