define(["exports", "require", "../../lit-element/lit-element.js", "./lib/relative-heading-lite.js", "../anchor-behaviors/anchor-behaviors.js"], function (_exports, _require, _litElement, _relativeHeadingLite, _anchorBehaviors) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.RelativeHeading = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  function _templateObject4_8b55cbb0c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n          <paper-icon-button\n            controls=\"relative-heading-toast\"\n            .aria-describedby=\"", "\"\n            .icon=\"", "\"\n            .title=\"", "\"\n            ?hidden=\"", "\"\n            ?disabled=\"", "\"\n            @click=\"", "\"\n          >\n          </paper-icon-button>\n        "]);

    _templateObject4_8b55cbb0c96f11ea8be5e1d5fe7ec787 = function _templateObject4_8b55cbb0c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  function _templateObject3_8b55cbb0c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral([""]);

    _templateObject3_8b55cbb0c96f11ea8be5e1d5fe7ec787 = function _templateObject3_8b55cbb0c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _templateObject2_8b55cbb0c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: flex;\n          flex-wrap: var(--relative-heading-wrap, wrap);\n          align-items: var(--relative-heading-align, center);\n          justify-content: flex-start;\n        }\n\n        :host([hidden]) {\n          display: none;\n        }\n\n        ::slotted(*) {\n          flex: 0 0 auto;\n        }\n\n        :host([link-align-right]) {\n          justify-content: space-between;\n        }\n\n        :host([link-align-right]) ::slotted(*) {\n          flex: 1 1 auto;\n        }\n\n        :host > paper-icon-button:not(:defined) {\n          opacity: 0;\n        }\n\n        :host > paper-icon-button {\n          flex: 0 0 auto;\n        }\n\n        paper-icon-button {\n          color: var(--relative-heading-button-color, #666);\n          background: var(--relative-heading-button-bg);\n          border: var(--relative-heading-button-border);\n          outline: var(--relative-heading-button-outline);\n          margin: var(--relative-heading-button-margin, 0 0 0 8px);\n          padding: var(--relative-heading-button-padding, 8px);\n          opacity: var(--relative-heading-button-opacity, 0);\n          transition: var(--relative-heading-button-transition, all 0.5s);\n        }\n\n        :host([link-align-right]) paper-icon-button,\n        :host(:not([link-align-right]):focus) paper-icon-button,\n        :host(:not([link-align-right]):focus-within) paper-icon-button,\n        :host(:not([link-align-right]):hover) paper-icon-button {\n          opacity: var(--relative-heading-button-active-opacity, 1);\n        }\n\n        paper-icon-button:focus-within,\n        paper-icon-button:focus,\n        paper-icon-button:hover {\n          color: var(--relative-heading-button-focus-color, #000);\n          background: var(--relative-heading-button-focus-bg);\n          border: var(--relative-heading-button-focus-border);\n          outline: var(--relative-heading-button-focus-outline);\n          opacity: var(--relative-heading-button-focus-opacity, 1);\n        }\n      "]);

    _templateObject2_8b55cbb0c96f11ea8be5e1d5fe7ec787 = function _templateObject2_8b55cbb0c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  function _templateObject_8b55cbb0c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      ", " ", "\n    "]);

    _templateObject_8b55cbb0c96f11ea8be5e1d5fe7ec787 = function _templateObject_8b55cbb0c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  /**
   * `relative-heading`
   * `outputs the correct heading hierarchy based on parent heading`
   *
   * @demo demo/index.html
   * @demo demo/nolinks.html Disable Links
   * @demo demo/rightalign.html Right-Align Links
   * @element relative-heading
   */
  var RelativeHeading =
  /*#__PURE__*/
  function (_RelativeHeadingLite) {
    babelHelpers.inherits(RelativeHeading, _RelativeHeadingLite);
    babelHelpers.createClass(RelativeHeading, [{
      key: "render",
      // render function
      value: function render() {
        return (0, _litElement.html)(_templateObject_8b55cbb0c96f11ea8be5e1d5fe7ec787(), this.template, this.button);
      } // haxProperty definition

    }], [{
      key: "styles",
      //styles function
      get: function get() {
        return [(0, _litElement.css)(_templateObject2_8b55cbb0c96f11ea8be5e1d5fe7ec787())];
      }
    }, {
      key: "haxProperties",
      get: function get() {
        return {
          canScale: true,
          canPosition: true,
          canEditSource: false,
          gizmo: {
            title: "Relative heading",
            description: "outputs the correct heading hierarchy based on parent's heading",
            icon: "icons:android",
            color: "green",
            groups: ["Heading"],
            handles: [{
              type: "todo:read-the-docs-for-usage"
            }],
            meta: {
              author: "nikkimk",
              owner: "The Pennsylvania State University"
            }
          },
          settings: {
            quick: [],
            configure: [{
              property: "parent",
              description: "Parent Heading's Resource ID",
              inputMethod: "textfield",
              required: false
            }, {
              property: "disableLink",
              description: "Disables link button feature.",
              inputMethod: "boolean",
              required: false
            }, {
              property: "linkAlignRight",
              description: "Aligns copy link button to far right of heading.",
              inputMethod: "boolean",
              required: false
            }],
            advanced: [{
              property: "defaultLevel",
              description: "Heading level if parent is not found.",
              inputMethod: "number",
              required: false
            }, {
              property: "copyMessage",
              description: "Overrides default text for copy link's toast message.",
              inputMethod: "textfield",
              required: false
            }, {
              property: "linkLabel",
              description: "Overrides default label copy link button.",
              inputMethod: "textfield",
              required: false
            }, {
              property: "linkIcon",
              description: "Overrides default icon copy link button.",
              inputMethod: "iconpicker",
              required: false
            }, {
              property: "closeLabel",
              description: "Overrides default label for copy link's toast's close button.",
              inputMethod: "textfield",
              required: false
            }, {
              property: "closeIcon",
              description: "Overrides default icon for copy link's toast's close button.",
              inputMethod: "iconpicker",
              required: false
            }]
          }
        };
      } // properties available to the custom element for data binding

    }, {
      key: "properties",
      get: function get() {
        return _objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(RelativeHeading), "properties", this), {
          /**
           * overrides state manager's default icon for copy link's toast's close button
           */
          closeIcon: {
            type: String
          },

          /**
           * overrides state manager's default label for copy link's toast's close button
           */
          closeLabel: {
            type: String
          },

          /**
           * overrides state manager's default message for copy link's toast
           */
          copyMessage: {
            type: String
          },

          /**
           * The relative-heading resource's UUID.
           */
          disableLink: {
            type: Boolean,
            attribute: "disable-link"
          },

          /**
           * label for copy link's button
           */
          linkAlignRight: {
            type: Boolean,
            attribute: "link-align-right",
            reflect: true
          },

          /**
           * icon for copy link's button
           */
          linkIcon: {
            type: String
          },

          /**
           * label for copy link's button
           */
          linkLabel: {
            type: String
          }
        });
      }
      /**
       * Store the tag name to make it easier to obtain directly.
       * @notice function name must be here for tooling to operate correctly
       */

    }, {
      key: "tag",
      get: function get() {
        return "relative-heading";
      }
      /**
       * Makes sure there is a utility ready and listening for elements.
       */

    }]);

    function RelativeHeading() {
      var _this;

      babelHelpers.classCallCheck(this, RelativeHeading);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(RelativeHeading).call(this));
      _this.linkAlignRight = false;
      _this.disableLink = false;
      _this.linkIcon = "link";
      _this.linkLabel = "Get link";
      new Promise(function (res, rej) {
        return _require.default(["../../@polymer/iron-icons/iron-icons.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../../@polymer/paper-icon-button/paper-icon-button.js"], res, rej);
      });
      return _this;
    }

    babelHelpers.createClass(RelativeHeading, [{
      key: "connectedCallback",
      value: function connectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(RelativeHeading.prototype), "connectedCallback", this).call(this);
        if (!this.disableLink) this.manager.useCopyLink();
      }
      /**
       * gets whether heading is currently anchored
       * @readonly
       * @returns {boolean}
       */

    }, {
      key: "_handleCopyClick",
      value: function _handleCopyClick() {
        if (!this.disableLink && this.manager && this.manager.copyLink) this.manager.copyLink(this);
      }
    }, {
      key: "anchored",
      get: function get() {
        return window.AnchorBehaviors && window.AnchorBehaviors.getTarget ? window.AnchorBehaviors.getTarget(this) : false;
      }
    }, {
      key: "button",
      get: function get() {
        console.log(this.disableLink);
        return this.disableLink ? (0, _litElement.html)(_templateObject3_8b55cbb0c96f11ea8be5e1d5fe7ec787()) : (0, _litElement.html)(_templateObject4_8b55cbb0c96f11ea8be5e1d5fe7ec787(), this.id, this.linkIcon, this.linkLabel, this.disableLink, this.disableLink, this._handleCopyClick);
      }
    }]);
    return RelativeHeading;
  }(_relativeHeadingLite.RelativeHeadingLite);

  _exports.RelativeHeading = RelativeHeading;
  window.customElements.define(RelativeHeading.tag, RelativeHeading);
});