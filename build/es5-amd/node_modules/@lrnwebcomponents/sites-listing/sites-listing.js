define(["exports", "require", "../../@polymer/polymer/polymer-element.js", "../../@polymer/polymer/lib/legacy/polymer.dom.js", "../../@polymer/iron-ajax/iron-ajax.js", "../../@polymer/iron-list/iron-list.js", "./lib/site-card.js", "../../@polymer/paper-button/paper-button.js"], function (_exports, _require, _polymerElement, _polymerDom, _ironAjax, _ironList, _siteCard, _paperButton) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SitesListing = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  function _templateObject_c4525b90aa5311e9b999174ecd579fc6() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          height: 100vh;\n          display: flex;\n          flex-direction: column;\n        }\n        iron-list {\n          flex: 1 1 auto;\n        }\n        #loading {\n          width: 100%;\n          z-index: 1000;\n          opacity: 0.8;\n          padding: 16px;\n          text-align: center;\n          align-content: center;\n          justify-content: center;\n          height: 100vh;\n          position: absolute;\n          background-color: rgba(250, 250, 250, 0.8);\n          transition: all linear 0.8s;\n          visibility: visible;\n        }\n        #loading div {\n          font-size: 32px;\n          font-weight: bold;\n          padding: 16px;\n        }\n        #loading[data-loading] {\n          background-color: rgba(0, 0, 0, 0);\n          opacity: 0;\n          visibility: hidden;\n        }\n        site-card {\n          padding: 16px;\n          font-size: 16px;\n        }\n        paper-button.site-card-wrapper {\n          margin: 0;\n          padding: 0;\n        }\n      </style>\n      <iron-ajax\n        id=\"loaddata\"\n        auto=\"\"\n        loading=\"{{__loading}}\"\n        url=\"[[dataSource]]\"\n        handle-as=\"json\"\n        debounce-duration=\"250\"\n        last-response=\"{{sitesResponse}}\"\n      ></iron-ajax>\n      <div id=\"loading\" data-loading$=\"[[!__loading]]\">\n        <elmsln-loading size=\"large\"></elmsln-loading>\n        <div>Loading..</div>\n      </div>\n      <iron-list id=\"list\" items=\"[[sites]]\" as=\"site\" grid=\"\">\n        <template>\n          <paper-button\n            on-focusin=\"_mouseEnter\"\n            on-focusout=\"_mouseLeave\"\n            data-site-id$=\"[[site.id]]\"\n            class=\"site-card-wrapper\"\n            on-click=\"_siteClicked\"\n          >\n            <site-card\n              data-site-id$=\"[[site.id]]\"\n              size=\"[[size]]\"\n              image=\"[[site.metadata.image]]\"\n              icon=\"[[site.metadata.icon]]\"\n              name=\"[[site.title]]\"\n              title=\"[[site.description]]\"\n              elevation=\"2\"\n            ></site-card>\n          </paper-button>\n        </template>\n      </iron-list>\n    "], ["\n      <style>\n        :host {\n          height: 100vh;\n          display: flex;\n          flex-direction: column;\n        }\n        iron-list {\n          flex: 1 1 auto;\n        }\n        #loading {\n          width: 100%;\n          z-index: 1000;\n          opacity: 0.8;\n          padding: 16px;\n          text-align: center;\n          align-content: center;\n          justify-content: center;\n          height: 100vh;\n          position: absolute;\n          background-color: rgba(250, 250, 250, 0.8);\n          transition: all linear 0.8s;\n          visibility: visible;\n        }\n        #loading div {\n          font-size: 32px;\n          font-weight: bold;\n          padding: 16px;\n        }\n        #loading[data-loading] {\n          background-color: rgba(0, 0, 0, 0);\n          opacity: 0;\n          visibility: hidden;\n        }\n        site-card {\n          padding: 16px;\n          font-size: 16px;\n        }\n        paper-button.site-card-wrapper {\n          margin: 0;\n          padding: 0;\n        }\n      </style>\n      <iron-ajax\n        id=\"loaddata\"\n        auto=\"\"\n        loading=\"{{__loading}}\"\n        url=\"[[dataSource]]\"\n        handle-as=\"json\"\n        debounce-duration=\"250\"\n        last-response=\"{{sitesResponse}}\"\n      ></iron-ajax>\n      <div id=\"loading\" data-loading\\$=\"[[!__loading]]\">\n        <elmsln-loading size=\"large\"></elmsln-loading>\n        <div>Loading..</div>\n      </div>\n      <iron-list id=\"list\" items=\"[[sites]]\" as=\"site\" grid=\"\">\n        <template>\n          <paper-button\n            on-focusin=\"_mouseEnter\"\n            on-focusout=\"_mouseLeave\"\n            data-site-id\\$=\"[[site.id]]\"\n            class=\"site-card-wrapper\"\n            on-click=\"_siteClicked\"\n          >\n            <site-card\n              data-site-id\\$=\"[[site.id]]\"\n              size=\"[[size]]\"\n              image=\"[[site.metadata.image]]\"\n              icon=\"[[site.metadata.icon]]\"\n              name=\"[[site.title]]\"\n              title=\"[[site.description]]\"\n              elevation=\"2\"\n            ></site-card>\n          </paper-button>\n        </template>\n      </iron-list>\n    "]);

    _templateObject_c4525b90aa5311e9b999174ecd579fc6 = function _templateObject_c4525b90aa5311e9b999174ecd579fc6() {
      return data;
    };

    return data;
  }

  /**
   * `sites-listing`
   * @demo demo/index.html
   */
  var SitesListing =
  /*#__PURE__*/
  function (_PolymerElement) {
    babelHelpers.inherits(SitesListing, _PolymerElement);

    function SitesListing() {
      var _this;

      babelHelpers.classCallCheck(this, SitesListing);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(SitesListing).call(this));
      new Promise(function (res, rej) {
        return _require.default(["../elmsln-loading/elmsln-loading.js"], res, rej);
      });
      return _this;
    }

    babelHelpers.createClass(SitesListing, [{
      key: "connectedCallback",

      /**
       * attached life cycle
       */
      value: function connectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(SitesListing.prototype), "connectedCallback", this).call(this);
        window.addEventListener("sites-listing-refresh-data", this.refreshData.bind(this));
      }
      /**
       * detached life cycle
       */

    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        window.removeEventListener("sites-listing-refresh-data", this.refreshData.bind(this));
        babelHelpers.get(babelHelpers.getPrototypeOf(SitesListing.prototype), "disconnectedCallback", this).call(this);
      }
      /**
       * force the request to regenerate
       */

    }, {
      key: "refreshData",
      value: function refreshData(e) {
        this.shadowRoot.querySelector("#loaddata").generateRequest();
      }
      /**
       * Parse JSON Outline Schema for the items and bind that to sites
       */

    }, {
      key: "_sitesResponseChanged",
      value: function _sitesResponseChanged(newValue, oldValue) {
        if (newValue) {
          if (babelHelpers.typeof(newValue.items) !== (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined))) {
            this.set("sites", []);
            this.set("sites", newValue.items);
            this.notifyPath("sites.*");
          }
        }
      }
      /**
       * Handle tap on paper-button above to redirect to the correct data.
       */

    }, {
      key: "_siteClicked",
      value: function _siteClicked(e) {
        var normalizedEvent = (0, _polymerDom.dom)(e);
        var local = normalizedEvent.localTarget; // this will have the id of the current course

        var active = local.getAttribute("data-site-id"); // find the course by it's unique id and filter just to it

        var findSite = this.sites.filter(function (site) {
          if (site.id !== active) {
            return false;
          }

          return true;
        }); // if we found one, make it the top level item

        if (findSite.length > 0) {
          findSite = findSite.pop();
        } // double check we have a URI


        if (this.loadLocation && babelHelpers.typeof(findSite.location) !== (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined))) {
          window.location.href = findSite.location;
        }

        this.dispatchEvent(new CustomEvent("sites-listing-item-selected", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: findSite
        }));
      }
      /**
       * Increase elevation while hovering.
       */

    }, {
      key: "_mouseEnter",
      value: function _mouseEnter(e) {
        var card = (0, _polymerDom.dom)(e.target).querySelectorAll("site-card")[0];
        card.__oldElevation = card.elevation;

        if (card.elevation + 2 > 5) {
          card.elevation = 5;
        } else {
          card.elevation += 2;
        }
      }
      /**
       * Reset the elevation.
       */

    }, {
      key: "_mouseLeave",
      value: function _mouseLeave(e) {
        var card = (0, _polymerDom.dom)(e.target).querySelectorAll("site-card")[0];
        card.elevation = card.__oldElevation;
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_c4525b90aa5311e9b999174ecd579fc6());
      }
    }, {
      key: "tag",
      get: function get() {
        return "sites-listing";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * Object, JSON Outline Schema format
           */
          sitesResponse: {
            type: Object,
            notify: true,
            observer: "_sitesResponseChanged"
          },

          /**
           * Array of site objects
           */
          sites: {
            type: Array,
            notify: true
          },

          /**
           * Size of the cards
           */
          size: {
            type: String,
            value: "large"
          },

          /**
           * Data Source to power the loading of sites in JSON Outline Schema format.
           */
          dataSource: {
            type: String
          },

          /**
           * Allow for loading the location in the array rather than firing an event
           */
          loadLocation: {
            type: Boolean,
            value: false
          }
        };
      }
    }]);
    return SitesListing;
  }(_polymerElement.PolymerElement);

  _exports.SitesListing = SitesListing;
  window.customElements.define(SitesListing.tag, SitesListing);
});