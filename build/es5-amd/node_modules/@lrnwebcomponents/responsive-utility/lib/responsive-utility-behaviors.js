define(["exports", "../../../lit-element/lit-element.js", "../responsive-utility.js"], function (_exports, _litElement, _responsiveUtility) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.ResponsiveUtilityBehaviors = void 0;

  function _templateObject_e6b7e500802811ea85d741fb563956b6() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        <slot></slot>\n      "]);

    _templateObject_e6b7e500802811ea85d741fb563956b6 = function _templateObject_e6b7e500802811ea85d741fb563956b6() {
      return data;
    };

    return data;
  }

  /**
   * `responsive-utility-behaviors`
   * A superclass to that custom elements can extend to automatically use ResponsiveUtility.
   *
   * @class ResponsiveUtilityBehaviors
   * @see ResponsiveUtility
   * @demo ../demo/index.html
   */
  var ResponsiveUtilityBehaviors = function ResponsiveUtilityBehaviors(SuperClass) {
    return (
      /*#__PURE__*/
      function (_SuperClass) {
        babelHelpers.inherits(_class, _SuperClass);
        babelHelpers.createClass(_class, [{
          key: "render",
          value: function render() {
            return (0, _litElement.html)(_templateObject_e6b7e500802811ea85d741fb563956b6());
          }
        }], [{
          key: "properties",
          get: function get() {
            return {
              /*
               * size for responsive styling: xs, sm, md, lg, xl 
               */
              responsiveSize: {
                type: String,
                attribute: "responsive-size",
                reflect: true
              },

              /*
               * width in pixels
               */
              responsiveWidth: {
                type: Number,
                attribute: "responsive-width",
                reflect: true
              },

              /*
               * Miniumum value for small breakpoint
               */
              sm: {
                type: Number,
                attribute: "sm"
              },

              /*
               * Miniumum value for medium breakpoint
               */
              md: {
                type: Number,
                attribute: "md"
              },

              /*
               * Miniumum value for large breakpoint
               */
              lg: {
                type: Number,
                attribute: "lg"
              },

              /**
               * Miniumum value for extra-large breakpoint
               */
              xl: {
                type: Number,
                attribute: "xl"
              }
            };
          }
        }]);

        function _class() {
          var _this;

          babelHelpers.classCallCheck(this, _class);
          _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(_class).call(this));
          _this.responsiveSize = "xs";
          _this.sm = 600;
          _this.md = 900;
          _this.lg = 1200;
          _this.xl = 1500;
          return _this;
        }
        /**
         * init the utility & register element
         */


        babelHelpers.createClass(_class, [{
          key: "firstUpdated",
          value: function firstUpdated() {
            babelHelpers.get(babelHelpers.getPrototypeOf(_class.prototype), "connectedCallback", this).call(this);
            window.ResponsiveUtility.requestAvailability();
            this.dispatchEvent(new CustomEvent("responsive-element", {
              bubbles: true,
              cancelable: true,
              composed: true,
              detail: {
                attribute: this.attribute,
                custom: this.custom,
                element: this,
                sm: this.sm,
                md: this.md,
                lg: this.lg,
                xl: this.xl
              }
            }));
          }
          /**
           * detached the element
           */

        }, {
          key: "disconnectedCallback",
          value: function disconnectedCallback() {
            this.dispatchEvent(new CustomEvent("responsive-element-deleted", {
              bubbles: true,
              cancelable: true,
              composed: true,
              detail: this
            }));
            babelHelpers.get(babelHelpers.getPrototypeOf(_class.prototype), "disconnectedCallback", this).call(this);
          }
        }]);
        return _class;
      }(SuperClass)
    );
  };

  _exports.ResponsiveUtilityBehaviors = ResponsiveUtilityBehaviors;
});