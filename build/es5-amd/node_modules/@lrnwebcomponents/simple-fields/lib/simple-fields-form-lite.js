define(["exports", "../../../lit-element/lit-element.js", "./simple-fields-lite.js"], function (_exports, _litElement, _simpleFieldsLite) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SimpleFieldsFormLite = void 0;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _templateObject2_03bd7cf083e911eab3c8e75dc3f340b6() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n      "]);

    _templateObject2_03bd7cf083e911eab3c8e75dc3f340b6 = function _templateObject2_03bd7cf083e911eab3c8e75dc3f340b6() {
      return data;
    };

    return data;
  }

  function _templateObject_03bd7cf083e911eab3c8e75dc3f340b6() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <form>\n        <slot name=\"before\"></slot>\n        <simple-fields-lite id=\"sf\" autofocus></simple-fields-lite>\n        <slot></slot>\n      </form>\n    "]);

    _templateObject_03bd7cf083e911eab3c8e75dc3f340b6 = function _templateObject_03bd7cf083e911eab3c8e75dc3f340b6() {
      return data;
    };

    return data;
  }

  /**
   * `simple-fields-form-lite`
   * binding and submission capabilities on top of simple-fields-lite
   *
   * @group simple-fields
   * @element simple-fields-form-lite
   * @extends simple-fields-lite
   * @demo ./demo/form-lite.html
   */
  var SimpleFieldsFormLite =
  /*#__PURE__*/
  function (_SimpleFieldsLite) {
    babelHelpers.inherits(SimpleFieldsFormLite, _SimpleFieldsLite);
    babelHelpers.createClass(SimpleFieldsFormLite, [{
      key: "render",
      // render function
      value: function render() {
        return (0, _litElement.html)(_templateObject_03bd7cf083e911eab3c8e75dc3f340b6());
      }
      /**
       * allow setting value
       */

    }, {
      key: "setValue",
      value: function setValue(value) {
        var sf = this.shadowRoot.querySelector("#sf");
        sf.value = value;
      }
      /**
       * first update hook; also implies default settings
       */

    }, {
      key: "firstUpdated",
      value: function firstUpdated(changedProperties) {
        var _this2 = this;

        changedProperties.forEach(function (oldValue, propName) {
          // request form when it changes
          if (propName === "loadEndpoint" && _this2.autoload) {
            _this2.loadData();
          }
        });
      }
    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this3 = this;

        changedProperties.forEach(function (oldValue, propName) {
          if (_this3.autoload && !_this3.loadResponse && !_this3.loading) {
            if (propName === "loadEndpoint" || propName === "autoload") {
              _this3.loadData();
            }
          } // we have response data from an end point this should create the form


          if (propName === "loadResponse" && _this3.loadResponse.data) {
            _this3._applyLoadedData();
            /**
             * fires event for things to react to about the response
             * @event response
             */


            _this3.dispatchEvent(new CustomEvent("response", {
              bubbles: true,
              composed: true,
              cancelable: false,
              detail: _this3.loadResponse
            }));
          }
        });
      }
      /**
       * applies loaded datda to simple-fields-lite
       *
       * @memberof SimpleFieldsFormLite
       */

    }, {
      key: "_applyLoadedData",
      value: function _applyLoadedData() {
        var sf = this.shadowRoot.querySelector("#sf");

        if (this.loadResponse.data.schema) {
          sf.schema = this.loadResponse.data.schema;
        }

        if (this.loadResponse.data.value) sf.value = this.loadResponse.data.value;
      }
      /**
       * load data from the end point
       */

    }, {
      key: "loadData",
      value: function loadData() {
        var _this4 = this;

        this.loading = true;
        this.fetchData(this.loadEndpoint, this.method, this.headers, this.body).then(function (data) {
          _this4.loading = false;
          _this4.loadResponse = data;
          /**
           * fires event when forma data is loaded
           * @event simple-fields-form-data-loaded
           */

          _this4.dispatchEvent(new CustomEvent("simple-fields-form-data-loaded", {
            detail: {
              value: data
            }
          }));
        });
      }
    }, {
      key: "fetchData",
      value: function () {
        var _fetchData = babelHelpers.asyncToGenerator(
        /*#__PURE__*/
        regeneratorRuntime.mark(function _callee(path, method, headers, body) {
          var response, data;
          return regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  response = {};

                  if (!(method == "GET")) {
                    _context.next = 8;
                    break;
                  }

                  if (body) {
                    path += "?" + Object.entries(body).map(function (_ref) {
                      var _ref2 = babelHelpers.slicedToArray(_ref, 2),
                          key = _ref2[0],
                          val = _ref2[1];

                      return "".concat(encodeURIComponent(key), "=").concat(encodeURIComponent(val));
                    }).join("&");
                  }

                  _context.next = 5;
                  return fetch(path, {
                    method: method,
                    headers: headers
                  });

                case 5:
                  response = _context.sent;
                  _context.next = 11;
                  break;

                case 8:
                  _context.next = 10;
                  return fetch(path, {
                    method: method,
                    headers: headers,
                    //make sure to serialize your JSON body
                    body: JSON.stringify(body)
                  });

                case 10:
                  response = _context.sent;

                case 11:
                  _context.next = 13;
                  return response.json();

                case 13:
                  data = _context.sent;
                  return _context.abrupt("return", data);

                case 15:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        function fetchData(_x, _x2, _x3, _x4) {
          return _fetchData.apply(this, arguments);
        }

        return fetchData;
      }()
    }], [{
      key: "styles",
      get: function get() {
        return [(0, _litElement.css)(_templateObject2_03bd7cf083e911eab3c8e75dc3f340b6())];
      }
    }, {
      key: "tag",
      get: function get() {
        return "simple-fields-form-lite";
      }
    }]);

    function SimpleFieldsFormLite() {
      var _this;

      babelHelpers.classCallCheck(this, SimpleFieldsFormLite);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(SimpleFieldsFormLite).call(this));
      _this.method = "POST";
      _this.loading = false;
      _this.autoload = false;
      _this.headers = {
        Accept: "application/json",
        "Content-Type": "application/json"
      };
      _this.body = {};
      return _this;
    }
    /**
     * Submit form values if we have an end point, otherwise return value
     * of the fields as they currently exist.
     */


    babelHelpers.createClass(SimpleFieldsFormLite, [{
      key: "submit",
      value: function submit() {
        var sf = this.shadowRoot.querySelector("#sf");

        if (this.saveEndpoint) {
          fetch(this.saveEndpoint, {
            method: this.method,
            headers: this.headers,
            //make sure to serialize your JSON body
            body: JSON.stringify(sf.value)
          });
        }

        return sf.value;
      }
      /**
       * Props down
       */

    }], [{
      key: "properties",
      get: function get() {
        return _objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(SimpleFieldsFormLite), "properties", this), {
          autoload: {
            type: Boolean,
            reflect: true
          },
          loading: {
            type: Boolean,
            reflect: true
          },
          loadEndpoint: {
            type: String,
            attribute: "load-endpoint"
          },
          saveEndpoint: {
            type: String,
            attribute: "save-endpoint"
          },
          method: {
            type: String
          },
          headers: {
            type: Object
          },
          body: {
            type: Object
          },
          loadResponse: {
            type: Object
          }
        });
      }
    }]);
    return SimpleFieldsFormLite;
  }(_simpleFieldsLite.SimpleFieldsLite);

  _exports.SimpleFieldsFormLite = SimpleFieldsFormLite;
  window.customElements.define(SimpleFieldsFormLite.tag, SimpleFieldsFormLite);
});