define(["exports", "require", "../../lit-element/lit-element.js", "../schema-behaviors/schema-behaviors.js"], function (_exports, _require, _litElement, _schemaBehaviors) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.StopNote = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  function _templateObject3_6560d9d0d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n          width: auto;\n          --background-color: #f7f7f7;\n          --accent-color: #d32f2f;\n          margin-bottom: 20px;\n        }\n\n        iron-icon {\n          height: 100px;\n          width: 100px;\n        }\n\n        :host([icon=\"stopnoteicons:stop-icon\"]) {\n          --accent-color: #d8261c;\n        }\n\n        :host([icon=\"stopnoteicons:warning-icon\"]) {\n          --accent-color: #ffeb3b;\n        }\n\n        :host([icon=\"stopnoteicons:confirm-icon\"]) {\n          --accent-color: #81c784;\n        }\n\n        :host([icon=\"stopnoteicons:book-icon\"]) {\n          --accent-color: #21a3db;\n        }\n\n        .container {\n          display: flex;\n          width: auto;\n        }\n\n        .message_wrap {\n          border-right: 7px solid var(--accent-color);\n          padding: 10px 25px;\n          flex: 1 1 auto;\n          background-color: var(--background-color);\n        }\n\n        .main_message {\n          font-size: 32px;\n          margin-top: 10px;\n        }\n\n        .secondary_message {\n          margin-top: 5px;\n          font-size: 19.2px;\n          float: left;\n        }\n\n        .link a {\n          margin-top: 5px;\n          font-size: 19.2px;\n          float: left;\n          clear: left;\n          text-decoration: none;\n          color: #2196f3;\n        }\n\n        .link a:hover {\n          color: #1976d2;\n        }\n\n        .svg {\n          display: flex;\n          justify-content: center;\n        }\n\n        .svg_wrap {\n          background-color: var(--accent-color);\n          padding: 5px;\n          width: auto;\n        }\n      "]);

    _templateObject3_6560d9d0d34d11ea880ba1e93364c49c = function _templateObject3_6560d9d0d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  function _templateObject2_6560d9d0d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n                <div class=\"link\">\n                  <a href=\"", "\" id=\"link\">\n                    More Information &gt;\n                  </a>\n                </div>\n              "]);

    _templateObject2_6560d9d0d34d11ea880ba1e93364c49c = function _templateObject2_6560d9d0d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  function _templateObject_6560d9d0d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <div class=\"container\">\n        <div class=\"svg_wrap\">\n          <div class=\"svg\"><iron-icon icon=\"", "\"></iron-icon></div>\n        </div>\n        <div class=\"message_wrap\">\n          <div class=\"main_message\">", "</div>\n          <div class=\"secondary_message\"><slot name=\"message\"></slot></div>\n          ", "\n        </div>\n      </div>\n    "]);

    _templateObject_6560d9d0d34d11ea880ba1e93364c49c = function _templateObject_6560d9d0d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  /**
   * `stop-note`
   * `A note that directs people to an action item of different warning levels`
   * @demo demo/index.html
   * @element stop-note
   */
  var StopNote =
  /*#__PURE__*/
  function (_SchemaBehaviors) {
    babelHelpers.inherits(StopNote, _SchemaBehaviors);
    babelHelpers.createClass(StopNote, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_6560d9d0d34d11ea880ba1e93364c49c(), this.icon, this.title, this.url ? (0, _litElement.html)(_templateObject2_6560d9d0d34d11ea880ba1e93364c49c(), this.url) : "");
      }
    }], [{
      key: "styles",

      /**
       * LitElement constructable styles enhancement
       */
      get: function get() {
        return [(0, _litElement.css)(_templateObject3_6560d9d0d34d11ea880ba1e93364c49c())];
      }
    }, {
      key: "tag",
      get: function get() {
        return "stop-note";
      }
    }]);

    function StopNote() {
      var _this;

      babelHelpers.classCallCheck(this, StopNote);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(StopNote).call(this));
      new Promise(function (res, rej) {
        return _require.default(["../../@polymer/iron-icon/iron-icon.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["./lib/stop-icon.js"], res, rej);
      });
      _this.url = null;
      _this.icon = "stopnoteicons:stop-icon";
      return _this;
    }

    babelHelpers.createClass(StopNote, [{
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        changedProperties.forEach(function (oldValue, propName) {
          if (propName == "url") {
            _this2._urlTarget(_this2[propName]);
          }
        });
      }
      /**
       * Evaluates url for correct targeting.
       */

    }, {
      key: "_urlTarget",
      value: function _urlTarget(url) {
        if (url) {
          var external = this._outsideLink(url);

          if (external) {
            var link = this.shadowRoot.querySelector("#link");
            link.setAttribute("target", "_blank");
            link.setAttribute("rel", "noopener noreferrer");
          }
        }
      }
      /**
       * Internal function to check if a url is external
       */

    }, {
      key: "_outsideLink",
      value: function _outsideLink(url) {
        if (url.indexOf("http") != 0) return false;
        var loc = location.href,
            path = location.pathname,
            root = loc.substring(0, loc.indexOf(path));
        return url.indexOf(root) != 0;
      }
    }], [{
      key: "properties",
      get: function get() {
        return {
          /**
           * Title Message
           */
          title: {
            type: String
          },

          /**
           * url to additional resources
           */
          url: {
            type: String
          },

          /**
           * Icon selected
           */
          icon: {
            type: String
          }
        };
      }
    }, {
      key: "haxProperties",
      get: function get() {
        return {
          canScale: true,
          canPosition: true,
          canEditSource: false,
          gizmo: {
            title: "Stop Note",
            description: "A message to alert readers to specific directions.",
            icon: "icons:report",
            color: "orange",
            groups: ["Education", "Content"],
            handles: [{
              type: "text",
              title: "label"
            }],
            meta: {
              author: "ELMS:LN"
            }
          },
          settings: {
            quick: [{
              property: "title",
              title: "Title",
              description: "Enter title for stop-note.",
              inputMethod: "textfield",
              required: true
            }, {
              property: "url",
              title: "URL",
              description: "Enter an external url.",
              inputMethod: "textfield",
              required: true
            }],
            configure: [{
              property: "title",
              title: "Title",
              description: "Enter title for stop-note.",
              inputMethod: "textfield",
              required: true
            }, {
              property: "url",
              title: "URL",
              description: "Enter an external url.",
              inputMethod: "haxupload",
              required: true
            }, {
              slot: "message",
              title: "Message",
              description: "Enter a message for stop-note.",
              inputMethod: "code-editor",
              required: true
            }, {
              property: "icon",
              title: "Action Icon",
              description: "Icon used for stop-note",
              inputMethod: "iconpicker",
              options: ["stopnoteicons:stop-icon", "stopnoteicons:warning-icon", "stopnoteicons:confirm-icon", "stopnoteicons:book-icon"]
            }],
            advanced: []
          },
          demoSchema: [{
            tag: "stop-note",
            properties: {
              title: "Hold up there"
            },
            content: '<span slot="message"><strong>Read these important things!</strong>\n</span>\n'
          }, {
            tag: "stop-note",
            properties: {
              title: "Warning",
              icon: "stopnoteicons:warning-icon"
            },
            content: '<span slot="message">You can write any warning message you want here.</span>\n'
          }]
        };
      }
    }]);
    return StopNote;
  }((0, _schemaBehaviors.SchemaBehaviors)(_litElement.LitElement));

  _exports.StopNote = StopNote;
  window.customElements.define(StopNote.tag, StopNote);
});