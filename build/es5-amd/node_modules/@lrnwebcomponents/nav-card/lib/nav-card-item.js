define(["exports", "../../../lit-element/lit-element.js", "../../../@polymer/iron-icon/iron-icon.js", "../../../@polymer/iron-icons/iron-icons.js", "../../lrndesign-avatar/lrndesign-avatar.js"], function (_exports, _litElement, _ironIcon, _ironIcons, _lrndesignAvatar) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.NavCardItem = void 0;

  function _templateObject4_6a73fbf0d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          position: relative;\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          text-decoration: none;\n          padding: 5px 0;\n          margin-bottom: 1px;\n          color: var(--nav-card-item-color, unset);\n          background-color: var(--nav-card-item-background-color, unset);\n          border-bottom: var(\n            --nav-card-linklist-border-bottom,\n            1px solid var(--simple-colors-default-theme-grey-4, #666)\n          );\n        }\n        :host(:last-of-type) {\n          border-bottom: none;\n        }\n        :host([hidden]) {\n          display: none;\n        }\n        :host div {\n          flex: 1 1 auto;\n        }\n        ::slotted([slot=\"label\"]:hover),\n        ::slotted([slot=\"label\"]:focus),\n        :host(:hover) ::slotted([slot=\"label\"]),\n        :host(:focus-within) ::slotted([slot=\"label\"]) {\n          text-decoration: underline;\n        }\n        ::slotted(*) {\n          display: block;\n        }\n        ::slotted([slot=\"label\"]),\n        ::slotted([slot=\"description\"]) {\n          color: inherit;\n          font-family: inherit;\n        }\n        ::slotted([slot=\"label\"]) {\n          text-decoration: inherit;\n          outline: none;\n          border: none;\n          padding: 0;\n          text-align: left;\n          color: var(--nav-card-item-color, unset);\n          background-color: var(--nav-card-item-background-color, unset);\n          font-size: var(--nav-card-item-label-font-size, inherit);\n          font-weight: var(--nav-card-item-label-font-weight, bold);\n        }\n        ::slotted([slot=\"description\"]) {\n          font-size: var(--nav-card-item-label-font-size, 11px);\n          font-weight: var(--nav-card-item-label-font-weight, normal);\n        }\n        ::slotted([slot=\"label\"]):after {\n          content: \"\";\n          position: absolute;\n          left: 0;\n          top: 0;\n          right: 0;\n          bottom: 0;\n        }\n        ::slotted([slot=\"label\"]:focus):after {\n          outline: 1px solid blue;\n        }\n        lrndesign-avatar {\n          margin-right: 10px;\n          width: var(\n            --nav-card-item-avatar-width,\n            var(--nav-card-item-avatar-size, 36px)\n          );\n          height: var(\n            --nav-card-item-avatar-height,\n            var(--nav-card-item-avatar-size, 36px)\n          );\n          --lrndesign-avatar-width: var(\n            --nav-card-item-avatar-width,\n            var(--nav-card-item-avatar-size, 36px)\n          );\n          --lrndesign-avatar-height: var(\n            --nav-card-item-avatar-height,\n            var(--nav-card-item-avatar-size, 36px)\n          );\n        }\n        iron-icon {\n          margin-left: 10px;\n          width: var(\n            --nav-card-item-icon-width,\n            var(--nav-card-item-icon-size, 24px)\n          );\n          height: var(\n            --nav-card-item-icon-height,\n            var(--nav-card-item-icon-size, 24px)\n          );\n          --lrndesign-icon-width: var(\n            --nav-card-item-icon-width,\n            var(--nav-card-item-icon-size, 24px)\n          );\n          --lrndesign-icon-height: var(\n            --nav-card-item-icon-height,\n            var(--nav-card-item-icon-size 24px)\n          );\n        }\n      "]);

    _templateObject4_6a73fbf0d34d11ea880ba1e93364c49c = function _templateObject4_6a73fbf0d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  function _templateObject3_6a73fbf0d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n            <iron-icon icon=\"", "\"></iron-icon>\n          "]);

    _templateObject3_6a73fbf0d34d11ea880ba1e93364c49c = function _templateObject3_6a73fbf0d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  function _templateObject2_6a73fbf0d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n            <lrndesign-avatar\n              .accentColor=\"", "\"\n              ?dark=\"", "\"\n              .icon=\"", "\"\n              .src=\"", "\"\n              .label=\"", "\"\n              ?two-chars=\"", "\"\n            >\n            </lrndesign-avatar>\n          "]);

    _templateObject2_6a73fbf0d34d11ea880ba1e93364c49c = function _templateObject2_6a73fbf0d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  function _templateObject_6a73fbf0d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      ", "\n      <div>\n        <slot name=\"label\"></slot>\n        <slot name=\"description\"></slot>\n      </div>\n      ", "\n    "]);

    _templateObject_6a73fbf0d34d11ea880ba1e93364c49c = function _templateObject_6a73fbf0d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  /**
   * `nav-card-item`
   * links fr the nav card
  ### Styling
  
  `<nav-card-item>` provides the following custom properties
  for styling:
  
  Custom property | Description | Default
  ----------------|-------------|----------
  `--nav-card-item-background-color` | item's default background-color | unset
  `--nav-card-item-color` | item's default teext color | unset
  `--nav-card-item-label-font-weight` | item's default font-weight | bold
  `--nav-card-linklist-border-bottom` | item's border-bottom | 1px solid var(--simple-colors-default-theme-grey-4)
  `--nav-card-item-label-font-size` | item's default font-size | inherit
  `--nav-card-item-label-font-weight` | item's default font-weight | bold
  `--nav-card-item-label-font-size` | item description's default font-weight | 11px
  `--nav-card-item-label-font-weight` | item description's default font-wight | normal
  `--nav-card-item-avatar-size` | default size for item's avatar | 36px
  `--nav-card-item-avatar-width` | default width for item's avatar | --nav-card-item-avatar-size
  `--nav-card-item-avatar-height` | default height for item's avatar | --nav-card-item-avatar-size
  `--nav-card-item-icon-size` | default size for item's icon | 24px
  `--nav-card-item-icon-width` | default width for item's icon | --nav-card-item-icon-size
  `--nav-card-item-icon-height` | default height for item's icon | --nav-card-item-icon-size
   *
   * @customElement nav-card-item
   * @lit-html
   * @lit-element
   * @demo demo/index.html
   */
  var NavCardItem =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(NavCardItem, _LitElement);
    babelHelpers.createClass(NavCardItem, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_6a73fbf0d34d11ea880ba1e93364c49c(), !this.avatar && !this.initials ? "" : (0, _litElement.html)(_templateObject2_6a73fbf0d34d11ea880ba1e93364c49c(), this.accentColor || "", this.dark, this.ico || "", this.src || "", this.label, this.twoChars), !this.icon ? "" : (0, _litElement.html)(_templateObject3_6a73fbf0d34d11ea880ba1e93364c49c(), this.icon));
      } // life cycle

    }], [{
      key: "tag",

      /* REQUIRED FOR TOOLING DO NOT TOUCH */

      /**
       * Store the tag name to make it easier to obtain directly.
       * @notice function name must be here for tooling to operate correctly
       */
      get: function get() {
        return "nav-card-item";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * optional iron-icon or image URI as avatar on left of link
           */
          avatar: {
            type: String,
            attribute: "avatar"
          },

          /**
           * iron-icon on right of link
           */
          icon: {
            type: String,
            attribute: "icon"
          },

          /**
           * optional accent-color for avatar
           */
          accentColor: {
            type: String,
            attribute: "accent-color"
          },

          /**
           * optional dark text for avatar icon
           */
          dark: {
            type: Boolean,
            attribute: "dark"
          },

          /**
           * optional use up to two initials if no avatar
           */
          initials: {
            type: String,
            attribute: "initials"
          }
        };
      } // haxProperty definition

    }, {
      key: "haxProperties",
      get: function get() {
        return {
          canScale: true,
          canPosition: true,
          canEditSource: false,
          gizmo: {
            title: "Nav card",
            description: "an accent card of link lists",
            icon: "av:playlist-play",
            color: "pink",
            groups: ["Card", "Nav", "List"],
            handles: [{
              type: "todo:read-the-docs-for-usage"
            }],
            meta: {
              author: "nikkimk",
              owner: "The Pennsylvania State University"
            }
          },
          settings: {
            quick: [],
            configure: [{
              property: "accentColor",
              title: "Accent Color",
              description: "Select an accent color.",
              inputMethod: "colorpicker",
              required: false
            }, {
              property: "dark",
              title: "Dark",
              description: "Display the card as dark theme?",
              inputMethod: "boolean",
              required: false
            }, {
              property: "icon",
              title: "Icon",
              description: "Select an icon.",
              inputMethod: "iconpicker",
              required: false
            }, {
              property: "initials",
              title: "Initials",
              description: "Initials to display if there is no icon.",
              inputMethod: "textfield",
              required: false
            }, {
              property: "avatar",
              title: "Avatar Image",
              description: "Select an image",
              inputMethod: "haxupload",
              required: false
            }, {
              slot: "label",
              title: "Button or Link",
              inputMethod: "code-editor",
              required: false
            }, {
              slot: "description",
              title: "Additional description",
              inputMethod: "code-editor",
              required: false
            }],
            advanced: [{
              property: "avatar",
              title: "Avatar Icon",
              description: "Select an icon.",
              inputMethod: "iconpicker",
              required: false
            }]
          }
        };
      }
    }, {
      key: "styles",
      get: function get() {
        return [(0, _litElement.css)(_templateObject4_6a73fbf0d34d11ea880ba1e93364c49c())];
      }
    }]);

    function NavCardItem() {
      var _this;

      babelHelpers.classCallCheck(this, NavCardItem);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(NavCardItem).call(this));
      _this.tag = NavCardItem.tag;
      _this.accentColor = "grey";
      _this.dark = false;
      return _this;
    }
    /**
     * gets the avatar icon
     *
     * @readonly
     * @memberof NavCardItem
     */


    babelHelpers.createClass(NavCardItem, [{
      key: "twoChars",
      get: function get() {
        return this.label && this.label.split(/\s*/).length > 1;
      }
      /**
       * gets the avatar icon
       *
       * @readonly
       * @memberof NavCardItem
       */

    }, {
      key: "label",
      get: function get() {
        var parts = this.initials && this.initials.split(" ");
        return parts && parts[0] ? "".concat(parts[0][0], " ").concat(parts[1] ? parts[1][0] : parts[0][1] || "", "}") : this.initials;
      }
      /**
       * gets the avatar icon
       *
       * @readonly
       * @memberof NavCardItem
       */

    }, {
      key: "ico",
      get: function get() {
        return this.avatar && this.avatar.indexOf(".") < 0 ? this.avatar : "";
      }
      /**
       * gets the avatar src
       *
       * @readonly
       * @memberof NavCardItem
       */

    }, {
      key: "src",
      get: function get() {
        return this.avatar && this.avatar.indexOf(".") > -1 ? this.avatar : "";
      }
    }]);
    return NavCardItem;
  }(_litElement.LitElement);

  _exports.NavCardItem = NavCardItem;
  customElements.define("nav-card-item", NavCardItem);
});