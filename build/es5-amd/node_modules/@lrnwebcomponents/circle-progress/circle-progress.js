define(["exports","../../@polymer/polymer/polymer-legacy.js","../../@polymer/paper-styles/paper-styles.js","../../@polymer/iron-flex-layout/iron-flex-layout.js","../../@polymer/iron-resizable-behavior/iron-resizable-behavior.js"],function(_exports,_polymerLegacy,_paperStyles,_ironFlexLayout,_ironResizableBehavior){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.CircleProgress=void 0;function _templateObject_141e2ed0490411e990ee3fd35bb8725b(){var data=babelHelpers.taggedTemplateLiteral(["\n    <custom-style>\n      <style is=\"custom-style\" include=\"paper-material-styles\">\n        :host {\n          @apply --layout-vertical;\n          @apply --layout-center-center;\n          position: relative;\n          width: var(--circle-progress-width, 64px);\n          height: var(--circle-progress-height, 64px);\n          margin: 24px;\n          border-radius: 50%;\n        }\n        svg {\n          position: absolute;\n          top: 0;\n          left: 0;\n          display: none;\n        }\n        .circle-background {\n          stroke: var(--circle-progress-bg-stroke-color, --paper-grey-100);\n        }\n        .circle-foreground {\n          transition: stroke-dashoffset var(--circle-progress-transition, 150ms);\n          stroke: var(--circle-progress-stroke-color, blue);\n          stroke-linecap: var(--circle-progress-stroke-linecap, round);\n        }\n      </style>\n    </custom-style>\n    <svg id=\"circle\" width=\"100%\" height=\"100%\">\n      <circle\n        class=\"circle-background\"\n        r$=\"[[_radius]]\"\n        cx$=\"[[_cx]]\"\n        cy$=\"[[_cy]]\"\n        fill=\"transparent\"\n        stroke-width$=\"[[strokeWidth]]\"\n      ></circle>\n      <circle\n        class=\"circle-foreground\"\n        r$=\"[[_radius]]\"\n        cx$=\"[[_cx]]\"\n        cy$=\"[[_cy]]\"\n        fill=\"transparent\"\n        stroke-width$=\"[[strokeWidth]]\"\n        stroke-dasharray$=\"[[_dasharray]]\"\n        stroke-dashoffset$=\"[[_dashoffset]]\"\n        transform$=\"[[_transform]]\"\n      ></circle>\n    </svg>\n    <slot></slot>\n  "],["\n    <custom-style>\n      <style is=\"custom-style\" include=\"paper-material-styles\">\n        :host {\n          @apply --layout-vertical;\n          @apply --layout-center-center;\n          position: relative;\n          width: var(--circle-progress-width, 64px);\n          height: var(--circle-progress-height, 64px);\n          margin: 24px;\n          border-radius: 50%;\n        }\n        svg {\n          position: absolute;\n          top: 0;\n          left: 0;\n          display: none;\n        }\n        .circle-background {\n          stroke: var(--circle-progress-bg-stroke-color, --paper-grey-100);\n        }\n        .circle-foreground {\n          transition: stroke-dashoffset var(--circle-progress-transition, 150ms);\n          stroke: var(--circle-progress-stroke-color, blue);\n          stroke-linecap: var(--circle-progress-stroke-linecap, round);\n        }\n      </style>\n    </custom-style>\n    <svg id=\"circle\" width=\"100%\" height=\"100%\">\n      <circle\n        class=\"circle-background\"\n        r\\$=\"[[_radius]]\"\n        cx\\$=\"[[_cx]]\"\n        cy\\$=\"[[_cy]]\"\n        fill=\"transparent\"\n        stroke-width\\$=\"[[strokeWidth]]\"\n      ></circle>\n      <circle\n        class=\"circle-foreground\"\n        r\\$=\"[[_radius]]\"\n        cx\\$=\"[[_cx]]\"\n        cy\\$=\"[[_cy]]\"\n        fill=\"transparent\"\n        stroke-width\\$=\"[[strokeWidth]]\"\n        stroke-dasharray\\$=\"[[_dasharray]]\"\n        stroke-dashoffset\\$=\"[[_dashoffset]]\"\n        transform\\$=\"[[_transform]]\"\n      ></circle>\n    </svg>\n    <slot></slot>\n  "]);_templateObject_141e2ed0490411e990ee3fd35bb8725b=function(){return data};return data}var CircleProgress=(0,_polymerLegacy.Polymer)({_template:(0,_polymerLegacy.html)(_templateObject_141e2ed0490411e990ee3fd35bb8725b()),is:"circle-progress",behaviors:[_ironResizableBehavior.IronResizableBehavior],properties:{value:{name:"value",type:"Number",value:0},max:{name:"max",type:"Number",value:100},strokeWidth:{name:"strokeWidth",type:"Number",value:4},angle:{name:"angle",type:"Number",value:-90},_cx:{name:"_cx",type:"Number",value:null},_cy:{name:"_cy",type:"Number",value:null},_radius:{name:"_radius",type:"Number",computed:"_computeRadius(_cx, _cy, strokeWidth)"},_transform:{name:"_transform",type:"String",computed:"_computeTransform(angle, _cx, _cy)"},_dasharray:{name:"_dasharray",type:"Number",computed:"_computeDashArray(_radius)"},_dashoffset:{name:"_dashoffset",type:"Number",computed:"_computeDashOffset(value, max, _dasharray)"}},listeners:{"iron-resize":"_onIronResize"},_computeDashArray:function _computeDashArray(radius){return 2*Math.PI*radius},_computeDashOffset:function _computeDashOffset(value,max,dasharray){return(1-value/max)*dasharray},_computeRadius:function _computeRadius(cx,cy,strokeWidth){return cx&&cy?Math.max(0,Math.min(cx,cy)-strokeWidth/2):0},_computeTransform:function _computeTransform(angle,cx,cy){return cx&&cy?"rotate("+angle+", "+cx+", "+cy+")":""},_onIronResize:function _onIronResize(){if(this.offsetWidth&&this.offsetHeight){this._cx=this.offsetWidth/2;this._cy=this.offsetHeight/2;this.$.circle.style.display="block"}}});_exports.CircleProgress=CircleProgress});