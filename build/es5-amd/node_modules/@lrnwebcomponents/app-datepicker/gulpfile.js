var gulp=require("gulp"),fs=require("fs"),path=require("path"),_=require("lodash"),rename=require("gulp-rename"),replace=require("gulp-replace"),stripCssComments=require("strip-css-comments"),decomment=require("decomment"),sourcemaps=require("gulp-sourcemaps"),packageJson=require("./package.json");// merge all the src files together
gulp.task("merge",function(){return gulp.src("./src/"+packageJson.wcfactory.elementName+".js").pipe(replace(/\/\* REQUIRED FOR TOOLING DO NOT TOUCH \*\//g,function(classStatement,character,jsFile){// pull these off the package wcfactory files area
var html=fs.readFileSync(path.join("./",packageJson.wcfactory.files.html)).toString().trim();html=decomment(html);var haxString="";if(packageJson.wcfactory.useHAX){var HAXProps=fs.readFileSync(path.join("./",packageJson.wcfactory.files.hax));haxString="\n  // haxProperty definition\n  static get haxProperties() {\n    return ".concat(HAXProps,";\n  }")}var props="{}";props=fs.readFileSync(path.join("./",packageJson.wcfactory.files.properties));var cssResult="<style>";if(packageJson.wcfactory.useSass&&packageJson.wcfactory.files.scss){var sass=require("node-sass");cssResult+=sass.renderSync({file:path.join("./",packageJson.wcfactory.files.scss)}).css}else if(packageJson.wcfactory.files.css){cssResult+=fs.readFileSync(path.join("./",packageJson.wcfactory.files.css))}cssResult+="</style>";cssResult=stripCssComments(cssResult).trim();return"\n  // render function\n  static get template() {\n    return html`\n".concat(cssResult,"\n").concat(html,"`;\n  }\n").concat(haxString,"\n  // properties available to the custom element for data binding\n  static get properties() {\n    return ").concat(props,";\n  }")})).pipe(gulp.dest("./"))});// run polymer build to generate everything fully
gulp.task("build",function(){var spawn=require("child_process").spawn,child=spawn("polymer",["build"]);return child.on("close",function(code){console.log("child process exited with code "+code)})});// run polymer analyze to generate documentation
gulp.task("analyze",function(){var exec=require("child_process").exec;return exec("polymer analyze --input demo/index.html > analysis.json",function(error,stdout,stderr){if(null!==error){console.log("exec error: "+error)}})});// copy from the built locations pulling them together
gulp.task("compile",function(){// copy outputs
gulp.src("./build/es6/"+packageJson.wcfactory.elementName+".js").pipe(rename({suffix:".es6"})).pipe(gulp.dest("./"));gulp.src("./build/es5-amd/"+packageJson.wcfactory.elementName+".js").pipe(rename({suffix:".amd"})).pipe(gulp.dest("./"));return gulp.src("./"+packageJson.wcfactory.elementName+".js").pipe(replace(/^(import .*?)(['"]\.\.\/(?!\.\.\/).*)(\.js['"];)$/gm,"$1$2.umd$3")).pipe(rename({suffix:".umd"})).pipe(gulp.dest("./"))});gulp.task("watch",function(){return gulp.watch("./src/*",gulp.series("merge","analyze"))});// shift build files around a bit and build source maps
gulp.task("sourcemaps",function(){return gulp.src("./"+packageJson.wcfactory.elementName+".es6.js").pipe(sourcemaps.init()).pipe(sourcemaps.write("./"))});gulp.task("dev",gulp.series("merge","analyze","watch"));gulp.task("default",gulp.series("merge","analyze","build","compile","sourcemaps"));