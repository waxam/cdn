define(["exports", "../../lit-element/lit-element.js", "../simple-modal/simple-modal.js", "./lib/img-view-viewer.js"], function (_exports, _litElement, _simpleModal, _imgViewViewer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.ImgViewModal = void 0;

  function _templateObject2_1db7b3b0de5b11eaa3c04df0985e08b7() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <slot></slot>\n    "]);

    _templateObject2_1db7b3b0de5b11eaa3c04df0985e08b7 = function _templateObject2_1db7b3b0de5b11eaa3c04df0985e08b7() {
      return data;
    };

    return data;
  }

  function _templateObject_1db7b3b0de5b11eaa3c04df0985e08b7() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      :host {\n        display: block;\n        --simple-modal-width: 90%;\n        --simple-modal-height: 90vh;\n        --simple-modal-titlebar-height: 40px;\n        --simple-modal-titlebar-line-height: 40px;\n        --simple-modal-titlebar-height: 40px;\n        --simple-modal-titlebar-padding: 0px 5px;\n        --simple-modal-titlebar-background: var(\n          --img-view-modal-backgroundColor,\n          white\n        );\n        --simple-modal-header-background: var(\n          --img-view-modal-backgroundColor,\n          white\n        );\n        --simple-modal-header-color: var(--img-view-modal-color, black);\n        --simple-modal-header-padding: 0px;\n        --simple-modal-content-padding: 0px;\n        --simple-modal-buttons-padding: 0px;\n        --img-view-viewer-height: calc(\n          var(--simple-modal-height) - var(--simple-modal-titlebar-height)\n        );\n        --img-view-viewer-backgroundColor: var(\n          --img-view-modal-backgroundColor,\n          white\n        );\n        --img-view-viewer-color: var(--img-view-modal-color, black);\n        --img-view-viewer-borderColor: var(--img-view-modal-borderColor, #ddd);\n        --img-view-viewer-toggled-backgroundColor: var(\n          --img-view-modal-toggled-backgroundColor,\n          #eee\n        );\n      }\n      :host([hidden]) {\n        display: none;\n      }\n    "]);

    _templateObject_1db7b3b0de5b11eaa3c04df0985e08b7 = function _templateObject_1db7b3b0de5b11eaa3c04df0985e08b7() {
      return data;
    };

    return data;
  }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  /**
   * `img-view-modal`
   * Combines img-pan-zoom and simple-modal for an easy image zoom solution
   *
  ### Styling
  
  Custom property | Description | Default
  ----------------|-------------|----------
  `--img-view-modal-backgroundColor` | background color | white
  `--img-view-modal-color` | text color | black
  `--img-view-modal-borderColor` | border color | #ddd
  `--img-view-modal-toggled-backgroundColor` | background color of toggled buttons and kbd commands | #eee
   *
   * @demo demo/index.html
   * @element img-view-modal
   * 
   */
  var ImgViewModal =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(ImgViewModal, _LitElement);
    babelHelpers.createClass(ImgViewModal, null, [{
      key: "tag",

      /**
       * Store the tag name to make it easier to obtain directly.
       * @notice function name must be here for tooling to operate correctly
       */
      get: function get() {
        return "img-view-modal";
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread({}, _imgViewViewer.ImgViewViewer.properties, {
          title: {
            type: String
          },
          modal: {
            type: Object
          }
        });
      }
    }, {
      key: "styles",
      get: function get() {
        return (0, _litElement.css)(_templateObject_1db7b3b0de5b11eaa3c04df0985e08b7());
      }
    }]);

    function ImgViewModal() {
      var _this;

      babelHelpers.classCallCheck(this, ImgViewModal);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(ImgViewModal).call(this));
      _this.modal = window.SimpleModal.requestAvailability();

      _this.addEventListener("click", _this.modalOpen);

      return _this;
    }

    babelHelpers.createClass(ImgViewModal, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject2_1db7b3b0de5b11eaa3c04df0985e08b7());
      }
    }, {
      key: "_getCssVar",
      value: function _getCssVar(propName) {
        return getComputedStyle(this).getPropertyValue(propName);
      }
    }, {
      key: "modalOpen",
      value: function modalOpen() {
        var _modalStyles,
            _this2 = this;

        var evt,
            modalStyles = (_modalStyles = {
          "--simple-modal-width": this._getCssVar("--simple-modal-width") || "90%",
          "--simple-modal-height": this._getCssVar("--simple-modal-height") || "90vh",
          "--simple-modal-titlebar-height": this._getCssVar("--simple-modal-titlebar-height") || "40px",
          "--simple-modal-titlebar-line-height": this._getCssVar("--simple-modal-titlebar-line-height") || "40px"
        }, babelHelpers.defineProperty(_modalStyles, "--simple-modal-titlebar-height", this._getCssVar("--simple-modal-titlebar-height") || "40px"), babelHelpers.defineProperty(_modalStyles, "--simple-modal-titlebar-padding", this._getCssVar("--simple-modal-titlebar-padding") || "0px 5px"), babelHelpers.defineProperty(_modalStyles, "--simple-modal-titlebar-background", this._getCssVar("--simple-modal-titlebar-background") || "white"), babelHelpers.defineProperty(_modalStyles, "--simple-modal-header-background", this._getCssVar("--simple-modal-header-background") || "white"), babelHelpers.defineProperty(_modalStyles, "--simple-modal-header-color", this._getCssVar("--simple-modal-header-color") || "black"), babelHelpers.defineProperty(_modalStyles, "--simple-modal-header-padding", this._getCssVar("--simple-modal-header-padding") || "0px"), babelHelpers.defineProperty(_modalStyles, "--simple-modal-content-padding", this._getCssVar("--simple-modal-content-padding") || "0px"), babelHelpers.defineProperty(_modalStyles, "--simple-modal-buttons-padding", this._getCssVar("--simple-modal-buttons-padding") || "0px"), _modalStyles),
            imgStyles = {
          "--img-view-viewer-backgroundColor": this._getCssVar("i--mg-view-viewer-backgroundColor") || "white",
          "--img-view-viewer-height": "calc(var(--simple-modal-height) - var(--simple-modal-titlebar-height))",
          "--img-view-viewer-color": this._getCssVar("--img-view-viewer-color") || "black",
          "--img-view-viewer-borderColor": this._getCssVar("--img-view-viewer-borderColor") || "#ddd",
          "--img-view-viewer-toggled-backgroundColor": this._getCssVar("--img-view-viewer-toggled-backgroundColor") || "#eee"
        },
            img = document.createElement("img-view-viewer");
        Object.keys(_imgViewViewer.ImgViewViewer.properties || {}).forEach(function (prop) {
          if (_this2[prop]) img[prop] = _this2[prop];
        });
        Object.keys(imgStyles || {}).forEach(function (key) {
          return img.style.setProperty(key, imgStyles[key]);
        });
        this.dispatchEvent(new CustomEvent("modal-button-click", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: this
        }));
        evt = new CustomEvent("simple-modal-show", {
          bubbles: true,
          composed: true,
          cancelable: false,
          detail: {
            title: this.title || false,
            elements: {
              content: img
            },
            styles: modalStyles,
            invokedBy: this,
            clone: false
          }
        });
        this.dispatchEvent(evt);
      }
    }]);
    return ImgViewModal;
  }(_litElement.LitElement);

  _exports.ImgViewModal = ImgViewModal;
  window.customElements.define(ImgViewModal.tag, ImgViewModal);
});