define(["exports", "../../lit/index.js", "../h-a-x/h-a-x.js", "../hax-body/lib/hax-store.js"], function (_exports, _index, _hAX, _haxStore) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.AppEditorHax = void 0;

  var _templateObject_d86038e0ce4611ecb13bcf602138080f, _templateObject2_d86038e0ce4611ecb13bcf602138080f;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
  `app-editor-hax`
  stand alone editor intended for use in a larger application
  as the editor. It is like cms-hax in that it's prepackaged
  the way HAX will be integrated but the connotation is that there
  is no edit state and that it is always editing effectively.
  
  * @demo demo/index.html
  
  @microcopy - the mental model for this element
   - app - an application desktop or mobile that's deployed this
   - editor - in this case HAX is the editor / authoring tool
   - hax - just to make sure we're aware that it's actually HAX based
  
  */
  var AppEditorHax = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(AppEditorHax, _LitElement);

    var _super = _createSuper(AppEditorHax);

    function AppEditorHax() {
      babelHelpers.classCallCheck(this, AppEditorHax);
      return _super.apply(this, arguments);
    }

    babelHelpers.createClass(AppEditorHax, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_d86038e0ce4611ecb13bcf602138080f || (_templateObject_d86038e0ce4611ecb13bcf602138080f = babelHelpers.taggedTemplateLiteral([" <h-a-x .app-store=\"", "\"></h-a-x> "])), this.appStoreConnection);
      }
    }, {
      key: "save",
      value:
      /**
       * Basic save event to make targetting easier.
       */
      function () {
        var _save = babelHelpers.asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
          var content;
          return regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  _context.next = 2;
                  return _haxStore.HAXStore.activeHaxBody.haxToContent();

                case 2:
                  content = _context.sent;
                  // fire event so apps can react correctly
                  this.dispatchEvent(new CustomEvent("app-editor-hax-save", {
                    bubbles: true,
                    cancelable: true,
                    composed: true,
                    detail: content
                  }));

                case 4:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee, this);
        }));

        function save() {
          return _save.apply(this, arguments);
        }

        return save;
      }()
      /**
       * Basic import capability abstraction of hax body's import capabilities
       */

    }, {
      key: "import",
      value: function _import(html) {
        // import the HTML blob to get going
        _haxStore.HAXStore.activeHaxBody.importContent(html); // fire event just letting things know this happened


        this.dispatchEvent(new CustomEvent("app-editor-hax-import", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: true
        }));
      }
    }], [{
      key: "styles",
      get:
      /**
       * LitElement constructable styles enhancement
       */
      function get() {
        return [(0, _index.css)(_templateObject2_d86038e0ce4611ecb13bcf602138080f || (_templateObject2_d86038e0ce4611ecb13bcf602138080f = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n          font-size: 16px;\n          box-sizing: content-box;\n        }\n      "])))];
      }
    }, {
      key: "tag",
      get: function get() {
        return "app-editor-hax";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * Establish the app store connection to pull in our JSON
           */
          appStoreConnection: {
            type: Object
          }
        };
      }
    }]);
    return AppEditorHax;
  }(_index.LitElement);

  _exports.AppEditorHax = AppEditorHax;
  window.customElements.define(AppEditorHax.tag, AppEditorHax);
});