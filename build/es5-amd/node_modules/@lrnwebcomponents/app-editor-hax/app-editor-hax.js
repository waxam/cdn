define(["exports", "../../lit-element/lit-element.js", "../h-a-x/h-a-x.js"], function (_exports, _litElement, _hAX) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.AppEditorHax = void 0;

  function _templateObject2_4b631a70d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n          font-size: 16px;\n          box-sizing: content-box;\n        }\n      "]);

    _templateObject2_4b631a70d34d11ea880ba1e93364c49c = function _templateObject2_4b631a70d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  function _templateObject_4b631a70d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <h-a-x .app-store=\"", "\"></h-a-x>\n    "]);

    _templateObject_4b631a70d34d11ea880ba1e93364c49c = function _templateObject_4b631a70d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  /**
  `app-editor-hax`
  stand alone editor intended for use in a larger application
  as the editor. It is like cms-hax in that it's prepackaged
  the way HAX will be integrated but the connotation is that there
  is no edit state and that it is always editing effectively.
  
  * @demo demo/index.html
  
  @microcopy - the mental model for this element
   - app - an application desktop or mobile that's deployed this
   - editor - in this case HAX is the editor / authoring tool
   - hax - just to make sure we're aware that it's actually HAX based
  
  */
  var AppEditorHax =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(AppEditorHax, _LitElement);

    function AppEditorHax() {
      babelHelpers.classCallCheck(this, AppEditorHax);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(AppEditorHax).apply(this, arguments));
    }

    babelHelpers.createClass(AppEditorHax, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_4b631a70d34d11ea880ba1e93364c49c(), this.appStoreConnection);
      }
    }, {
      key: "save",

      /**
       * Basic save event to make targetting easier.
       */
      value: function save() {
        // convert the body area to content
        var content = window.HaxStore.instance.activeHaxBody.haxToContent(); // fire event so apps can react correctly

        this.dispatchEvent(new CustomEvent("app-editor-hax-save", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: content
        }));
      }
      /**
       * Basic import capability abstraction of hax body's import capabilities
       */

    }, {
      key: "import",
      value: function _import(html) {
        // import the HTML blob to get going
        window.HaxStore.instance.activeHaxBody.importContent(html); // fire event just letting things know this happened

        this.dispatchEvent(new CustomEvent("app-editor-hax-import", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: true
        }));
      }
    }], [{
      key: "styles",

      /**
       * LitElement constructable styles enhancement
       */
      get: function get() {
        return [(0, _litElement.css)(_templateObject2_4b631a70d34d11ea880ba1e93364c49c())];
      }
    }, {
      key: "tag",
      get: function get() {
        return "app-editor-hax";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * Establish the app store connection to pull in our JSON
           */
          appStoreConnection: {
            type: Object
          }
        };
      }
    }]);
    return AppEditorHax;
  }(_litElement.LitElement);

  _exports.AppEditorHax = AppEditorHax;
  window.customElements.define(AppEditorHax.tag, AppEditorHax);
});