define(["exports", "require", "../../../lit-element/lit-element.js", "./hax-tray-button.js", "./hax-store.js", "../../../mobx/dist/mobx.esm.js"], function (_exports, _require, _litElement, _haxTrayButton, _haxStore, _mobxEsm) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HaxAppBrowser = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  function _templateObject3_43373ea0577b11ebb66acdcaf78a5691() {
    var data = babelHelpers.taggedTemplateLiteral(["\n            <hax-tray-button\n              dark-bg\n              index=\"", "\"\n              label=\"", "\"\n              icon=\"", "\"\n              color=\"", "\"\n              event-name=\"search-selected\"\n              event-data=\"", "\"\n            ></hax-tray-button>\n          "]);

    _templateObject3_43373ea0577b11ebb66acdcaf78a5691 = function _templateObject3_43373ea0577b11ebb66acdcaf78a5691() {
      return data;
    };

    return data;
  }

  function _templateObject2_43373ea0577b11ebb66acdcaf78a5691() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <div class=\"item-wrapper\">\n        ", "\n      </div>\n      <hax-app-search\n        id=\"haxappsearch\"\n        .hidden=\"", "\"\n      ></hax-app-search>\n      <slot></slot>\n    "]);

    _templateObject2_43373ea0577b11ebb66acdcaf78a5691 = function _templateObject2_43373ea0577b11ebb66acdcaf78a5691() {
      return data;
    };

    return data;
  }

  function _templateObject_43373ea0577b11ebb66acdcaf78a5691() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n        :host *[hidden] {\n          display: none;\n        }\n        .toolbar-inner {\n          display: block;\n          padding: 0;\n          width: 100%;\n        }\n        .item-wrapper {\n          text-align: center;\n        }\n      "]);

    _templateObject_43373ea0577b11ebb66acdcaf78a5691 = function _templateObject_43373ea0577b11ebb66acdcaf78a5691() {
      return data;
    };

    return data;
  }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `hax-app-browser`
   * @element hax-app-browser
   *
   * `Browse a list of apps. This provides a listing of our gizmos that we've integrated with.`
   * @microcopy - the mental model for this element
   * - hax-app - expression of how to communicate and visualize a data source
   * - gizmo - silly name for the general public when talking about hax-app and what it provides in the end
   */
  var HaxAppBrowser = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(HaxAppBrowser, _LitElement);

    var _super = _createSuper(HaxAppBrowser);

    babelHelpers.createClass(HaxAppBrowser, null, [{
      key: "styles",
      get: function get() {
        return [(0, _litElement.css)(_templateObject_43373ea0577b11ebb66acdcaf78a5691())];
      }
    }]);

    function HaxAppBrowser() {
      var _this;

      babelHelpers.classCallCheck(this, HaxAppBrowser);
      _this = _super.call(this);

      _this.addEventListener("hax-tray-button-click", function (e) {
        if (e.detail.eventName === "search-selected") {
          _this.searching = true;
          _haxStore.HAXStore.activeApp = (0, _mobxEsm.toJS)(_this.appList[e.detail.index]);
        }
      });

      _this.searching = false;
      _this.appList = [];
      _this.activeApp = null;
      _this.hasActive = false;
      new Promise(function (res, rej) {
        return _require.default(["./hax-app-search.js"], res, rej);
      });
      (0, _mobxEsm.autorun)(function () {
        _this.appList = (0, _mobxEsm.toJS)(_haxStore.HAXStore.appList);
      });
      (0, _mobxEsm.autorun)(function () {
        _this.activeApp = (0, _mobxEsm.toJS)(_haxStore.HAXStore.activeApp);
      });
      return _this;
    }

    babelHelpers.createClass(HaxAppBrowser, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject2_43373ea0577b11ebb66acdcaf78a5691(), this.appList.map(function (app) {
          return (0, _litElement.html)(_templateObject3_43373ea0577b11ebb66acdcaf78a5691(), app.index, app.details.title, app.details.icon, app.details.color, app.index);
        }), !this.searching);
      }
    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        changedProperties.forEach(function (oldValue, propName) {
          if (propName == "activeApp" && _this2[propName]) {
            _this2._activeAppChanged(_this2[propName], oldValue);
          }

          if (propName == "appList" && _this2[propName] && _this2.shadowRoot) {
            _this2.searching = false;
          }
        });
      }
      /**
       * Active app updated, so scroll it into view
       */

    }, {
      key: "_activeAppChanged",
      value: function _activeAppChanged(newValue, oldValue) {
        if (babelHelpers.typeof(oldValue) !== (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined)) && newValue != null) {
          this.hasActive = true;
        } else {
          this.hasActive = false;
        }
      }
    }, {
      key: "firstUpdated",
      value: function firstUpdated(changedProperties) {
        if (babelHelpers.get(babelHelpers.getPrototypeOf(HaxAppBrowser.prototype), "firstUpdated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(HaxAppBrowser.prototype), "firstUpdated", this).call(this, changedProperties);
        } // app list registers early and has no imports so on
        // fast environments it's alreayd loaded


        this.searching = false;
      }
    }], [{
      key: "tag",
      get: function get() {
        return "hax-app-browser";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * Search term
           */
          search: {
            type: String
          },

          /**
           * Searching mode
           */
          searching: {
            type: Boolean,
            reflect: true
          },

          /**
           * Global activeApp object.
           */
          activeApp: {
            type: Object
          },

          /**
           * If we have an active, scale everything
           */
          hasActive: {
            reflect: true,
            type: Boolean,
            attribute: "has-active"
          },
          appList: {
            type: Array
          }
        };
      }
    }]);
    return HaxAppBrowser;
  }(_litElement.LitElement);

  _exports.HaxAppBrowser = HaxAppBrowser;
  window.customElements.define(HaxAppBrowser.tag, HaxAppBrowser);
});