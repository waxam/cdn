define(["exports", "../../../lit-element/lit-element.js", "../../simple-icon/lib/simple-icon-lite.js", "../../hax-iconset/lib/simple-hax-iconset.js", "./hax-store.js", "../../utils/utils.js"], function (_exports, _litElement, _simpleIconLite, _simpleHaxIconset, _haxStore, _utils) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HaxMap = void 0;

  function _templateObject3_ae13e2e056aa11ebb283b55be3a9ad80() {
    var data = babelHelpers.taggedTemplateLiteral(["\n              <li>\n                <a @click=\"", "\" data-index=\"", "\"\n                  ><simple-icon-lite\n                    data-index=\"", "\"\n                    icon=\"", "\"\n                  ></simple-icon-lite\n                  >", "</a\n                >\n              </li>\n            "]);

    _templateObject3_ae13e2e056aa11ebb283b55be3a9ad80 = function _templateObject3_ae13e2e056aa11ebb283b55be3a9ad80() {
      return data;
    };

    return data;
  }

  function _templateObject2_ae13e2e056aa11ebb283b55be3a9ad80() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <h3 class=\"title\">\n        <simple-icon-lite icon=\"hax:map\"></simple-icon-lite>\n        ", "\n      </h3>\n      <div class=\"container\">\n        <table>\n          <caption>\n            Content statistics\n          </caption>\n          <tr>\n            <th>Words</th>\n            <th>Headings</th>\n            <th>Paragraphs</th>\n            <th>Widgets</th>\n            <th>Characters</th>\n          </tr>\n          <tr>\n            <td>", "</td>\n            <td>", "</td>\n            <td>", "</td>\n            <td>", "</td>\n            <td>", "</td>\n          </tr>\n        </table>\n        <h4>List view</h4>\n        <ul>\n          ", "\n        </ul>\n      </div>\n    "]);

    _templateObject2_ae13e2e056aa11ebb283b55be3a9ad80 = function _templateObject2_ae13e2e056aa11ebb283b55be3a9ad80() {
      return data;
    };

    return data;
  }

  function _templateObject_ae13e2e056aa11ebb283b55be3a9ad80() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n        .title {\n          position: relative;\n          padding: 16px;\n          outline: 0;\n          font-weight: 600;\n          text-align: left;\n          margin: 0;\n          background-color: var(--hax-color-menu-heading-bg, #eeeeee);\n          color: var(--hax-color-menu-heading-color, black);\n          font-size: 18px;\n          line-height: 18px;\n          font-family: \"Noto Serif\", serif;\n        }\n        .container {\n          text-align: left;\n        }\n        table {\n          font-size: 13px;\n        }\n        table caption {\n          font-weight: bold;\n        }\n        table tr th {\n          padding: 2px;\n        }\n        table td {\n          font-size: 21px;\n          font-weight: bold;\n          text-align: center;\n        }\n        h4 {\n          font-size: 14px;\n          margin: 2px 0;\n        }\n        ul {\n          list-style: none;\n          padding: 0;\n          margin: 0;\n        }\n        ul li {\n          margin: 4px;\n          padding: 0;\n        }\n        ul simple-icon-lite {\n          padding: 0 8px;\n        }\n        a {\n          font-size: 24px;\n          line-height: 24px;\n          text-decoration: none;\n          color: black;\n          padding: 4px;\n          display: block;\n        }\n        a:focus,\n        a:hover,\n        a:active {\n          cursor: pointer;\n          font-weight: bold;\n          outline: 2px solid black;\n        }\n      "]);

    _templateObject_ae13e2e056aa11ebb283b55be3a9ad80 = function _templateObject_ae13e2e056aa11ebb283b55be3a9ad80() {
      return data;
    };

    return data;
  }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `hax-map`
   * @element hax-map
   * `Export dialog with all export options and settings provided.`
   */
  var HaxMap = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(HaxMap, _LitElement);

    var _super = _createSuper(HaxMap);

    babelHelpers.createClass(HaxMap, null, [{
      key: "styles",

      /**
       * LitElement constructable styles enhancement
       */
      get: function get() {
        return [(0, _litElement.css)(_templateObject_ae13e2e056aa11ebb283b55be3a9ad80())];
      }
    }]);

    function HaxMap() {
      var _this;

      babelHelpers.classCallCheck(this, HaxMap);
      _this = _super.call(this);
      _this.elementList = [];
      _this.title = "Content map";
      return _this;
    }

    babelHelpers.createClass(HaxMap, [{
      key: "updateHAXMap",
      value: function updateHAXMap() {
        var list = _haxStore.HAXStore.htmlToHaxElements(_haxStore.HAXStore.activeHaxBody.haxToContent());

        this.calcStats(list);
        var elements = [];

        for (var i = 0; i < list.length; i++) {
          var def = _haxStore.HAXStore.haxSchemaFromTag(list[i].tag);

          if (def.gizmo) {
            elements.push({
              icon: def.gizmo.icon,
              name: def.gizmo.title
            });
          } else {
            if (list[i].tag && list[i].tag.includes("-")) {
              elements.push({
                icon: "hax:templates",
                name: "Widget"
              });
            } else {
              elements.push({
                icon: "hax:paragraph",
                name: "HTML block"
              });
            }
          }
        }

        this.elementList = [].concat(elements);
      }
      /**
       * Calculate statistics from the array of hax elements
       */

    }, {
      key: "calcStats",
      value: function calcStats(elements) {
        if (elements && _haxStore.HAXStore.activeHaxBody.innerText) {
          var counts = {
            c: _haxStore.HAXStore.activeHaxBody.innerText.length,
            w: parseInt(_haxStore.HAXStore.activeHaxBody.innerText.split(/\s+/g).length - 1),
            h: 0,
            p: 0,
            e: 0
          };
          elements.forEach(function (el) {
            switch (el.tag) {
              case "blockquote":
              case "div":
              case "span":
              case "p":
                counts.p++;
                break;

              case "h1":
              case "h2":
              case "h3":
              case "h4":
              case "h5":
              case "h6":
              case "relative-heading":
                // special support for our own heading tag
                counts.h++;
                break;

              default:
                counts.e++;
                break;
            }
          });

          for (var i in counts) {
            this["".concat(i, "Count")] = counts[i];
          }
        }
      }
    }, {
      key: "render",
      value: function render() {
        var _this2 = this;

        return (0, _litElement.html)(_templateObject2_ae13e2e056aa11ebb283b55be3a9ad80(), this.title, this.wCount, this.hCount, this.pCount, this.eCount, this.cCount, this.elementList.map(function (element, index) {
          return (0, _litElement.html)(_templateObject3_ae13e2e056aa11ebb283b55be3a9ad80(), _this2.scrollInMap, index, index, element.icon, element.name);
        }));
      }
    }, {
      key: "scrollInMap",
      value: function scrollInMap(e) {
        var target = (0, _utils.normalizeEventPath)(e)[0];

        if (target.getAttribute("data-index")) {
          var activeChild = _haxStore.HAXStore.activeHaxBody.children[parseInt(target.getAttribute("data-index"))];

          activeChild.classList.add("blinkfocus");

          if (typeof activeChild.scrollIntoViewIfNeeded === "function") {
            activeChild.scrollIntoViewIfNeeded(true);
          } else {
            activeChild.scrollIntoView({
              behavior: "smooth",
              inline: "center"
            });
          }

          setTimeout(function () {
            activeChild.classList.remove("blinkfocus");
          }, 500);
        }
      }
    }], [{
      key: "tag",
      get: function get() {
        return "hax-map";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * Title when open.
           */
          title: {
            type: String
          },
          opened: {
            type: Boolean
          },
          elementList: {
            type: Array
          },
          cCount: {
            type: String
          },
          wCount: {
            type: String
          },
          hCount: {
            type: String
          },
          pCount: {
            type: String
          },
          eCount: {
            type: String
          }
        };
      }
    }]);
    return HaxMap;
  }(_litElement.LitElement);

  _exports.HaxMap = HaxMap;
  window.customElements.define(HaxMap.tag, HaxMap);
});