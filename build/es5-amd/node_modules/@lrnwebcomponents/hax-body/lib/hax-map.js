define(["exports", "require", "../../../lit-element/lit-element.js", "../../simple-colors/simple-colors.js"], function (_exports, _require, _litElement, _simpleColors) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HaxMap = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  function _templateObject3_682b4470d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n                <li>\n                  <a @click=\"", "\" data-index=\"", "\"\n                    ><iron-icon\n                      data-index=\"", "\"\n                      icon=\"", "\"\n                    ></iron-icon\n                    >", "</a\n                  >\n                </li>\n              "]);

    _templateObject3_682b4470d34d11ea880ba1e93364c49c = function _templateObject3_682b4470d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  function _templateObject2_682b4470d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <paper-dialog\n        id=\"dialog\"\n        ?opened=\"", "\"\n        @opened-changed=\"", "\"\n      >\n        <h3 class=\"title\">\n          <iron-icon icon=\"maps:map\"></iron-icon> ", "\n        </h3>\n        <paper-button id=\"closedialog\" @click=\"", "\">\n          <iron-icon icon=\"icons:cancel\" title=\"Close dialog\"></iron-icon>\n        </paper-button>\n        <div class=\"container\">\n          <ul>\n            ", "\n          </ul>\n        </div>\n      </paper-dialog>\n    "]);

    _templateObject2_682b4470d34d11ea880ba1e93364c49c = function _templateObject2_682b4470d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  function _templateObject_682b4470d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n        iron-icon:not(:defined),\n        paper-button:not(:defined),\n        paper-dialog:not(:defined) {\n          display: none;\n        }\n        #dialog {\n          z-index: 100000;\n          margin-top: 56px;\n        }\n        #closedialog {\n          top: 6px;\n          right: 0;\n          position: absolute;\n          padding: 8px;\n          margin: 0;\n          background-color: var(--hax-color-menu-heading-bg, #eeeeee);\n          color: var(--hax-color-menu-heading-color, black);\n          width: 40px;\n          height: 40px;\n          min-width: unset;\n        }\n        .title {\n          position: relative;\n          padding: 16px;\n          outline: 0;\n          font-weight: 600;\n          text-align: left;\n          margin: 0;\n          background-color: var(--hax-color-menu-heading-bg, #eeeeee);\n          color: var(--hax-color-menu-heading-color, black);\n          font-size: 18px;\n          line-height: 18px;\n          font-family: \"Noto Serif\", serif;\n        }\n        .container {\n          text-align: left;\n          padding: 16px;\n          min-width: 300px;\n          overflow-y: scroll;\n          max-height: 50vh;\n        }\n        #reportghissue {\n          color: #81a3a9;\n          font-size: 18px;\n          padding: 16px;\n          font-style: italic;\n        }\n        ul {\n          list-style: none;\n          padding: 0;\n          margin: 0;\n        }\n        ul iron-icon {\n          padding: 0 4px;\n        }\n        a {\n          font-size: 30px;\n          line-height: 30px;\n          text-decoration: none;\n          color: black;\n          padding: 4px;\n        }\n        a:focus,\n        a:hover,\n        a:active {\n          cursor: pointer;\n          font-weight: bold;\n        }\n      "]);

    _templateObject_682b4470d34d11ea880ba1e93364c49c = function _templateObject_682b4470d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  /**
   * `hax-map`
   * @element hax-map
   * `Export dialog with all export options and settings provided.`
   */
  var HaxMap =
  /*#__PURE__*/
  function (_SimpleColors) {
    babelHelpers.inherits(HaxMap, _SimpleColors);
    babelHelpers.createClass(HaxMap, null, [{
      key: "styles",

      /**
       * LitElement constructable styles enhancement
       */
      get: function get() {
        return [].concat(babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(HaxMap), "styles", this)), [(0, _litElement.css)(_templateObject_682b4470d34d11ea880ba1e93364c49c())]);
      }
    }]);

    function HaxMap() {
      var _this;

      babelHelpers.classCallCheck(this, HaxMap);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(HaxMap).call(this));
      _this.elementList = [];
      _this.title = "Content map";
      setTimeout(function () {
        new Promise(function (res, rej) {
          return _require.default(["../../../@polymer/iron-icon/iron-icon.js"], res, rej);
        });
        new Promise(function (res, rej) {
          return _require.default(["../../../@polymer/paper-button/paper-button.js"], res, rej);
        });
        new Promise(function (res, rej) {
          return _require.default(["../../../@polymer/paper-dialog/paper-dialog.js"], res, rej);
        });
      }, 0);
      return _this;
    }

    babelHelpers.createClass(HaxMap, [{
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        changedProperties.forEach(function (oldValue, propName) {
          // notify when any of these change
          if (propName === "opened") {
            var list = window.HaxStore.htmlToHaxElements(window.HaxStore.instance.activeHaxBody.haxToContent());
            var elements = [];

            for (var i = 0; i < list.length; i++) {
              var def = window.HaxStore.instance.haxSchemaFromTag(list[i].tag);
              elements.push({
                icon: def.gizmo.icon,
                name: def.gizmo.title
              });
            }

            _this2.elementList = [].concat(elements);
          }
        });
      }
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        return (0, _litElement.html)(_templateObject2_682b4470d34d11ea880ba1e93364c49c(), this.opened, this.openedChanged, this.title, this.closeEvent, this.elementList.map(function (element, index) {
          return (0, _litElement.html)(_templateObject3_682b4470d34d11ea880ba1e93364c49c(), _this3.scrollInMap, index, index, element.icon, element.name);
        }));
      }
    }, {
      key: "scrollInMap",
      value: function scrollInMap(e) {
        var target = null;

        if (e.path && e.path[0]) {
          target = e.path[0];
        } else if (e.originalTarget) {
          target = e.originalTarget;
        } else {
          target = e.target;
        }

        if (target.getAttribute("data-index")) {
          var activeChild = window.HaxStore.instance.activeHaxBody.children[parseInt(target.getAttribute("data-index"))];
          activeChild.scrollIntoView({
            behavior: "smooth",
            block: "start",
            inline: "center"
          });
          activeChild.classList.add("blinkfocus");
          setTimeout(function () {
            activeChild.classList.remove("blinkfocus");
          }, 800);
        }
      }
    }, {
      key: "openedChanged",
      value: function openedChanged(e) {
        // force close event to align data model if clicking away
        if (!e.detail.value && window.HaxStore.instance.openDrawer === this) {
          window.HaxStore.write("openDrawer", false, this);
        }
      }
    }, {
      key: "closeEvent",
      value: function closeEvent(e) {
        this.opened = false;
      }
    }, {
      key: "firstUpdated",
      value: function firstUpdated(changedProperties) {
        // fire an event that this is a core piece of the system
        this.dispatchEvent(new CustomEvent("hax-register-core-piece", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: {
            piece: "haxMap",
            object: this
          }
        }));
      }
      /**
       * open the dialog
       */

    }, {
      key: "open",
      value: function open() {
        this.opened = true;
      }
      /**
       * close the dialog
       */

    }, {
      key: "close",
      value: function close() {
        this.opened = false;
      }
    }], [{
      key: "tag",
      get: function get() {
        return "hax-map";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * Title when open.
           */
          title: {
            type: String
          },
          opened: {
            type: Boolean
          },
          elementList: {
            type: Array
          }
        };
      }
    }]);
    return HaxMap;
  }(_simpleColors.SimpleColors);

  _exports.HaxMap = HaxMap;
  window.customElements.define(HaxMap.tag, HaxMap);
});