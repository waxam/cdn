define(["exports", "../../../lit-element/lit-element.js", "../../simple-filter/simple-filter.js", "../../utils/utils.js", "./hax-store.js", "../../../mobx/dist/mobx.esm.js", "../../simple-fields/lib/simple-fields-field.js"], function (_exports, _litElement, _simpleFilter, _utils, _haxStore, _mobxEsm, _simpleFieldsField) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HaxGizmoBrowser = void 0;

  function _templateObject3_1d937ec05a6e11eb8957f34616f75140() {
    var data = babelHelpers.taggedTemplateLiteral(["\n            <hax-tray-button\n              dark-bg\n              voice-command=\"insert ", "\"\n              draggable=\"true\"\n              @dragstart=\"", "\"\n              @dragend=\"", "\"\n              index=\"", "\"\n              label=\"", "\"\n              event-name=\"insert-tag\"\n              event-data=\"", "\"\n              data-demo-schema=\"true\"\n              icon=\"", "\"\n              drag-color=\"", "\"\n            ></hax-tray-button>\n          "]);

    _templateObject3_1d937ec05a6e11eb8957f34616f75140 = function _templateObject3_1d937ec05a6e11eb8957f34616f75140() {
      return data;
    };

    return data;
  }

  function _templateObject2_1d937ec05a6e11eb8957f34616f75140() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <div class=\"toolbar-inner\">\n        <simple-fields-field\n          id=\"inputfilter\"\n          @value-changed=\"", "\"\n          aria-controls=\"filter\"\n          label=\"Filter\"\n          type=\"text\"\n          auto-validate=\"\"\n        ></simple-fields-field>\n      </div>\n      <div class=\"item-wrapper\">\n        ", "\n      </div>\n    "]);

    _templateObject2_1d937ec05a6e11eb8957f34616f75140 = function _templateObject2_1d937ec05a6e11eb8957f34616f75140() {
      return data;
    };

    return data;
  }

  function _templateObject_1d937ec05a6e11eb8957f34616f75140() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n        .toolbar-inner {\n          padding: 0;\n          position: sticky;\n          background-color: white;\n          width: 100%;\n          top: 0;\n          z-index: 1;\n        }\n        .item-wrapper {\n          text-align: center;\n        }\n      "]);

    _templateObject_1d937ec05a6e11eb8957f34616f75140 = function _templateObject_1d937ec05a6e11eb8957f34616f75140() {
      return data;
    };

    return data;
  }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `hax-gizmo-browser`
   * `Browse a list of gizmos. This provides a listing of custom elements for people to search and select based on what have been defined as gizmos for users to select.`
   * @microcopy - the mental model for this element
   * - gizmo - silly name for the general public when talking about custom elements and what it provides in the end.
   */
  var HaxGizmoBrowser = /*#__PURE__*/function (_SimpleFilterMixin) {
    babelHelpers.inherits(HaxGizmoBrowser, _SimpleFilterMixin);

    var _super = _createSuper(HaxGizmoBrowser);

    babelHelpers.createClass(HaxGizmoBrowser, null, [{
      key: "styles",
      get: function get() {
        return [(0, _litElement.css)(_templateObject_1d937ec05a6e11eb8957f34616f75140())];
      }
    }]);

    function HaxGizmoBrowser() {
      var _this;

      babelHelpers.classCallCheck(this, HaxGizmoBrowser);
      _this = _super.call(this);
      _this.where = "title";
      return _this;
    }

    babelHelpers.createClass(HaxGizmoBrowser, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return (0, _litElement.html)(_templateObject2_1d937ec05a6e11eb8957f34616f75140(), this.inputfilterChanged, this.filtered.map(function (gizmo, i) {
          return (0, _litElement.html)(_templateObject3_1d937ec05a6e11eb8957f34616f75140(), gizmo.title, _this2._dragStart, _this2._dragEnd, i, gizmo.title, gizmo.tag, gizmo.icon, gizmo.color);
        }));
      }
    }, {
      key: "_dragStart",

      /**
       * Drag start so we know what target to set
       */
      value: function _dragStart(e) {
        // create the tag
        var schema = _haxStore.HAXStore.haxSchemaFromTag(e.target.eventData);

        var target;

        if (schema.gizmo.tag && schema.demoSchema && schema.demoSchema[0]) {
          target = (0, _utils.haxElementToNode)(schema.demoSchema[0]);
        } else {
          target = document.createElement(e.target.eventData);
        }

        _haxStore.HAXStore.__dragTarget = target;

        if (e.dataTransfer) {
          this.crt = target.cloneNode(true);

          if (schema.gizmo.tag && schema.demoSchema && schema.demoSchema[0]) {
            this.crt.style.width = "200px";
            this.crt.style.height = "200px";
          } else {
            this.crt.style.position = "absolute";
            this.crt.style.top = "-1000px";
            this.crt.style.right = "-1000px";
            this.crt.style.transform = "scale(0.25)";
          }

          this.crt.style.opacity = ".8";
          this.crt.style.backgroundColor = e.target.getAttribute("drag-color");
          e.dataTransfer.effectAllowed = "move";
          e.dataTransfer.dropEffect = "move"; //document.body.appendChild(this.crt);

          e.dataTransfer.setDragImage(this.crt, 0, 0);
        }

        e.stopPropagation();
        e.stopImmediatePropagation();
      }
      /**
       * When we end dragging ensure we remove the mover class.
       */

    }, {
      key: "_dragEnd",
      value: function _dragEnd(e) {
        this.crt.remove();
      }
    }, {
      key: "inputfilterChanged",
      value: function inputfilterChanged(e) {
        this.like = e.target.value;
      }
    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this3 = this;

        changedProperties.forEach(function (oldValue, propName) {
          if (propName == "activeApp") {
            _this3._activeAppChanged(_this3[propName], oldValue);
          }

          if (propName == "filtered") {
            _this3.requestUpdate();
          }
        });
      }
    }, {
      key: "firstUpdated",
      value: function firstUpdated(changedProperties) {
        var _this4 = this;

        if (babelHelpers.get(babelHelpers.getPrototypeOf(HaxGizmoBrowser.prototype), "firstUpdated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(HaxGizmoBrowser.prototype), "firstUpdated", this).call(this, changedProperties);
        }

        (0, _mobxEsm.autorun)(function () {
          _this4.resetList((0, _mobxEsm.toJS)(_haxStore.HAXStore.gizmoList));
        });
      }
      /**
       * Reset this browser.
       */

    }, {
      key: "resetList",
      value: function resetList(list) {
        babelHelpers.get(babelHelpers.getPrototypeOf(HaxGizmoBrowser.prototype), "resetList", this).call(this, list);

        if (list) {
          this.items = babelHelpers.toConsumableArray(list.filter(function (gizmo, i) {
            // remove inline and hidden references
            if (gizmo && gizmo.meta && (gizmo.meta.inlineOnly || gizmo.meta.hidden)) {
              return false;
            }

            return true;
          }));
        }
      }
    }], [{
      key: "tag",
      get: function get() {
        return "hax-gizmo-browser";
      }
    }]);
    return HaxGizmoBrowser;
  }((0, _simpleFilter.SimpleFilterMixin)(_litElement.LitElement));

  _exports.HaxGizmoBrowser = HaxGizmoBrowser;
  window.customElements.define(HaxGizmoBrowser.tag, HaxGizmoBrowser);
});