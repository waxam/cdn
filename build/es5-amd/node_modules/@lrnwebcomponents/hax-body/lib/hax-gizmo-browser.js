define(["exports", "require", "../../../lit-element/lit-element.js", "../../grafitto-filter/grafitto-filter.js", "../../utils/utils.js"], function (_exports, _require, _litElement, _grafittoFilter, _utils) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HaxGizmoBrowser = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  function _templateObject3_4b4fa5e0494a11eab3124f20b4f7a7f7() {
    var data = babelHelpers.taggedTemplateLiteral(["\n          <hax-gizmo-browser-item\n            .index=\"", "\"\n            .title=\"", "\"\n            tag-to-insert=\"", "\"\n            .icon=\"", "\"\n            color=\"", "\"\n            .author=\"", "\"\n            .teaser=\"", "\"\n            .description=\"", "\"\n            .examples=\"", "\"\n            .status=\"", "\"\n          ></hax-gizmo-browser-item>\n        "]);

    _templateObject3_4b4fa5e0494a11eab3124f20b4f7a7f7 = function _templateObject3_4b4fa5e0494a11eab3124f20b4f7a7f7() {
      return data;
    };

    return data;
  }

  function _templateObject2_4b4fa5e0494a11eab3124f20b4f7a7f7() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <h3 class=\"title\">\n        <iron-icon icon=\"hax:add-brick\"></iron-icon> ", "\n      </h3>\n      <div class=\"toolbar-inner\">\n        <dropdown-select\n          id=\"filtertype\"\n          label=\"Filter by\"\n          value=\"title\"\n          @change=\"", "\"\n        >\n          <paper-item value=\"title\">Title</paper-item>\n        </dropdown-select>\n        <paper-input\n          label=\"Filter\"\n          id=\"inputfilter\"\n          aria-controls=\"filter\"\n          @value-changed=\"", "\"\n          value=\"\"\n          always-float-label=\"\"\n        ></paper-input>\n      </div>\n      <grafitto-filter\n        id=\"filter\"\n        .items=\"", "\"\n        like=\"\"\n        where=\"title\"\n        like=\"\"\n        @filtered-changed=\"", "\"\n        ><template></template\n      ></grafitto-filter>\n      ", "\n    "]);

    _templateObject2_4b4fa5e0494a11eab3124f20b4f7a7f7 = function _templateObject2_4b4fa5e0494a11eab3124f20b4f7a7f7() {
      return data;
    };

    return data;
  }

  function _templateObject_4b4fa5e0494a11eab3124f20b4f7a7f7() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n        hax-gizmo-browser-item {\n          margin: 5px;\n          transition: 0.2s all linear;\n          display: inline-flex;\n        }\n        #ironlist {\n          min-height: 50vh;\n          margin: 0;\n          padding: 16px;\n        }\n        .title {\n          position: relative;\n          padding: 16px;\n          outline: 0;\n          font-weight: 600;\n          text-align: left;\n          margin: 0;\n          font-size: 18px;\n          line-height: 18px;\n          font-family: \"Noto Serif\", serif;\n          background-color: var(--hax-color-menu-heading-bg, #eeeeee);\n          color: var(--hax-color-menu-heading-color, black);\n        }\n        .toolbar-inner {\n          display: inline-flex;\n          padding: 10px;\n        }\n      "]);

    _templateObject_4b4fa5e0494a11eab3124f20b4f7a7f7 = function _templateObject_4b4fa5e0494a11eab3124f20b4f7a7f7() {
      return data;
    };

    return data;
  }

  /**
   * `hax-gizmo-browser`
   * @customElement hax-gizmo-browser
   * `Browse a list of gizmos. This provides a listing of custom elements for people to search and select based on what have been defined as gizmos for users to select.`
   * @microcopy - the mental model for this element
   * - gizmo - silly name for the general public when talking about custom elements and what it provides in the end.
   */
  var HaxGizmoBrowser =
  /*#__PURE__*/
  function (_winEventsElement) {
    babelHelpers.inherits(HaxGizmoBrowser, _winEventsElement);
    babelHelpers.createClass(HaxGizmoBrowser, null, [{
      key: "styles",
      get: function get() {
        return [(0, _litElement.css)(_templateObject_4b4fa5e0494a11eab3124f20b4f7a7f7())];
      }
    }]);

    function HaxGizmoBrowser() {
      var _this;

      babelHelpers.classCallCheck(this, HaxGizmoBrowser);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(HaxGizmoBrowser).call(this));
      _this.__winEvents = {
        "hax-store-property-updated": "_haxStorePropertyUpdated"
      };
      _this.title = "Create page element";
      _this.__gizmoList = [];
      _this.filtered = [];
      new Promise(function (res, rej) {
        return _require.default(["../../../@polymer/paper-input/paper-input.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../../dropdown-select/dropdown-select.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["./hax-gizmo-browser-item.js"], res, rej);
      });
      return _this;
    }

    babelHelpers.createClass(HaxGizmoBrowser, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject2_4b4fa5e0494a11eab3124f20b4f7a7f7(), this.title, this.filtertypeChange, this.inputfilterChanged, this.__gizmoList, this.filteredChanged, this.filtered.map(function (gizmo) {
          return (0, _litElement.html)(_templateObject3_4b4fa5e0494a11eab3124f20b4f7a7f7(), gizmo.index, gizmo.title, gizmo.tag, gizmo.icon, gizmo.color, gizmo.author, gizmo.teaser, gizmo.description, gizmo.examples, gizmo.status);
        }));
      }
    }, {
      key: "filteredChanged",
      value: function filteredChanged(e) {
        this.filtered = babelHelpers.toConsumableArray(e.detail.value);
      }
    }, {
      key: "inputfilterChanged",
      value: function inputfilterChanged(e) {
        this.shadowRoot.querySelector("#filter").like = e.target.value;
      }
    }, {
      key: "filtertypeChange",
      value: function filtertypeChange(e) {
        this.shadowRoot.querySelector("#inputfilter").value = "";
        this.shadowRoot.querySelector("#filter").where = e.detail.value;
        this.shadowRoot.querySelector("#filter").like = "";
      }
    }, {
      key: "firstUpdated",
      value: function firstUpdated(changedProperties) {
        this.resetBrowser();
      }
    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        changedProperties.forEach(function (oldValue, propName) {
          if (propName == "activeApp") {
            _this2._activeAppChanged(_this2[propName], oldValue);
          }
        });
      }
      /**
       * Store updated, sync.
       */

    }, {
      key: "_haxStorePropertyUpdated",
      value: function _haxStorePropertyUpdated(e) {
        if (e.detail && babelHelpers.typeof(e.detail.value) !== (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined)) && e.detail.property) {
          this[e.detail.property] = e.detail.value;
        }
      }
      /**
       * Reset this browser.
       */

    }, {
      key: "resetBrowser",
      value: function resetBrowser() {
        this.__gizmoList = window.HaxStore.instance.gizmoList;
        this.filtered = this.__gizmoList;
        this.shadowRoot.querySelector("#inputfilter").value = "";
        this.shadowRoot.querySelector("#filtertype").value = "title";
        this.shadowRoot.querySelector("#filter").value = "";
        this.shadowRoot.querySelector("#filter").filter();
        this.shadowRoot.querySelector("#filter").where = "title";
        this.shadowRoot.querySelector("#filter").like = "";
      }
    }], [{
      key: "tag",
      get: function get() {
        return "hax-gizmo-browser";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * Title of the browser, for translation.
           */
          title: {
            type: String
          },
          filtered: {
            type: Array
          },
          __gizmoList: {
            type: Array
          }
        };
      }
    }]);
    return HaxGizmoBrowser;
  }((0, _utils.winEventsElement)(_litElement.LitElement));

  _exports.HaxGizmoBrowser = HaxGizmoBrowser;
  window.customElements.define(HaxGizmoBrowser.tag, HaxGizmoBrowser);
});