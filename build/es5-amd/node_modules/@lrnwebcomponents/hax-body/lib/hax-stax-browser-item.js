define(["exports", "require", "../../../lit-element/lit-element.js", "../../../@polymer/paper-button/paper-button.js"], function (_exports, _require, _litElement, _paperButton) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HaxStaxBrowserItem = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  function _templateObject3_e3b4a4c02da211eaa247b36e11306899() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: flex;\n        }\n        paper-card {\n          margin: 4px 0;\n          border-radius: 10px;\n          display: flex;\n          width: 100%;\n        }\n        paper-button {\n          color: black;\n          background-color: #ffffff;\n          border: 2px solid var(--hax-color-border-outline);\n          text-transform: none;\n          margin: 0;\n          height: 80px !important;\n          width: 100%;\n          display: flex;\n          border-radius: 0;\n          min-width: unset;\n          box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n            0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n          transition: box-shadow 0.3s;\n        }\n        paper-button:hover,\n        paper-button:focus {\n          box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 0.14),\n            0 2px 10px 0 rgba(0, 0, 0, 0.12), 0 6px 2px -4px rgba(0, 0, 0, 0.2);\n        }\n        paper-button:active {\n          box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n            0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n        }\n        paper-button .item-title {\n          font-size: 14px;\n          display: inline-flex;\n        }\n        paper-button .item-title {\n          font-size: 14px;\n          display: inline-flex;\n        }\n        paper-button .button-inner {\n          text-align: center;\n        }\n        .flip-icon {\n          transform: rotateY(180deg);\n        }\n        @media screen and (max-width: 550px) {\n          paper-button .item-title {\n            font-size: 10px;\n          }\n        }\n      "]);

    _templateObject3_e3b4a4c02da211eaa247b36e11306899 = function _templateObject3_e3b4a4c02da211eaa247b36e11306899() {
      return data;
    };

    return data;
  }

  function _templateObject2_e3b4a4c02da211eaa247b36e11306899() {
    var data = babelHelpers.taggedTemplateLiteral(["\n                <iron-image\n                  src=\"", "\"\n                  preload=\"\"\n                  sizing=\"cover\"\n                ></iron-image>\n              "]);

    _templateObject2_e3b4a4c02da211eaa247b36e11306899 = function _templateObject2_e3b4a4c02da211eaa247b36e11306899() {
      return data;
    };

    return data;
  }

  function _templateObject_e3b4a4c02da211eaa247b36e11306899() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <paper-button\n        id=\"button\"\n        @click=\"", "\"\n        .data-voicecommand=\"select ", "\"\n      >\n        <div class=\"button-inner\">\n          ", "\n          <div class=\"item-title\">", "</div>\n        </div>\n      </paper-button>\n    "]);

    _templateObject_e3b4a4c02da211eaa247b36e11306899 = function _templateObject_e3b4a4c02da211eaa247b36e11306899() {
      return data;
    };

    return data;
  }

  /**
   * `hax-stax-browser-item`
   * @customElement hax-stax-browser-item
   * `A button on the hax-gizmo-browser app display`
   */
  var HaxStaxBrowserItem =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(HaxStaxBrowserItem, _LitElement);

    function HaxStaxBrowserItem() {
      babelHelpers.classCallCheck(this, HaxStaxBrowserItem);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(HaxStaxBrowserItem).apply(this, arguments));
    }

    babelHelpers.createClass(HaxStaxBrowserItem, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_e3b4a4c02da211eaa247b36e11306899(), this._fireEvent, this.title, this.image ? (0, _litElement.html)(_templateObject2_e3b4a4c02da211eaa247b36e11306899(), this.image) : "", this.title);
      }
    }, {
      key: "updated",
      value: function updated(changedProperties) {
        changedProperties.forEach(function (oldValue, propName) {
          if (propName == "image") {
            new Promise(function (res, rej) {
              return _require.default(["../../../@polymer/iron-image/iron-image.js"], res, rej);
            });
          }
        });
      }
      /**
       * Fire an event that includes the eventName of what was just pressed.
       */

    }, {
      key: "_fireEvent",
      value: function _fireEvent(e) {
        this.dispatchEvent(new CustomEvent("hax-insert-content-array", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: this.stax
        }));
        window.HaxStore.write("openDrawer", false, this);
      }
    }], [{
      key: "styles",
      get: function get() {
        return [(0, _litElement.css)(_templateObject3_e3b4a4c02da211eaa247b36e11306899())];
      }
    }, {
      key: "tag",
      get: function get() {
        return "hax-stax-browser-item";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * Title
           */
          title: {
            type: String
          },

          /**
           * Index position in the original list of imports
           */
          staxReference: {
            type: Object
          },

          /**
           * Image for the button, optional.
           */
          image: {
            type: String
          },

          /**
           * Author related to this gizmo
           */
          author: {
            type: String
          },

          /**
           * Description for this.
           */
          description: {
            type: String
          },

          /**
           * Examples, a list of image links, optional.
           */
          examples: {
            type: Array
          },

          /**
           * Status, whether disabled, enabled, or other future states.
           */
          status: {
            type: Array
          },

          /**
           * Tag
           */
          tag: {
            type: String
          }
        };
      }
    }]);
    return HaxStaxBrowserItem;
  }(_litElement.LitElement);

  _exports.HaxStaxBrowserItem = HaxStaxBrowserItem;
  window.customElements.define(HaxStaxBrowserItem.tag, HaxStaxBrowserItem);
});