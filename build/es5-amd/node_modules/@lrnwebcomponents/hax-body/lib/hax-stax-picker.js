define(["exports", "require", "../../../lit-element/lit-element.js"], function (_exports, _require, _litElement) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HaxStaxPicker = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  function _templateObject2_ed5391b0b46e11e9978b67ee5ebb8bc8() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n        iron-icon:not(:defined),\n        paper-button:not(:defined),\n        app-drawer:not(:defined) {\n          display: none;\n        }\n        #dialog {\n          --app-drawer-width: 320px;\n          z-index: 1000;\n          margin-top: 56px;\n        }\n        #closedialog {\n          float: right;\n          top: 124px;\n          right: 0;\n          position: absolute;\n          padding: 8px;\n          margin: 0;\n          color: var(--hax-color-text);\n          background-color: transparent;\n          width: 40px;\n          height: 40px;\n          min-width: unset;\n        }\n        .title {\n          position: relative;\n          padding: 16px;\n          outline: 0;\n          font-weight: 600;\n          text-align: left;\n          margin: 0;\n          background-color: var(--hax-color-menu-heading-bg);\n          font-size: 18px;\n          line-height: 18px;\n          font-family: \"Noto Serif\", serif;\n          color: var(--hax-color-text);\n        }\n        app-drawer {\n          --app-drawer-width: 320px;\n        }\n        .pref-container {\n          text-align: left;\n          padding: 16px;\n        }\n      "]);

    _templateObject2_ed5391b0b46e11e9978b67ee5ebb8bc8 = function _templateObject2_ed5391b0b46e11e9978b67ee5ebb8bc8() {
      return data;
    };

    return data;
  }

  function _templateObject_ed5391b0b46e11e9978b67ee5ebb8bc8() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <app-drawer id=\"dialog\" align=\"left\" transition-duration=\"300\">\n        <h3 class=\"title\">", "</h3>\n        <div style=\"height: 100%; overflow: auto;\" class=\"pref-container\">\n          <hax-stax-browser id=\"staxbrowser\"></hax-stax-browser>\n        </div>\n        <paper-button id=\"closedialog\" @click=\"", "\">\n          <iron-icon icon=\"icons:cancel\" title=\"Close dialog\"></iron-icon>\n        </paper-button>\n      </app-drawer>\n    "]);

    _templateObject_ed5391b0b46e11e9978b67ee5ebb8bc8 = function _templateObject_ed5391b0b46e11e9978b67ee5ebb8bc8() {
      return data;
    };

    return data;
  }

  /**
   *  `hax-stax-picker`
   * A picker for selecting an item from a list of apps / hax stax which require
   * a decision to be made. This is used when multiple things match either on upload
   * in the add operation of the app or in the stax selection to render through,
   * such as having multiple ways of presenting an image.
   * @microcopy - the mental model for this element
   * - data - this is the app data model for an element which expresses itself to hax
   */
  var HaxStaxPicker =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(HaxStaxPicker, _LitElement);

    function HaxStaxPicker() {
      var _this;

      babelHelpers.classCallCheck(this, HaxStaxPicker);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(HaxStaxPicker).call(this));
      _this.title = "Templates";
      new Promise(function (res, rej) {
        return _require.default(["./hax-stax-browser.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../../../@polymer/iron-icons/iron-icons.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../../../@polymer/iron-icon/iron-icon.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../../../@polymer/paper-button/paper-button.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../../../@polymer/app-layout/app-drawer/app-drawer.js"], res, rej);
      });

      _this.dispatchEvent(new CustomEvent("hax-register-stax-picker", {
        bubbles: true,
        cancelable: true,
        composed: true,
        detail: babelHelpers.assertThisInitialized(_this)
      }));

      return _this;
    }

    babelHelpers.createClass(HaxStaxPicker, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_ed5391b0b46e11e9978b67ee5ebb8bc8(), this.title, this.close);
      }
    }, {
      key: "open",

      /**
       * open the dialog
       */
      value: function open() {
        this.shadowRoot.querySelector("#dialog").open();
      }
      /**
       * close the dialog
       */

    }, {
      key: "close",
      value: function close() {
        this.shadowRoot.querySelector("#dialog").close();
      }
      /**
       * Toggle state.
       */

    }, {
      key: "toggleDialog",
      value: function toggleDialog() {
        if (this.shadowRoot.querySelector("#dialog").opened) {
          this.close();
        } else {
          window.HaxStore.instance.closeAllDrawers(this);
        }
      }
    }], [{
      key: "styles",
      get: function get() {
        return [(0, _litElement.css)(_templateObject2_ed5391b0b46e11e9978b67ee5ebb8bc8())];
      }
    }, {
      key: "tag",
      get: function get() {
        return "hax-stax-picker";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * Header so it's variable
           */
          title: {
            type: String
          }
        };
      }
    }]);
    return HaxStaxPicker;
  }(_litElement.LitElement);

  _exports.HaxStaxPicker = HaxStaxPicker;
  window.customElements.define(HaxStaxPicker.tag, HaxStaxPicker);
});