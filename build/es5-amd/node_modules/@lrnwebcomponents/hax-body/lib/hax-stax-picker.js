define(["exports","require","../../../@polymer/polymer/polymer-element.js","../../simple-colors/simple-colors.js","./hax-shared-styles.js"],function(_exports,_require,_polymerElement,_simpleColors,_haxSharedStyles){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.HaxStaxPicker=void 0;_require=babelHelpers.interopRequireWildcard(_require);function _templateObject_a131c210898111e9ba38e33cad2d1624(){var data=babelHelpers.taggedTemplateLiteral(["\n      <style include=\"hax-shared-styles\">\n        :host {\n          display: block;\n        }\n        iron-icon:not(:defined),\n        paper-button:not(:defined),\n        app-drawer:not(:defined) {\n          display: none;\n        }\n        #dialog {\n          --app-drawer-width: 320px;\n          z-index: 1000;\n          margin-top: 56px;\n          @apply --hax-stax-picker-dialog;\n        }\n        #closedialog {\n          float: right;\n          top: 124px;\n          right: 0;\n          position: absolute;\n          padding: 8px;\n          margin: 0;\n          color: var(--hax-color-text);\n          background-color: transparent;\n          width: 40px;\n          height: 40px;\n          min-width: unset;\n        }\n        .title {\n          position: relative;\n          padding: 16px;\n          outline: 0;\n          font-weight: 600;\n          text-align: left;\n          margin: 0;\n          background-color: var(--hax-color-menu-heading-bg);\n          font-size: 18px;\n          line-height: 18px;\n          font-family: \"Noto Serif\", serif;\n          color: var(--hax-color-text);\n        }\n        app-drawer {\n          --app-drawer-content-container: {\n            background-color: #ffffff;\n          }\n          --app-drawer-width: 320px;\n        }\n        .pref-container {\n          text-align: left;\n          padding: 16px;\n        }\n      </style>\n      <app-drawer id=\"dialog\" align=\"left\" transition-duration=\"300\">\n        <h3 class=\"title\">[[title]]</h3>\n        <div style=\"height: 100%; overflow: auto;\" class=\"pref-container\">\n          <hax-stax-browser id=\"staxbrowser\"></hax-stax-browser>\n        </div>\n        <paper-button id=\"closedialog\" on-click=\"close\">\n          <iron-icon icon=\"icons:cancel\" title=\"Close dialog\"></iron-icon>\n        </paper-button>\n      </app-drawer>\n    "]);_templateObject_a131c210898111e9ba38e33cad2d1624=function _templateObject_a131c210898111e9ba38e33cad2d1624(){return data};return data}/**
 *  `hax-stax-picker`
 * A picker for selecting an item from a list of apps / hax stax which require
 * a decision to be made. This is used when multiple things match either on upload
 * in the add operation of the app or in the stax selection to render through,
 * such as having multiple ways of presenting an image.
 * @microcopy - the mental model for this element
 * - data - this is the app data model for an element which expresses itself to hax
 */var HaxStaxPicker=/*#__PURE__*/function(_PolymerElement){babelHelpers.inherits(HaxStaxPicker,_PolymerElement);function HaxStaxPicker(){var _this;babelHelpers.classCallCheck(this,HaxStaxPicker);_this=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(HaxStaxPicker).call(this));new Promise(function(res,rej){return _require.default(["./hax-stax-browser.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../../@polymer/iron-icons/iron-icons.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../../@polymer/iron-icon/iron-icon.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../../@polymer/paper-button/paper-button.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../../@polymer/app-layout/app-drawer/app-drawer.js"],res,rej)});return _this}babelHelpers.createClass(HaxStaxPicker,[{key:"connectedCallback",/**
   * Attached life cycle
   */value:function connectedCallback(){babelHelpers.get(babelHelpers.getPrototypeOf(HaxStaxPicker.prototype),"connectedCallback",this).call(this);this.dispatchEvent(new CustomEvent("hax-register-stax-picker",{bubbles:!0,cancelable:!0,composed:!0,detail:this}))}/**
   * open the dialog
   */},{key:"open",value:function open(){this.shadowRoot.querySelector("#staxbrowser").resetBrowser();this.shadowRoot.querySelector("#dialog").open()}/**
   * close the dialog
   */},{key:"close",value:function close(){this.shadowRoot.querySelector("#dialog").close()}/**
   * Toggle state.
   */},{key:"toggleDialog",value:function toggleDialog(){if(this.shadowRoot.querySelector("#dialog").opened){this.close()}else{window.HaxStore.instance.closeAllDrawers(this)}}}],[{key:"template",get:function get(){return(0,_polymerElement.html)(_templateObject_a131c210898111e9ba38e33cad2d1624())}},{key:"tag",get:function get(){return"hax-stax-picker"}},{key:"properties",get:function get(){return{/**
       * Header so it's variable
       */title:{type:String,value:"Templates"}}}}]);return HaxStaxPicker}(_polymerElement.PolymerElement);_exports.HaxStaxPicker=HaxStaxPicker;window.customElements.define(HaxStaxPicker.tag,HaxStaxPicker)});