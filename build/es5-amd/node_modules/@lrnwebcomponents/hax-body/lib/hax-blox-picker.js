define(["exports", "require", "../../../lit-element/lit-element.js"], function (_exports, _require, _litElement) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HaxBloxPicker = _exports.HaxPicker = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  function _templateObject2_710c1470425211ea8ef51d3abfe05f78() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n        iron-icon:not(:defined),\n        paper-button:not(:defined),\n        app-drawer:not(:defined) {\n          display: none;\n        }\n        #dialog {\n          --app-drawer-width: 320px;\n          z-index: 10000;\n          margin-top: 56px;\n        }\n        #closedialog {\n          float: right;\n          top: 124px;\n          right: 0;\n          position: absolute;\n          padding: 8px;\n          margin: 0;\n          background-color: var(--hax-color-menu-heading-bg, #eeeeee);\n          color: var(--hax-color-menu-heading-color, black);\n          background-color: transparent;\n          width: 40px;\n          height: 40px;\n          min-width: unset;\n        }\n        .title {\n          position: relative;\n          padding: 16px;\n          outline: 0;\n          font-weight: 600;\n          text-align: left;\n          margin: 0;\n          background-color: var(--hax-color-menu-heading-bg, #eeeeee);\n          color: var(--hax-color-menu-heading-color, black);\n          font-size: 18px;\n          line-height: 18px;\n          font-family: \"Noto Serif\", serif;\n        }\n        app-drawer {\n          --app-drawer-width: 320px;\n        }\n        .pref-container {\n          text-align: left;\n          padding: 16px;\n        }\n      "]);

    _templateObject2_710c1470425211ea8ef51d3abfe05f78 = function _templateObject2_710c1470425211ea8ef51d3abfe05f78() {
      return data;
    };

    return data;
  }

  function _templateObject_710c1470425211ea8ef51d3abfe05f78() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <app-drawer\n        id=\"dialog\"\n        @opened-changed=\"", "\"\n        ?opened=\"", "\"\n        align=\"left\"\n        transition-duration=\"300\"\n      >\n        <h3 class=\"title\">\n          <iron-icon icon=\"", "\"></iron-icon> ", "\n        </h3>\n        <div style=\"height: 100%; overflow: auto;\" class=\"pref-container\">\n          <slot></slot>\n        </div>\n        <paper-button id=\"closedialog\" @click=\"", "\">\n          <iron-icon icon=\"icons:cancel\" title=\"Close dialog\"></iron-icon>\n        </paper-button>\n      </app-drawer>\n    "]);

    _templateObject_710c1470425211ea8ef51d3abfe05f78 = function _templateObject_710c1470425211ea8ef51d3abfe05f78() {
      return data;
    };

    return data;
  }

  /**
   `hax-blox-picker`
   A picker for selecting an item from a list of apps / hax blox which require
   a decision to be made. This is used when multiple things match either on upload
   in the add operation of the app or in the blox selection to render through,
   such as having multiple ways of presenting an image.
  
  * @demo demo/index.html
  
  @microcopy - the mental model for this element
   - data - this is the app data model for an element which expresses itself to hax
  */
  var HaxPicker =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(HaxPicker, _LitElement);

    function HaxPicker() {
      var _this;

      babelHelpers.classCallCheck(this, HaxPicker);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(HaxPicker).call(this));
      _this.opened = false;
      new Promise(function (res, rej) {
        return _require.default(["../../../@polymer/iron-icons/iron-icons.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../../../@polymer/iron-icon/iron-icon.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../../../@polymer/paper-button/paper-button.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../../../@polymer/app-layout/app-drawer/app-drawer.js"], res, rej);
      });
      return _this;
    }
    /**
     * Dependencies
     */


    babelHelpers.createClass(HaxPicker, [{
      key: "setupPicker",
      value: function setupPicker(pickerProperty, pickerTag) {
        // fire an event that this is a core piece of the system
        this.dispatchEvent(new CustomEvent("hax-register-core-piece", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: {
            piece: pickerProperty,
            object: this
          }
        }));
        this.picker = document.createElement(pickerTag);
        this.appendChild(this.picker);
      }
    }, {
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_710c1470425211ea8ef51d3abfe05f78(), this.openedChanged, this.opened, this.icon, this.title, this.closeEvent);
      }
    }, {
      key: "openedChanged",
      value: function openedChanged(e) {
        // force close event to align data model if clicking away
        if (!e.detail.value && window.HaxStore.instance.openDrawer === this) {
          window.HaxStore.write("openDrawer", false, this);
        }

        if (e.detail.value && window.HaxStore.instance[this.refreshOnOpen]) {
          this.picker[this.refreshOnOpen] = babelHelpers.toConsumableArray(window.HaxStore.instance[this.refreshOnOpen]);
        }
      }
    }, {
      key: "closeEvent",
      value: function closeEvent(e) {
        this.opened = false;
      }
    }, {
      key: "open",

      /**
       * open the dialog
       */
      value: function open() {
        this.opened = true;
      }
      /**
       * close the dialog
       */

    }, {
      key: "close",
      value: function close() {
        this.opened = false;
      }
    }], [{
      key: "styles",
      get: function get() {
        return [(0, _litElement.css)(_templateObject2_710c1470425211ea8ef51d3abfe05f78())];
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * Header so it's variable
           */
          title: {
            type: String
          },
          icon: {
            type: String
          },
          opened: {
            type: Boolean
          }
        };
      }
    }]);
    return HaxPicker;
  }(_litElement.LitElement);

  _exports.HaxPicker = HaxPicker;

  var HaxBloxPicker =
  /*#__PURE__*/
  function (_HaxPicker) {
    babelHelpers.inherits(HaxBloxPicker, _HaxPicker);

    function HaxBloxPicker() {
      var _this2;

      babelHelpers.classCallCheck(this, HaxBloxPicker);
      _this2 = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(HaxBloxPicker).call(this));
      new Promise(function (res, rej) {
        return _require.default(["./hax-blox-browser.js"], res, rej);
      });
      _this2.title = "Insert layout";
      _this2.icon = "icons:view-column";
      _this2.refreshOnOpen = "bloxList"; // this sets everything else in motion correctly

      _this2.setupPicker("haxBloxPicker", "hax-blox-browser");

      return _this2;
    }

    babelHelpers.createClass(HaxBloxPicker, null, [{
      key: "tag",
      get: function get() {
        return "hax-blox-picker";
      }
    }]);
    return HaxBloxPicker;
  }(HaxPicker);

  _exports.HaxBloxPicker = HaxBloxPicker;
  window.customElements.define(HaxBloxPicker.tag, HaxBloxPicker);
});