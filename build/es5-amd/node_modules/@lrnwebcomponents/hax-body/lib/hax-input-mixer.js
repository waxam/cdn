define(["../../../@polymer/polymer/polymer-legacy.js","../../../@polymer/polymer/lib/legacy/polymer.dom.js","../../../@polymer/app-layout/app-toolbar/app-toolbar.js","../../../@polymer/paper-input/paper-textarea.js","../../../@polymer/paper-input/paper-input.js","../../../@polymer/paper-checkbox/paper-checkbox.js","../../../@polymer/paper-slider/paper-slider.js","../../../@polymer/paper-tooltip/paper-tooltip.js","../../simple-colors/lib/simple-colors-picker.js","./hax-context-item-menu.js","./hax-context-item.js","./hax-shared-styles.js"],function(_polymerLegacy,_polymerDom){"use strict";function _templateObject_3634af30490411e990ee3fd35bb8725b(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style includes=\"hax-shared-styles\">\n      :host {\n        display: block;\n        margin: 0;\n        border: none;\n        padding: 0;\n        border: 1px solid var(--hax-color-border-outline);\n      }\n      .wrapper {\n        background-color: var(--hax-color-bg-accent);\n        color: var(--hax-color-text);\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n      }\n      hax-context-item {\n        margin: 0;\n      }\n      #elementoptions {\n        height: inherit;\n      }\n      #input {\n        color: var(--hax-color-text);\n      }\n      paper-checkbox {\n        --paper-checkbox-label-color: var(--hax-color-text);\n      }\n      paper-textarea,\n      paper-input {\n        height: 40px;\n        font-size: 14px;\n        margin-bottom: 6px;\n        --paper-input-container: {\n          padding: 0;\n          font-size: 14px;\n        }\n        --paper-input-container-label-floating: {\n          color: var(--hax-color-text);\n          font-size: 12px;\n        }\n        --paper-input-container-underline: {\n          margin: 0;\n        }\n        --paper-input-container-color: var(--hax-color-text);\n        --paper-input-container-focus-color: var(--hax-color-text);\n        --paper-input-container-invalid-color: var(--hax-color-text);\n        --paper-input-container-input-color: var(--hax-color-text);\n        --paper-input-container-shared-input-style: {\n          color: var(--hax-color-text);\n          background: transparent;\n          margin: 0;\n          padding: 0;\n          line-height: 14px;\n          font-size: 14px;\n          outline: none;\n          border: none;\n        }\n      }\n      .input-method {\n        color: var(--hax-color-text);\n        padding: 0 8px;\n        width: 80%;\n      }\n      #updatebutton {\n        outline: 1px solid black;\n      }\n      #updatebutton:hover {\n        border: none;\n      }\n    </style>\n    <div class=\"wrapper\">\n      <template is=\"dom-if\" if=\"[[__inputselect]]\">\n        <span class=\"input-mixer-label\">[[label]]</span>\n        <hax-context-item-menu\n          selected-value=\"{{__selectedValue}}\"\n          icon=\"[[icon]]\"\n          id=\"input\"\n        >\n          <slot></slot>\n        </hax-context-item-menu>\n      </template>\n      <span class=\"input-method\">\n        <template is=\"dom-if\" if=\"[[__inputtextarea]]\">\n          <paper-textarea\n            id=\"input\"\n            label=\"[[label]]\"\n            value=\"{{value}}\"\n            auto-validate=\"\"\n            pattern=\"[[validation]]\"\n            required=\"[[required]]\"\n          ></paper-textarea>\n        </template>\n        <template is=\"dom-if\" if=\"[[__inputtextfield]]\">\n          <paper-input\n            id=\"input\"\n            type=\"[[validationType]]\"\n            label=\"[[label]]\"\n            value=\"{{value}}\"\n            auto-validate=\"\"\n            pattern=\"[[validation]]\"\n            required=\"[[required]]\"\n          ></paper-input>\n        </template>\n        <template is=\"dom-if\" if=\"[[__inputboolean]]\">\n          <paper-checkbox id=\"input\" checked=\"{{value}}\"\n            >[[label]]</paper-checkbox\n          >\n        </template>\n        <template is=\"dom-if\" if=\"[[__inputflipboolean]]\">\n          <paper-checkbox id=\"input\" checked=\"{{value}}\"\n            >[[label]]</paper-checkbox\n          >\n        </template>\n        <template is=\"dom-if\" if=\"[[__inputcolorpicker]]\">\n          <span>[[label]]</span>\n          <simple-colors-picker\n            id=\"input\"\n            value=\"{{value}}\"\n          ></simple-colors-picker>\n        </template>\n      </span>\n      <paper-tooltip for=\"input\" position=\"top\" offset=\"14\">\n        [[description]]\n      </paper-tooltip>\n      <hax-context-item\n        id=\"updatebutton\"\n        icon=\"subdirectory-arrow-right\"\n        label$=\"Update [[label]]\"\n        event-name=\"hax-update-tap\"\n      ></hax-context-item>\n    </div>\n  "],["\n    <style includes=\"hax-shared-styles\">\n      :host {\n        display: block;\n        margin: 0;\n        border: none;\n        padding: 0;\n        border: 1px solid var(--hax-color-border-outline);\n      }\n      .wrapper {\n        background-color: var(--hax-color-bg-accent);\n        color: var(--hax-color-text);\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n      }\n      hax-context-item {\n        margin: 0;\n      }\n      #elementoptions {\n        height: inherit;\n      }\n      #input {\n        color: var(--hax-color-text);\n      }\n      paper-checkbox {\n        --paper-checkbox-label-color: var(--hax-color-text);\n      }\n      paper-textarea,\n      paper-input {\n        height: 40px;\n        font-size: 14px;\n        margin-bottom: 6px;\n        --paper-input-container: {\n          padding: 0;\n          font-size: 14px;\n        }\n        --paper-input-container-label-floating: {\n          color: var(--hax-color-text);\n          font-size: 12px;\n        }\n        --paper-input-container-underline: {\n          margin: 0;\n        }\n        --paper-input-container-color: var(--hax-color-text);\n        --paper-input-container-focus-color: var(--hax-color-text);\n        --paper-input-container-invalid-color: var(--hax-color-text);\n        --paper-input-container-input-color: var(--hax-color-text);\n        --paper-input-container-shared-input-style: {\n          color: var(--hax-color-text);\n          background: transparent;\n          margin: 0;\n          padding: 0;\n          line-height: 14px;\n          font-size: 14px;\n          outline: none;\n          border: none;\n        }\n      }\n      .input-method {\n        color: var(--hax-color-text);\n        padding: 0 8px;\n        width: 80%;\n      }\n      #updatebutton {\n        outline: 1px solid black;\n      }\n      #updatebutton:hover {\n        border: none;\n      }\n    </style>\n    <div class=\"wrapper\">\n      <template is=\"dom-if\" if=\"[[__inputselect]]\">\n        <span class=\"input-mixer-label\">[[label]]</span>\n        <hax-context-item-menu\n          selected-value=\"{{__selectedValue}}\"\n          icon=\"[[icon]]\"\n          id=\"input\"\n        >\n          <slot></slot>\n        </hax-context-item-menu>\n      </template>\n      <span class=\"input-method\">\n        <template is=\"dom-if\" if=\"[[__inputtextarea]]\">\n          <paper-textarea\n            id=\"input\"\n            label=\"[[label]]\"\n            value=\"{{value}}\"\n            auto-validate=\"\"\n            pattern=\"[[validation]]\"\n            required=\"[[required]]\"\n          ></paper-textarea>\n        </template>\n        <template is=\"dom-if\" if=\"[[__inputtextfield]]\">\n          <paper-input\n            id=\"input\"\n            type=\"[[validationType]]\"\n            label=\"[[label]]\"\n            value=\"{{value}}\"\n            auto-validate=\"\"\n            pattern=\"[[validation]]\"\n            required=\"[[required]]\"\n          ></paper-input>\n        </template>\n        <template is=\"dom-if\" if=\"[[__inputboolean]]\">\n          <paper-checkbox id=\"input\" checked=\"{{value}}\"\n            >[[label]]</paper-checkbox\n          >\n        </template>\n        <template is=\"dom-if\" if=\"[[__inputflipboolean]]\">\n          <paper-checkbox id=\"input\" checked=\"{{value}}\"\n            >[[label]]</paper-checkbox\n          >\n        </template>\n        <template is=\"dom-if\" if=\"[[__inputcolorpicker]]\">\n          <span>[[label]]</span>\n          <simple-colors-picker\n            id=\"input\"\n            value=\"{{value}}\"\n          ></simple-colors-picker>\n        </template>\n      </span>\n      <paper-tooltip for=\"input\" position=\"top\" offset=\"14\">\n        [[description]]\n      </paper-tooltip>\n      <hax-context-item\n        id=\"updatebutton\"\n        icon=\"subdirectory-arrow-right\"\n        label\\$=\"Update [[label]]\"\n        event-name=\"hax-update-tap\"\n      ></hax-context-item>\n    </div>\n  "]);_templateObject_3634af30490411e990ee3fd35bb8725b=function(){return data};return data}(0,_polymerLegacy.Polymer)({_template:(0,_polymerLegacy.html)(_templateObject_3634af30490411e990ee3fd35bb8725b()),is:"hax-input-mixer",listeners:{"hax-context-item-selected":"_haxContextOperation"},properties:{value:{type:String,value:null},label:{type:String,reflectToAttribute:!0},validation:{type:String,reflectToAttribute:!0},validationType:{type:String,reflectToAttribute:!0},required:{type:Boolean,reflectToAttribute:!0},options:{type:Object,value:{},reflectToAttribute:!0},icon:{type:String,value:"android",reflectToAttribute:!0},description:{type:String,reflectToAttribute:!0},inputMethod:{type:String,value:null,reflectToAttribute:!0,observer:"_inputMethodChanged"},propertyToBind:{type:String,reflectToAttribute:!0},slotToBind:{type:String,reflectToAttribute:!0}},ready:function ready(){this._resetInputMethods()},_inputMethodChanged:function _inputMethodChanged(newValue,oldValue){var _this=this;if(null!=newValue&&babelHelpers.typeof(oldValue)!=="undefined"){var method=newValue,methods=this.validInputMethods();if(methods.includes(method)){this._resetInputMethods();this["__input"+method]=!0;var slot=(0,_polymerDom.dom)(this);while(null!==slot.firstChild){slot.removeChild(slot.firstChild)}if("select"===method&&babelHelpers.typeof(this.options)!=="undefined"){var item;for(var val in this.options){item=document.createElement("paper-item");item.attributes.value=val;item.innerHTML=this.options[val];slot.appendChild(item.cloneNode(!0))}}setTimeout(function(){if("function"===typeof _this.shadowRoot.querySelector("#input").hideMenu){_this.shadowRoot.querySelector("#input").hideMenu()}_this.shadowRoot.querySelector("#input").focus()},200)}}},validInputMethods:function validInputMethods(){return["flipboolean","boolean","select","confirm","textfield","textarea","datepicker","colorpicker","number"]},_resetInputMethods:function _resetInputMethods(){for(var methods=this.validInputMethods(),i=0;i<methods.length;i++){this["__input"+methods[i]]=!1}},_haxContextOperation:function _haxContextOperation(e){var detail=e.detail;switch(detail.eventName){case"hax-update-tap":if("boolean"==this.inputMethod){this.value=this.value}else if("flipboolean"==this.inputMethod){this.value=!this.value}else if("select"==this.inputMethod){var count=0;for(var val in this.options){if(count==this.__selectedValue){this.value=val}count++}}var mixer={value:this.value,propertyToBind:this.propertyToBind,slotToBind:this.slotToBind};this.fire("hax-input-mixer-update",{inputMixer:mixer});break;}}})});