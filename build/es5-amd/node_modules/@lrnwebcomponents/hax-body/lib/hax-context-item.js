define(["../../../@polymer/polymer/polymer-legacy.js","../../../@polymer/paper-button/paper-button.js","../../../@polymer/paper-icon-button/paper-icon-button.js","../../../@polymer/paper-tooltip/paper-tooltip.js","../../../@polymer/iron-icons/iron-icons.js","../../../@polymer/iron-icons/editor-icons.js","../../../@polymer/iron-icons/device-icons.js","../../../@polymer/iron-icons/hardware-icons.js","../../../@polymer/iron-icons/social-icons.js","../../../@polymer/iron-icons/av-icons.js","../../../@polymer/iron-icons/image-icons.js","../../../@polymer/iron-icons/maps-icons.js","../../../@polymer/neon-animation/neon-animation.js","./hax-toolbar-item.js"],function(_polymerLegacy,_paperButton,_paperIconButton,_paperTooltip,_ironIcons,_editorIcons,_deviceIcons,_hardwareIcons,_socialIcons,_avIcons,_imageIcons,_mapsIcons,_neonAnimation,_haxToolbarItem){"use strict";function _templateObject_234421c0685411e9b25d1735312af746(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        display: inline-flex;\n        height: 36px;\n        width: 36px;\n      }\n      :host([mini]) {\n        height: unset;\n        width: unset;\n      }\n      :host([menu]) {\n        display: flex;\n        width: 100%;\n      }\n    </style>\n    <hax-toolbar-item\n      disabled=\"[[disabled]]\"\n      light=\"[[light]]\"\n      mini=\"[[mini]]\"\n      id=\"button\"\n      icon=\"[[icon]]\"\n      hidden$=\"[[!icon]]\"\n      icon-class=\"[[iconClass]]\"\n      on-mousedown=\"_storeSelection\"\n      on-click=\"_fireEvent\"\n      tooltip=\"[[label]]\"\n      tooltip-direction=\"[[direction]]\"\n      default=\"[[default]]\"\n      menu=\"[[menu]]\"\n    >\n      <slot></slot>\n    </hax-toolbar-item>\n  "],["\n    <style>\n      :host {\n        display: inline-flex;\n        height: 36px;\n        width: 36px;\n      }\n      :host([mini]) {\n        height: unset;\n        width: unset;\n      }\n      :host([menu]) {\n        display: flex;\n        width: 100%;\n      }\n    </style>\n    <hax-toolbar-item\n      disabled=\"[[disabled]]\"\n      light=\"[[light]]\"\n      mini=\"[[mini]]\"\n      id=\"button\"\n      icon=\"[[icon]]\"\n      hidden\\$=\"[[!icon]]\"\n      icon-class=\"[[iconClass]]\"\n      on-mousedown=\"_storeSelection\"\n      on-click=\"_fireEvent\"\n      tooltip=\"[[label]]\"\n      tooltip-direction=\"[[direction]]\"\n      default=\"[[default]]\"\n      menu=\"[[menu]]\"\n    >\n      <slot></slot>\n    </hax-toolbar-item>\n  "]);_templateObject_234421c0685411e9b25d1735312af746=function _templateObject_234421c0685411e9b25d1735312af746(){return data};return data}/**
`hax-context-item`
A single button in the hax context menu for consistency.

* @demo demo/index.html

@microcopy - the mental model for this element
 - context - menu in the page the user can select an item from, this being 1 option in that list
 - button - an item that expresses what interaction you will have with the content.

*/(0,_polymerLegacy.Polymer)({_template:(0,_polymerLegacy.html)(_templateObject_234421c0685411e9b25d1735312af746()),is:"hax-context-item",properties:{/**
     * Light theme for toolbar item.
     */light:{type:Boolean,value:!1},/**
     * disabled state
     */disabled:{type:Boolean,value:!1,reflectToAttribute:!0/* transition */ /* transition */},/**
     * Mini theme for making things small and round.
     */mini:{type:Boolean,value:!1},/**
     * Style to be presented in a menu
     */menu:{type:Boolean,value:!1},/**
     * Direction for the tooltip
     */direction:{type:String,value:"top"},/**
     * Icon for the button.
     */icon:{type:String,value:"editor:text-fields",reflectToAttribute:!0},/**
     * Icon for the button.
     */iconClass:{type:String,value:"",reflectToAttribute:!0},/**
     * Label for the button.
     */label:{type:String,value:"",reflectToAttribute:!0},/**
     * Name of the event to bubble up as being tapped.
     * This can be used to tell other elements what was
     * clicked so it can take action appropriately.
     */eventName:{type:String,value:"button",reflectToAttribute:!0},/**
     * Method of input to display when activated. This is
     * only used when triggered as part of haxProperties
     */inputMethod:{type:String,value:null,reflectToAttribute:!0},/**
     * Optional slot to bind this value to.
     */propertyToBind:{type:String,value:null,reflectToAttribute:!0},/**
     * Optional slot to bind this value to.
     */slotToBind:{type:String,value:null,reflectToAttribute:!0},/**
     * Optional description for this item.
     */description:{type:String,reflectToAttribute:!0},/**
     * Is this button concidered a primary interaction
     */default:{type:Boolean,value:!1},/**
     * an optional value to send along in the press. Allows for
     * reusing events more easily
     */value:{type:String,value:""}},/**
   * Store the selection object. This helps fix issues with safari
   * and holding focus on non-text elements actually stealing
   * the selection priority, making it impossible to know what's
   * been selected if clicking a button to try and apply something to.
   */_storeSelection:function _storeSelection(e){window.HaxStore._tmpSelection=window.HaxStore.getSelection()},/**
   * Fire an event that includes the eventName of what was just pressed.
   */_fireEvent:function _fireEvent(e){this.fire("hax-context-item-selected",{target:this,eventName:this.eventName,value:this.value})}})});