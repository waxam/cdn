define(["exports","require","../../../@polymer/polymer/polymer-element.js","../../../@polymer/iron-a11y-keys/iron-a11y-keys.js"],function(_exports,_require,_polymerElement,_ironA11yKeys){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.HaxContextItemTextop=void 0;_require=babelHelpers.interopRequireWildcard(_require);function _templateObject_9d3c6c00898111e9ba38e33cad2d1624(){var data=babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: inline-flex;\n          box-sizing: border-box;\n          height: 36px;\n          width: 36px;\n        }\n        :host([menu]) {\n          display: flex;\n          width: 100%;\n        }\n      </style>\n      <iron-a11y-keys\n        id=\"a11y\"\n        target=\"[[target]]\"\n        keys=\"enter\"\n        on-keys-pressed=\"_fireEvent\"\n      ></iron-a11y-keys>\n      <hax-toolbar-item\n        id=\"button\"\n        icon=\"[[icon]]\"\n        hidden$=\"[[!icon]]\"\n        tooltip-direction=\"[[direction]]\"\n        tooltip=\"[[label]]\"\n        on-mousedown=\"_fireEvent\"\n        mini=\"[[mini]]\"\n        menu=\"[[menu]]\"\n        light=\"[[light]]\"\n      >\n        <slot></slot>\n      </hax-toolbar-item>\n    "],["\n      <style>\n        :host {\n          display: inline-flex;\n          box-sizing: border-box;\n          height: 36px;\n          width: 36px;\n        }\n        :host([menu]) {\n          display: flex;\n          width: 100%;\n        }\n      </style>\n      <iron-a11y-keys\n        id=\"a11y\"\n        target=\"[[target]]\"\n        keys=\"enter\"\n        on-keys-pressed=\"_fireEvent\"\n      ></iron-a11y-keys>\n      <hax-toolbar-item\n        id=\"button\"\n        icon=\"[[icon]]\"\n        hidden\\$=\"[[!icon]]\"\n        tooltip-direction=\"[[direction]]\"\n        tooltip=\"[[label]]\"\n        on-mousedown=\"_fireEvent\"\n        mini=\"[[mini]]\"\n        menu=\"[[menu]]\"\n        light=\"[[light]]\"\n      >\n        <slot></slot>\n      </hax-toolbar-item>\n    "]);_templateObject_9d3c6c00898111e9ba38e33cad2d1624=function _templateObject_9d3c6c00898111e9ba38e33cad2d1624(){return data};return data}/**
 * `hax-context-item-textop`
 * `A single button in the hax context menus for consistency. This one uses the mousedown event becasue tap won't work in safari / firefox / IE while maintaining focus inside the contenteditable area (stupid, I know)`
 * @microcopy - the mental model for this element
 * - context - menu in the page the user can select an item from, this being 1 option in that list
 * - button - an item that expresses what interaction you will have with the content.
 */var HaxContextItemTextop=/*#__PURE__*/function(_PolymerElement){babelHelpers.inherits(HaxContextItemTextop,_PolymerElement);function HaxContextItemTextop(){var _this;babelHelpers.classCallCheck(this,HaxContextItemTextop);_this=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(HaxContextItemTextop).call(this));new Promise(function(res,rej){return _require.default(["./hax-toolbar-item.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../../@polymer/iron-icons/iron-icons.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../../@polymer/iron-icons/editor-icons.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../../@polymer/iron-icons/device-icons.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../../@polymer/iron-icons/hardware-icons.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../../@polymer/iron-icons/social-icons.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../../@polymer/iron-icons/av-icons.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../../@polymer/iron-icons/image-icons.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../../@polymer/iron-icons/maps-icons.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../../@polymer/neon-animation/neon-animation.js"],res,rej)});return _this}babelHelpers.createClass(HaxContextItemTextop,[{key:"connectedCallback",/**
   * attached life cycle
   */value:function connectedCallback(){babelHelpers.get(babelHelpers.getPrototypeOf(HaxContextItemTextop.prototype),"connectedCallback",this).call(this);// bind keyboard to button press
this.target=this.shadowRoot.querySelector("#button")}/**
   * Fire an event that includes the eventName of what was just pressed.
   */},{key:"_fireEvent",value:function _fireEvent(e){this.dispatchEvent(new CustomEvent("hax-context-item-selected",{bubbles:!0,cancelable:!0,composed:!0,detail:{target:this,eventName:this.eventName}}))}}],[{key:"template",get:function get(){return(0,_polymerElement.html)(_templateObject_9d3c6c00898111e9ba38e33cad2d1624())}},{key:"tag",get:function get(){return"hax-context-item-textop"}},{key:"properties",get:function get(){return{/**
       * target for the iron-a11y-keys element.
       */target:{type:Object},/**
       * Light theme for toolbar item.
       */light:{type:Boolean,value:!1},/**
       * Mini theme for making things small and round.
       */mini:{type:Boolean,value:!1},/**
       * Style to be presented in a menu
       */menu:{type:Boolean,value:!1},/**
       * Direction for the tooltip
       */direction:{type:String,value:"top"},/**
       * Icon for the button.
       */icon:{type:String,value:"editor:text-fields",reflectToAttribute:!0},/**
       * Label for the button.
       */label:{type:String,reflectToAttribute:!0},/**
       * Name of the event to bubble up as being tapped.
       * This can be used to tell other elements what was
       * clicked so it can take action appropriately.
       */eventName:{type:String,value:"button",reflectToAttribute:!0},/**
       * Method of input to display when activated. This is
       * only used when triggered as part of haxProperties
       */inputMethod:{type:String,value:null,reflectToAttribute:!0},/**
       * Optional slot to bind this value to.
       */propertyToBind:{type:String,value:null,reflectToAttribute:!0},/**
       * Optional slot to bind this value to.
       */slotToBind:{type:String,value:null,reflectToAttribute:!0},/**
       * Optional description for this item.
       */description:{type:String,reflectToAttribute:!0}}}}]);return HaxContextItemTextop}(_polymerElement.PolymerElement);_exports.HaxContextItemTextop=HaxContextItemTextop;window.customElements.define(HaxContextItemTextop.tag,HaxContextItemTextop)});