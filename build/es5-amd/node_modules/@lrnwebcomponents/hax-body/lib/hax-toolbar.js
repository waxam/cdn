define(["../../../@polymer/polymer/polymer-legacy.js","../../../@polymer/paper-slider/paper-slider.js","../../../@polymer/paper-tooltip/paper-tooltip.js","../../../@polymer/paper-item/paper-item.js","../../../@polymer/iron-icons/iron-icons.js","../../../@polymer/iron-icons/editor-icons.js","../../materializecss-styles/lib/colors.js","../../simple-colors/simple-colors.js","./hax-toolbar-item.js","./hax-toolbar-menu.js","./hax-context-item.js","./hax-context-item-menu.js","./hax-shared-styles.js"],function(_polymerLegacy,_paperSlider,_paperTooltip,_paperItem,_ironIcons,_editorIcons,_colors,_simpleColors,_haxToolbarItem,_haxToolbarMenu,_haxContextItem,_haxContextItemMenu,_haxSharedStyles){"use strict";function _templateObject_ee0e3970620c11e99c573b9129e18660(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style is=\"custom-style\" include=\"simple-colors hax-shared-styles\">\n      :host {\n        display: flex;\n        justify-content: flex-start;\n        visibility: visible;\n        transition: 0.3s all ease;\n        box-sizing: border-box;\n        height: 36px;\n        pointer-events: all;\n      }\n      :host *[hidden] {\n        display: none;\n      }\n      .wrapper {\n        display: flex;\n        border: 1px solid var(--hax-color-border-outline);\n        height: 35px;\n        align-items: center;\n        padding: 1px;\n        margin-top: -2px;\n      }\n      :host .wrapper ::slotted(*) {\n        pointer-events: all;\n      }\n      .close-cap {\n        margin: 10px 10px 0 8px;\n        display: flex;\n        padding: 0;\n      }\n      :host * ::slotted(hax-context-item:hover),\n      :host * ::slotted(hax-context-item-textop:hover),\n      :host * ::slotted(hax-context-item-menu:hover),\n      hax-context-item:hover,\n      hax-context-item-textop:hover,\n      hax-context-item-menu:hover {\n        z-index: 2;\n      }\n      #moremenu hax-context-item,\n      #moremenu ::slotted(paper-item),\n      paper-item {\n        height: 32px;\n        padding: 0;\n        min-width: 100px;\n      }\n\n      #moremenu hax-context-item:hover,\n      :host #moremenu ::slotted(paper-item:hover),\n      paper-item:hover {\n        background-color: var(--hax-color-menu-heading-bg);\n        cursor: pointer;\n      }\n      paper-slider {\n        background-color: var(--hax-color-bg-accent);\n        color: #ffffff;\n        font-weight: bold;\n        height: 36px;\n        min-width: 100px;\n        --paper-slider-font-color: var(--hax-color-accent1-text);\n        --paper-slider-active-color: var(--hax-color-accent1);\n        --paper-slider-knob-color: var(--hax-color-accent1);\n        --paper-slider-pin-start-color: var(--hax-color-accent1);\n        --paper-slider-pin-color: var(--hax-color-accent1);\n      }\n      .convert-button {\n        border-top: 1px solid var(--hax-color-bg-accent);\n      }\n    </style>\n    <hax-context-item\n      hidden$=\"[[inline]]\"\n      mini\n      light\n      icon=\"close\"\n      label=\"Close\"\n      event-name=\"close-menu\"\n      class=\"close-cap\"\n      direction=\"left\"\n    ></hax-context-item>\n    <div class=\"wrapper\">\n      <hax-context-item-menu\n        hidden$=\"[[!haxProperties.canPosition]]\"\n        selected-value=\"{{justifyValue}}\"\n        id=\"justify\"\n        icon=\"[[justifyIcon]]\"\n        label=\"Alignment\"\n      >\n        <hax-context-item\n          menu\n          icon=\"editor:format-align-left\"\n          event-name=\"hax-align-left\"\n          >Left</hax-context-item\n        >\n        <hax-context-item\n          menu\n          icon=\"editor:format-align-center\"\n          event-name=\"hax-align-center\"\n          >Center</hax-context-item\n        >\n      </hax-context-item-menu>\n      <paper-slider\n        hidden$=\"[[!haxProperties.canScale]]\"\n        id=\"slider\"\n        pin=\"\"\n        min=\"25\"\n        step=\"25\"\n        max=\"100\"\n        value=\"{{size}}\"\n      ></paper-slider>\n      <paper-tooltip\n        hidden$=\"[[inline]]\"\n        for=\"slider\"\n        position=\"top\"\n        offset=\"10\"\n      >\n        Resize\n      </paper-tooltip>\n      <slot name=\"primary\"></slot>\n      <hax-context-item\n        hidden$=\"[[inline]]\"\n        icon=\"delete\"\n        icon-class=\"red-text text-darken-1\"\n        label=\"Remove\"\n        event-name=\"grid-plate-delete\"\n      ></hax-context-item>\n      <hax-context-item-menu\n        hidden$=\"[[hideMore]]\"\n        icon=\"more-vert\"\n        label=\"More\"\n        id=\"moremenu\"\n        event-name=\"grid-plate-op\"\n        reset-on-select=\"\"\n      >\n        <paper-item value=\"\" hidden></paper-item>\n        <slot name=\"more\"></slot>\n        <hax-context-item\n          menu\n          icon=\"icons:content-copy\"\n          icon-class=\"green-text\"\n          event-name=\"grid-plate-duplicate\"\n          >Duplicate</hax-context-item\n        >\n        <hax-context-item\n          hidden$=\"[[hideTransform]]\"\n          menu\n          icon=\"image:transform\"\n          class=\"convert-button\"\n          icon-class=\"orange-text\"\n          event-name=\"grid-plate-convert\"\n          >Transform to..</hax-context-item\n        >\n      </hax-context-item-menu>\n    </div>\n  "]);_templateObject_ee0e3970620c11e99c573b9129e18660=function _templateObject_ee0e3970620c11e99c573b9129e18660(){return data};return data}(0,_polymerLegacy.Polymer)({_template:(0,_polymerLegacy.html)(_templateObject_ee0e3970620c11e99c573b9129e18660()),is:"hax-toolbar",listeners:{"hax-context-item-selected":"_haxContextOperation"},properties:{/**
     * Hide the transform button as its not supported
     */hideTransform:{type:Boolean,value:!1},/**
     * See what's selected
     */selected:{type:Boolean,value:!1,reflectToAttritue:!0/* transition */ /* transition */},/**
     * Selected value to match ce direction currently.
     */haxProperties:{type:Object,value:{},observer:"_haxPropertiesChanged"},/**
     * Hide the more menu.
     */hideMore:{type:Boolean,value:!1},/**
     * size of the slider if it exists.
     */size:{type:Number,value:100,notify:!0},/**
     * Justify icon to reflect state.
     */justifyIcon:{type:String,value:"editor:format-align-left"},/**
     * This is an inline context menu
     */inline:{type:Boolean,value:!1,reflectToAttritue:!0},/**
     * Selected value to match ce direction currently.
     */justifyValue:{type:String,value:"",notify:!0}},/**
   * If hax properties changes, let's see what the initial state
   * of the buttons should be.
   */_haxPropertiesChanged:function _haxPropertiesChanged(newValue,oldValue){// value doesn't matter, just look at what's active
if(babelHelpers.typeof(window.HaxStore.instance.activeNode)!==("undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))){if(""!=window.HaxStore.instance.activeNode.style.width){this.size=window.HaxStore.instance.activeNode.style.width.replace("%","")}else{this.size=100}if("0px auto"==window.HaxStore.instance.activeNode.style.margin&&"block"==window.HaxStore.instance.activeNode.style.display){this.justifyValue="hax-align-center";this.justifyIcon="editor:format-align-center"}else{this.justifyValue="hax-align-left";this.justifyIcon="editor:format-align-left"}}},/**
   * Respond to simple modifications.
   */_haxContextOperation:function _haxContextOperation(e){var _this=this,detail=e.detail;// support a simple insert event to bubble up or everything else
switch(detail.eventName){case"hax-align-left":case"hax-align-center":this.justifyIcon=detail.target.icon;break;case"close-menu":setTimeout(function(){_this.$.moremenu.$.menu.hideMenu();_this.$.justify.$.menu.hideMenu()},200);break;}}})});