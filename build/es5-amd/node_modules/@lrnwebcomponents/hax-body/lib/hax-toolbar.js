define(["exports", "../../../lit-element/lit-element.js", "./hax-toolbar-item.js", "./hax-context-item.js", "./hax-context-item-menu.js"], function (_exports, _litElement, _haxToolbarItem, _haxContextItem, _haxContextItemMenu) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HaxToolbar = void 0;

  function _templateObject2_c86d243056b411ebb2c24bb50d8f41ab() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <div class=\"wrapper\">\n        <slot name=\"prefix\"></slot>\n        <slot name=\"primary\"></slot>\n        <hax-context-item-menu\n          mini\n          action\n          ?hidden=\"", "\"\n          icon=\"icons:more-horiz\"\n          label=\"More options\"\n          id=\"moremenu\"\n          event-name=\"hax-plate-op\"\n          reset-on-select\n        >\n          <slot name=\"more\"></slot>\n        </hax-context-item-menu>\n      </div>\n    "]);

    _templateObject2_c86d243056b411ebb2c24bb50d8f41ab = function _templateObject2_c86d243056b411ebb2c24bb50d8f41ab() {
      return data;
    };

    return data;
  }

  function _templateObject_c86d243056b411ebb2c24bb50d8f41ab() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: flex;\n          justify-content: flex-start;\n          visibility: visible;\n          transition: 0.2s all ease-in-out;\n          box-sizing: border-box;\n          pointer-events: all;\n          background-color: white;\n        }\n\n        :host *[hidden] {\n          display: none;\n        }\n        .wrapper {\n          display: flex;\n          align-items: center;\n          transition: 0.2s all ease-in-out;\n          visibility: visible;\n          opacity: 0.8;\n        }\n        .wrapper:hover {\n          opacity: 1;\n        }\n        :host .wrapper ::slotted(*) {\n          pointer-events: all;\n        }\n        .close-cap {\n          margin: 10px 10px 0 8px;\n          display: flex;\n          padding: 0;\n        }\n        :host * ::slotted(hax-context-item:hover),\n        :host * ::slotted(hax-context-item-textop:hover),\n        :host * ::slotted(hax-context-item-menu:hover),\n        hax-context-item:hover,\n        hax-context-item-textop:hover,\n        hax-context-item-menu:hover {\n          z-index: 2;\n        }\n        #moremenu hax-context-item,\n        #moremenu ::slotted(button),\n        button {\n          height: 32px;\n          padding: 0;\n          min-width: 100px;\n          color: white !important;\n          border: 0;\n        }\n\n        #moremenu hax-context-item:hover,\n        :host #moremenu ::slotted(button:hover),\n        button:hover {\n          cursor: pointer;\n        }\n        .convert-button {\n          border-top: 1px solid var(--hax-color-bg-accent);\n        }\n      "]);

    _templateObject_c86d243056b411ebb2c24bb50d8f41ab = function _templateObject_c86d243056b411ebb2c24bb50d8f41ab() {
      return data;
    };

    return data;
  }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  var HaxToolbar = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(HaxToolbar, _LitElement);

    var _super = _createSuper(HaxToolbar);

    babelHelpers.createClass(HaxToolbar, null, [{
      key: "styles",

      /**
       * LitElement constructable styles enhancement
       */
      get: function get() {
        return [(0, _litElement.css)(_templateObject_c86d243056b411ebb2c24bb50d8f41ab())];
      }
    }]);

    function HaxToolbar() {
      var _this;

      babelHelpers.classCallCheck(this, HaxToolbar);
      _this = _super.call(this);
      _this.selected = false;
      _this.hideMore = false;
      _this.inline = false;
      return _this;
    }

    babelHelpers.createClass(HaxToolbar, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject2_c86d243056b411ebb2c24bb50d8f41ab(), this.hideMore);
      }
    }], [{
      key: "tag",
      get: function get() {
        return "hax-toolbar";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * See what's selected
           */
          selected: {
            type: Boolean,
            reflect: true
          },

          /**
           * Hide the more menu.
           */
          hideMore: {
            type: Boolean,
            attribute: "hide-more"
          },

          /**
           * This is an inline context menu
           */
          inline: {
            type: Boolean,
            reflect: true
          }
        };
      }
    }]);
    return HaxToolbar;
  }(_litElement.LitElement);

  _exports.HaxToolbar = HaxToolbar;
  window.customElements.define(HaxToolbar.tag, HaxToolbar);
});