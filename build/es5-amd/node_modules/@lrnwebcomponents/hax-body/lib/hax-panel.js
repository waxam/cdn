define(["exports","meta","require","../../../@polymer/polymer/polymer-element.js","../../../@polymer/polymer/lib/utils/render-status.js","../../simple-colors/simple-colors.js","./hax-shared-styles.js"],function(_exports,meta,_require,_polymerElement,_renderStatus,_simpleColors,_haxSharedStyles){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.HaxPanel=void 0;meta=babelHelpers.interopRequireWildcard(meta);_require=babelHelpers.interopRequireWildcard(_require);function _templateObject_baedb70083ae11e9bca9910ed3db32b8(){var data=babelHelpers.taggedTemplateLiteral(["\n      <style include=\"hax-shared-styles\">\n        :host {\n          display: block;\n          position: absolute;\n          z-index: 1000000;\n        }\n        :host *[hidden] {\n          display: none;\n        }\n        iron-icon:not(:defined),\n        hax-panel-item:not(:defined),\n        app-drawer:not(:defined) {\n          display: none;\n        }\n        app-drawer {\n          z-index: 100001;\n          height: 40px;\n          padding: 8px 16px;\n          left: 0;\n          top: 0;\n          align-items: center;\n          touch-action: auto;\n          visibility: hidden;\n          opacity: 0;\n          display: flex;\n          --app-drawer-width: 100%;\n          --app-drawer-content-container: {\n            align-items: center;\n            width: 100%;\n            left: 0;\n            right: 0;\n            background-color: var(--hax-color-bg);\n            border: 1px solid var(--hax-color-bg-accent);\n            padding: 0 16px;\n            display: flex;\n            touch-action: auto;\n            overflow-x: auto;\n            overflow: visible !important;\n            -webkit-overflow-scrolling: touch;\n            white-space: nowrap;\n          }\n        }\n        hax-panel-item {\n          margin: 8px 2px;\n        }\n        hax-panel-item[right] {\n          float: right;\n        }\n        #haxcancelbutton {\n          margin-right: 48px;\n        }\n        :host([align=\"right\"]) app-drawer {\n          right: 0;\n          left: unset;\n        }\n        :host([edit-mode]) app-drawer {\n          visibility: visible;\n          transition: 0.3s ease opacity;\n          opacity: 1;\n          right: 0;\n          left: 0;\n          top: 0;\n        }\n\n        #button {\n          position: fixed;\n          top: 0;\n          left: 0;\n          visibility: visible;\n          z-index: 10000;\n          transition: all 0.3s ease;\n          margin: 0;\n          border-top-left-radius: 0;\n        }\n        :host([edit-mode]) #button {\n          visibility: hidden;\n          opacity: 0;\n        }\n        #button:hover {\n          opacity: 1;\n        }\n        :host([align=\"right\"]) #button {\n          right: 0;\n          left: unset;\n          border-top-right-radius: 0;\n          border-top-left-radius: unset;\n        }\n        .active-op-name {\n          display: none;\n        }\n        :host([edit-mode]) .active-op-name {\n          display: flex;\n          top: 0;\n          right: 0;\n          z-index: 1000000;\n          position: fixed;\n          font-size: 14px;\n          font-weight: bold;\n          padding: 16px 28px 16px 16px;\n          line-height: 24px;\n          height: 24px;\n          min-width: 120px;\n          justify-content: space-evenly;\n          background-color: var(--hax-color-bg-accent);\n          color: var(--hax-color-text);\n          vertical-align: middle;\n        }\n        @media screen and (max-width: 600px) {\n          :host([edit-mode]) .hide-small {\n            display: none;\n          }\n        }\n        @media screen and (max-width: 800px) {\n          :host([edit-mode]) #haxcancelbutton {\n            margin-right: 2px;\n          }\n          :host([edit-mode]) .active-op-name {\n            display: none;\n          }\n        }\n      </style>\n      <div hidden$=\"[[hidePanelOps]]\">\n        <hax-panel-item\n          dark\n          large\n          data-opened$=\"[[editMode]]\"\n          on-click=\"_clickEditButton\"\n          icon=\"create\"\n          id=\"button\"\n          edged=\"[[align]]\"\n          label=\"[[__tipText]]\"\n        ></hax-panel-item>\n      </div>\n      <app-drawer\n        id=\"drawer\"\n        opened=\"{{editMode}}\"\n        disable-swipe\n        persistent\n        transition-duration=\"300\"\n        align=\"[[align]]\"\n      >\n        <hax-panel-item\n          hidden$=\"[[hidePanelOps]]\"\n          on-click=\"_clickSaveButton\"\n          icon=\"save\"\n          id=\"haxsavebutton\"\n          label=\"[[__tipText]]\"\n          event-name=\"save\"\n          voice-command=\"save content\"\n        ></hax-panel-item>\n        <hax-panel-item\n          hidden$=\"[[hidePanelOps]]\"\n          icon=\"cancel\"\n          id=\"haxcancelbutton\"\n          label=\"Cancel\"\n          event-name=\"cancel\"\n          voice-command=\"cancel hax\"\n        ></hax-panel-item>\n        <hax-panel-item\n          icon=\"image:add-to-photos\"\n          label=\"Add\"\n          event-name=\"hax-manager-open\"\n          value=\"0\"\n        ></hax-panel-item>\n        <hax-panel-item\n          icon=\"search\"\n          label=\"Find\"\n          event-name=\"hax-manager-open\"\n          value=\"1\"\n        ></hax-panel-item>\n        <hax-panel-item\n          icon=\"hardware:toys\"\n          label=\"Make\"\n          event-name=\"hax-manager-open\"\n          value=\"2\"\n        ></hax-panel-item>\n        <hax-panel-item\n          icon=\"view-quilt\"\n          label=\"Layouts\"\n          event-name=\"hax-blox-picker-open\"\n          voice-command=\"insert block\"\n        ></hax-panel-item>\n        <hax-panel-item\n          icon=\"view-agenda\"\n          label=\"Templates\"\n          event-name=\"hax-stax-picker-open\"\n          voice-command=\"insert stack\"\n        ></hax-panel-item>\n        <hax-panel-item\n          icon=\"editor:short-text\"\n          label=\"Paragraph\"\n          event-name=\"text\"\n          voice-command=\"insert text\"\n          class=\"hide-small\"\n        ></hax-panel-item>\n        <hax-panel-item\n          icon=\"editor:title\"\n          label=\"Heading\"\n          event-name=\"header\"\n          voice-command=\"insert heading\"\n          class=\"hide-small\"\n        ></hax-panel-item>\n        <hax-panel-item\n          icon=\"editor:space-bar\"\n          label=\"Divider\"\n          event-name=\"divider\"\n          voice-command=\"insert divider\"\n          class=\"hide-small\"\n        ></hax-panel-item>\n        <hax-panel-item\n          icon=\"image:transform\"\n          label=\"Placeholder\"\n          event-name=\"placeholder\"\n          voice-command=\"insert placeholder\"\n          class=\"hide-small\"\n        ></hax-panel-item>\n        <hax-panel-item\n          hidden$=\"[[hideExportButton]]\"\n          on-click=\"_htmlExportDialog\"\n          icon=\"code\"\n          label=\"Source view\"\n        ></hax-panel-item>\n        <slot></slot>\n        <hax-panel-item\n          right\n          hidden$=\"[[hidePreferencesButton]]\"\n          on-click=\"_preferencesDialog\"\n          icon=\"settings\"\n          label=\"Preferences\"\n        ></hax-panel-item>\n      </app-drawer>\n      <div class=\"active-op-name\">[[activeOperationName]]</div>\n    "]);_templateObject_baedb70083ae11e9bca9910ed3db32b8=function _templateObject_baedb70083ae11e9bca9910ed3db32b8(){return data};return data}/**
`hax-panel`
A LRN element that provides a panel / pallet of options to choose from.
This is intended to be placed in a larger system for creating content quickly
as the events being bubbled up include HTML nodes to inject into something

* @demo demo/index.html

@microcopy - the mental model for this element
 - panel - the flyout from left or right side that has elements that can be placed
 - element - buttons on the panel which when pressed will trigger an event

*/var HaxPanel=/*#__PURE__*/function(_PolymerElement){babelHelpers.inherits(HaxPanel,_PolymerElement);function HaxPanel(){var _this;babelHelpers.classCallCheck(this,HaxPanel);_this=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(HaxPanel).call(this));new Promise(function(res,rej){return _require.default(["../../../@polymer/iron-icons/iron-icons.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../../@polymer/iron-icons/editor-icons.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../../@polymer/iron-icons/device-icons.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../../@polymer/iron-icons/hardware-icons.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../../@polymer/iron-icons/communication-icons.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../../@polymer/iron-icons/social-icons.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../../@polymer/iron-icons/av-icons.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../../@polymer/iron-icons/maps-icons.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../../@polymer/app-layout/app-drawer/app-drawer.js"],res,rej)});new Promise(function(res,rej){return _require.default(["./hax-panel-item.js"],res,rej)});return _this}babelHelpers.createClass(HaxPanel,[{key:"connectedCallback",/**
   * Attached to the DOM; now we can fire event to the store that
   * we exist and are the thing being edited.
   */value:function connectedCallback(){babelHelpers.get(babelHelpers.getPrototypeOf(HaxPanel.prototype),"connectedCallback",this).call(this);(0,_renderStatus.afterNextRender)(this,function(){this.addEventListener("hax-item-selected",this._processItemEvent.bind(this));this.dispatchEvent(new CustomEvent("hax-register-panel",{bubbles:!0,cancelable:!0,composed:!0,detail:this}));document.body.addEventListener("hax-store-property-updated",this._haxStorePropertyUpdated.bind(this));document.body.addEventListener("hax-active-hover-name",this._activeNameChange.bind(this));document.body.addEventListener("hax-panel-operation",this._processItemEvent.bind(this))})}/**
   * Detached life cycle
   */},{key:"disconnectedCallback",value:function disconnectedCallback(){this.removeEventListener("hax-item-selected",this._processItemEvent.bind(this));document.body.removeEventListener("hax-store-property-updated",this._haxStorePropertyUpdated.bind(this));document.body.removeEventListener("hax-active-hover-name",this._activeNameChange.bind(this));document.body.removeEventListener("hax-panel-operation",this._processItemEvent.bind(this));babelHelpers.get(babelHelpers.getPrototypeOf(HaxPanel.prototype),"disconnectedCallback",this).call(this)}},{key:"_activeNameChange",value:function _activeNameChange(e){this.activeOperationName=e.detail}/**
   * Global preference changed.
   */},{key:"_globalPreferencesChanged",value:function _globalPreferencesChanged(newValue){if(newValue&&babelHelpers.typeof(newValue.haxShowExportButton)!==("undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))){this.hideExportButton=!newValue.haxShowExportButton}}/**
   * Store updated, sync.
   */},{key:"_haxStorePropertyUpdated",value:function _haxStorePropertyUpdated(e){if(e.detail&&babelHelpers.typeof(e.detail.value)!==("undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))&&e.detail.property){if("object"===babelHelpers.typeof(e.detail.value)){this.set(e.detail.property,null)}this.set(e.detail.property,e.detail.value)}}/**
   * Process event for simple content inserts.
   */},{key:"_processItemEvent",value:function _processItemEvent(e){var detail=e.detail;// support a simple insert event to bubble up or everything else
switch(detail.eventName){case"open-panel":this._clickButton();break;case"cancel":this.toggle();this.dispatchEvent(new CustomEvent("hax-cancel",{bubbles:!0,cancelable:!0,composed:!0,detail:detail}));break;case"text":detail.tag="p";detail.content="";this.dispatchEvent(new CustomEvent("hax-insert-content",{bubbles:!0,cancelable:!0,composed:!0,detail:detail}));break;case"divider":detail.tag="hr";detail.content="";detail.properties={style:"width:100%;"};this.dispatchEvent(new CustomEvent("hax-insert-content",{bubbles:!0,cancelable:!0,composed:!0,detail:detail}));break;case"header":detail.tag="h2";detail.content="Header";this.dispatchEvent(new CustomEvent("hax-insert-content",{bubbles:!0,cancelable:!0,composed:!0,detail:detail}));break;case"placeholder":detail.tag="place-holder";detail.content="";detail.properties={style:"width:50%;"};this.dispatchEvent(new CustomEvent("hax-insert-content",{bubbles:!0,cancelable:!0,composed:!0,detail:detail}));break;case"image":detail.tag="img";detail.content="";detail.properties={src:pathFromUrl(decodeURIComponent(meta.url))+window.HaxStore.instance.defaults.image.src,alt:window.HaxStore.instance.defaults.image.alt,style:"width:100%;"};this.dispatchEvent(new CustomEvent("hax-insert-content",{bubbles:!0,cancelable:!0,composed:!0,detail:detail}));break;case"iframe":detail.tag="iframe";detail.content="";detail.properties={src:window.HaxStore.instance.defaults.iframe.src,height:"400px",width:"100%",style:"width:100%;"};this.dispatchEvent(new CustomEvent("hax-insert-content",{bubbles:!0,cancelable:!0,composed:!0,detail:detail}));break;case"blockquote":detail.tag="blockquote";detail.content="";this.dispatchEvent(new CustomEvent("hax-insert-content",{bubbles:!0,cancelable:!0,composed:!0,detail:detail}));break;case"hax-manager-open":window.HaxStore.write("activeHaxElement",{},this);window.HaxStore.instance.haxManager.resetManager(parseInt(detail.value));window.HaxStore.instance.haxManager.toggleDialog(!1);break;case"hax-stax-picker-open":window.HaxStore.instance.haxStaxPicker.toggleDialog();break;case"hax-blox-picker-open":window.HaxStore.instance.haxBloxPicker.toggleDialog();break;case"undo":document.execCommand("undo");break;case"redo":document.execCommand("redo");break;default:// we sit on this, something else will have to handle it
break;}}/**
   * _editModeChanged
   */},{key:"_editModeChanged",value:function _editModeChanged(newValue,oldValue){if(babelHelpers.typeof(newValue)!==("undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))&&newValue){this.__tipText="Save";this.shadowRoot.querySelector("#button").icon="save"}else{this.__tipText="Edit";this.shadowRoot.querySelector("#button").icon="create"}}/**
   * Toggle the drawer when the button is clicked.
   */},{key:"_clickEditButton",value:function _clickEditButton(e){this.toggle()}/**
   * Toggle the drawer when the button is clicked.
   */},{key:"_clickSaveButton",value:function _clickSaveButton(e){this.toggle();this.dispatchEvent(new CustomEvent("hax-save",{bubbles:!0,cancelable:!0,composed:!0,detail:e.detail}))}/**
   * HTML Export trigger.
   */},{key:"_htmlExportDialog",value:function _htmlExportDialog(e){window.HaxStore.instance.haxExport.toggleDialog()}/**
   * Preferences trigger.
   */},{key:"_preferencesDialog",value:function _preferencesDialog(e){window.HaxStore.instance.haxPreferences.toggleDialog()}/**
   * Toggle the panel.
   */},{key:"toggle",value:function toggle(e){window.HaxStore.write("editMode",!this.editMode,this);this.shadowRoot.querySelector("#drawer").opened=this.editMode;if(!this.shadowRoot.querySelector("#drawer").opened){window.HaxStore.instance.closeAllDrawers()}}}],[{key:"template",get:function get(){return(0,_polymerElement.html)(_templateObject_baedb70083ae11e9bca9910ed3db32b8())}},{key:"tag",get:function get(){return"hax-panel"}},{key:"properties",get:function get(){return{/**
       * Light variant for save button
       */light:{type:Boolean},/**
       * Display to the right corner instead of the left (default)
       */align:{type:String,reflectToAttribute:!0,value:"left"},/**
       * State of the panel
       */editMode:{type:Boolean,reflectToAttribute:!0,observer:"_editModeChanged"},/**
       * Showing export area.
       */hideExportButton:{type:Boolean,value:!1},/**
       * Show developer mode
       */haxDeveloperMode:{type:Boolean,value:!1},/**
       * active item name, useful to show users what they are working with
       */activeOperationName:{type:String},/**
       * Showing preferences area.
       */hidePreferencesButton:{type:Boolean,value:!1},/**
       * Showing button area at all a well as internal
       * state managing buttons like cancel and save
       */hidePanelOps:{type:Boolean,value:!1},/**
       * Global preferences for HAX overall
       */globalPreferences:{type:Object,observer:"_globalPreferencesChanged"}}}}]);return HaxPanel}(_polymerElement.PolymerElement);_exports.HaxPanel=HaxPanel;window.customElements.define(HaxPanel.tag,HaxPanel)});