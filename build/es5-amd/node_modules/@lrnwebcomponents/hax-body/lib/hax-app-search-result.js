var _templateObject=babelHelpers.taggedTemplateLiteral(["\n    <style include=\"simple-colors\">\n      :host {\n        display: inline-flex;\n        width: 50%;\n        background-color: transparent;\n        color: #ffffff;\n      }\n      paper-button.button {\n        margin: 0;\n        padding: 7px;\n        height: 168px;\n        border-radius: 0;\n        width: 100%;\n        border: 2px solid #cccccc;\n        justify-content: flex-start;\n        background-color: transparent;\n        background-image: none;\n        color: #ffffff;\n        text-align: unset;\n        display: flex;\n      }\n      paper-button:hover,\n      paper-button:focus,\n      paper-button:active {\n        border: 2px solid var(--simple-colors-default-theme-light-green-1);\n        background-color: rgba(0, 0, 0, 0.7);\n      }\n      .detail-wrapper {\n        padding: 0 8px;\n        display: inline-block;\n        height: 100%;\n        width: calc(80% - 16px);\n        overflow: hidden;\n        font-family: Verdana, Geneva, Tahoma, sans-serif;\n      }\n      .title {\n        font-size: 16px;\n        font-weight: bold;\n        text-transform: none;\n        padding-bottom: 4px;\n      }\n      .details {\n        height: 100px;\n        overflow: hidden;\n        font-size: 12px;\n        line-height: 16px;\n        padding: 0;\n        margin: 0;\n        text-transform: none;\n      }\n      .image {\n        display: inline-flex;\n        height: 152px;\n        width: 20%;\n        background-color: lightgray;\n      }\n      @media screen and (max-width: 1000px) {\n        :host {\n          width: 100%;\n        }\n        .title {\n          font-size: 12px;\n        }\n        .image {\n          min-width: 160px;\n          width: 160px;\n        }\n        .details {\n          font-size: 10px;\n        }\n      }\n      @media screen and (max-width: 600px) {\n        .details {\n          font-size: 8px;\n        }\n      }\n    </style>\n\n    <paper-button on-tap=\"_itemSelected\" class=\"button\">\n      <iron-image\n        alt=\"\"\n        class=\"image\"\n        src=\"[[resultData.image]]\"\n        preload=\"\"\n        fade=\"\"\n        sizing=\"cover\"\n      ></iron-image>\n      <div class=\"detail-wrapper\">\n        <div class=\"title\">[[resultData.title]]</div>\n        <div class=\"details\">[[resultData.details]]</div>\n      </div>\n    </paper-button>\n  "],["\n    <style include=\"simple-colors\">\n      :host {\n        display: inline-flex;\n        width: 50%;\n        background-color: transparent;\n        color: #ffffff;\n      }\n      paper-button.button {\n        margin: 0;\n        padding: 7px;\n        height: 168px;\n        border-radius: 0;\n        width: 100%;\n        border: 2px solid #cccccc;\n        justify-content: flex-start;\n        background-color: transparent;\n        background-image: none;\n        color: #ffffff;\n        text-align: unset;\n        display: flex;\n      }\n      paper-button:hover,\n      paper-button:focus,\n      paper-button:active {\n        border: 2px solid var(--simple-colors-default-theme-light-green-1);\n        background-color: rgba(0, 0, 0, 0.7);\n      }\n      .detail-wrapper {\n        padding: 0 8px;\n        display: inline-block;\n        height: 100%;\n        width: calc(80% - 16px);\n        overflow: hidden;\n        font-family: Verdana, Geneva, Tahoma, sans-serif;\n      }\n      .title {\n        font-size: 16px;\n        font-weight: bold;\n        text-transform: none;\n        padding-bottom: 4px;\n      }\n      .details {\n        height: 100px;\n        overflow: hidden;\n        font-size: 12px;\n        line-height: 16px;\n        padding: 0;\n        margin: 0;\n        text-transform: none;\n      }\n      .image {\n        display: inline-flex;\n        height: 152px;\n        width: 20%;\n        background-color: lightgray;\n      }\n      @media screen and (max-width: 1000px) {\n        :host {\n          width: 100%;\n        }\n        .title {\n          font-size: 12px;\n        }\n        .image {\n          min-width: 160px;\n          width: 160px;\n        }\n        .details {\n          font-size: 10px;\n        }\n      }\n      @media screen and (max-width: 600px) {\n        .details {\n          font-size: 8px;\n        }\n      }\n    </style>\n\n    <paper-button on-tap=\"_itemSelected\" class=\"button\">\n      <iron-image\n        alt=\"\"\n        class=\"image\"\n        src=\"[[resultData.image]]\"\n        preload=\"\"\n        fade=\"\"\n        sizing=\"cover\"\n      ></iron-image>\n      <div class=\"detail-wrapper\">\n        <div class=\"title\">[[resultData.title]]</div>\n        <div class=\"details\">[[resultData.details]]</div>\n      </div>\n    </paper-button>\n  "]);import{html,Polymer}from"@polymer/polymer/polymer-legacy.js";import"@polymer/iron-image/iron-image.js";import"@polymer/paper-button/paper-button.js";import"@polymer/paper-styles/paper-styles.js";import"@lrnwebcomponents/simple-colors/simple-colors.js";Polymer({_template:html(_templateObject),is:"hax-app-search-result",properties:{resultData:{type:Object}},_itemSelected:function(){var c=this.resultData.map,d=this.resultData.type;(null===d||""===d)&&babelHelpers.typeof(c.source)!=="undefined"&&(d=window.HaxStore.guessGizmoType(c.source));var f=window.HaxStore.guessGizmo(d,c);0<f.length?1===f.length?babelHelpers.typeof(f[0].tag)!=="undefined"&&window.HaxStore.write("activeHaxElement",f[0],this):window.HaxStore.instance.haxAppPicker.presentOptions(f,d,"How would you like to display this "+d+"?","gizmo"):window.HaxStore.toast("Sorry, I don't know how to handle that link yet.")}});