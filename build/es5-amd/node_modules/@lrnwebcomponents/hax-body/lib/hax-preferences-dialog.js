define(["../../../@polymer/polymer/polymer-legacy.js","../../../@polymer/iron-icon/iron-icon.js","../../../@polymer/iron-icons/iron-icons.js","../../../@polymer/paper-button/paper-button.js","../../eco-json-schema-form/eco-json-schema-form.js","../../eco-json-schema-form/lib/eco-json-schema-object.js","../../../@polymer/app-layout/app-drawer/app-drawer.js","../../simple-colors/simple-colors.js","./hax-shared-styles.js"],function(_polymerLegacy,_ironIcon,_ironIcons,_paperButton,_ecoJsonSchemaForm,_ecoJsonSchemaObject,_appDrawer,_simpleColors,_haxSharedStyles){"use strict";function _templateObject_17be9af066fc11e984d945fe2fe0aa60(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style is=\"custom-style\" include=\"simple-colors hax-shared-styles\">\n      :host {\n        display: block;\n      }\n      #dialog {\n        z-index: 1000;\n        margin-top: 56px;\n      }\n      #closedialog {\n        float: right;\n        top: 124px;\n        right: 0;\n        position: absolute;\n        padding: 8px;\n        margin: 0;\n        color: var(--hax-color-text);\n        background-color: transparent;\n        width: 40px;\n        height: 40px;\n        min-width: unset;\n      }\n      .title {\n        position: relative;\n        padding: 16px;\n        outline: 0;\n        font-weight: 600;\n        text-align: left;\n        margin: 0;\n        background-color: var(--hax-color-menu-heading-bg);\n        font-size: 18px;\n        line-height: 18px;\n        font-family: \"Noto Serif\", serif;\n        color: var(--hax-color-text);\n      }\n      app-drawer {\n        --app-drawer-content-container: {\n          background-color: #ffffff;\n        }\n        --app-drawer-width: 320px;\n      }\n      eco-json-schema-object {\n        color: white;\n        --eco-json-schema-object-form : {\n          -ms-flex: unset;\n          -webkit-flex: unset;\n          flex: unset;\n          -webkit-flex-basis: unset;\n          flex-basis: unset;\n        }\n        --paper-checkbox-size: 16px;\n        --paper-checkbox-checked-ink-color: --hax-color-accent1;\n        --paper-checkbox-label: {\n          font-size: 16px;\n          line-height: 16px;\n        }\n      }\n      .pref-container {\n        text-align: left;\n        padding: 16px;\n      }\n    </style>\n    <app-drawer id=\"dialog\" align=\"right\" transition-duration=\"300\">\n      <h3 class=\"title\">[[title]]</h3>\n      <div style=\"height: 100%; overflow: auto;\" class=\"pref-container\">\n        <eco-json-schema-object\n          schema=\"[[schema]]\"\n          value=\"{{preferences}}\"\n        ></eco-json-schema-object>\n      </div>\n      <paper-button id=\"closedialog\" on-tap=\"close\">\n        <iron-icon icon=\"icons:cancel\" title=\"Close dialog\"></iron-icon>\n      </paper-button>\n    </app-drawer>\n  "]);_templateObject_17be9af066fc11e984d945fe2fe0aa60=function _templateObject_17be9af066fc11e984d945fe2fe0aa60(){return data};return data}/**
`hax-export-dialog`
Export dialog with all export options and settings provided.

* @demo demo/index.html

@microcopy - the mental model for this element
 -
*/(0,_polymerLegacy.Polymer)({_template:(0,_polymerLegacy.html)(_templateObject_17be9af066fc11e984d945fe2fe0aa60()),is:"hax-preferences-dialog",properties:{/**
     * Title when open.
     */title:{type:String,value:"Preferences"},/**
     * Schema that has all of inputs / manages state
     */schema:{type:Object},/**
     * Preferences managed for everything global about HAX.
     */preferences:{type:Object,notify:!0/* transition */ /* transition */}},observers:["_preferencesChanged(preferences.*)"],/**
   * Detached life cycle
   */detached:function detached(){document.body.removeEventListener("hax-store-property-updated",this._haxStorePropertyUpdated.bind(this))},ready:function ready(){// JSON schema object needs delayed to ensure page repaints the form
var schema={$schema:"http://json-schema.org/schema#",title:"HAX preferences",type:"object",properties:{haxShowExportButton:{title:"View source button",type:"boolean",value:!0},haxRayMode:{title:"X-Ray vision",type:"boolean",value:!1},haxDeveloperMode:{title:"Developer mode",type:"boolean",value:!1},haxVoiceCommands:{title:"Voice commands",type:"boolean",value:!1},haxGithubReport:{title:"Report issue",type:"string",value:!1,component:{name:"a",properties:{rel:"noopener",style:"color: #81a3a9;font-size: 18px;top: 100vh;position: fixed;right: 0;padding: 16px;font-style: italic;",id:"reportghissue",href:"https://github.com/elmsln/lrnwebcomponents/issues/new?body=URL%20base:%20"+window.location.pathname+"&title=[hax] Bug%20report%20from%20preference%20panel",target:"_blank"},slot:"Report an issue with HAX"}}}};this.set("schema",{});this.set("schema",schema)},/**
   * Attached to the DOM, now fire that we exist.
   */attached:function attached(){// register this with hax as the preference pane
this.fire("hax-register-preferences",this);// add event listener
document.body.addEventListener("hax-store-property-updated",this._haxStorePropertyUpdated.bind(this));// force color values to apply
this.updateStyles()},/**
   * Store updated, sync.
   */_haxStorePropertyUpdated:function _haxStorePropertyUpdated(e){if(e.detail&&babelHelpers.typeof(e.detail.value)!==("undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))&&e.detail.property&&"globalPreferences"===e.detail.property&&e.detail.owner!==this){if("object"===babelHelpers.typeof(e.detail.value)){this.set("preferences",{})}this.set("preferences",e.detail.value);this.notifyPath("preferences.*")}},/**
   * Notice preferences have changed.
   */_preferencesChanged:function _preferencesChanged(details){if(this.schema&&this.schema.properties&&window.HaxStore.ready){window.HaxStore.write("globalPreferences",details.base,this)}},/**
   * Toggle state.
   */toggleDialog:function toggleDialog(){if(this.$.dialog.opened){this.close()}else{window.HaxStore.instance.closeAllDrawers(this);var schema=this.schema;// enforce property values to be the schema value
for(var key in this.preferences){this.schema.properties[key].value=this.preferences[key]}// force the form to rebuild
this.set("schema",{});this.set("schema",schema)}},/**
   * open the dialog
   */open:function open(){this.$.dialog.open()},/**
   * close the dialog
   */close:function close(){this.$.dialog.close()}})});