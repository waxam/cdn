define(["exports", "../../../lit-element/lit-element.js", "../../simple-popover/lib/SimpleTourFinder.js", "./hax-store.js", "./hax-context-item-menu.js", "./hax-context-item.js", "../../../mobx/dist/mobx.esm.js"], function (_exports, _litElement, _SimpleTourFinder2, _haxStore, _haxContextItemMenu, _haxContextItem, _mobxEsm) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HaxPlateContext = void 0;

  function _templateObject2_e0813f20577c11eb974577f038855fc7() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <div class=\"area\" id=\"area\">\n        <hax-context-item-menu\n          mini\n          ?disabled=\"", "\"\n          id=\"drag\"\n          action\n          icon=\"hax:arrow-all\"\n          label=\"Drag handle\"\n          draggable=\"true\"\n          selected-value=\"0\"\n          reset-on-select\n          data-simple-tour-stop\n          data-stop-title=\"label\"\n        >\n          <hax-context-item\n            action\n            mini\n            dark\n            ?disabled=\"", "\"\n            simple\n            icon=\"hax:keyboard-arrow-up\"\n            label=\"Move up\"\n            event-name=\"hax-plate-up\"\n            direction=\"left\"\n          ></hax-context-item>\n          <hax-context-item\n            action\n            mini\n            dark\n            ?disabled=\"", "\"\n            simple\n            icon=\"hax:keyboard-arrow-down\"\n            label=\"Move down\"\n            event-name=\"hax-plate-down\"\n            direction=\"left\"\n          ></hax-context-item>\n          <div slot=\"tour\" data-stop-content>\n            Click the drag handle once to show a menu to just move up or down\n            one item in the content OR click and drag to place the item exactly\n            where you want it to go.\n          </div>\n        </hax-context-item-menu>\n        <hax-context-item\n          mini\n          action\n          id=\"right\"\n          class=\"paddle\"\n          icon=\"hax:table-column-remove\"\n          label=\"Add column\"\n          ?disabled=\"", "\"\n          event-name=\"hax-plate-create-right\"\n          data-simple-tour-stop\n          data-stop-title=\"label\"\n        >\n          <div slot=\"tour\" data-stop-content>\n            Add a column to split the current column into two pieces. This can\n            be done up to six pieces columns. For differnet layouts see Grid\n            settings panel.\n          </div>\n        </hax-context-item>\n        <hax-context-item\n          mini\n          action\n          class=\"paddle\"\n          icon=\"hax:table-column-plus-after\"\n          label=\"Remove column\"\n          ?disabled=\"", "\"\n          event-name=\"hax-plate-remove-right\"\n          id=\"rightremove\"\n          data-simple-tour-stop\n          data-stop-title=\"label\"\n        >\n          <div slot=\"tour\" data-stop-content>\n            Remove a column from the split column layout. If at two columns and\n            removing it will remove the layout split and make it 100% width.\n          </div>\n        </hax-context-item>\n        <hax-context-item\n          mini\n          action\n          ?disabled=\"", "\"\n          label=\"Duplicate\"\n          icon=\"icons:content-copy\"\n          event-name=\"hax-plate-duplicate\"\n          data-simple-tour-stop\n          data-stop-title=\"label\"\n        >\n          <div slot=\"tour\" data-stop-content>\n            Duplicate the active piece of content and place it below the current\n            item.\n          </div>\n        </hax-context-item>\n        <hax-context-item\n          mini\n          danger\n          action\n          ?disabled=\"", "\"\n          icon=\"delete\"\n          label=\"Remove\"\n          event-name=\"hax-plate-delete\"\n          data-simple-tour-stop\n          data-stop-title=\"label\"\n        >\n          <div slot=\"tour\" data-stop-content>\n            Delete the current item. You can always use the undo arrow to bring\n            this back.\n          </div>\n        </hax-context-item>\n      </div>\n    "]);

    _templateObject2_e0813f20577c11eb974577f038855fc7 = function _templateObject2_e0813f20577c11eb974577f038855fc7() {
      return data;
    };

    return data;
  }

  function _templateObject_e0813f20577c11eb974577f038855fc7() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n          margin-top: -2px;\n          background-color: white;\n        }\n        hax-context-item {\n          display: block;\n        }\n        hax-context-item[large] {\n          display: inline-block;\n          margin: 0;\n          padding: 0;\n        }\n        hax-context-item-menu {\n          --hax-context-item-menu-height: 28px;\n        }\n        .area {\n          display: flex;\n          visibility: visible;\n          opacity: 0.8;\n          transition: 0.2s all ease-in-out;\n        }\n        .area:hover {\n          opacity: 1;\n        }\n        button {\n          width: 100%;\n          text-align: left;\n          -webkit-justify-content: flex-start;\n          justify-content: flex-start;\n          height: 32px;\n          padding: 4px;\n          margin: 0;\n          border-radius: 0;\n          display: block;\n          overflow: hidden;\n          min-height: 24px;\n          font-size: 10px;\n          color: black;\n        }\n        #drag hax-context-item:hover,\n        button:hover {\n          cursor: pointer;\n        }\n        simple-icon {\n          padding: 0 2px;\n          --simple-icon-height: 16px;\n          --simple-icon-width: 16px;\n        }\n        :host(.hax-context-pin-top) .area {\n          position: fixed;\n          top: 28px;\n          margin-left: -2px;\n          flex-direction: column;\n        }\n      "]);

    _templateObject_e0813f20577c11eb974577f038855fc7 = function _templateObject_e0813f20577c11eb974577f038855fc7() {
      return data;
    };

    return data;
  }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `hax-plate-context`
   * `A context menu that provides common grid plate based authoring options.`
   * @microcopy - the mental model for this element
   * - context menu - this is a menu of text based buttons and events for use in a larger solution.
   * - grid plate - the container / full HTML tag which can have operations applied to it.
   */
  var HaxPlateContext = /*#__PURE__*/function (_SimpleTourFinder) {
    babelHelpers.inherits(HaxPlateContext, _SimpleTourFinder);

    var _super = _createSuper(HaxPlateContext);

    babelHelpers.createClass(HaxPlateContext, null, [{
      key: "styles",

      /**
       * LitElement constructable styles enhancement
       */
      get: function get() {
        return [(0, _litElement.css)(_templateObject_e0813f20577c11eb974577f038855fc7())];
      }
    }]);

    function HaxPlateContext() {
      var _this;

      babelHelpers.classCallCheck(this, HaxPlateContext);
      _this = _super.call(this);
      _this.hasActiveEditingElement = false;
      _this.haxUIElement = true;
      _this.tourName = "hax";
      return _this;
    }

    babelHelpers.createClass(HaxPlateContext, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject2_e0813f20577c11eb974577f038855fc7(), this.hasActiveEditingElement, this.hasActiveEditingElement, this.hasActiveEditingElement, this.hasActiveEditingElement, this.hasActiveEditingElement, this.hasActiveEditingElement, this.hasActiveEditingElement);
      }
    }, {
      key: "__updatePlatePosition",
      value: function __updatePlatePosition(active) {
        var right = this.shadowRoot.querySelector("#right");
        var rightremove = this.shadowRoot.querySelector("#rightremove"); // support for enabling or disabling

        right.disabled = false;
        rightremove.disabled = false;

        if (active && active.tagName == "GRID-PLATE") {
          if (active.layout == "1-1-1-1-1-1") {
            right.disabled = true;
          }
        } else {
          rightremove.disabled = true;
        }
      }
    }, {
      key: "firstUpdated",
      value: function firstUpdated(changedProperties) {
        var _this2 = this;

        babelHelpers.get(babelHelpers.getPrototypeOf(HaxPlateContext.prototype), "firstUpdated", this).call(this, changedProperties);
        (0, _mobxEsm.autorun)(function () {
          var activeNode = (0, _mobxEsm.toJS)(_haxStore.HAXStore.activeNode);

          if (activeNode && _this2.getAttribute("on-screen")) {
            _this2.__updatePlatePosition(activeNode);
          }
        });
        (0, _mobxEsm.autorun)(function () {
          if ((0, _mobxEsm.toJS)(_haxStore.HAXStore.activeEditingElement)) {
            _this2.hasActiveEditingElement = true;
          } else {
            _this2.hasActiveEditingElement = false;
          }
        });
        this.shadowRoot.querySelector("#drag").addEventListener("dragstart", this._dragStart);
        this.shadowRoot.querySelector("#drag").addEventListener("dragend", this._dragEnd);
      }
      /**
       * When we end dragging ensure we remove the mover class.
       */

    }, {
      key: "_dragEnd",
      value: function _dragEnd(e) {
        _haxStore.HAXStore._lockContextPosition = false;
      }
      /**
       * Drag start so we know what target to set
       */

    }, {
      key: "_dragStart",
      value: function _dragStart(e) {
        var target = (0, _mobxEsm.toJS)(_haxStore.HAXStore.activeNode);
        _haxStore.HAXStore.__dragTarget = target;
        _haxStore.HAXStore._lockContextPosition = true; // wipe the add context menu for motion

        _haxStore.HAXStore.activeHaxBody.__activeHover = null;

        _haxStore.HAXStore.activeHaxBody._hideContextMenu(_haxStore.HAXStore.activeHaxBody.contextMenus.add);

        if (e.dataTransfer) {
          e.dataTransfer.effectAllowed = "move";
          e.dataTransfer.dropEffect = "move";
          e.dataTransfer.setDragImage(target, -20, -20);
        }

        e.stopPropagation();
        e.stopImmediatePropagation();
      }
      /**
       * LitElement / popular convention
       */

    }], [{
      key: "tag",
      get: function get() {
        return "hax-plate-context";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          hasActiveEditingElement: {
            type: Boolean
          }
        };
      }
    }]);
    return HaxPlateContext;
  }((0, _SimpleTourFinder2.SimpleTourFinder)(_litElement.LitElement));

  _exports.HaxPlateContext = HaxPlateContext;
  window.customElements.define(HaxPlateContext.tag, HaxPlateContext);
});