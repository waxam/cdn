define(["exports", "../../../lit-element/lit-element.js", "../../../@polymer/paper-button/paper-button.js", "../../../@polymer/iron-icon/iron-icon.js"], function (_exports, _litElement, _paperButton, _ironIcon) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HaxBloxBrowserItem = void 0;

  function _templateObject2_e9fde2801bb211eabd7cc30119585ddb() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: flex;\n        }\n        paper-button {\n          color: black;\n          background-color: #ffffff;\n          border: 2px solid var(--hax-color-border-outline);\n          text-transform: none;\n          margin: 0;\n          height: 80px !important;\n          width: 100%;\n          display: flex;\n          border-radius: 0;\n          min-width: unset;\n          --paper-button-ink-color: var(--hax-ink-color, black);\n          box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n            0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n          transition: box-shadow 0.3s;\n        }\n        paper-button:hover,\n        paper-button:focus {\n          box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 0.14),\n            0 2px 10px 0 rgba(0, 0, 0, 0.12), 0 6px 2px -4px rgba(0, 0, 0, 0.2);\n        }\n        paper-button:active {\n          box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n            0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n        }\n        paper-button .item-title {\n          font-size: 14px;\n          display: inline-flex;\n        }\n        .flip-icon {\n          transform: rotateY(180deg);\n        }\n        iron-icon {\n          width: 40px;\n          height: 40px;\n          display: inline-block;\n          color: black;\n        }\n        @media screen and (max-width: 550px) {\n          paper-button .item-title {\n            font-size: 12px;\n          }\n        }\n      "]);

    _templateObject2_e9fde2801bb211eabd7cc30119585ddb = function _templateObject2_e9fde2801bb211eabd7cc30119585ddb() {
      return data;
    };

    return data;
  }

  function _templateObject_e9fde2801bb211eabd7cc30119585ddb() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <paper-button\n        id=\"button\"\n        @click=\"", "\"\n        .data-voicecommand=\"select ", "\"\n      >\n        <div class=\"button-inner\">\n          <iron-icon icon=\"", "\"></iron-icon>\n          <div class=\"item-title\">", "</div>\n        </div>\n      </paper-button>\n    "]);

    _templateObject_e9fde2801bb211eabd7cc30119585ddb = function _templateObject_e9fde2801bb211eabd7cc30119585ddb() {
      return data;
    };

    return data;
  }

  /**
   * `hax-blox-browser-item`
   * @customElement hax-blox-browser-item
   * `A button on the hax-gizmo-browser app display`
   */
  var HaxBloxBrowserItem =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(HaxBloxBrowserItem, _LitElement);

    function HaxBloxBrowserItem() {
      babelHelpers.classCallCheck(this, HaxBloxBrowserItem);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(HaxBloxBrowserItem).apply(this, arguments));
    }

    babelHelpers.createClass(HaxBloxBrowserItem, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_e9fde2801bb211eabd7cc30119585ddb(), this._fireEvent, this.title, this.icon, this.title);
      }
    }, {
      key: "_fireEvent",

      /**
       * Fire an event that includes the eventName of what was just pressed.
       */
      value: function _fireEvent(e) {
        var content = "";

        for (var i = 0; i < this.blox.length; i++) {
          var node = window.HaxStore.haxElementToNode(this.blox[i].tag, this.blox[i].content, this.blox[i].properties);
          content += window.HaxStore.nodeToContent(node);
        } // generate a hax element


        var blox = {
          tag: "grid-plate",
          properties: {
            layout: this.layout
          },
          content: content
        };
        this.dispatchEvent(new CustomEvent("hax-insert-content", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: blox
        }));
        window.HaxStore.write("openDrawer", false, this);
      }
    }], [{
      key: "styles",
      get: function get() {
        return [(0, _litElement.css)(_templateObject2_e9fde2801bb211eabd7cc30119585ddb())];
      }
    }, {
      key: "tag",
      get: function get() {
        return "hax-blox-browser-item";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * Title
           */
          title: {
            type: String
          },

          /**
           * Index position in the original list of imports
           */
          bloxReference: {
            type: Object
          },

          /**
           * icon for the button, optional.
           */
          icon: {
            type: String
          },

          /**
           * Author related to this gizmo
           */
          author: {
            type: String
          },

          /**
           * Description for this.
           */
          description: {
            type: String
          },

          /**
           * Examples, optional.
           */
          examples: {
            type: Array
          },

          /**
           * Status, whether disabled, enabled, or other future states.
           */
          status: {
            type: Array
          },

          /**
           * Layout string to use
           */
          layout: {
            type: String
          },

          /**
           * Tag
           */
          tag: {
            type: String
          }
        };
      }
    }]);
    return HaxBloxBrowserItem;
  }(_litElement.LitElement);

  _exports.HaxBloxBrowserItem = HaxBloxBrowserItem;
  window.customElements.define(HaxBloxBrowserItem.tag, HaxBloxBrowserItem);
});