define(["../../../@polymer/polymer/polymer-legacy.js","../../../@polymer/paper-toggle-button/paper-toggle-button.js","../../../@polymer/paper-card/paper-card.js","../../../@polymer/paper-tabs/paper-tabs.js","../../../@polymer/paper-tabs/paper-tab.js","../../../@polymer/paper-button/paper-button.js","../../../@polymer/paper-input/paper-textarea.js","../../../@polymer/iron-icons/iron-icons.js","../../eco-json-schema-form/eco-json-schema-form.js","../../eco-json-schema-form/lib/eco-json-schema-object.js","../../code-editor/code-editor.js","../../../app-datepicker/app-datepicker.js","../../simple-picker/simple-picker.js","../../simple-icon-picker/simple-icon-picker.js","../../simple-colors/lib/simple-colors-picker.js","../../paper-input-flagged/paper-input-flagged.js","../../simple-colors/simple-colors.js","./hax-shared-styles.js"],function(_polymerLegacy,_paperToggleButton,_paperCard,_paperTabs,_paperTab,_paperButton,_paperTextarea,_ironIcons,_ecoJsonSchemaForm,_ecoJsonSchemaObject,_codeEditor,_appDatepicker,_simplePicker,_simpleIconPicker,_simpleColorsPicker,_paperInputFlagged,_simpleColors,_haxSharedStyles){"use strict";function _templateObject_7936cff062ec11e9ba56c1f762879bb4(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style include=\"simple-colors hax-shared-styles\">\n      :host {\n        display: block;\n        background-color: #ffffff;\n        overflow: hidden;\n      }\n      paper-card.form-wrapper {\n        margin: 0;\n        padding: 0 16px 80px 16px;\n        width: 100%;\n        min-height: 160px;\n        background-color: transparent;\n        overflow: auto;\n        height: 100%;\n      }\n\n      eco-json-schema-object {\n        width: 50%;\n      }\n      #form {\n        --eco-json-schema-object-form: {\n          display: block !important;\n        }\n      }\n\n      #modetabs {\n        height: 64px;\n        padding: 0px;\n        margin: 16px 0 0 0;\n        box-sizing: content-box;\n        color: var(--hax-color-text);\n        text-align: center;\n        background-color: transparent;\n        border-bottom: 1px solid var(--hax-color-border-outline);\n        display: block;\n        justify-content: space-evenly;\n        --paper-tabs-selection-bar-color: var(--hax-color-accent1);\n        --paper-tabs: {\n          background: transparent;\n        }\n      }\n\n      #modetabs paper-tab {\n        display: inline-flex;\n        height: 100%;\n        --paper-tab-ink: var(--hax-color-accent1);\n        --paper-tab: {\n          font-size: 16px;\n        }\n      }\n      #modetabs paper-tab paper-button {\n        min-width: unset;\n        width: 100%;\n        background-color: var(--hax-color-accent1);\n        color: var(--hax-color-accent1-text);\n      }\n      eco-json-schema-object {\n        color: var(--hax-text-color);\n        --eco-json-schema-object-form : {\n          -ms-flex: unset;\n          -webkit-flex: unset;\n          flex: unset;\n          -webkit-flex-basis: unset;\n          flex-basis: unset;\n        }\n      }\n    </style>\n    <paper-tabs\n      id=\"modetabs\"\n      selected=\"{{modeTab}}\"\n      attr-for-selected=\"data-mode\"\n    >\n      <paper-tab id=\"configurebutton\" data-mode=\"configure\"\n        ><paper-button raised=\"\" noink=\"\">Configure</paper-button></paper-tab\n      >\n      <paper-tab id=\"advancedbutton\" data-mode=\"advanced\"\n        ><paper-button raised=\"\" noink=\"\">Advanced</paper-button></paper-tab\n      >\n    </paper-tabs>\n    <paper-card class=\"form-wrapper\">\n      <eco-json-schema-object\n        id=\"form\"\n        schema=\"[[schema]]\"\n        value=\"{{value}}\"\n      ></eco-json-schema-object>\n    </paper-card>\n  "]);_templateObject_7936cff062ec11e9ba56c1f762879bb4=function _templateObject_7936cff062ec11e9ba56c1f762879bb4(){return data};return data}/**
 * `hax-schema-form`
 * `An element that can generate a form from HAXschema`
 * @demo demo/index.html
 * @microcopy - the mental model for this element
 *  - source - a json object from some place loaded in remotely which will then be in json-schema format. This will then be parsed into a form which can be used to manipulate the element.
 */(0,_polymerLegacy.Polymer)({_template:(0,_polymerLegacy.html)(_templateObject_7936cff062ec11e9ba56c1f762879bb4()),is:"hax-schema-form",properties:{/**
     * Returned value from the form input.
     */initialValue:{type:Object,notify:!0/* transition */ /* transition */,value:{},observer:"_valueChanged"},value:{type:Object,notify:!0,value:{}},/**
     * State of mode tabs.
     */modeTab:{type:String,observer:"_editorModeChanged"},/**
     * If this is the advancedForm or not. Default to not but slider allows
     * switching mode for the form to be presented.
     */advancedForm:{type:Boolean,value:!1},/**
     * If we should show source view or not.
     */canEditSource:{type:Boolean},/**
     * Form key from hax to target.
     */formKey:{type:String,computed:"_computedFormKey(advancedForm)",observer:"_formKeyChanged"},/**
     * JSON Schema.
     */schema:{type:Object},/**
     * JSON Schema.
     */configureSchema:{type:Object,value:{schema:{}}},/**
     * JSON Schema.
     */advancedSchema:{type:Object,value:{schema:{}}}},/**
   * Compute form key to use.
   */_computedFormKey:function _computedFormKey(advanced){if(advanced){return"advanced"}else{return"configure"}},/**
   * Form key changed, rebuild schema for the form.
   */_formKeyChanged:function _formKeyChanged(newValue,oldValue){if(newValue){if("advanced"===newValue){this.set("schema",this.advancedSchema)}else{this.set("schema",this.configureSchema)}this.notifyPath("schema.*")}},/**
   * Value in the form has changed, reflect to the preview.
   */_valueChanged:function _valueChanged(newValue){if(newValue&&this.schema){for(var i in newValue){console.log(this.schema);console.log(i);this.schema[i].value=newValue[i]}}},/**
   * Editor mode changed handler
   */_editorModeChanged:function _editorModeChanged(mode){if(mode){// if it's the advanced setting then toggle the advancedForm setting
if("advanced"===mode){this.advancedForm=!0}else{this.advancedForm=!1}}}})});