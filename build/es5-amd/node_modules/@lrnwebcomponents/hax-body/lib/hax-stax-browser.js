define(["exports","require","../../../@polymer/polymer/polymer-element.js","../../../@polymer/polymer/lib/utils/async.js","../../../@polymer/iron-list/iron-list.js"],function(_exports,_require,_polymerElement,_async,_ironList){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.HaxStaxBrowser=void 0;_require=babelHelpers.interopRequireWildcard(_require);function _templateObject_996b9da0a44b11e98c881fc26e93d8f9(){var data=babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n        }\n        hax-stax-browser-item {\n          margin: 10px;\n          -webkit-transition: 0.3s all linear;\n          transition: 0.3s all linear;\n        }\n        #ironlist {\n          min-height: 50vh;\n        }\n      </style>\n      <iron-list id=\"ironlist\" items=\"[[__staxList]]\" as=\"stax\" grid=\"\">\n        <template>\n          <div class=\"stax-container\">\n            <hax-stax-browser-item\n              index=\"[[stax.index]]\"\n              title=\"[[stax.details.title]]\"\n              tag=\"[[stax.details.tag]]\"\n              image=\"[[stax.details.image]]\"\n              author=\"[[stax.details.author]]\"\n              teaser=\"[[stax.details.teaser]]\"\n              description=\"[[stax.details.description]]\"\n              examples=\"[[stax.details.examples]]\"\n              status=\"[[stax.details.status]]\"\n              stax=\"[[stax.stax]]\"\n            ></hax-stax-browser-item>\n          </div>\n        </template>\n      </iron-list>\n    "]);_templateObject_996b9da0a44b11e98c881fc26e93d8f9=function _templateObject_996b9da0a44b11e98c881fc26e93d8f9(){return data};return data}/**
 * `hax-stax-browser`
 * `Select a stack / template to insert`
 * @microcopy - the mental model for this element
 * - stax - silly name for the general public when talking about custom elements and what it provides in the end.
 */var HaxStaxBrowser=/*#__PURE__*/function(_PolymerElement){babelHelpers.inherits(HaxStaxBrowser,_PolymerElement);function HaxStaxBrowser(){var _this;babelHelpers.classCallCheck(this,HaxStaxBrowser);_this=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(HaxStaxBrowser).call(this));new Promise(function(res,rej){return _require.default(["./hax-stax-browser-item.js"],res,rej)});document.body.addEventListener("hax-store-property-updated",_this._haxStorePropertyUpdated.bind(babelHelpers.assertThisInitialized(_this)));return _this}babelHelpers.createClass(HaxStaxBrowser,[{key:"connectedCallback",/**
   * life cycle
   */value:function connectedCallback(){babelHelpers.get(babelHelpers.getPrototypeOf(HaxStaxBrowser.prototype),"connectedCallback",this).call(this);this.resetBrowser()}/**
   * Store updated, sync.
   */},{key:"_haxStorePropertyUpdated",value:function _haxStorePropertyUpdated(e){if(e.detail&&babelHelpers.typeof(e.detail.value)!==("undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))&&e.detail.property){// make sure we set array's empty first to force a repaint of paths
if(babelHelpers.typeof(this[e.detail.property])!==("undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))&&null!=this[e.detail.property]&&babelHelpers.typeof(this[e.detail.property].length)!==("undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))){this.set(e.detail.property,[])}this.set(e.detail.property,e.detail.value)}}/**
   * Notice staxList changing.
   */},{key:"_staxListChanged",value:function _staxListChanged(newValue,oldValue){if(babelHelpers.typeof(newValue)!==("undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))){this.set("__staxList",newValue)}}/**
   * Reset this browser.
   */},{key:"resetBrowser",value:function resetBrowser(){var _this2=this;_async.microTask.run(function(){setTimeout(function(){_this2.shadowRoot.querySelector("#ironlist").dispatchEvent(new CustomEvent("iron-resize",{bubbles:!0,cancelable:!0,composed:!0,detail:!0}));window.dispatchEvent(new Event("resize"))},100)})}}],[{key:"template",get:function get(){return(0,_polymerElement.html)(_templateObject_996b9da0a44b11e98c881fc26e93d8f9())}},{key:"tag",get:function get(){return"hax-stax-browser"}},{key:"properties",get:function get(){return{/**
       * The list of stax
       */staxList:{type:Array,observer:"_staxListChanged"}}}}]);return HaxStaxBrowser}(_polymerElement.PolymerElement);_exports.HaxStaxBrowser=HaxStaxBrowser;window.customElements.define(HaxStaxBrowser.tag,HaxStaxBrowser)});