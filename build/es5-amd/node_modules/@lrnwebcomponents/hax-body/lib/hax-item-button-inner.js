define(["exports", "../../../@polymer/polymer/polymer-element.js", "../../simple-colors/simple-colors.js", "./hax-shared-styles.js", "../../../@polymer/iron-icons/iron-icons.js", "../../../@polymer/iron-icons/editor-icons.js", "../../../@polymer/iron-icons/device-icons.js", "../../../@polymer/iron-icons/hardware-icons.js", "../../../@polymer/iron-icons/communication-icons.js", "../../../@polymer/iron-icons/social-icons.js", "../../../@polymer/iron-icons/av-icons.js", "../../../@polymer/iron-icons/maps-icons.js", "../../../@polymer/iron-icons/places-icons.js", "../../../@polymer/iron-image/iron-image.js"], function (_exports, _polymerElement, _simpleColors, _haxSharedStyles, _ironIcons, _editorIcons, _deviceIcons, _hardwareIcons, _communicationIcons, _socialIcons, _avIcons, _mapsIcons, _placesIcons, _ironImage) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HaxItemButtonInner = void 0;

  function _templateObject_08bb3a00e48211e9b5c6f7b0a264592f() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <style include=\"simple-colors-shared-styles hax-shared-styles\">\n        :host {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n        }\n        .button-inner {\n          width: 30px;\n          height: 30px;\n          padding: 5px;\n          background-color: var(--simple-colors-default-theme-accent-7, #000);\n          border-radius: 50%;\n          box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n            0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n          -webkit-transition: box-shadow 0.3s;\n          -moz-transition: box-shadow 0.3s;\n          -ms-transition: box-shadow 0.3s;\n          -o-transition: box-shadow 0.3s;\n          transition: box-shadow 0.3s;\n        }\n        .button-inner:hover,\n        .button-inner:focus {\n          box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 0.14),\n            0 2px 10px 0 rgba(0, 0, 0, 0.12), 0 6px 2px -4px rgba(0, 0, 0, 0.2);\n        }\n        .button-inner:active {\n          box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),\n            0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);\n        }\n        iron-icon {\n          width: 30px;\n          height: 30px;\n          color: var(--simple-colors-default-theme-grey-1, #fff);\n        }\n        .item-label {\n          margin-top: 8px;\n          color: var(--simple-colors-default-theme-grey-12, #000);\n          width: 70px;\n          font-size: 12px;\n          line-height: 12px;\n          height: 12px;\n          text-align: center;\n        }\n        .flip-icon {\n          transform: rotateY(180deg);\n        }\n      </style>\n      <div class=\"button-inner\">\n        <iron-icon icon=\"[[icon]]\" hidden$=\"[[!icon]]\"></iron-icon>\n        <iron-image\n          src=\"[[image]]\"\n          preload\n          sizing=\"cover\"\n          hidden$=\"[[!image]]\"\n        ></iron-image>\n      </div>\n      <div class=\"item-label\">[[label]]</div>\n    "]);

    _templateObject_08bb3a00e48211e9b5c6f7b0a264592f = function _templateObject_08bb3a00e48211e9b5c6f7b0a264592f() {
      return data;
    };

    return data;
  }

  /**
  `hax-item-button-inner`
  A button on the hax-gizmo-browser app display
  
  * @demo demo/index.html
  
  @microcopy - the mental model for this element
   - 
  */
  var HaxItemButtonInner =
  /*#__PURE__*/
  function (_SimpleColors) {
    babelHelpers.inherits(HaxItemButtonInner, _SimpleColors);

    function HaxItemButtonInner() {
      babelHelpers.classCallCheck(this, HaxItemButtonInner);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(HaxItemButtonInner).call(this));
    }

    babelHelpers.createClass(HaxItemButtonInner, [{
      key: "_getAccentColor",
      value: function _getAccentColor(color) {
        color = color.replace("-text", "");

        if ((!this.accentColor || this.accentColor === "grey") && this.colors[color]) {
          this.accentColor = color;
        }
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_08bb3a00e48211e9b5c6f7b0a264592f());
      }
    }, {
      key: "tag",
      get: function get() {
        return "hax-item-button-inner";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * label
           */
          label: {
            type: String
          },

          /**
           * Icon for the button, optional.
           */
          icon: {
            type: String
          },

          /**
           * Image for the button, optional.
           */
          image: {
            type: String,
            value: false
          },

          /**
           * color name of the item
           */
          color: {
            type: String,
            observer: "_getAccentColor"
          }
        };
      }
    }]);
    return HaxItemButtonInner;
  }(_simpleColors.SimpleColors);

  _exports.HaxItemButtonInner = HaxItemButtonInner;
  window.customElements.define(HaxItemButtonInner.tag, HaxItemButtonInner);
});