define(["exports", "../../../lit-element/lit-element.js", "../../simple-colors/simple-colors.js", "../../../@polymer/iron-icons/iron-icons.js", "../../../@polymer/iron-icons/editor-icons.js", "../../../@polymer/iron-icons/device-icons.js", "../../../@polymer/iron-icons/hardware-icons.js", "../../../@polymer/iron-icons/communication-icons.js", "../../../@polymer/iron-icons/social-icons.js", "../../../@polymer/iron-icons/av-icons.js", "../../../@polymer/iron-icons/maps-icons.js", "../../../@polymer/iron-icons/places-icons.js"], function (_exports, _litElement, _simpleColors, _ironIcons, _editorIcons, _deviceIcons, _hardwareIcons, _communicationIcons, _socialIcons, _avIcons, _mapsIcons, _placesIcons) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HaxItemButtonInner = void 0;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _templateObject2_4b63f130494a11eab3124f20b4f7a7f7() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      :host {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      }\n      .button-inner {\n        width: 30px;\n        height: 30px;\n        padding: 5px;\n        background-color: var(--simple-colors-default-theme-accent-7, #000);\n        border-radius: 50%;\n      }\n      iron-icon {\n        width: 30px;\n        height: 30px;\n        color: var(--simple-colors-default-theme-grey-1, #fff);\n      }\n      .item-label {\n        margin-top: 8px;\n        color: var(--simple-colors-default-theme-grey-12, #000);\n        width: 70px;\n        font-size: 12px;\n        line-height: 12px;\n        height: 12px;\n        text-align: center;\n        text-overflow: ellipsis;\n        overflow: hidden;\n        word-break: break-all;\n      }\n      .flip-icon {\n        transform: rotateY(180deg);\n      }\n    "]);

    _templateObject2_4b63f130494a11eab3124f20b4f7a7f7 = function _templateObject2_4b63f130494a11eab3124f20b4f7a7f7() {
      return data;
    };

    return data;
  }

  function _templateObject_4b63f130494a11eab3124f20b4f7a7f7() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <div class=\"button-inner\">\n        <iron-icon icon=\"", "\" ?hidden=\"", "\"></iron-icon>\n      </div>\n      <div class=\"item-label\">", "</div>\n    "]);

    _templateObject_4b63f130494a11eab3124f20b4f7a7f7 = function _templateObject_4b63f130494a11eab3124f20b4f7a7f7() {
      return data;
    };

    return data;
  }

  /**
   * `hax-item-button-inner`
   * @customElement hax-item-button-inner
   * `A button on the hax-gizmo-browser app display`
   * @demo demo/index.html
   */
  var HaxItemButtonInner =
  /*#__PURE__*/
  function (_SimpleColors) {
    babelHelpers.inherits(HaxItemButtonInner, _SimpleColors);

    function HaxItemButtonInner() {
      babelHelpers.classCallCheck(this, HaxItemButtonInner);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(HaxItemButtonInner).apply(this, arguments));
    }

    babelHelpers.createClass(HaxItemButtonInner, [{
      key: "render",

      /**
       * LitElement life cycle - render
       */
      value: function render() {
        return (0, _litElement.html)(_templateObject_4b63f130494a11eab3124f20b4f7a7f7(), this.icon, !this.icon, this.label);
      }
    }, {
      key: "updated",

      /**
       * LitElement life cycle - properties changed
       */
      value: function updated(changedProperties) {
        var _this = this;

        if (babelHelpers.get(babelHelpers.getPrototypeOf(HaxItemButtonInner.prototype), "updated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(HaxItemButtonInner.prototype), "updated", this).call(this, changedProperties);
        }

        changedProperties.forEach(function (oldValue, propName) {
          if (propName == "color") {
            _this._getAccentColor(_this[propName], oldValue);
          }
        });
      }
    }, {
      key: "_getAccentColor",
      value: function _getAccentColor(color) {
        if ((!this.accentColor || this.accentColor === "grey") && this.colors[color]) {
          this.accentColor = color;
        }
      }
    }], [{
      key: "styles",

      /**
       * LitElement life cycle - styles addition
       */
      get: function get() {
        var styles = [];

        if (babelHelpers.get(babelHelpers.getPrototypeOf(HaxItemButtonInner), "styles", this)) {
          styles = babelHelpers.get(babelHelpers.getPrototypeOf(HaxItemButtonInner), "styles", this);
        }

        styles.push((0, _litElement.css)(_templateObject2_4b63f130494a11eab3124f20b4f7a7f7()));
        return styles;
      }
    }, {
      key: "tag",
      get: function get() {
        return "hax-item-button-inner";
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(HaxItemButtonInner), "properties", this), {
          /**
           * label
           */
          label: {
            type: String
          },

          /**
           * Icon for the button, optional.
           */
          icon: {
            type: String
          },

          /**
           * color name of the item
           */
          color: {
            type: String
          }
        });
      }
    }]);
    return HaxItemButtonInner;
  }(_simpleColors.SimpleColors);

  _exports.HaxItemButtonInner = HaxItemButtonInner;
  window.customElements.define(HaxItemButtonInner.tag, HaxItemButtonInner);
});