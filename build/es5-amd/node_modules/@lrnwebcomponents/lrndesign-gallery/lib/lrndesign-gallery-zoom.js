define(["exports", "../../../lit-element/lit-element.js", "../../simple-modal/lib/simple-modal-template.js", "../../img-pan-zoom/img-pan-zoom.js", "../../simple-tooltip/simple-tooltip.js", "./lrndesign-gallery-details.js"], function (_exports, _litElement, _simpleModalTemplate, _imgPanZoom, _simpleTooltip, _lrndesignGalleryDetails) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrndesignGalleryZoom = void 0;

  function _templateObject2_6958a0e0d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n          background-color: none;\n        }\n        :host([hidden]) {\n          display: none;\n        }\n        #zoombtn {\n          display: block;\n          width: 100%;\n          padding: 0;\n          margin: 0;\n          border-width: 0;\n          background-color: transparent;\n        }\n        simple-modal-template[modal-id=\"zoomdialog\"] {\n          --simple-modal-width: 75vw;\n          --simple-modal-height: 75vh;\n          --simple-modal-titlebar-color: var(\n            --lrndesign-gallery-dialog-titlebar-color\n          );\n          --simple-modal-titlebar-background: var(\n            --lrndesign-gallery-dialog-titlebar-background-color\n          );\n          --simple-modal-header-color: var(\n            --lrndesign-gallery-dialog-header-color\n          );\n          --simple-modal-header-background: var(\n            --lrndesign-gallery-dialog-header-background-color\n          );\n          --simple-modal-content-container-color: var(\n            --lrndesign-gallery-dialog-color\n          );\n          --simple-modal-content-container-background: var(\n            --lrndesign-gallery-dialog-background-color\n          );\n        }\n      "]);

    _templateObject2_6958a0e0d34d11ea880ba1e93364c49c = function _templateObject2_6958a0e0d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  function _templateObject_6958a0e0d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <button id=\"zoombtn\" @click=\"", "\" aria-label=\"", "\">\n        <slot></slot>\n      </button>\n      <simple-tooltip for=\"zoombtn\" position=\"right\" controls=\"zoomtpl\"\n        >", "</simple-tooltip\n      >\n      <simple-modal-template id=\"zoomtpl\" title=\"", "\">\n        <lrndesign-gallery-details\n          id=\"details\"\n          slot=\"header\"\n          ?hidden=\"", "\"\n          details=\"", "\"\n        >\n        </lrndesign-gallery-details>\n\n        <div slot=\"content\" ?hidden=\"", "\">\n          <img-pan-zoom\n            alt=\"", "\"\n            src=\"", "\"\n            max-zoom-pixel-ratio=\"1.5\"\n            min-zoom-image-ratio=\"0.5\"\n            zoom-per-click=\"1.2\"\n            zoom-per-scroll=\"0.6\"\n          >\n          </img-pan-zoom>\n          <div>\n            Swipe, use a mouse or use the +/- and arrow keys to zoom and pan the\n            image above.\n          </div>\n        </div>\n      </simple-modal-template>\n    "]);

    _templateObject_6958a0e0d34d11ea880ba1e93364c49c = function _templateObject_6958a0e0d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  /**
   * `lrndesign-gallery-zoom`
   * An element that renders the zoom feature for the gallery.
   * 
   * @element lrndesign-gallery-zoom
   *
   * @microcopy - language worth noting:```
  <lrndesign-gallery-zoom 
    details="Text details about the image." //optional text about the image
    heading="Image title"                  //required, image dialog title
    item-id="0"                             //required, index of the item to view
    src="${this.item.large}"                   //required, full-sized image
    tooltip="${this.item.tooltip}"             //required, tooltip text
    zoom-alt="${this.item.alt}"                //required, alt text for the image
    tooltip="ZOOM"                       
  </lrndesign-gallery-zoom>```
   *
   * CSS Variables: ```
  --lrndesign-gallery-dialog-color                        //text color of dialog
  --lrndesign-gallery-dialog-background-color             //background-color of dialog
  --lrndesign-gallery-dialog-titlebar-color               //text color of dialog titlebar
  --lrndesign-gallery-dialog-titlebar-background-color    //background-color of dialog titlebar
  --lrndesign-gallery-dialog-header-color                 //text color of dialog header
  --lrndesign-gallery-dialog-header-background-color      //background-color of dialog header```
   * 
   */
  var LrndesignGalleryZoom =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(LrndesignGalleryZoom, _LitElement);
    babelHelpers.createClass(LrndesignGalleryZoom, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_6958a0e0d34d11ea880ba1e93364c49c(), this.zoom, this.tooltip, this.tooltip, this.heading, !this.details || this.details === "", this.details || "", !this.src || this.src === "", this.zoomAlt, this.src);
      } // properties available to the custom element for data binding

    }], [{
      key: "tag",

      /**
       * Store the tag name to make it easier to obtain directly.
       */
      get: function get() {
        return "lrndesign-gallery-zoom";
      }
    }, {
      key: "styles",
      get: function get() {
        return [(0, _litElement.css)(_templateObject2_6958a0e0d34d11ea880ba1e93364c49c())];
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * heading for zoom modal
           */
          heading: {
            type: String
          },

          /**
           * details for zoom modal
           */
          details: {
            type: String
          },

          /**
           * Image source.
           */
          src: {
            type: String,
            reflect: true,
            attribute: "src"
          },

          /**
           * tooltip for the zoom button
           */
          tooltip: {
            type: String
          },

          /**
           * gallery item's alt text
           */
          zoomAlt: {
            type: String,
            attribute: "zoom-alt"
          }
        };
      }
      /**
       * life cycle, element is ready
       */

    }]);

    function LrndesignGalleryZoom() {
      var _this;

      babelHelpers.classCallCheck(this, LrndesignGalleryZoom);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(LrndesignGalleryZoom).call(this));
      _this.heading = "Image Zoom";
      _this.details = "";
      _this.src = "";
      _this.tooltip = "Zoom In";
      _this.zoomAlt = "Full-sized Image";
      return _this;
    }

    babelHelpers.createClass(LrndesignGalleryZoom, [{
      key: "zoom",

      /**
       * opens the modal
       */
      value: function zoom() {
        if (this.button && this.modal) {
          this.modal.openModal(this.button);
          var event = new CustomEvent("gallery-zoom", {
            detail: this
          });
          this.button.dispatchEvent(event);
        }
      }
    }, {
      key: "button",
      get: function get() {
        return this.shadowRoot && this.shadowRoot.querySelector("#zoombtn") ? this.shadowRoot.querySelector("#zoombtn") : false;
      }
    }, {
      key: "modal",
      get: function get() {
        return this.shadowRoot && this.shadowRoot.querySelector("#zoomtpl") ? this.shadowRoot.querySelector("#zoomtpl") : false;
      }
    }]);
    return LrndesignGalleryZoom;
  }(_litElement.LitElement);

  _exports.LrndesignGalleryZoom = LrndesignGalleryZoom;
  window.customElements.define(LrndesignGalleryZoom.tag, LrndesignGalleryZoom);
});