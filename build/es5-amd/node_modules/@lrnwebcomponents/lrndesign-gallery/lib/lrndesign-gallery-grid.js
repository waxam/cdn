define(["exports","../../../@polymer/polymer/polymer-element.js","../../../@polymer/polymer/lib/utils/render-status.js","./lrndesign-gallery-behaviors.js","./lrndesign-gallery-zoom.js","./lrndesign-gallery-details.js"],function(_exports,_polymerElement,_renderStatus,_lrndesignGalleryBehaviors,_lrndesignGalleryZoom,_lrndesignGalleryDetails){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.LrndesignGalleryGrid=void 0;function _templateObject_c3f0ff1083ae11e9bca9910ed3db32b8(){var data=babelHelpers.taggedTemplateLiteral(["\n      <style is=\"custom-style\" include=\"lrndesign-gallery-shared-styles\">\n        :host {\n          margin: 15px 0 0;\n          padding: 0;\n          max-width: 100%;\n          display: block;\n        }\n        :host .gallerythumb div {\n          position: relative;\n          display: flex;\n          align-items: stretch;\n        }\n        :host .gallerythumb div,\n        :host .gallerythumb iron-image {\n          width: 100%;\n        }\n        :host .gallerythumb {\n          width: var(--lrndesign-gallery-grid-thumbnail-xs, 100px);\n        }\n        :host([responsive-size=\"sm\"]) .gallerythumb {\n          width: var(--lrndesign-gallery-grid-thumbnail-sm, 150px);\n        }\n        :host([responsive-size=\"md\"]) .gallerythumb {\n          width: var(--lrndesign-gallery-grid-thumbnail-md, 200px);\n        }\n        :host([responsive-size=\"lg\"]) .gallerythumb {\n          width: var(--lrndesign-gallery-grid-thumbnail-lg, 250px);\n        }\n        :host([responsive-size=\"xl\"]) .gallerythumb {\n          width: var(--lrndesign-gallery-grid-thumbnail-lg, 300px);\n        }\n        :host .gallerythumb iron-icon {\n          position: absolute;\n          bottom: 7px;\n          left: 7px;\n        }\n      </style>\n      <article id=\"grid\">\n        <template is=\"dom-if\" if=\"[[_isAttrSet(title)]]\">\n          <h1 id=\"gallery-title\">[[title]]</h1>\n        </template>\n        <div id=\"gallery-description\"><slot></slot></div>\n        <p class=\"sr-only\">A list of thumbnail buttons items:</p>\n        <div id=\"galleryscreen\">\n          <template id=\"screenlist\" is=\"dom-repeat\" items=\"[[items]]\" as=\"item\">\n            <lrndesign-gallery-zoom\n              anchored-item=\"[[__anchoredItem]]\"\n              class=\"gallerythumb\"\n              details$=\"[[item.details]]\"\n              heading$=\"[[item.heading]]\"\n              item-id=\"[[item.id]]\"\n              on-gallery-scroll=\"_handleScroll\"\n              scrolled$=\"[[item.scroll]]\"\n              src$=\"[[item.large]]\"\n              tooltip$=\"[[item.tooltip]]\"\n              zoom-alt$=\"[[item.zoomAlt]]\"\n              zoomed$=\"[[item.zoom]]\"\n            >\n              <div>\n                <iron-image\n                  alt$=\"[[item.zoomAlt]]\"\n                  fade\n                  sizing=\"cover\"\n                  src$=\"[[item.thumbnail]]\"\n                  style$=\"[[_getImageStyle(items)]]\"\n                >\n                </iron-image>\n              </div>\n              <iron-icon icon=\"zoom-in\"></iron-icon>\n            </lrndesign-gallery-zoom>\n          </template>\n        </div>\n        <div id=\"galleryprint\">\n          <template id=\"printlist\" is=\"dom-repeat\" items=\"[[items]]\" as=\"item\">\n            <section>\n              <template is=\"dom-if\" if=\"[[_isAttrSet(item.title)]]\">\n                <h2>[[item.title]]</h2>\n              </template>\n              <lrndesign-gallery-details\n                details$=\"[[item.details]]\"\n              ></lrndesign-gallery-details>\n              <img\n                class=\"print-image\"\n                alt$=\"[[item.alt]]\"\n                src$=\"[[item.src]]\"\n              />\n            </section>\n          </template>\n        </div>\n      </article>\n    "]);_templateObject_c3f0ff1083ae11e9bca9910ed3db32b8=function _templateObject_c3f0ff1083ae11e9bca9910ed3db32b8(){return data};return data}/**
 * `lrndesign-gallery-grid`
 * `An element that renders a collection of gallery items into a grid or a single media item into a layout.`
 *
 * @microcopy - language worth noting:```
<lrndesign-gallery-grid 
  accent-color="grey"               //optional, the accent color from simple-colors; default is grey
  dark                              //optional, if true, gallery will use the simple-colors dark theme; default is false (fixed-theme)
  id="mygallery1"                   //optional, a unique id for the gallery; if true, you can use the id in anchors to access gallery items on page load
  sources="[]"                      //required, array of image sources
  sizing="contain"                  //optional, "cover" for cropping (default) or "contain" for letterboxing
  title="My Gallery">               //optional, the title of the gallery
  Optional description of the gallery.
</lrndesign-gallery-grid>```
 * where `sources` array is:```
[{
  "alt": "IMAGE ALT TEXT",                          //required
  "details": "TEXT ABOUT IMAGE HERE",               //optional 
  "heading": "IMAGE HEADING HERE",                  //required, the image heading when in zoom mode
  "id": "123"                                       //required, unique id  
  "sizing": "contain",                              //optional, "cover" for cropping (default) or "contain" for letterboxing, default is parent's sizing
  "large": "PATH/TO/LARGE/IMAGE/HERE.JPG",          //optional, larger image for zoom instead of src 
  "src": "PATH/TO/FULL/IMAGE/HERE.JPG",             //required
  "thumbnail": "PATH/TO/THUMBAIL/IMAGE/HERE.JPG",   //required
  "tooltip": "IMAGE TOOLTIP HERE",                  //required, the tooltip for the image thumbnail
  "title": "IMAGE TITLE HERE",                      //optional, the image title when viewed
  "type": "image",                                  //required, "image", "video", "audio", etc.
}]```
 *
 * @customElement
 * @polymer
 * @demo demo/grid.html demo
 */var LrndesignGalleryGrid=/*#__PURE__*/function(_LrndesignGalleryBeha){babelHelpers.inherits(LrndesignGalleryGrid,_LrndesignGalleryBeha);function LrndesignGalleryGrid(){babelHelpers.classCallCheck(this,LrndesignGalleryGrid);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(LrndesignGalleryGrid).apply(this,arguments))}babelHelpers.createClass(LrndesignGalleryGrid,[{key:"_handleScroll",/**
   * handles gallery-scroll event
   */value:function _handleScroll(e){this._scrollIntoView([this._getParentOffset(this),e.path[0].offsetTop])}/**
   * returns the proper padding to maintain image aspect ratio and updates
   *
   * @param {array} an array of items
   * @returns {string} the style based on the first item
   */},{key:"_getImageStyle",value:function _getImageStyle(){var items=0<arguments.length&&arguments[0]!==void 0?arguments[0]:[],img=new Image,padding=75;if(items!==void 0&&0<items.length){img.src=items[0].src;if(0<img.naturalWidth&&0<img.naturalHeight)padding=100*img.naturalHeight/img.naturalWidth}return"padding-bottom: "+padding+"%;"}}],[{key:"tag",/**
   * Store the tag name to make it easier to obtain directly.
   * @notice function name must be here for tooling to operate correctly
   */get:function get(){return"lrndesign-gallery-grid"}},{key:"behaviors",get:function get(){return[_lrndesignGalleryBehaviors.LrndesignGalleryBehaviors]}// render function
},{key:"template",get:function get(){return(0,_polymerElement.html)(_templateObject_c3f0ff1083ae11e9bca9910ed3db32b8())}// properties available to the custom element for data binding
},{key:"properties",get:function get(){return{/**
       * aspect ratio of media
       */imageStyle:{type:String,computed:"_getImageStyle(items)",reflectToAttribute:!0}}}}]);return LrndesignGalleryGrid}(_lrndesignGalleryBehaviors.LrndesignGalleryBehaviors);_exports.LrndesignGalleryGrid=LrndesignGalleryGrid;window.customElements.define(LrndesignGalleryGrid.tag,LrndesignGalleryGrid)});