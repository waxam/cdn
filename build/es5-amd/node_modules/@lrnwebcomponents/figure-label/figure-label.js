define(["exports", "../../lit-element/lit-element.js"], function (_exports, _litElement) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.FigureLabel = void 0;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _templateObject2_7c0e82a0c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n\n        :host([hidden]) {\n          display: none;\n        }\n\n        #wrap {\n          display: flex;\n          margin-bottom: 1em;\n        }\n\n        #title {\n          background-color: #f2f2f2;\n          padding: 10.8px 13.5px 10.8px;\n          font-size: 13.5px;\n        }\n\n        #description {\n          border: solid 1px #f2f2f2;\n          padding: 10.8px 13.5px 10.8px;\n          font-size: 13.5px;\n        }\n      "]);

    _templateObject2_7c0e82a0c96f11ea8be5e1d5fe7ec787 = function _templateObject2_7c0e82a0c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  function _templateObject_7c0e82a0c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <div id=\"wrap\">\n        <div id=\"title\">", "</div>\n        <div id=\"description\">", "</div>\n      </div>\n    "]);

    _templateObject_7c0e82a0c96f11ea8be5e1d5fe7ec787 = function _templateObject_7c0e82a0c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  /**
   * `figure-label`
   * @element figure-label
   * `Figure label element to mark media assets within content.`
   *
   * @microcopy - language worth noting:
   *  -
   *
  
   * @lit-element
   * @demo demo/index.html
   */
  var FigureLabel =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(FigureLabel, _LitElement);

    function FigureLabel() {
      babelHelpers.classCallCheck(this, FigureLabel);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(FigureLabel).apply(this, arguments));
    }

    babelHelpers.createClass(FigureLabel, [{
      key: "render",
      // render function
      value: function render() {
        return (0, _litElement.html)(_templateObject_7c0e82a0c96f11ea8be5e1d5fe7ec787(), this.title, this.description);
      } // haxProperty definition

    }, {
      key: "tag",

      /**
       * Store the tag name to make it easier to obtain directly.
       * @notice function name must be here for tooling to operate correctly
       */
      value: function tag() {
        return "figure-label";
      }
    }], [{
      key: "styles",
      //styles function
      get: function get() {
        return [(0, _litElement.css)(_templateObject2_7c0e82a0c96f11ea8be5e1d5fe7ec787())];
      }
    }, {
      key: "haxProperties",
      get: function get() {
        return {
          canScale: true,
          canPosition: true,
          canEditSource: false,
          gizmo: {
            title: "Figure label",
            description: "Figure label element to mark media assets within content.",
            icon: "icons:android",
            color: "green",
            groups: ["Label"],
            meta: {
              author: "heymp",
              owner: "PSU"
            }
          },
          settings: {
            quick: [],
            configure: [{
              property: "title",
              description: "",
              inputMethod: "textfield",
              required: false,
              icon: "icons:android"
            }, {
              property: "description",
              description: "",
              inputMethod: "textfield",
              required: false,
              icon: "icons:android"
            }],
            advanced: []
          }
        };
      } // properties available to the custom element for data binding

    }, {
      key: "properties",
      get: function get() {
        return _objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(FigureLabel), "properties", this), {
          title: {
            name: "title",
            type: String,
            value: "",
            reflectToAttribute: false,
            observer: false
          },
          description: {
            name: "description",
            type: String,
            value: "",
            reflectToAttribute: false,
            observer: false
          }
        });
      }
    }]);
    return FigureLabel;
  }(_litElement.LitElement);

  _exports.FigureLabel = FigureLabel;
  customElements.define("figure-label", FigureLabel);
});