define(["exports","../../../@polymer/polymer/polymer-element.js"],function(_exports,_polymerElement){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.DeviceLocation=void 0;var DeviceLocation=/*#__PURE__*/function(_PolymerElement){babelHelpers.inherits(DeviceLocation,_PolymerElement);function DeviceLocation(){babelHelpers.classCallCheck(this,DeviceLocation);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(DeviceLocation).apply(this,arguments))}babelHelpers.createClass(DeviceLocation,[{key:"_toggleCentered",value:function _toggleCentered(centered){if(centered){var moveTo=function moveTo(position){self.lat=position.coords.latitude;self.lon=position.coords.longitude;if(self.parentNode.zoomTo&&self.parentNode._map){// TODO when the zoomTo bug is fixed, remove zoom+1
self.parentNode.zoomTo(self.lat,self.lon,self.parentNode.zoom+1)}},self=this,options={enableHighAccuracy:!0,timeout:5e3,maximumAge:0};this._watchID=navigator.geolocation.watchPosition(moveTo,null,options)}else{this._deleteWatch();// TODO replace the marker on the control pane at the center of the map
// with an actual point feature , or simply move that point from
// the control pane to the vector pane
// TODO register a navigator.geolocation.watchPosition function to
// update the location of the above point feature
}}},{key:"disconnectedCallback",value:function disconnectedCallback(){this._deleteWatch();babelHelpers.get(babelHelpers.getPrototypeOf(DeviceLocation.prototype),"disconnectedCallback",this).call(this);// TODO if there is a point associated to this control, remove/delete it
}},{key:"connectedCallback",value:function connectedCallback(){babelHelpers.get(babelHelpers.getPrototypeOf(DeviceLocation.prototype),"connectedCallback",this).call(this);this._deleteWatch();this._createWatch();if(this.parentNode.controls){// add the device-location radio button control to the controls pane
this._map=this.parentNode._map}}},{key:"ready",value:function ready(){babelHelpers.get(babelHelpers.getPrototypeOf(DeviceLocation.prototype),"ready",this).call(this);if(this.centered){var moveTo=function moveTo(position){self.lat=position.coords.latitude;self.lon=position.coords.longitude;if(self.parentNode.zoomTo&&self.parentNode._map){// TODO when the zoomTo bug is fixed, remove zoom+1
self.parentNode.zoomTo(self.lat,self.lon,self.parentNode.zoom+1)}},self=this,options={enableHighAccuracy:!0,timeout:5e3,maximumAge:0};this._watchID=navigator.geolocation.watchPosition(moveTo,null,options)}}},{key:"_deleteWatch",value:function _deleteWatch(){if(this._watchID){navigator.geolocation.clearWatch(this._watchID);delete this._watchID}}},{key:"_createWatch",value:function _createWatch(){if(this.centered){var moveTo=function moveTo(position){self.lat=position.coords.latitude;self.lon=position.coords.longitude;if(self.parentNode.zoomTo&&self.parentNode._map){// TODO when the zoomTo bug is fixed, remove zoom+1
self.parentNode.zoomTo(self.lat,self.lon,self.parentNode.zoom+1)}},self=this,options={enableHighAccuracy:!0,timeout:5e3,maximumAge:0};this._watchID=navigator.geolocation.watchPosition(moveTo,null,options)}}}],[{key:"tag",get:function get(){return"device-location"}},{key:"properties",get:function get(){return{lat:{type:Number,value:0,reflectToAttribute:!1},lon:{type:Number,value:0,reflectToAttribute:!1},centered:{type:Boolean,reflectToAttribute:!0}}}},{key:"observers",get:function get(){return["_toggleCentered(centered)"]}}]);return DeviceLocation}(_polymerElement.PolymerElement);_exports.DeviceLocation=DeviceLocation;window.customElements.define(DeviceLocation.tag,DeviceLocation)});