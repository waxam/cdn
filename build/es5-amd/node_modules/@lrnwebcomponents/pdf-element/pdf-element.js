define(["exports","require","../../@polymer/polymer/polymer-element.js","../../@polymer/polymer/lib/utils/render-status.js","../../@polymer/paper-input/paper-input.js","../../@polymer/iron-input/iron-input.js","../../@polymer/paper-icon-button/paper-icon-button.js","../hax-body-behaviors/lib/HAXWiring.js","../schema-behaviors/schema-behaviors.js","../../pdfjs-dist/build/pdf.js","../../pdfjs-dist/build/pdf.worker.js","./lib/main.js"],function(_exports,_require,_polymerElement,_renderStatus,_paperInput,_ironInput,_paperIconButton,_HAXWiring,_schemaBehaviors,_pdf,_pdfWorker,_main){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.PdfElement=void 0;_require=babelHelpers.interopRequireWildcard(_require);function _templateObject_c14fc260943811e98e3c411fb3099df0(){var data=babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n          width: 100%;\n          height: 100%;\n        }\n\n        app-toolbar.pdf-toolbar {\n          --app-toolbar-background: #323639;\n        }\n\n        .pdf-viewer {\n          text-align: center;\n          border: 1px solid #4d4d4d;\n        }\n\n        .pdf-viewport-out {\n          overflow: auto;\n          background-color: #525659;\n          position: relative;\n          width: 100%;\n          height: 100%;\n        }\n\n        .pdf-viewport {\n          display: block;\n          position: relative;\n          border: 1px solid #eeeeee;\n          transition: all 200ms ease-in-out;\n          width: 100%;\n          height: 100%;\n        }\n\n        .sidebar {\n          background-color: gray;\n          float: left;\n          height: 0px;\n          overflow: scroll;\n          margin-left: -25%;\n          visibility: hidden;\n        }\n\n        .main {\n          margin-left: 0%;\n        }\n\n        .pageselector {\n          width: 3ch;\n          background-color: black;\n          font-size: 17px;\n          background-color: transparent;\n          border: 0px solid;\n        }\n\n        .pageselector:focus {\n          outline: none;\n        }\n\n        #input {\n          -webkit-margin-start: -3px;\n          color: #fff;\n          line-height: 18px;\n          padding: 3px;\n          text-align: end;\n        }\n\n        #input:focus,\n        #input:hover {\n          background-color: rgba(0, 0, 0, 0.5);\n          border-radius: 2px;\n        }\n\n        #slash {\n          padding: 0 3px;\n        }\n\n        paper-spinner {\n          position: absolute;\n          left: 50%;\n        }\n\n        .textLayer {\n          transition: all 200ms ease-in-out;\n        }\n\n        .positionRelative {\n          position: relative;\n        }\n      </style>\n\n      <paper-material elevation=\"{{elevation}}\">\n        <div class=\"card-content\" style=\"width: {{width}}px\">\n          <paper-card class=\"paperCard\" style=\"width: {{width}}px\">\n            <div class=\"pdf-viewer\">\n              <app-toolbar class=\"pdf-toolbar\">\n                <paper-icon-button\n                  icon=\"menu\"\n                  on-click=\"sideBar\"\n                ></paper-icon-button>\n                <paper-icon-button\n                  icon=\"arrow-back\"\n                  on-click=\"showPrev\"\n                ></paper-icon-button>\n                <input\n                  class=\"pageselector\"\n                  id=\"input\"\n                  is=\"iron-input\"\n                  value=\"{{currentPage}}\"\n                  prevent-invalid-input=\"\"\n                  allowed-pattern=\"\\d\"\n                  on-change=\"pageNumSearch\"\n                />\n                <span id=\"slash\">/</span><span id=\"totalPages\"></span>\n                <paper-icon-button\n                  icon=\"arrow-forward\"\n                  on-click=\"showNext\"\n                ></paper-icon-button>\n                <span class=\"title\" hidden=\"{{!showFileName}}\">Testing</span>\n                <span class=\"title\" hidden=\"{{showFileName}}\"></span>\n                <span class=\"pageRendering\"></span>\n                <paper-icon-button\n                  icon=\"zoom-in\"\n                  on-click=\"zoomIn\"\n                ></paper-icon-button>\n                <paper-icon-button\n                  icon=\"zoom-out\"\n                  on-click=\"zoomOut\"\n                ></paper-icon-button>\n                <paper-icon-button\n                  id=\"zoomIcon\"\n                  icon=\"fullscreen\"\n                  on-click=\"zoomFit\"\n                ></paper-icon-button>\n                <paper-icon-button\n                  icon=\"file-download\"\n                  hidden$=\"{{!downloadable}}\"\n                  on-click=\"download\"\n                ></paper-icon-button>\n              </app-toolbar>\n              <div id=\"container\" class=\"sidebar\" style=\"width:25%\"></div>\n              <div id=\"main\">\n                <div id=\"test\" class=\"pdf-viewport-out\">\n                  <canvas class=\"pdf-viewport\"></canvas>\n                  <div\n                    id=\"text-layer\"\n                    class=\"textLayer\"\n                    hidden$=\"{{!enableTextSelection}}\"\n                  ></div>\n                </div>\n                <paper-spinner\n                  class=\"spinner\"\n                  hidden$=\"{{!showSpinner}}\"\n                ></paper-spinner>\n              </div>\n            </div>\n          </paper-card>\n        </div>\n      </paper-material>\n    "],["\n      <style>\n        :host {\n          display: block;\n          width: 100%;\n          height: 100%;\n        }\n\n        app-toolbar.pdf-toolbar {\n          --app-toolbar-background: #323639;\n        }\n\n        .pdf-viewer {\n          text-align: center;\n          border: 1px solid #4d4d4d;\n        }\n\n        .pdf-viewport-out {\n          overflow: auto;\n          background-color: #525659;\n          position: relative;\n          width: 100%;\n          height: 100%;\n        }\n\n        .pdf-viewport {\n          display: block;\n          position: relative;\n          border: 1px solid #eeeeee;\n          transition: all 200ms ease-in-out;\n          width: 100%;\n          height: 100%;\n        }\n\n        .sidebar {\n          background-color: gray;\n          float: left;\n          height: 0px;\n          overflow: scroll;\n          margin-left: -25%;\n          visibility: hidden;\n        }\n\n        .main {\n          margin-left: 0%;\n        }\n\n        .pageselector {\n          width: 3ch;\n          background-color: black;\n          font-size: 17px;\n          background-color: transparent;\n          border: 0px solid;\n        }\n\n        .pageselector:focus {\n          outline: none;\n        }\n\n        #input {\n          -webkit-margin-start: -3px;\n          color: #fff;\n          line-height: 18px;\n          padding: 3px;\n          text-align: end;\n        }\n\n        #input:focus,\n        #input:hover {\n          background-color: rgba(0, 0, 0, 0.5);\n          border-radius: 2px;\n        }\n\n        #slash {\n          padding: 0 3px;\n        }\n\n        paper-spinner {\n          position: absolute;\n          left: 50%;\n        }\n\n        .textLayer {\n          transition: all 200ms ease-in-out;\n        }\n\n        .positionRelative {\n          position: relative;\n        }\n      </style>\n\n      <paper-material elevation=\"{{elevation}}\">\n        <div class=\"card-content\" style=\"width: {{width}}px\">\n          <paper-card class=\"paperCard\" style=\"width: {{width}}px\">\n            <div class=\"pdf-viewer\">\n              <app-toolbar class=\"pdf-toolbar\">\n                <paper-icon-button\n                  icon=\"menu\"\n                  on-click=\"sideBar\"\n                ></paper-icon-button>\n                <paper-icon-button\n                  icon=\"arrow-back\"\n                  on-click=\"showPrev\"\n                ></paper-icon-button>\n                <input\n                  class=\"pageselector\"\n                  id=\"input\"\n                  is=\"iron-input\"\n                  value=\"{{currentPage}}\"\n                  prevent-invalid-input=\"\"\n                  allowed-pattern=\"\\\\d\"\n                  on-change=\"pageNumSearch\"\n                />\n                <span id=\"slash\">/</span><span id=\"totalPages\"></span>\n                <paper-icon-button\n                  icon=\"arrow-forward\"\n                  on-click=\"showNext\"\n                ></paper-icon-button>\n                <span class=\"title\" hidden=\"{{!showFileName}}\">Testing</span>\n                <span class=\"title\" hidden=\"{{showFileName}}\"></span>\n                <span class=\"pageRendering\"></span>\n                <paper-icon-button\n                  icon=\"zoom-in\"\n                  on-click=\"zoomIn\"\n                ></paper-icon-button>\n                <paper-icon-button\n                  icon=\"zoom-out\"\n                  on-click=\"zoomOut\"\n                ></paper-icon-button>\n                <paper-icon-button\n                  id=\"zoomIcon\"\n                  icon=\"fullscreen\"\n                  on-click=\"zoomFit\"\n                ></paper-icon-button>\n                <paper-icon-button\n                  icon=\"file-download\"\n                  hidden\\$=\"{{!downloadable}}\"\n                  on-click=\"download\"\n                ></paper-icon-button>\n              </app-toolbar>\n              <div id=\"container\" class=\"sidebar\" style=\"width:25%\"></div>\n              <div id=\"main\">\n                <div id=\"test\" class=\"pdf-viewport-out\">\n                  <canvas class=\"pdf-viewport\"></canvas>\n                  <div\n                    id=\"text-layer\"\n                    class=\"textLayer\"\n                    hidden\\$=\"{{!enableTextSelection}}\"\n                  ></div>\n                </div>\n                <paper-spinner\n                  class=\"spinner\"\n                  hidden\\$=\"{{!showSpinner}}\"\n                ></paper-spinner>\n              </div>\n            </div>\n          </paper-card>\n        </div>\n      </paper-material>\n    "]);_templateObject_c14fc260943811e98e3c411fb3099df0=function _templateObject_c14fc260943811e98e3c411fb3099df0(){return data};return data}/**
Polymer element which renders PDF documents. It uses [PDF.js](https://mozilla.github.io/pdf.js/) library behind.

Example:

Minimum configuration:
```html
<pdf-element src="../example.pdf" width=800 height=600></pdf-element>
```
Optionally following parameters could be triggered:
 - `elevation` material elevation;
 - `downloadable` to be able to download document;
 - `show-file-name` to show name of the file in the PDF toolbar.


 ```html
 <pdf-element src="../example.pdf" elevation="5" downloadable show-file-name width=800 height=600></pdf-element>
 ```

Another awesome feature is dynamically load PDF file. So you can change the `src` attribute of the element and document will be automatically reloaded (checkout the demo):

```html
<pdf-element src="[[pdfFile]]" width=800 height=600></pdf-element>
```

* @demo demo/index.html
@hero hero.svg
*/var PdfElement=/*#__PURE__*/function(_SchemaBehaviors){babelHelpers.inherits(PdfElement,_SchemaBehaviors);function PdfElement(){var _this;babelHelpers.classCallCheck(this,PdfElement);_this=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(PdfElement).call(this));new Promise(function(res,rej){return _require.default(["../../@polymer/paper-card/paper-card.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../@polymer/app-layout/app-toolbar/app-toolbar.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../@polymer/paper-spinner/paper-spinner.js"],res,rej)});(0,_renderStatus.afterNextRender)(babelHelpers.assertThisInitialized(_this),function(){this.HAXWiring=new _HAXWiring.HAXWiring;this.HAXWiring.setup(PdfElement.haxProperties,PdfElement.tag,this)});return _this}babelHelpers.createClass(PdfElement,[{key:"connectedCallback",value:function connectedCallback(){babelHelpers.get(babelHelpers.getPrototypeOf(PdfElement.prototype),"connectedCallback",this).call(this);this.src=this.getAttribute("src");this._initializeReader();if(this.src)this.instance.loadPDF();this._setFitWidth()}},{key:"loadPDF",/*
   * For the first time the pdf is loaded.
   * The inital page is set to 1 and it sets the total Pages
   */value:function loadPDF(){if(!this.getAttribute("src"))return;this.instance.changePDFSource(this.getAttribute("src"));this.currentPage=1;this.totalPages=this.instance.totalPages;this.fileName=this.src.split("/").pop();this._setFitWidth();this.$.zoomIcon.icon="fullscreen"}/*
   * When a new pdf is selected and loaded, this sets the properties for the switch
   */},{key:"attributeChanged",value:function attributeChanged(name,type){if("src"===name){if("undefined"==typeof this.instance)this._initializeReader();else{this.loadPDF();this.changedSideBar=!0;this.fromChange=!0;this.sideBar()}}else if("fitWidth"===name){this._setFitWidth()}}},{key:"_initializeReader",value:function _initializeReader(){this.instance=new Reader(this);if(null!=this.src)this.fileName=this.src.split("/").pop();this.currentPage=1}},{key:"_setFitWidth",value:function _setFitWidth(){this.instance.setFitWidth(this.fitWidth)}/*
   * Is called from zoomIn function to control the zoom in
   */},{key:"zoomInOut",value:function zoomInOut(step){if(2<=this.instance.currentZoomVal){this.instance.currentZoomVal=2}else if(.1>=this.instance.currentZoomVal){this.instance.currentZoomVal=.1}else{this.$.zoomIcon.icon="fullscreen";this.instance.zoomInOut(step)}}/*
   * Zoom in to the pdf as long as it is loaded
   */},{key:"zoomIn",value:function zoomIn(){if(this.instance.pdfExists){this.zoomInOut(.1)}}/*
   * Zoom out of the pdf as long as it is loaded
   */},{key:"zoomOut",value:function zoomOut(){if(this.instance.pdfExists){this.instance.zoomInOut(-.1)}}/*
   * When the zoom in/out button is selected. Reformats the pdf to the original display
   */},{key:"zoomFit",value:function zoomFit(){if(this.instance.pdfExists){if(this.instance.currentZoomVal==this.instance.widthZoomVal){this.instance.zoomPageFit();this.$.zoomIcon.icon="fullscreen"}else{this.instance.zoomWidthFit();this.$.zoomIcon.icon="fullscreen-exit"}}}/*
   * Controls the page search functionality.
   * When a number is input it checks to see if it is a valid page
   * If it is valid then it will change the view to that page
   * as well as update the page number
   */},{key:"pageNumSearch",value:function pageNumSearch(){var page=parseInt(this.$.input.value);if(1<=page&&page<=this.instance.totalPagesNum){this.instance.currentPage=page;this.instance.queueRenderPage(this.instance.currentPage);this.currentPage=page;this.$.input.blur()}else{this.$.input.value=this.currentPage;this.$.input.blur()}}/*
   * Is called when a page is selected from the sidebar
   * Checks to make sure a valid page is selected, then changes the page
   * The currentInstance is passed in to make sure it is changing the proper pdf if multiple are loaded
   */},{key:"sideBarClick",value:function sideBarClick(page,currentInstance,currentThis){//this.instance = currentInstance;
var parsedFileName=currentThis.src.split("/").pop(),self=currentInstance;currentThis.sidebarOpen=!0;if(1<=page&&page<=currentInstance.totalPagesNum){self.currentPage=page;self.queueRenderPage(self.currentPage);currentInstance.currentPage=page;currentThis.currentPage=page;this.$.input.blur()}else{this.$.input.value=self.currentPage;this.$.input.blur()}}/*
   * Is called to show the previous page and update page number
   */},{key:"showPrev",value:function showPrev(){if(1<this.instance.currentPage){this.instance.currentPage--;this.instance.queueRenderPage(this.instance.currentPage);this.currentPage--}}/*
   * Is called to show the next page and update page number
   */},{key:"showNext",value:function showNext(){if(this.instance.totalPagesNum>this.instance.currentPage){this.instance.currentPage++;this.instance.queueRenderPage(this.instance.currentPage);this.currentPage++}}/*
   * The sidebar is a scrollable bar on the side of the page that allows you to scroll and select a page to change to
   * Checks if the pdf loaded changed
   * Then checks if the sidebar is open or not
   * If it is open, close. Else open sidebar. Set sidebarOpen to either T or F
   */},{key:"sideBar",value:function sideBar(){if(this.instance.pdfExists){if(!this.fromChange){this.$.container.style.height=this.$.test.style.height;this.$.container.style.width=this.$.test.style.width;if("25%"==this.$.main.style.marginLeft){this.sidebarOpen=!1;this.instance.setViewportPos(!1);this.$.main.style.marginLeft="0%";this.$.container.style.marginLeft="-25%";this.$.container.style.visibility="hidden"}else{this.sidebarOpen=!0;this.$.main.style.marginLeft="25%";this.$.container.style.marginLeft="0%";this.$.container.style.visibility="visible";this.instance.setViewportPos(!0)}}this.fromChange=!1;this.instance.sidebarSetup(this);this.changedSideBar=!1}}/*
   * Is called when the download pdf button is selected
   */},{key:"download",value:function download(){if(this.instance.pdfExists){this.instance.download()}}}],[{key:"template",get:function get(){return(0,_polymerElement.html)(_templateObject_c14fc260943811e98e3c411fb3099df0())}},{key:"tag",get:function get(){return"pdf-element"}},{key:"properties",get:function get(){var props={/**
       * Source of a PDF file.
       */src:{type:String,reflectToAttribute:!0},/**
       * The z-depth of this element, from 0-5. Setting to 0 will remove the shadow, and each increasing number greater than 0 will be "deeper" than the last.
       */elevation:{type:Number,value:1},/**
       * If provided then download icon will appear on the toolbar to download file.
       */downloadable:{type:Boolean,value:!1},/**
       * If provided then file name will be shown on the toolbar.
       */showFileName:{type:Boolean,value:!1},/*
       * If provided then during page rendering loading spinner will be shown.
       * Maybe used for documents with many images for example.
       */showSpinner:{type:Boolean,value:!1},/*
       * If provided then text selection will be enabled.
       */enableTextSelection:{type:Boolean,value:!1},/*
       * If provided then the document will be zoomed to maximum width initially.
       */fitWidth:{type:Boolean,value:!1},/*
       * If provided then the width will be set.
       */width:{type:Number,value:500}};if(babelHelpers.get(babelHelpers.getPrototypeOf(PdfElement),"properties",this)){props=Object.assign(props,babelHelpers.get(babelHelpers.getPrototypeOf(PdfElement),"properties",this))}return props}},{key:"haxProperties",get:function get(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"PDF viewer",descrption:"This can nicely present a PDF in a standard inplace, cross browser way.",icon:"image:picture-as-pdf",color:"red",groups:["Presentation","PDF","Data"],handles:[{type:"pdf",url:"src",source:"src"},{type:"document",url:"src",source:"src"}],meta:{author:"LRNWebComponents"}},settings:{quick:[{property:"src",title:"File",description:"The URL for the pdf",inputMethod:"textfield",icon:"link",required:!0}],configure:[{property:"src",title:"Source",description:"The URL for this csv file",inputMethod:"textfield",icon:"link",required:!0},{property:"downloadable",title:"Downloadable",description:"User can download this",inputMethod:"boolean",icon:"file-download"},{property:"enableTextSelection",title:"Text Selection",description:"User can select text in this element.",inputMethod:"boolean",icon:"file-download"},{property:"elevation",title:"Elevation",description:"Visual elevation of the element",inputMethod:"number",icon:"flip-to-front"}],advanced:[]}}}}]);return PdfElement}((0,_schemaBehaviors.SchemaBehaviors)(_polymerElement.PolymerElement));_exports.PdfElement=PdfElement;window.customElements.define(PdfElement.tag,PdfElement)});