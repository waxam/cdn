define(["exports", "../../lit-element/lit-element.js", "../../lit-element-router/lit-element-router.js", "./lib/elmsln-studio-utilities.js", "./lib/elmsln-studio-styles.js", "../../@polymer/iron-ajax/iron-ajax.js", "./lib/elmsln-studio-main.js", "./lib/elmsln-studio-link.js", "./lib/elmsln-studio-button.js", "./lib/elmsln-studio-dashboard.js", "./lib/elmsln-studio-submissions.js", "./lib/elmsln-studio-portfolio.js"], function (_exports, _litElement, _litElementRouter, _elmslnStudioUtilities, _elmslnStudioStyles, _ironAjax, _elmslnStudioMain, _elmslnStudioLink, _elmslnStudioButton, _elmslnStudioDashboard, _elmslnStudioSubmissions, _elmslnStudioPortfolio) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.ElmslnStudio = void 0;

  function _templateObject_7a53da50c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <iron-ajax\n        auto\n        url=\"", "\"\n        handle-as=\"json\"\n        @response=\"", "\"\n      ></iron-ajax>\n      <iron-ajax\n        auto\n        url=\"", "\"\n        handle-as=\"json\"\n        @response=\"", "\"\n      ></iron-ajax>\n      <iron-ajax\n        auto\n        url=\"", "\"\n        handle-as=\"json\"\n        @response=\"", "\"\n      ></iron-ajax>\n      <iron-ajax\n        auto\n        url=\"", "\"\n        handle-as=\"json\"\n        @response=\"", "\"\n      ></iron-ajax>\n      <iron-ajax\n        auto\n        url=\"", "\"\n        handle-as=\"json\"\n        @response=\"", "\"\n      ></iron-ajax>\n      <div id=\"studio-nav\">\n        <elmsln-studio-link ?active=\"", "\" href=\"/\"\n          >Dashboard</elmsln-studio-link\n        >\n        <elmsln-studio-link\n          ?active=\"", "\"\n          href=\"/submissions\"\n          >Submissions</elmsln-studio-link\n        >\n        <elmsln-studio-link\n          ?active=\"", "\"\n          href=\"/assignments\"\n          >Assignments</elmsln-studio-link\n        >\n        <elmsln-studio-link\n          ?active=\"", "\"\n          href=\"/activity\"\n          >Activity Index</elmsln-studio-link\n        >\n      </div>\n      <br />\n      <elmsln-studio-main active-route=\"", "\">\n        <elmsln-studio-dashboard\n          route=\"dashboard\"\n          .profile=\"", "\"\n          .activity=\"", "\"\n          route=\"dashboard\"\n        >\n        </elmsln-studio-dashboard>\n        <elmsln-studio-submissions\n          route=\"submissions\"\n          .submissions=\"", "\"\n          .comments=\"", "\"\n          ?grid=\"", "\"\n          student-filter=\"", "\"\n          assignment-filter=\"", "\"\n          project-filter=\"", "\"\n        >\n        </elmsln-studio-submissions>\n        <elmsln-studio-portfolio\n          route=\"portfolios\"\n          .portfolio=\"", "\"\n          .submission=\"", "\"\n          submission-filter=\"", "\"\n          comment=\"", "\"\n        >\n        </elmsln-studio-portfolio>\n      </elmsln-studio-main>\n    "]);

    _templateObject_7a53da50c96f11ea8be5e1d5fe7ec787 = function _templateObject_7a53da50c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  /**
   * `elmsln-studio`
   * Studio App for ELMS:LN
   *
   * @microcopy - language worth noting:
   *  -
   *
   * @customElement elmsln-studio
   * @lit-html
   * @lit-element
   * @demo demo/index.html
   */
  var ElmslnStudio =
  /*#__PURE__*/
  function (_router) {
    babelHelpers.inherits(ElmslnStudio, _router);
    babelHelpers.createClass(ElmslnStudio, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return (0, _litElement.html)(_templateObject_7a53da50c96f11ea8be5e1d5fe7ec787(), this.profileSource, this._profileLoaded, this.activitySource, this._activityLoaded, this.submissionsSource, this._submissionsLoaded, this.discussionSource, this._discussionLoaded, this.portfoliosSource, this._portfoliosLoaded, this.route === "dashboard", this.route === "submissions" || this.route === "portfolios", this.route === "assignments", this.route === "activity", this.route, this.profile || {}, this.activity || [], this.submissions, Object.keys(this.discussion || {}).map(function (i) {
          return _this2.discussion[i].feedback;
        }).flat(), this.query.grid || false, this.query.student || "", this.query.assignment || "", this.query.project || "", this._filterBy(this.portfolios, this.params.portfolio, "portfolio-"), this._filterBy(this.discussion, this.query.submission), this.query.submission || "", this.query.comment || "");
      }
    }], [{
      key: "tag",

      /**
       * Store the tag name to make it easier to obtain directly.
       * @notice function name must be here for tooling to operate correctly
       */
      get: function get() {
        return "elmsln-studio";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          activity: {
            type: Array
          },
          activitySource: {
            type: String,
            reflect: true,
            attribute: "activity-source"
          },
          discussion: {
            type: Array
          },
          discussionSource: {
            type: String,
            reflect: true,
            attribute: "discussion-source"
          },
          portfolios: {
            type: Object
          },
          portfoliosSource: {
            type: String,
            reflect: true,
            attribute: "portfolios-source"
          },
          profile: {
            type: Object
          },
          profileSource: {
            type: String,
            reflect: true,
            attribute: "profile-source"
          },
          sourcePath: {
            type: String,
            reflect: true,
            attribute: "source-path"
          },
          submissions: {
            type: Array
          },
          submissionsSource: {
            type: String,
            reflect: true,
            attribute: "submissions-source"
          },
          route: {
            type: String
          },
          params: {
            type: Object
          },
          query: {
            type: Object
          },
          data: {
            type: Object
          }
        };
      }
    }, {
      key: "routes",
      get: function get() {
        return [{
          name: "submissions",
          pattern: "submissions"
        }, {
          name: "portfolios",
          pattern: "portfolios/:portfolio"
        }, {
          name: "dashboard",
          pattern: "*",
          data: {
            title: "Home"
          }
        }];
      }
    }]);

    function ElmslnStudio() {
      var _this;

      babelHelpers.classCallCheck(this, ElmslnStudio);

      var dosomething = function dosomething() {};

      var query = document.getElementById("search").addEventListener("test", dosomething);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(ElmslnStudio).call(this));
      _this.activity = [];
      _this.discussion = [];
      _this.portfolios = {};
      _this.profile = {};
      _this.submissions = [];
      _this.route = "";
      _this.params = {};
      _this.query = {};
      _this.data = {};
      return _this;
    }

    babelHelpers.createClass(ElmslnStudio, [{
      key: "router",
      value: function router(route, params, query, data) {
        this.route = route;
        this.params = params;
        this.query = query;
        this.data = data;
      }
    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this3 = this;

        if (babelHelpers.get(babelHelpers.getPrototypeOf(ElmslnStudio.prototype), "updated", this)) babelHelpers.get(babelHelpers.getPrototypeOf(ElmslnStudio.prototype), "updated", this).call(this, changedProperties);
        changedProperties.forEach(function (oldValue, propName) {
          if (propName === "params") console.log("params", _this3.params);
          if (propName === "query") console.log("query", _this3.query);
        });
      }
    }, {
      key: "_filterBy",
      value: function _filterBy(lookup, query) {
        var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "";
        return lookup && query && lookup["".concat(prefix).concat(query)] ? lookup["".concat(prefix).concat(query)] : {};
      }
    }, {
      key: "_loadDiscussion",
      value: function _loadDiscussion(e) {
        this.query.discussion = e.detail || true;
      }
    }, {
      key: "_profileLoaded",
      value: function _profileLoaded(e) {
        console.log("_profileLoaded", e.detail.__data.response);
        this.profile = e.detail.__data.response;
      }
    }, {
      key: "_activityLoaded",
      value: function _activityLoaded(e) {
        console.log("_activityLoaded", e.detail.__data.response);
        this.activity = e.detail.__data.response;
      }
    }, {
      key: "_submissionsLoaded",
      value: function _submissionsLoaded(e) {
        console.log("_submissionsLoaded", e.detail.__data.response);
        this.submissions = e.detail.__data.response;
      }
    }, {
      key: "_discussionLoaded",
      value: function _discussionLoaded(e) {
        console.log("_discussionLoaded", e.detail.__data.response);
        this.discussion = e.detail.__data.response;
      }
    }, {
      key: "_portfoliosLoaded",
      value: function _portfoliosLoaded(e) {
        console.log("_portfoliosLoaded", e.detail.__data.response);
        this.portfolios = e.detail.__data.response;
      }
    }]);
    return ElmslnStudio;
  }((0, _litElementRouter.router)((0, _elmslnStudioUtilities.ElmslnStudioUtilities)((0, _elmslnStudioStyles.ElmslnStudioStyles)(_litElement.LitElement))));

  _exports.ElmslnStudio = ElmslnStudio;
  customElements.define(ElmslnStudio.tag, ElmslnStudio);
});