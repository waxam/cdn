define(["exports", "../../lit-element/lit-element.js", "../../@polymer/iron-flex-layout/iron-flex-layout.js"], function (_exports, _litElement, _ironFlexLayout) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.ElmslnStudio = void 0;

  function _templateObject_1d5c67a0833211ea85a195fb4be801bd() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n        }\n\n        :host([hidden]) {\n          display: none;\n        }\n      </style>\n      <lrnapp-studio-projectboard></lrnapp-studio-projectboard>\n    "]);

    _templateObject_1d5c67a0833211ea85a195fb4be801bd = function _templateObject_1d5c67a0833211ea85a195fb4be801bd() {
      return data;
    };

    return data;
  }

  //import "./lib/elmsln-studio-projectboard.js";

  /**
   * `elmsln-studio`
   * Studio App for ELMS:LN
   *
   * @microcopy - language worth noting:
   *  -
   *
   * @customElement elmsln-studio
   * @lit-html
   * @lit-element
   * @demo demo/index.html
   */
  var ElmslnStudio =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(ElmslnStudio, _LitElement);

    function ElmslnStudio() {
      babelHelpers.classCallCheck(this, ElmslnStudio);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(ElmslnStudio).apply(this, arguments));
    }

    babelHelpers.createClass(ElmslnStudio, [{
      key: "render",
      // render function
      value: function render() {
        return (0, _litElement.html)(_templateObject_1d5c67a0833211ea85a195fb4be801bd());
      } // properties available to the custom element for data binding

    }, {
      key: "connectedCallback",

      /**
       * life cycle, element is afixed to the DOM
       */
      value: function connectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(ElmslnStudio.prototype), "connectedCallback", this).call(this);
      } // static get observedAttributes() {
      //   return [];
      // }
      // disconnectedCallback() {}
      // attributeChangedCallback(attr, oldValue, newValue) {}

    }], [{
      key: "properties",
      get: function get() {
        return {};
      }
      /**
       * Store the tag name to make it easier to obtain directly.
       * @notice function name must be here for tooling to operate correctly
       */

    }, {
      key: "tag",
      get: function get() {
        return "elmsln-studio";
      }
    }]);
    return ElmslnStudio;
  }(_litElement.LitElement);

  _exports.ElmslnStudio = ElmslnStudio;
  customElements.define(ElmslnStudio.tag, ElmslnStudio);
});