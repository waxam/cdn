define(["exports", "../../../lit-element/lit-element.js", "./elmsln-studio-styles.js", "./elmsln-studio-utilities.js", "../../../@polymer/iron-icons/communication-icons.js", "./elmsln-studio-link.js", "./elmsln-studio-button.js"], function (_exports, _litElement, _elmslnStudioStyles, _elmslnStudioUtilities, _communicationIcons, _elmslnStudioLink, _elmslnStudioButton) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.ElmslnStudioSubmissions = void 0;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _templateObject4_8e873580c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          flex-wrap: wrap;\n        }\n        .filters > *,\n        #layout > * {\n          flex: 0 1 auto;\n          margin: 0 calc(0.5 * var(--elmsln-studio-margin, 20px));\n        }\n        .filters {\n          flex: 1 0 100%;\n        }\n        #layout {\n          display: flex;\n          align-items: flex-end;\n          justify-content: space-between;\n        }\n        #layout > button {\n          background-color: transparent;\n          border: 0px solid rgba(0, 0, 0, 0);\n          opacity: 0.25;\n          transform: opacity 0.5s ease-in-out;\n          margin: 0 5px;\n          height: calc(2 * var(--elmsln-studio-FontSize, 16px));\n          width: calc(2 * var(--elmsln-studio-FontSize, 16px));\n        }\n        #layout button:focus,\n        #layout button:hover {\n          opacity: 0.75;\n        }\n        #layout button[aria-pressed=\"true\"] {\n          opacity: 1;\n        }\n        #cards {\n          margin: var(--elmsln-studio-margin, 20px)\n            calc(-0.5 * var(--elmsln-studio-margin, 20px));\n          display: flex;\n          align-items: stretch;\n          justify-content: flex-start;\n          flex-wrap: wrap;\n        }\n        .no-submissions {\n          font-weight: var(--elmsln-studio-FontWeightLight, 300);\n          font-size: 22px;\n          margin: calc(0.5 * var(--elmsln-studio-margin, 20px));\n          padding: var(--elmsln-studio-margin, 20px);\n          width: calc(100% - 2 * var(--elmsln-studio-margin, 20px));\n          background-color: #e8e8e8;\n          text-align: center;\n        }\n        accent-card {\n          line-height: 160%;\n          --accent-card-padding: 0;\n          --accent-card-heading-padding-top: calc(\n            0.5 * var(--elmsln-studio-margin, 20px)\n          );\n          --accent-card-heading-padding-left: calc(\n            0.5 * var(--elmsln-studio-margin, 20px)\n          );\n          --accent-card-heading-padding-right: calc(\n            0.5 * var(--elmsln-studio-margin, 20px)\n          );\n          --accent-card-subheading-padding-left: calc(\n            0.5 * var(--elmsln-studio-margin, 20px)\n          );\n          --accent-card-subheading-padding-right: calc(\n            0.5 * var(--elmsln-studio-margin, 20px)\n          );\n          --accent-card-content-padding-left: calc(\n            0.5 * var(--elmsln-studio-margin, 20px)\n          );\n          --accent-card-content-padding-right: calc(\n            0.5 * var(--elmsln-studio-margin, 20px)\n          );\n          --accent-card-content-padding-bottom: calc(\n            0.5 * var(--elmsln-studio-margin, 20px)\n          );\n          --accent-card-footer-padding-top: calc(\n            0.5 * var(--elmsln-studio-margin, 20px)\n          );\n          --accent-card-footer-padding-bottom: calc(\n            0.5 * var(--elmsln-studio-margin, 20px)\n          );\n          --accent-card-footer-padding-left: 0;\n          --accent-card-footer-padding-right: 0;\n          --accent-card-image-padding-bottom: 5px;\n          --accent-card-image-padding-right: calc(\n            0.5 * var(--elmsln-studio-margin, 20px)\n          );\n          --accent-card-image-width: 33.33333%;\n          --accent-card-image-height: 200px;\n          margin: calc(0.5 * var(--elmsln-studio-margin, 20px))\n            calc(0.5 * var(--elmsln-studio-margin, 20px));\n          flex: 0 0 calc(100% - var(--elmsln-studio-margin, 20px));\n        }\n        .grid accent-card {\n          --accent-card-image-width: 50%;\n        }\n        .feature {\n          margin-top: var(--elmsln-studio-margin, 20px);\n          height: calc(\n            var(--accent-card-image-height, 200px) -\n              var(--elmsln-studio-margin, 20px)\n          );\n          overflow: auto;\n        }\n        accent-card [slot=\"image-corner\"] {\n          display: inline-flex;\n          right: 5px;\n          bottom: 10px;\n          position: absolute;\n          border-radius: 3px;\n          background-color: rgba(0, 0, 0, 0.25);\n        }\n        accent-card [slot=\"image-corner\"]:focus-within,\n        accent-card [slot=\"image-corner\"]:hover {\n          background-color: rgba(0, 0, 0, 0.5);\n        }\n        accent-card [slot=\"heading\"] {\n          font-weight: var(--elmsln-studio-FontWeightLight, 300);\n          font-size: 22px;\n        }\n        accent-card [slot=\"corner\"] {\n          font-weight: var(--elmsln-studio-FontWeightNormal, 400);\n          font-size: 12px;\n        }\n        accent-card [slot=\"subheading\"] {\n          font-weight: var(--elmsln-studio-FontWeightBold, 500);\n          font-size: 18px;\n          font-style: normal;\n          color: #5d5e5f;\n        }\n        accent-card [slot=\"content\"] {\n          font-weight: var(--elmsln-studio-FontWeightNormal, 400);\n          font-size: 14px;\n          color: #7e7e7e;\n        }\n        accent-card [slot=\"footer\"] {\n          font-weight: var(--elmsln-studio-FontWeightNormal, 400);\n          font-size: 12px;\n          text-transform: uppercase;\n          display: flex;\n          align-items: stretch;\n          justify-content: space-between;\n          color: #95989a;\n        }\n        accent-card.card.submission-card elmsln-studio-link {\n          margin: 0 calc(0.5 * var(--elmsln-studio-margin, 20px));\n          text-align: left;\n          --elmsln-studio-link-Color: #7e7e7e;\n        }\n        accent-card.card.submission-card elmsln-studio-link:focus,\n        accent-card.card.submission-card elmsln-studio-link:focus-within,\n        accent-card.card.submission-card elmsln-studio-link:hover {\n          --elmsln-studio-link-Color: #95989a;\n          --elmsln-studio-link-TextDecoration: none !important;\n        }\n        accent-card.card.submission-card elmsln-studio-link:last-child {\n          text-align: right;\n        }\n        #secondary {\n          margin-top: 0;\n          --nav-card-linklist-margin-top: 0;\n          --nav-card-linklist-left-size: 36px;\n          --paper-avatar-width: var(--nav-card-linklist-left-size, 36px);\n        }\n        #secondary .filters {\n          justify-content: flex-start;\n        }\n        .comments {\n          color: #95989a;\n        }\n        nav-card {\n          margin: calc(1.5 * var(--elmsln-studio-margin, 20px)) 0 0;\n        }\n        @media screen and (min-width: 500px) {\n          .grid accent-card:not([horizontal]) {\n            flex: 0 0 calc(50% - var(--elmsln-studio-margin, 20px));\n          }\n        }\n        @media screen and (min-width: 900px) {\n          :host {\n            display: flex;\n            align-items: flex-start;\n            justify-content: space-between;\n          }\n          .grid accent-card:not([horizontal]) {\n            flex: 0 0 calc(50% - var(--elmsln-studio-margin, 20px));\n          }\n        }\n        @media screen and (min-width: 1200px) {\n          .grid accent-card[horizontal] {\n            flex: 0 0 calc(66.66666667% - var(--elmsln-studio-margin, 20px));\n          }\n          .grid accent-card:not([horizontal]) {\n            flex: 0 0 calc(33.3333333333% - var(--elmsln-studio-margin, 20px));\n          }\n        }\n        @media screen and (min-width: 1600px) {\n          .grid accent-card[horizontal] {\n            --accent-card-image-width: 33.33333%;\n            flex: 0 0 calc(75% - var(--elmsln-studio-margin, 20px));\n          }\n          .grid accent-card:not([horizontal]) {\n            flex: 0 0 calc(25% - var(--elmsln-studio-margin, 20px));\n          }\n          .list accent-card {\n            --accent-card-image-width: 50%;\n          }\n        }\n      "]);

    _templateObject4_8e873580c96f11ea8be5e1d5fe7ec787 = function _templateObject4_8e873580c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  function _templateObject3_8e873580c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n                <nav-card-item\n                  accent-color=\"", "\"\n                  .avatar=\"", "\"\n                  icon=\"chevron-right\"\n                  initials=\"", "\"\n                >\n                  <elmsln-studio-link\n                    id=\"comment-", "\"\n                    aria-describedby=\"comment-", "-desc\"\n                    slot=\"label\"\n                    href=\"", "\"\n                  >\n                    ", "\n                  </elmsln-studio-link>\n                  <span id=\"comment-", "\" slot=\"description\">\n                    ", "\n                  </span>\n                </nav-card-item>\n              "]);

    _templateObject3_8e873580c96f11ea8be5e1d5fe7ec787 = function _templateObject3_8e873580c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  function _templateObject2_8e873580c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n              <accent-card\n                no-border\n                class=\"card submission-card\"\n                image-src=\"", "\"\n                ?horizontal=\"", "\"\n                image-align=\"", "\"\n                image-valign=\"", "\"\n                .gravity=\"", "\"\n              >\n                <div slot=\"image-corner\" class=\"image-zoom\">\n                  <iron-icon icon=\"zoom-in\"></iron-icon>\n                </div>\n                <div slot=\"heading\" id=\"student-", "\" class=\"card-student\">\n                  ", " ", "\n                </div>\n                <div slot=\"corner\" id=\"date-", "\">\n                  ", "\n                </div>\n                <div slot=\"subheading\" id=\"assignment-", "\">\n                  ", "\n                </div>\n                <div slot=\"content\" id=\"project-", "\">\n                  ", "\n                </div>\n                <div slot=\"content\" class=\"feature\" ?hidden=\"", "\">\n                  ", "\n                </div>\n                <div slot=\"footer\">\n                  <elmsln-studio-link\n                    aria-describedby=\"student-", " date-", " assignment-", " project", "\"\n                    href=\"", "&comment=true\"\n                  >\n                    <iron-icon icon=\"communication:comment\"></iron-icon>\n                    Discussion\n                  </elmsln-studio-link>\n                  <elmsln-studio-link\n                    aria-describedby=\"student-", " date-", " assignment-", " project", "\"\n                    href=\"", "\"\n                  >\n                    <iron-icon icon=\"visibility\"></iron-icon>\n                    View\n                  </elmsln-studio-link>\n                </div>\n              </accent-card>\n            "]);

    _templateObject2_8e873580c96f11ea8be5e1d5fe7ec787 = function _templateObject2_8e873580c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  function _templateObject_8e873580c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <div class=\"filters\">\n        <simple-fields-field\n          inline\n          label=\"Project:\"\n          .options=\"", "\"\n          value=\"", "\"\n          @value-changed=\"", "\"\n        >\n        </simple-fields-field>\n        <simple-fields-field\n          inline\n          label=\"Assignment:\"\n          .options=\"", "\"\n          value=\"", "\"\n          @value-changed=\"", "\"\n        >\n        </simple-fields-field>\n        <simple-fields-field\n          inline\n          label=\"Student:\"\n          .options=\"", "\"\n          value=\"", "\"\n          @value-changed=\"", "\"\n        >\n        </simple-fields-field>\n        <div id=\"layout\">\n          <button\n            aria-pressed=\"", "\"\n            @click=\"", "\"\n          >\n            <iron-icon icon=\"icons:view-list\"></iron-icon>\n            <span class=\"sr-only\">display as list</span>\n          </button>\n          <button\n            aria-pressed=\"", "\"\n            @click=\"", "\"\n          >\n            <iron-icon icon=\"icons:view-module\"></iron-icon>\n            <span class=\"sr-only\">display as grid</span>\n          </button>\n        </div>\n      </div>\n      <div id=\"primary\">\n        <div id=\"cards\" class=\"", "\">\n          <div\n            class=\"no-submissions\"\n            ?hidden=\"", "\"\n          >\n            No submissions for applied filters.\n          </div>\n          ", "\n        </div>\n      </div>\n      <div id=\"secondary\">\n        <nav-card flat no-border class=\"card\" link-icon=\"chevron-right\">\n          <span slot=\"heading\">Recent Comments</span>\n          <div slot=\"body\" ?hidden=\"", "\">\n            No comments for applied filters.\n          </div>\n          <div slot=\"linklist\">\n            ", "\n          </div>\n        </nav-card>\n      </div>\n    "]);

    _templateObject_8e873580c96f11ea8be5e1d5fe7ec787 = function _templateObject_8e873580c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  /**
   * `elmsln-studio-submissions`
   * Studio App for ELMS:LN
   *
   * @customElement elmsln-studio-submissions
   * @lit-html
   * @lit-element
   * @demo demo/submission.html
   */
  var ElmslnStudioSubmissions =
  /*#__PURE__*/
  function (_ElmslnStudioUtilitie) {
    babelHelpers.inherits(ElmslnStudioSubmissions, _ElmslnStudioUtilitie);
    babelHelpers.createClass(ElmslnStudioSubmissions, [{
      key: "render",
      // render function
      value: function render() {
        var _this2 = this;

        return (0, _litElement.html)(_templateObject_8e873580c96f11ea8be5e1d5fe7ec787(), this.projectOptions, this.projectFilter || "", function (e) {
          return _this2.projectFilter = e.detail.value;
        }, this.assignmentOptions, this.assignmentFilter || "", function (e) {
          return _this2.assignmentFilter = e.detail.value;
        }, this.studentOptions, this.studentFilter || "", function (e) {
          return _this2.studentFilter = e.detail.value;
        }, this.grid ? "false" : "true", function (e) {
          return _this2.grid = false;
        }, this.grid ? "true" : "false", function (e) {
          return _this2.grid = true;
        }, this.grid ? "grid" : "list", this.filteredSubmissions.length > 0, this.filteredSubmissions.map(function (s) {
          return (0, _litElement.html)(_templateObject2_8e873580c96f11ea8be5e1d5fe7ec787(), s.image && s.image.src ? s.image.src : "", s.feature || !_this2.grid ? true : false, _this2._getAlign(s.image && s.image.gravity ? s.image.gravity : undefined), _this2._getValign(s.image && s.image.gravity ? s.image.gravity : undefined), s.image && s.image.gravity ? s.image.gravity : undefined, s.id, s.firstName, s.lastName, s.id, _this2.grid ? _this2.dateFormat(s.date, "short") : _this2.dateFormat(s.date), s.id, s.assignment, s.id, s.project, !s.feature, s.feature, s.id, s.id, s.id, s.id, s.link, s.id, s.id, s.id, s.id, s.link);
        }), this.filteredComments.length > 0, this.filteredComments.map(function (f) {
          return (0, _litElement.html)(_templateObject3_8e873580c96f11ea8be5e1d5fe7ec787(), _this2.accentColor(_this2.fullName(f)), f.avatar, _this2.fullName(f), f.id, f.id, f.link, f.title, f.id, _this2.dateFormat(f.date));
        }));
      } // properties available to the custom element for data binding

    }], [{
      key: "tag",

      /**
       * Store the tag name to make it easier to obtain directly.
       * @notice function name must be here for tooling to operate correctly
       */
      get: function get() {
        return "elmsln-studio-submissions";
      }
    }, {
      key: "styles",
      get: function get() {
        return [].concat(babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(ElmslnStudioSubmissions), "styles", this)), [(0, _litElement.css)(_templateObject4_8e873580c96f11ea8be5e1d5fe7ec787())]);
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(ElmslnStudioSubmissions), "properties", this), {
          assignmentFilter: {
            type: String,
            attribute: "assignment-filter"
          },
          comments: {
            type: Array
          },
          grid: {
            type: Boolean,
            attribute: "grid"
          },
          projectFilter: {
            type: String,
            attribute: "project-filter"
          },
          studentFilter: {
            type: String,
            attribute: "student-filter"
          },
          submissions: {
            type: Array
          }
        });
      } // life cycle

    }]);

    function ElmslnStudioSubmissions() {
      var _this;

      babelHelpers.classCallCheck(this, ElmslnStudioSubmissions);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(ElmslnStudioSubmissions).call(this));
      _this.grid = false;
      _this.submissions = [];
      _this.comments = [];
      _this.tag = ElmslnStudioSubmissions.tag;
      return _this;
    }

    babelHelpers.createClass(ElmslnStudioSubmissions, [{
      key: "_isFilteredAssignment",
      value: function _isFilteredAssignment() {
        var assignment = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
        return this.assignmentFilter === "" || assignment === this.assignmentFilter;
      }
    }, {
      key: "_isFilteredProject",
      value: function _isFilteredProject() {
        var project = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
        return this.projectFilter === "" || project === this.projectFilter;
      }
    }, {
      key: "_isFilteredStudent",
      value: function _isFilteredStudent() {
        var student = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
        return this.studentFilter === "" || student === this.studentFilter;
      }
    }, {
      key: "filteredComments",
      get: function get() {
        var _this3 = this;

        return (this.comments || []).filter(function (i) {
          return _this3._isFilteredStudent(i.userId) && _this3._isFilteredAssignment(i.assignmentId) && _this3._isFilteredProject(i.projectId);
        });
      }
    }, {
      key: "studentOptions",
      get: function get() {
        var _this4 = this;

        var options = {
          "": "All"
        };
        (this.submissions || []).forEach(function (i) {
          return options[i.userId] = _this4.fullName(i);
        });
        return options;
      }
    }, {
      key: "assignmentOptions",
      get: function get() {
        var _this5 = this;

        var options = {
          "": "All"
        };
        (this.submissions || []).filter(function (i) {
          return _this5._isFilteredProject(i.projectId);
        }).forEach(function (i) {
          return options[i.assignmentId] = i.assignment;
        });
        return options;
      }
    }, {
      key: "projectOptions",
      get: function get() {
        var options = {
          "": "All"
        };
        (this.submissions || []).forEach(function (i) {
          return options[i.projectId] = i.project;
        });
        return options;
      }
    }, {
      key: "filteredSubmissions",
      get: function get() {
        var _this6 = this;

        return (this.submissions || []).filter(function (i) {
          return _this6._isFilteredStudent(i.userId) && _this6._isFilteredAssignment(i.assignmentId) && _this6._isFilteredProject(i.projectId);
        });
      }
    }]);
    return ElmslnStudioSubmissions;
  }((0, _elmslnStudioUtilities.ElmslnStudioUtilities)((0, _elmslnStudioStyles.ElmslnStudioStyles)(_litElement.LitElement)));

  _exports.ElmslnStudioSubmissions = ElmslnStudioSubmissions;
  customElements.define("elmsln-studio-submissions", ElmslnStudioSubmissions);
});