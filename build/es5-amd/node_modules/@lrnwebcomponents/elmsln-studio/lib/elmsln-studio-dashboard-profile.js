define(["exports", "../../../lit-element/lit-element.js", "../../../@polymer/iron-ajax/iron-ajax.js", "../../progress-donut/progress-donut.js", "../../accent-card/accent-card.js"], function (_exports, _litElement, _ironAjax, _progressDonut, _accentCard) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.ElmslnStudioDashboardProfile = void 0;

  function _templateObject2_64fb2f707db411ea9f5415731a698a31() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          width: 100%;\n          display: block;\n        }\n        :host accent-card {\n          width: 100%;\n        }\n        :host .progress-item {\n          display: flex;\n          justify-content: space-between;\n          align-items: baseline;\n          width: 100%;\n          color: var(--lrnapp-studio-dashboard-color, #666);\n          border-top: var(--lrnapp-studio-dashboard-border, #ddd);\n          padding: 0.5em 0;\n        }\n        :host .progress-item span:last-child {\n          text-align: right;\n        }\n      "]);

    _templateObject2_64fb2f707db411ea9f5415731a698a31 = function _templateObject2_64fb2f707db411ea9f5415731a698a31() {
      return data;
    };

    return data;
  }

  function _templateObject_64fb2f707db411ea9f5415731a698a31() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <accent-card no-border>\n        <div slot=\"content\">\n          <progress-donut\n            id=\"donut\"\n            title=\"Your Progress\"\n            desc=\"", "\"\n            image-src=\"", "\"\n            complete=\"", "\"\n            total=\"", "\"\n          >\n          </progress-donut>\n          <div class=\"progress-item\">\n            <span>Overall Progress</span><span>", "</span>\n          </div>\n          <div class=\"progress-item\">\n            <span>Comments</span><span>", "</span>\n          </div>\n          <div class=\"progress-item\">\n            <span>Submissions</span\n            ><span>", "</span>\n          </div>\n        </div>\n      </accent-card>\n    "]);

    _templateObject_64fb2f707db411ea9f5415731a698a31 = function _templateObject_64fb2f707db411ea9f5415731a698a31() {
      return data;
    };

    return data;
  }

  /**
   * `elmsln-studio-dashboard-profile`
   * Studio App for ELMS:LN
   *
   * @customElement elmsln-studio-dashboard-profile
   * @lit-html
   * @lit-element
   * @demo demo/index.html
   */
  var ElmslnStudioDashboardProfile =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(ElmslnStudioDashboardProfile, _LitElement);
    babelHelpers.createClass(ElmslnStudioDashboardProfile, [{
      key: "render",
      // render function
      value: function render() {
        return (0, _litElement.html)(_templateObject_64fb2f707db411ea9f5415731a698a31(), this.desc, this.profile.avatar, this.complete, this.profile.totalAssignments, this.percentComplete, this.profile.totalComments, this.profile.totalSubmissions);
      } // properties available to the custom element for data binding

    }, {
      key: "updated",

      /** TODO this chart could just autoupdate when data changes */
      value: function updated(changedProperties) {
        var _this2 = this;

        changedProperties.forEach(function (oldValue, propName) {
          if (propName === "complete" && _this2.shadowRoot && _this2.shadowRoot.querySelector("#donut")) _this2.shadowRoot.querySelector("#donut").makeChart();
        });
      }
      /**
       * Store the tag name to make it easier to obtain directly.
       * @notice function name must be here for tooling to operate correctly
       */

    }, {
      key: "tag",
      value: function tag() {
        return "elmsln-studio-dashboard-profile";
      } // life cycle

    }, {
      key: "desc",
      get: function get() {
        return this.profile ? "You have completed ".concat(this.profile.completedAssignments, " assignments out of ").concat(this.profile.totalAssignments, ".") : "";
      }
    }, {
      key: "complete",
      get: function get() {
        return this._getProgressComplete(this.profile);
      }
    }, {
      key: "percentComplete",
      get: function get() {
        return this.profile ? "".concat(Math.round(100 * this.profile.completedAssignments / this.profile.totalAssignments), "%") : "0%";
      }
    }, {
      key: "chart",
      get: function get() {
        return this.profile.completedAssignments.map(function (assign) {
          return 1;
        });
      }
    }], [{
      key: "styles",
      get: function get() {
        return [css(_templateObject2_64fb2f707db411ea9f5415731a698a31())];
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          profile: {
            type: Object
          }
        };
      }
    }]);

    function ElmslnStudioDashboardProfile() {
      var _this;

      babelHelpers.classCallCheck(this, ElmslnStudioDashboardProfile);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(ElmslnStudioDashboardProfile).call(this));
      _this.tag = ElmslnStudioDashboardProfile.tag;
      _this.title = "Project 1 Title";
      _this.author = "Bill Billerson"; // map our imported properties json to real props on the element
      // @notice static getter of properties is built via tooling
      // to edit modify src/elmsln-studio-dashboard-profile-properties.json

      var obj = ElmslnStudioDashboardProfile.properties;

      for (var p in obj) {
        if (obj.hasOwnProperty(p)) {
          if (_this.hasAttribute(p)) {
            _this[p] = _this.getAttribute(p);
          } else {
            _this.setAttribute(p, obj[p].value);

            _this[p] = obj[p].value;
          }
        }
      }

      return _this;
    }
    /**
     * Simple way to convert from object to array.
     * @param {object} obj object to convert
     * @returns {array}
     */


    babelHelpers.createClass(ElmslnStudioDashboardProfile, [{
      key: "_toArray",
      value: function _toArray(obj) {
        return Object.keys(obj).map(function (key) {
          return obj[key];
        });
      }
      /**
       * life cycle, element is afixed to the DOM
       */

    }, {
      key: "connectedCallback",
      value: function connectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(ElmslnStudioDashboardProfile.prototype), "connectedCallback", this).call(this);
      } // static get observedAttributes() {
      //   return [];
      // }
      // disconnectedCallback() {}
      // attributeChangedCallback(attr, oldValue, newValue) {}

    }]);
    return ElmslnStudioDashboardProfile;
  }(_litElement.LitElement);

  _exports.ElmslnStudioDashboardProfile = ElmslnStudioDashboardProfile;
  customElements.define("elmsln-studio-dashboard-profile", ElmslnStudioDashboardProfile);
});