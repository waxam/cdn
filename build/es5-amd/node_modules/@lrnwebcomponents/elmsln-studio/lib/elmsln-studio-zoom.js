define(["exports", "require", "../../../lit-element/lit-element.js", "../../../lit-element-router/lit-element-router.js", "./elmsln-studio-modal.js", "./elmsln-studio-modal-button.js", "../../../@polymer/iron-icon/iron-icon.js", "../../../@polymer/iron-icons/iron-icons.js", "../../../@polymer/iron-icons/image-icons.js"], function (_exports, _require, _litElement, _litElementRouter, _elmslnStudioModal, _elmslnStudioModalButton, _ironIcon, _ironIcons, _imageIcons) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.ElmslnStudioZoom = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  function _templateObject2_8b1e91f0e0cf11eab599756c9ebe7c2f() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <elmsln-studio-modal id=\"zoom\" @modal-button-click=\"", "\">\n        <iron-icon aria-hidden=\"true\" icon=\"zoom-in\"></iron-icon>\n        <slot></slot>\n      </elmsln-studio-modal>\n    "]);

    _templateObject2_8b1e91f0e0cf11eab599756c9ebe7c2f = function _templateObject2_8b1e91f0e0cf11eab599756c9ebe7c2f() {
      return data;
    };

    return data;
  }

  function _templateObject_8b1e91f0e0cf11eab599756c9ebe7c2f() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      :host {\n        display: block;\n      }\n      :host([hidden]) {\n        display: none;\n      }\n    "]);

    _templateObject_8b1e91f0e0cf11eab599756c9ebe7c2f = function _templateObject_8b1e91f0e0cf11eab599756c9ebe7c2f() {
      return data;
    };

    return data;
  }

  /**
   * `elmsln-studio-zoom`
   * Navigation Link for ELMS:LN Studio
   *
   * @customElement elmsln-studio-zoom
   * @lit-html
   * @lit-element
   */
  var ElmslnStudioZoom =
  /*#__PURE__*/
  function (_navigator) {
    babelHelpers.inherits(ElmslnStudioZoom, _navigator);
    babelHelpers.createClass(ElmslnStudioZoom, null, [{
      key: "tag",

      /**
       * Store the tag name to make it easier to obtain directly.
       * @notice function name must be here for tooling to operate correctly
       */
      get: function get() {
        return "elmsln-studio-zoom";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          path: {
            type: String
          },
          prev: {
            type: Number,
            attribute: "prev"
          },
          next: {
            type: Number,
            attribute: "next"
          },
          src: {
            type: String
          },
          modal: {
            type: Object
          }
        };
      }
    }, {
      key: "styles",
      get: function get() {
        return (0, _litElement.css)(_templateObject_8b1e91f0e0cf11eab599756c9ebe7c2f());
      }
    }]);

    function ElmslnStudioZoom() {
      var _this;

      babelHelpers.classCallCheck(this, ElmslnStudioZoom);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(ElmslnStudioZoom).call(this));
      _this.modal = window.SimpleModal.requestAvailability();
      _this.path = "";
      _this.src = "";
      _this.prev = -1;
      _this.next = -1;
      new Promise(function (res, rej) {
        return _require.default(["../../img-pan-zoom/img-pan-zoom.js"], res, rej);
      });
      return _this;
    }

    babelHelpers.createClass(ElmslnStudioZoom, [{
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        if (babelHelpers.get(babelHelpers.getPrototypeOf(ElmslnStudioZoom.prototype), "updated", this)) babelHelpers.get(babelHelpers.getPrototypeOf(ElmslnStudioZoom.prototype), "updated", this).call(this, changedProperties);
        changedProperties.forEach(function (oldValue, propName) {
          if (propName === "src" && _this2.__img) {
            _this2.__img.src = _this2.src;

            _this2.__img.resetZoom();
          }
        });
      }
    }, {
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject2_8b1e91f0e0cf11eab599756c9ebe7c2f(), this.setModal);
      }
    }, {
      key: "setModal",
      value: function setModal() {
        var _this3 = this;

        var zoom = this.shadowRoot.getElementById("zoom");
        this.__img = document.createElement("img-pan-zoom");
        this.__img.minZoomImageRatio = 1;
        this.__img.maxZoomPixelRatio = 3;
        this.__img.src = this.src;
        this.__img.style.height = "calc(90vh - 55px - 36px)";
        zoom.buttons = this._buttonGroup([this._buttonGroup([this._button("prev", function (e) {
          return _this3.swapImg(_this3.prev, e);
        }, "chevron-left", true), this._buttonGroup([this._button("rotate counterclockwise", function (e) {
          return _this3.rotateCCW(_this3.__img, e);
        }, "image:rotate-left"), this._button("rotate clockwise", function (e) {
          return _this3.rotateCW(_this3.__img, e);
        }, "image:rotate-right")], true, "flex-start"), this._buttonGroup([this._button("zoom in", function (e) {
          return _this3.zoomIn(_this3.__img, e);
        }, "zoom-in"), this._button("zoom out", function (e) {
          return _this3.zoomOut(_this3.__img, e);
        }, "zoom-out")], true, "center"), this._buttonGroup([this._button("pan up", function (e) {
          return _this3.panUp(_this3.__img, e);
        }, "arrow-upward"), this._button("pan down", function (e) {
          return _this3.panDown(_this3.__img, e);
        }, "arrow-downward"), this._button("pan left", function (e) {
          return _this3.panLeft(_this3.__img, e);
        }, "arrow-back"), this._button("pan right", function (e) {
          return _this3.panRight(_this3.__img, e);
        }, "arrow-forward")], true, "flex-end"), this._button("next", function (e) {
          return _this3.swapImg(_this3.next, e);
        }, "chevron-right", true)], true)]);
        zoom.header = this._buttonGroup([this.__img]);
      }
    }, {
      key: "swapImg",
      value: function swapImg(query, e) {
        var submissions = this.closest("#primary"),
            button = submissions ? submissions.querySelector("#zoom-".concat(query)) : false;

        if (button) {
          this.prev = button.prev;
          this.next = button.next;
          this.src = button.src;
        }
      }
    }, {
      key: "rotateCCW",
      value: function rotateCCW(img, e) {
        img.rotate(-90);
      }
    }, {
      key: "rotateCW",
      value: function rotateCW(img, e) {
        img.rotate();
      }
    }, {
      key: "zoomIn",
      value: function zoomIn(img, e) {
        img.zoomIn(0.2);
      }
    }, {
      key: "zoomOut",
      value: function zoomOut(img, e) {
        img.zoomOut(0.2);
      }
    }, {
      key: "panUp",
      value: function panUp(img, e) {
        img.pan(0, 0.2);
      }
    }, {
      key: "panDown",
      value: function panDown(img, e) {
        img.pan(0, -0.2);
      }
    }, {
      key: "panLeft",
      value: function panLeft(img, e) {
        img.pan(0.2, 0);
      }
    }, {
      key: "panRight",
      value: function panRight(img, e) {
        img.pan(-0.2, 0);
      }
    }, {
      key: "_buttonGroup",
      value: function _buttonGroup(buttons) {
        var flex = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
        var justify = arguments.length > 2 ? arguments[2] : undefined;
        var div = document.createElement("div");

        if (flex) {
          div.style.display = "flex";
          div.style.alignItems = "stretch";
          div.style.justifyContent = justify || "space-between";
          div.style.flexWrap = "wrap";
        }

        if (justify) div.style.border = "1px solid #ddd";
        buttons.forEach(function (button) {
          return div.appendChild(button);
        });
        return div;
      }
    }, {
      key: "_button",
      value: function _button(text, onclick, icon) {
        var border = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
        var button = document.createElement("elmsln-studio-modal-button");
        button.text = text;
        button.callback = onclick;
        button.icon = icon;
        button.border = border;

        if (text === "prev" || text === "next") {
          if (text === "prev") {
            button.align = "left";
            button.disabled = !this.prev;
          }

          if (text === "next") {
            button.align = "right";
            button.disabled = !this.next;
          }

          button.flexible = true;
        } else {
          button.hideText = true;
        }

        return button;
      }
    }, {
      key: "_buttonEvent",
      value: function _buttonEvent(evt) {
        /**
         * Fires when constructed, so that parent radio group can listen for it.
         *
         * @event
         */
        this.dispatchEvent(new CustomEvent(evt, {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: this
        }));
      }
    }]);
    return ElmslnStudioZoom;
  }((0, _litElementRouter.navigator)(_litElement.LitElement));

  _exports.ElmslnStudioZoom = ElmslnStudioZoom;
  customElements.define("elmsln-studio-zoom", ElmslnStudioZoom);
});