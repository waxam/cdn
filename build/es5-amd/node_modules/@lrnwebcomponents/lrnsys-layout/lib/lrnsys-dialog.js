define(["exports","../../../@polymer/polymer/polymer-element.js","../../../@polymer/polymer/lib/utils/render-status.js","../../../@polymer/polymer/lib/legacy/polymer.dom.js","../../paper-avatar/paper-avatar.js","../../lrn-icons/lrn-icons.js","../../simple-colors/simple-colors.js","../../simple-modal/simple-modal.js","../../../@polymer/paper-tooltip/paper-tooltip.js","../../../@polymer/paper-button/paper-button.js","../../../@polymer/neon-animation/neon-animation.js","../../../@polymer/neon-animation/neon-animations.js","../../../@polymer/iron-icons/iron-icons.js","./lrnsys-button-inner.js"],function(_exports,_polymerElement,_renderStatus,_polymerDom,_paperAvatar,_lrnIcons,_simpleColors,_simpleModal,_paperTooltip,_paperButton,_neonAnimation,_neonAnimations,_ironIcons,_lrnsysButtonInner){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.LrnsysDialog=void 0;function _templateObject_77f463006daf11e98b2b231443c29fcf(){var data=babelHelpers.taggedTemplateLiteral(["\n      <custom-style>\n        <style is=\"custom-style\" include=\"simple-colors\">\n          :host {\n            display: inline-block;\n            --lrnsys-dialog-color: var(--simple-colors-foreground1, #000);\n            --lrnsys-dialog-background-color: var(--simple-colors-background1);\n            --lrnsys-dialog-toolbar-background-color: var(\n              --simple-colors-background3\n            );\n            --lrnsys-dialog-secondary-background-color: rgba(\n              255,\n              255,\n              255,\n              0.7\n            );\n          }\n          :host([dark]) {\n            --lrnsys-dialog-toolbar-background-color: var(\n              --simple-colors-background1\n            );\n            --lrnsys-dialog-background-color: var(--simple-colors-background3);\n            --lrnsys-dialog-secondary-background-color: rgba(0, 0, 0, 0.7);\n          }\n          #dialogtrigger {\n            display: inline-block;\n          }\n        </style>\n      </custom-style>\n      <paper-button\n        class$=\"[[class]]\"\n        id=\"dialogtrigger\"\n        on-tap=\"openDialog\"\n        raised=\"[[raised]]\"\n        disabled$=\"[[disabled]]\"\n        title=\"[[alt]]\"\n        aria-label$=\"[[alt]]\"\n      >\n        <lrnsys-button-inner\n          avatar$=\"[[avatar]]\"\n          icon$=\"[[icon]]\"\n          text$=\"[[text]]\"\n        >\n          <slot name=\"button\" slot=\"button\"></slot>\n        </lrnsys-button-inner>\n      </paper-button>\n      <paper-tooltip for=\"dialogtrigger\" animation-delay=\"0\" hidden$=\"[[!alt]]\"\n        >[[alt]]</paper-tooltip\n      >\n    "]);_templateObject_77f463006daf11e98b2b231443c29fcf=function _templateObject_77f463006daf11e98b2b231443c29fcf(){return data};return data}/**
`lrnsys-dialog`

* @demo demo/index.html
*/var LrnsysDialog=/*#__PURE__*/function(_PolymerElement){babelHelpers.inherits(LrnsysDialog,_PolymerElement);function LrnsysDialog(){babelHelpers.classCallCheck(this,LrnsysDialog);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(LrnsysDialog).apply(this,arguments))}babelHelpers.createClass(LrnsysDialog,[{key:"tapEventOn",/**
   * Handle a focus/tap event and add the hoverclasses
   * to the classList array for paper-button.
   */value:function tapEventOn(e){var root=this;if(babelHelpers.typeof(root.hoverClass)!==("undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))){var classes=root.hoverClass.split(" ");classes.forEach(function(item,index){if(""!=item){root.$.dialogtrigger.classList.add(item)}})}}/**
   * Handle a mouse out event and remove the hoverclasses
   * from the classList array for paper-button.
   */},{key:"tapEventOff",value:function tapEventOff(e){var root=this;if(babelHelpers.typeof(root.hoverClass)!==("undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))){var classes=root.hoverClass.split(" ");classes.forEach(function(item,index){if(""!=item){root.$.dialogtrigger.classList.remove(item)}})}}/**
   * Toggle the drawer to open / close.
   */},{key:"openDialog",value:function openDialog(){// assemble everything in the slot
var nodes=(0,_polymerDom.dom)(this).getEffectiveChildNodes(),h=document.createElement("span"),c=document.createElement("span"),node={};for(var i in nodes){if(babelHelpers.typeof(nodes[i].tagName)!==("undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))){switch(nodes[i].getAttribute("slot")){case"toolbar-primary":case"toolbar-secondary":case"toolbar":case"header":node=nodes[i].cloneNode(!0);h.appendChild(node);break;case"button":// do nothing
break;default:node=nodes[i].cloneNode(!0);if(this.dynamicImages&&"IRON-IMAGE"===node.tagName){node.preventLoad=!1;node.removeAttribute("prevent-load")}c.appendChild(node);break;}}}var evt=new CustomEvent("simple-modal-show",{bubbles:!0,cancelable:!0,detail:{title:this.header,elements:{header:h,content:c},invokedBy:this.$.dialogtrigger}});this.dispatchEvent(evt)}/**
   * Handle toggle for mouse class and manage classList array for paper-button.
   */},{key:"focusToggle",value:function focusToggle(e){var _this=this;this.dispatchEvent(new CustomEvent("focus-changed",{bubbles:!0,cancelable:!0,composed:!0,detail:{focus:this.focusState}}));// see if it has hover classes
if(babelHelpers.typeof(this.hoverClass)!==("undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))){// break class into array
var classes=this.hoverClass.split(" ");// run through each and add or remove classes
classes.forEach(function(item,index){if(""!=item){if(_this.focusState){_this.$.dialogtrigger.classList.add(item)}else{_this.$.dialogtrigger.classList.remove(item)}}})}this.focusState=!this.focusState}/**
   * Ready lifecycle
   */},{key:"ready",value:function ready(){babelHelpers.get(babelHelpers.getPrototypeOf(LrnsysDialog.prototype),"ready",this).call(this);this.__modal=window.SimpleModal.requestAvailability()}/**
   * Attached lifecycle
   */},{key:"connectedCallback",value:function connectedCallback(){babelHelpers.get(babelHelpers.getPrototypeOf(LrnsysDialog.prototype),"connectedCallback",this).call(this);(0,_renderStatus.afterNextRender)(this,function(){this.$.dialogtrigger.addEventListener("focused-changed",this.focusToggle.bind(this));this.addEventListener("mousedown",this.tapEventOn.bind(this));this.addEventListener("mouseover",this.tapEventOn.bind(this));this.addEventListener("mouseout",this.tapEventOff.bind(this))})}/**
   * detached lifecycle
   */},{key:"disconnectedCallback",value:function disconnectedCallback(){this.$.dialogtrigger.removeEventListener("focused-changed",this.focusToggle.bind(this));this.removeEventListener("mousedown",this.tapEventOn.bind(this));this.removeEventListener("mouseover",this.tapEventOn.bind(this));this.removeEventListener("mouseout",this.tapEventOff.bind(this));babelHelpers.get(babelHelpers.getPrototypeOf(LrnsysDialog.prototype),"disconnectedCallback",this).call(this)}}],[{key:"template",get:function get(){return(0,_polymerElement.html)(_templateObject_77f463006daf11e98b2b231443c29fcf())}},{key:"tag",get:function get(){return"lrnsys-dialog"}},{key:"properties",get:function get(){return{/**
       * Icon to present for clicking.
       */icon:{type:String},/**
       * If the button should be visually lifted off the UI.
       */raised:{type:Boolean},/**
       * Icon to present for clicking.
       */avatar:{type:String},/**
       * Text to present for clicking.
       */text:{type:String},/**
       * Alt / hover text for this link
       */alt:{type:String,reflectToAttribute:!0},/**
       * Header for the dialog
       */header:{type:String},/**
       * Disabled state.
       */disabled:{type:Boolean,value:!1},/**
       * Classes to add / subtract based on the item being hovered
       */hoverClass:{type:String},/**
       * Default heading classes.
       */headingClass:{type:String,value:"white-text black"},/**
       * Support for dynamic loading of iron-image elements that are in the content slot.
       */dynamicImages:{type:Boolean,value:!1},/**
       * Tracks if focus state is applied
       */focusState:{type:Boolean,value:!1}}}}]);return LrnsysDialog}(_polymerElement.PolymerElement);_exports.LrnsysDialog=LrnsysDialog;window.customElements.define(LrnsysDialog.tag,LrnsysDialog)});