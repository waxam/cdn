define(["exports", "require", "../../../lit-element/lit-element.js"], function (_exports, _require, _litElement) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnsysDialogToolbarButton = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  function _templateObject2_909750d0c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: inline-block;\n        }\n        iron-icon {\n          display: inline-block;\n          height: 16px;\n          width: 16px;\n        }\n      "]);

    _templateObject2_909750d0c96f11ea8be5e1d5fe7ec787 = function _templateObject2_909750d0c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  function _templateObject_909750d0c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <paper-button\n        raised\n        @click=\"", "\"\n        id=\"", "\"\n        aria-label=\"", "\"\n      >\n        <iron-icon icon=\"", "\"></iron-icon> ", "\n      </paper-button>\n      <simple-tooltip for=\"", "\" animation-delay=\"0\"\n        >", "</simple-tooltip\n      >\n    "]);

    _templateObject_909750d0c96f11ea8be5e1d5fe7ec787 = function _templateObject_909750d0c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  var LrnsysDialogToolbarButton =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(LrnsysDialogToolbarButton, _LitElement);
    babelHelpers.createClass(LrnsysDialogToolbarButton, [{
      key: "render",

      /**
       * LitElement render
       */
      value: function render() {
        return (0, _litElement.html)(_templateObject_909750d0c96f11ea8be5e1d5fe7ec787(), this._onTap, this.id, this.title, this.icon, this.title, this.id, this.title);
      }
    }], [{
      key: "styles",

      /**
       * LitElement constructable styles enhancement
       */
      get: function get() {
        return [(0, _litElement.css)(_templateObject2_909750d0c96f11ea8be5e1d5fe7ec787())];
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnsys-dialog-toolbar-button";
      }
      /**
       * HTMLElement
       */

    }]);

    function LrnsysDialogToolbarButton() {
      var _this;

      babelHelpers.classCallCheck(this, LrnsysDialogToolbarButton);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(LrnsysDialogToolbarButton).call(this));
      new Promise(function (res, rej) {
        return _require.default(["../../../@polymer/paper-button/paper-button.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../../../@polymer/iron-icon/iron-icon.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../../../@polymer/iron-icons/iron-icons.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../../simple-tooltip/simple-tooltip.js"], res, rej);
      });
      return _this;
    }
    /**
     * LitElement / popular convention
     */


    babelHelpers.createClass(LrnsysDialogToolbarButton, [{
      key: "firstUpdated",

      /**
       * Ready lifecycle
       */
      value: function firstUpdated(changedProperties) {
        this.dispatchEvent(new CustomEvent("button-initialized", {
          detail: {
            id: this.id
          }
        }));
      }
      /**
       * Button has been tapped.
       */

    }, {
      key: "_onTap",
      value: function _onTap(e) {
        this.dispatchEvent(new CustomEvent("dialog-toolbar-button-tapped", {
          detail: {
            id: e.target.getAttribute("id")
          }
        }));
      }
    }], [{
      key: "properties",
      get: function get() {
        return {
          /**
           * The title of the button.
           */
          title: {
            type: String
          },

          /**
           * The button icon.
           */
          icon: {
            type: String
          },

          /**
           * The button ID.
           */
          id: {
            type: String
          }
        };
      }
    }]);
    return LrnsysDialogToolbarButton;
  }(_litElement.LitElement);

  _exports.LrnsysDialogToolbarButton = LrnsysDialogToolbarButton;
  window.customElements.define(LrnsysDialogToolbarButton.tag, LrnsysDialogToolbarButton);
});