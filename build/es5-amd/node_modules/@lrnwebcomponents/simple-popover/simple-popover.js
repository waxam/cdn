define(["exports", "../../lit-element/lit-element.js", "../absolute-position-behavior/absolute-position-behavior.js"], function (_exports, _litElement, _absolutePositionBehavior) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SimplePopover = void 0;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _templateObject2_8bf34430c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host([hidden]) {\n          display: none;\n        }\n        :host > div {\n          display: flex;\n          flex-direction: column-reverse;\n          justify-content: stretch;\n          z-index: 1;\n        }\n        :host([position=\"left\"]) > div {\n          justify-content: flex-start;\n          flex-direction: row;\n        }\n        :host([position=\"right\"]) > div {\n          justify-content: flex-end;\n          flex-direction: row-reverse;\n        }\n        :host([position=\"top\"]) > div {\n          flex-direction: column;\n        }\n        :host > div > * {\n          width: 100%;\n        }\n        :host([position=\"left\"]) > div > *,\n        :host([position=\"right\"]) > div > * {\n          width: unset;\n        }\n        #content {\n          margin: 0;\n          padding: var(--simple-popover-padding, 10px);\n          color: var(--simple-popover-color, #222);\n          background-color: var(--simple-popover-background-color, white);\n          border: 1px solid var(--simple-popover-border-color, #bbb);\n          min-height: 20px;\n          border-radius: var(--simple-popover-border-radius, 3px);\n          box-shadow: var(\n            --simple-popover-box-shadow,\n            rgba(60, 64, 67, 0.3) 0px 4px 8px 3px\n          );\n        }\n        #pointer-outer {\n          margin: -1px;\n        }\n        #pointer {\n          width: 20px;\n          height: 20px;\n          position: relative;\n          overflow: hidden;\n          flex: 0 0 20px;\n        }\n        #pointer:after {\n          content: \"\";\n          position: absolute;\n          width: 10px;\n          height: 10px;\n          background-color: var(--simple-popover-background-color, white);\n          border: 1px solid var(--simple-popover-border-color, #bbb);\n          transform: rotate(45deg);\n          top: 15px;\n          left: 5px;\n        }\n        :host([position=\"top\"]) #pointer:after {\n          top: -5px;\n          left: 5px;\n        }\n        :host([position=\"right\"]) #pointer:after {\n          top: 5px;\n          left: 15px;\n        }\n        :host([position=\"left\"]) #pointer:after {\n          top: 5px;\n          left: -5px;\n        }\n      "]);

    _templateObject2_8bf34430c96f11ea8be5e1d5fe7ec787 = function _templateObject2_8bf34430c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  function _templateObject_8bf34430c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <div>\n        <div id=\"content\" role=\"alertdialog\">\n          <slot></slot>\n        </div>\n        <div id=\"pointer-outer\">\n          <div id=\"pointer\" .style=", "></div>\n        </div>\n      </div>\n    "]);

    _templateObject_8bf34430c96f11ea8be5e1d5fe7ec787 = function _templateObject_8bf34430c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  /**
   * `simple-popover`
   * a popover alertdialog that is positioned next to a target element
   *
  ### Styling
  
  `<simple-popover>` provides the following custom properties
  for styling:
  
  Custom property | Description | Default
  ----------------|-------------|----------
  `--simple-popover-border-radius` | popover border-radius | 3px
  `--simple-popover-color` | popover text color| #222
  `--simple-popover-padding` | popover padding | 10px
  `--simple-popover-background-color` | popover background-color | white
  `--simple-popover-border-color` | popover border-color | #bbb
  `--simple-popover-box-shadow` | popover box-shadow | rgba(60, 64, 67, 0.3) 0px 4px 8px 3px;
   *
   * @element simple-popover
   * @demo ./demo/index.html
   */
  var SimplePopover =
  /*#__PURE__*/
  function (_AbsolutePositionBeha) {
    babelHelpers.inherits(SimplePopover, _AbsolutePositionBeha);
    babelHelpers.createClass(SimplePopover, [{
      key: "render",
      // render function
      value: function render() {
        return (0, _litElement.html)(_templateObject_8bf34430c96f11ea8be5e1d5fe7ec787(), this._getMargins(this.__positions));
      } // haxProperty definition

    }], [{
      key: "styles",
      //styles function
      get: function get() {
        return [].concat(babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(SimplePopover), "styles", this)), [(0, _litElement.css)(_templateObject2_8bf34430c96f11ea8be5e1d5fe7ec787())]);
      }
    }, {
      key: "haxProperties",
      get: function get() {
        return {
          canScale: true,
          canPosition: true,
          canEditSource: false,
          gizmo: {
            title: "Simple popover",
            description: "A popover alertdialog that is positioned next to a target element",
            icon: "icons:android",
            color: "green",
            groups: ["Popover"],
            handles: [{
              type: "todo:read-the-docs-for-usage"
            }],
            meta: {
              author: "nikkimk",
              owner: "The Pennsylvania State University"
            }
          },
          settings: {
            quick: [],
            configure: [{
              property: "title",
              description: "",
              inputMethod: "textfield",
              required: false,
              icon: "icons:android"
            }],
            advanced: []
          }
        };
      } // properties available to the custom element for data binding

    }, {
      key: "properties",
      get: function get() {
        return _objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(SimplePopover), "properties", this));
      }
    }]);

    function SimplePopover() {
      var _this;

      babelHelpers.classCallCheck(this, SimplePopover);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(SimplePopover).call(this));
      _this.offset = -10;
      _this.fitToVisibleBounds = true;
      return _this;
    }
    /**
     * Store the tag name to make it easier to obtain directly.
     * @notice function name must be here for tooling to operate correctly
     */


    babelHelpers.createClass(SimplePopover, [{
      key: "_getMargins",

      /**
       * sets pointer position based on popover and target middles
       *
       * @param {object} positions object that contains postions for popover and target
       * @returns {string} a string with margin styles to offset pointer
       */
      value: function _getMargins(positions) {
        if (positions && positions.target) {
          var self = this.getBoundingClientRect(),
              h = this.position === "bottom" || this.position === "top",
              max = h ? self.width : self.height,
              sStart = h ? self.left : self.top,
              tStart = h ? positions.target.left : positions.target.top,
              tHalf = h ? positions.target.width / 2 : positions.target.height / 2,
              center = tStart + tHalf - 10,
              margin = Math.min(max - 20, Math.max(0, center - sStart)),
              style = h ? "margin: 0 0 0 ".concat(margin, "px;") : "margin: ".concat(margin, "px 0 0 0;");
          return style;
        }

        return "";
      }
    }], [{
      key: "tag",
      get: function get() {
        return "simple-popover";
      }
    }]);
    return SimplePopover;
  }(_absolutePositionBehavior.AbsolutePositionBehavior);

  _exports.SimplePopover = SimplePopover;
  window.customElements.define(SimplePopover.tag, SimplePopover);
});