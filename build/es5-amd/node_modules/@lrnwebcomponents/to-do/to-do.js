define(["exports","require","../../@polymer/polymer/polymer-element.js","../../@polymer/polymer/lib/utils/render-status.js","../hax-body-behaviors/lib/HAXWiring.js","../schema-behaviors/schema-behaviors.js"],function(_exports,_require,_polymerElement,_renderStatus,_HAXWiring,_schemaBehaviors){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.ToDo=void 0;_require=babelHelpers.interopRequireWildcard(_require);function _templateObject_905dbe80898111e9ba38e33cad2d1624(){var data=babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n        }\n        :host([hide-form]) ul {\n          border: 1px solid black;\n        }\n        paper-card {\n          width: 100%;\n          padding: 8px;\n        }\n        .task-list-wrapper {\n          width: 100%;\n          height: 100%;\n          border: 2px solid black;\n          list-style: none;\n          padding: 0;\n        }\n        .task-list-wrapper li {\n          padding: 8px;\n        }\n        .task-list-wrapper li:nth-child(even) {\n          background-color: #f5f5f5;\n        }\n        .task-list-wrapper li:nth-child(odd) {\n          background-color: #e5e5e5;\n        }\n        .task-list-wrapper li:hover {\n          background-color: #ffffff;\n        }\n        .task-list-wrapper li:active {\n          background-color: #ffffff;\n        }\n        .task-list-wrapper li:focus {\n          background-color: #ffffff;\n        }\n        h3 {\n          margin: 4px;\n          padding: 0;\n          font-size: 20px;\n        }\n      </style>\n      <paper-card heading=\"[[name]]\" elevation=\"2\">\n        <div class=\"card-content\">\n          <div hidden$=\"[[hideForm]]\">\n            <paper-input label=\"Task to accomplish\" id=\"itemtext\"></paper-input>\n            <paper-button raised=\"\" id=\"itembutton\" on-click=\"_addItemToList\"\n              >Add item</paper-button\n            >\n          </div>\n          <ul class=\"task-list-wrapper\">\n            <template is=\"dom-repeat\" items=\"[[items]]\" as=\"item\">\n              <li data-item-id$=\"[[item.id]]\">\n                <paper-checkbox\n                  checked=\"{{item.value}}\"\n                  disabled=\"[[item.disabled]]\"\n                  >[[item.label]]</paper-checkbox\n                >\n              </li>\n            </template>\n          </ul>\n        </div>\n      </paper-card>\n    "],["\n      <style>\n        :host {\n          display: block;\n        }\n        :host([hide-form]) ul {\n          border: 1px solid black;\n        }\n        paper-card {\n          width: 100%;\n          padding: 8px;\n        }\n        .task-list-wrapper {\n          width: 100%;\n          height: 100%;\n          border: 2px solid black;\n          list-style: none;\n          padding: 0;\n        }\n        .task-list-wrapper li {\n          padding: 8px;\n        }\n        .task-list-wrapper li:nth-child(even) {\n          background-color: #f5f5f5;\n        }\n        .task-list-wrapper li:nth-child(odd) {\n          background-color: #e5e5e5;\n        }\n        .task-list-wrapper li:hover {\n          background-color: #ffffff;\n        }\n        .task-list-wrapper li:active {\n          background-color: #ffffff;\n        }\n        .task-list-wrapper li:focus {\n          background-color: #ffffff;\n        }\n        h3 {\n          margin: 4px;\n          padding: 0;\n          font-size: 20px;\n        }\n      </style>\n      <paper-card heading=\"[[name]]\" elevation=\"2\">\n        <div class=\"card-content\">\n          <div hidden\\$=\"[[hideForm]]\">\n            <paper-input label=\"Task to accomplish\" id=\"itemtext\"></paper-input>\n            <paper-button raised=\"\" id=\"itembutton\" on-click=\"_addItemToList\"\n              >Add item</paper-button\n            >\n          </div>\n          <ul class=\"task-list-wrapper\">\n            <template is=\"dom-repeat\" items=\"[[items]]\" as=\"item\">\n              <li data-item-id\\$=\"[[item.id]]\">\n                <paper-checkbox\n                  checked=\"{{item.value}}\"\n                  disabled=\"[[item.disabled]]\"\n                  >[[item.label]]</paper-checkbox\n                >\n              </li>\n            </template>\n          </ul>\n        </div>\n      </paper-card>\n    "]);_templateObject_905dbe80898111e9ba38e33cad2d1624=function _templateObject_905dbe80898111e9ba38e33cad2d1624(){return data};return data}/**
 * `to-do`
 * @demo demo/index.html
 */var ToDo=/*#__PURE__*/function(_SchemaBehaviors){babelHelpers.inherits(ToDo,_SchemaBehaviors);function ToDo(){var _this;babelHelpers.classCallCheck(this,ToDo);_this=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(ToDo).call(this));new Promise(function(res,rej){return _require.default(["../../@polymer/paper-checkbox/paper-checkbox.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../@polymer/paper-button/paper-button.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../@polymer/paper-card/paper-card.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../@polymer/paper-input/paper-input.js"],res,rej)});(0,_renderStatus.afterNextRender)(babelHelpers.assertThisInitialized(_this),function(){this.HAXWiring=new _HAXWiring.HAXWiring;this.HAXWiring.setup(ToDo.haxProperties,ToDo.tag,this)});return _this}babelHelpers.createClass(ToDo,[{key:"_valueChanged",/**
   * Ensure the values change.
   */value:function _valueChanged(e){for(var i in e.base){for(var j in e.base[i]){this.notifyPath("items."+i+"."+j)}}}/**
   * Add a new item to the list.
   */},{key:"_addItemToList",value:function _addItemToList(e){if(""!=this.shadowRoot.querySelector("#itemtext").value&&babelHelpers.typeof(this.shadowRoot.querySelector("#itemtext").value)!==("undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))){this.push("items",{label:this.shadowRoot.querySelector("#itemtext").value,value:!1,disabled:this.disabledList,id:"item-id-"+this.items.length});this.shadowRoot.querySelector("#itemtext").value=""}}}],[{key:"template",get:function get(){return(0,_polymerElement.html)(_templateObject_905dbe80898111e9ba38e33cad2d1624())}},{key:"tag",get:function get(){return"to-do"}},{key:"observers",get:function get(){return["_valueChanged(items.*)"]}},{key:"properties",get:function get(){var props={/**
       * Allow for hiding the input form for new data.
       */hideForm:{type:Boolean,value:!1,reflectToAttribute:!0},/**
       * Whether or not the list of items is disabled
       * checkboxes.
       */disabledList:{type:Boolean,value:!1,reflectToAttribute:!0},/**
       * Name of this to do list
       */name:{type:String,value:"To do list"},/**
       * Items
       */items:{type:Array,value:[],notify:!0}};if(babelHelpers.get(babelHelpers.getPrototypeOf(ToDo),"properties",this)){props=Object.assign(props,babelHelpers.get(babelHelpers.getPrototypeOf(ToDo),"properties",this))}return props}},{key:"haxProperties",get:function get(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"To do list",description:"A list of things to do so people can keep calm.",icon:"icons:list",color:"grey",groups:["List"],handles:[],meta:{author:"LRNWebComponents"}},settings:{quick:[{property:"name",title:"Name",description:"The name of this to do list",inputMethod:"textfield",icon:"editor:title"}],configure:[{property:"name",title:"Name",description:"The name of this to do list",inputMethod:"textfield",icon:"editor:title"},{property:"items",title:"List of items",description:"List of items to display in our list.",inputMethod:"array",properties:[{property:"label",title:"Task",description:"Name of the task",inputMethod:"textfield",required:!0},{property:"value",title:"Done",description:"Completion state",inputMethod:"boolean"}]}],advanced:[]}}}}]);return ToDo}((0,_schemaBehaviors.SchemaBehaviors)(_polymerElement.PolymerElement));_exports.ToDo=ToDo;window.customElements.define(ToDo.tag,ToDo)});