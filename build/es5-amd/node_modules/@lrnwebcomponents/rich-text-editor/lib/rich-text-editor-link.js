define(["exports","../../../@polymer/polymer/polymer-element.js","../../../@polymer/paper-tooltip/paper-tooltip.js","../../../@polymer/iron-icons/iron-icons.js","./rich-text-editor-button-styles.js","./rich-text-editor-prompt-button.js","./rich-text-editor-prompt.js"],function(_exports,_polymerElement,_paperTooltip,_ironIcons,_richTextEditorButtonStyles,_richTextEditorPromptButton,_richTextEditorPrompt){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.RichTextEditorLink=void 0;/**
 * Copyright 2019 Penn State University
 * @license Apache-2.0, see License.md for full text.
 */ /**
 * `rich-text-editor-link`
 * `a button for rich text editor (custom buttons can extend this)`
 *
 * @microcopy - language worth noting:
 *  -
 *
 * @customElement
 * @polymer
 */var RichTextEditorLink=/*#__PURE__*/function(_RichTextEditorPrompt){babelHelpers.inherits(RichTextEditorLink,_RichTextEditorPrompt);function RichTextEditorLink(){babelHelpers.classCallCheck(this,RichTextEditorLink);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(RichTextEditorLink).apply(this,arguments))}babelHelpers.createClass(RichTextEditorLink,null,[{key:"properties",// properties available to the custom element for data binding
get:function get(){return{/**
       * fields for the prompt popover.
       */fields:{type:Array,value:[{property:"",title:"Text",description:"The link text",inputMethod:"textfield"},{property:"href",title:"Link",description:"The link URL",inputMethod:"textfield"}]},/**
       * the text of the prompt, as in "Link href" or "Image src"
       */tag:{name:"tag",type:String,value:"a"},/**
       * The prefilled value of the prompt
       */value:{type:Object,value:{link:null}}}}/**
   * Store the tag name to make it easier to obtain directly.
   * @notice function name must be here for tooling to operate correctly
   */},{key:"tag",get:function get(){return"rich-text-editor-link"}/**
   * placeholder function for prompt action
   * /
  updateSelection() {
    this.selectedText.setAttribute("href", this.value.link.trim());
    this.selectedText.innerHTML = this.value.text;
    this.deselectText(this.value.link === null || this.value.link.trim() === "");
  }*/}]);return RichTextEditorLink}(_richTextEditorPromptButton.RichTextEditorPromptButton);_exports.RichTextEditorLink=RichTextEditorLink;window.customElements.define(RichTextEditorLink.tag,RichTextEditorLink)});