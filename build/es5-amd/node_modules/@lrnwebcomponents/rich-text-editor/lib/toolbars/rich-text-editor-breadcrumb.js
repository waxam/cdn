define(["exports", "../../../../lit-element/lit-element.js", "../buttons/rich-text-editor-button-styles.js"], function (_exports, _litElement, _richTextEditorButtonStyles) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.RichTextEditorBreadcrumb = void 0;

  function _templateObject2_7923e7a0545d11eba21e89082e94d7aa() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        #button {\n          font-family: monospace;\n          display: inline-block;\n          text-align: center;\n          min-width: 30px;\n          line-height: 30px;\n          margin: 0;\n          padding: 2px 5px;\n        }\n\xA0\xA0\xA0\xA0\xA0\xA0"]);

    _templateObject2_7923e7a0545d11eba21e89082e94d7aa = function _templateObject2_7923e7a0545d11eba21e89082e94d7aa() {
      return data;
    };

    return data;
  }

  function _templateObject_7923e7a0545d11eba21e89082e94d7aa() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <button\n        id=\"button\"\n        class=\"rtebutton rtebreadcrumb\"\n        aria-controls=\"", "\"\n        @click=\"", "\"\n        tabindex=\"0\"\n        part=\"button\"\n      >\n        ", "\n      </button>\n    "]);

    _templateObject_7923e7a0545d11eba21e89082e94d7aa = function _templateObject_7923e7a0545d11eba21e89082e94d7aa() {
      return data;
    };

    return data;
  }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `rich-text-editor-breadcrumb`
   * `a button for rich text editor breadcrumbs`
   *
   *  @element rich-text-editor-breadcrumb
   */
  var RichTextEditorBreadcrumb = /*#__PURE__*/function (_RichTextEditorButton) {
    babelHelpers.inherits(RichTextEditorBreadcrumb, _RichTextEditorButton);

    var _super = _createSuper(RichTextEditorBreadcrumb);

    babelHelpers.createClass(RichTextEditorBreadcrumb, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_7923e7a0545d11eba21e89082e94d7aa(), this.controls, this._buttonTap, this.tag);
      }
    }], [{
      key: "tag",

      /**
       * Store the tag name to make it easier to obtain directly.
       */
      get: function get() {
        return "rich-text-editor-breadcrumb";
      }
    }, {
      key: "styles",
      get: function get() {
        return [].concat(babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(RichTextEditorBreadcrumb), "styles", this)), [(0, _litElement.css)(_templateObject2_7923e7a0545d11eba21e89082e94d7aa())]);
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * The text-editor that this breadcrumb controls.
           */
          controls: {
            type: String
          },

          /**
           * The tag for this breadcrumb.
           */
          tag: {
            type: String
          },

          /**
           * The target node that this breadcrumb selects.
           */
          target: {
            type: Object
          }
        };
      }
    }]);

    function RichTextEditorBreadcrumb() {
      var _this;

      babelHelpers.classCallCheck(this, RichTextEditorBreadcrumb);
      _this = _super.call(this);
      _this.tag = "";

      _this.addEventListener("mousedown", function (e) {
        e.preventDefault();
      });

      _this.addEventListener("keypress", function (e) {
        e.preventDefault();
      });

      return _this;
    }

    babelHelpers.createClass(RichTextEditorBreadcrumb, [{
      key: "firstUpdated",
      value: function firstUpdated(changedProperties) {
        var _this2 = this;

        if (babelHelpers.get(babelHelpers.getPrototypeOf(RichTextEditorBreadcrumb.prototype), "firstUpdated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(RichTextEditorBreadcrumb.prototype), "firstUpdated", this).call(this, changedProperties);
        }

        this.__a11y = this.shadowRoot.querySelector("#button");

        this.__a11y.addEventListener("keypress", function (e) {
          switch (e.key) {
            case "Enter":
              _this2._buttonTap(e);

              break;
          }
        });
      }
      /**
       * Handles button tap;
       * @param {event} e the button tab event
       * @returns {void}
       */

    }, {
      key: "_buttonTap",
      value: function _buttonTap(e) {
        e.preventDefault();
        this.dispatchEvent(new CustomEvent("breadcrumb-tap", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: this
        }));
      }
    }]);
    return RichTextEditorBreadcrumb;
  }((0, _richTextEditorButtonStyles.RichTextEditorButtonStyles)(_litElement.LitElement));

  _exports.RichTextEditorBreadcrumb = RichTextEditorBreadcrumb;
  window.customElements.define(RichTextEditorBreadcrumb.tag, RichTextEditorBreadcrumb);
});