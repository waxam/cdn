define(["exports", "../../../lit-element/lit-element.js"], function (_exports, _litElement) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.RichTextEditorStyles = _exports.RichTextEditorStyleManager = void 0;

  function _templateObject_fc6d93f0512d11eba3cb872b69c5cbbb() {
    var data = babelHelpers.taggedTemplateLiteral(["\n          :host,\n          html {\n            --rich-text-editor-bg: #fafafa;\n            --rich-text-editor-button-color: #444;\n            --rich-text-editor-border-color: #ddd;\n            --rich-text-editor-border: 1px solid\n              var(--rich-text-editor-border-color, #ddd);\n            --rich-text-editor-button-border: transparent;\n            --rich-text-editor-button-disabled-color: #666;\n            --rich-text-editor-button-disabled-bg: transparent;\n            --rich-text-editor-button-toggled-color: #222;\n            --rich-text-editor-button-toggled-bg: #ddd;\n            --rich-text-editor-button-hover-color: #000;\n            --rich-text-editor-button-hover-bg: #f0f0f0;\n            --rich-text-editor-picker-border: #fafafa;\n            --rich-text-editor-selection-bg: #b3d9ff;\n          }\n        "]);

    _templateObject_fc6d93f0512d11eba3cb872b69c5cbbb = function _templateObject_fc6d93f0512d11eba3cb872b69c5cbbb() {
      return data;
    };

    return data;
  }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  var RichTextEditorStyles = function RichTextEditorStyles(SuperClass) {
    return /*#__PURE__*/function (_SuperClass) {
      babelHelpers.inherits(_class, _SuperClass);

      var _super = _createSuper(_class);

      function _class() {
        babelHelpers.classCallCheck(this, _class);
        return _super.apply(this, arguments);
      }

      babelHelpers.createClass(_class, null, [{
        key: "tag",
        get: function get() {
          return "rich-text-editor-styles";
        }
      }, {
        key: "styles",
        get: function get() {
          return [(0, _litElement.css)(_templateObject_fc6d93f0512d11eba3cb872b69c5cbbb())];
        }
      }]);
      return _class;
    }(SuperClass);
  };
  /**
   * `rich-text-editor-styles`
   * @element rich-text-editor-styles
   * `a shared set of styles for rich-text-editor`
   */

  /**
   * `fullscreen-behaviors`
   * abstracted fullscreen behaviors
   *
   * @element fullscreen-behaviors
   */


  _exports.RichTextEditorStyles = RichTextEditorStyles;

  var RichTextEditorStyleManager = /*#__PURE__*/function (_RichTextEditorStyles) {
    babelHelpers.inherits(RichTextEditorStyleManager, _RichTextEditorStyles);

    var _super2 = _createSuper(RichTextEditorStyleManager);

    function RichTextEditorStyleManager() {
      babelHelpers.classCallCheck(this, RichTextEditorStyleManager);
      return _super2.apply(this, arguments);
    }

    return RichTextEditorStyleManager;
  }(RichTextEditorStyles(_litElement.LitElement));

  _exports.RichTextEditorStyleManager = RichTextEditorStyleManager;
  window.customElements.define(RichTextEditorStyleManager.tag, RichTextEditorStyleManager);
  window.RichTextEditorStyleManager = {};
  window.RichTextEditorStyleManager.instance = null;
  /**
   * Checks to see if there is an instance available, and if not appends one
   */

  window.RichTextEditorStyleManager.requestAvailability = function () {
    if (window.RichTextEditorStyleManager.instance == null) {
      window.RichTextEditorStyleManager.instance = document.createElement(RichTextEditorStyleManager.tag);
      document.head.appendChild(window.RichTextEditorStyleManager.instance);
    }

    return window.RichTextEditorStyleManager.instance;
  };
});