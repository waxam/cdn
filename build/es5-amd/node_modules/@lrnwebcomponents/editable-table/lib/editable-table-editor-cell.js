define(["../../../@polymer/polymer/polymer-legacy.js","../../../@polymer/iron-autogrow-textarea/iron-autogrow-textarea.js","../../../@polymer/iron-a11y-keys/iron-a11y-keys.js","./editable-table-behaviors.js"],function(_polymerLegacy,_ironAutogrowTextarea,_ironA11yKeys,_editableTableBehaviors){"use strict";function _templateObject_6c33355062ec11e9ba56c1f762879bb4(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style is=\"custom-style\">\n      :host {\n        padding: 0;\n        margin: 0;\n        width: 100%;\n        min-width: unset;\n        display: inline-flex;\n        justify-content: space-between;\n        align-items: center;\n        align-content: stretch;\n      }\n      :host iron-autogrow-textarea {\n        width: 100%;\n        padding: 0;\n        border: none;\n        font-weight: unset;\n        resize: none;\n        -webkit-appearance: none;\n        -mozilla-appearance: none;\n        flex-grow: 1;\n        --iron-autogrow-textarea: {\n          padding: 0;\n          font-weight: unset;\n          border: none;\n          resize: none;\n          flex-direction: column;\n          -webkit-flex-direction: column;\n          -webkit-appearance: none;\n          -mozilla-appearance: none;\n        }\n      }\n      :host iron-autogrow-textarea > * {\n        padding: 0;\n        font-weight: unset;\n        border: none;\n        resize: none;\n        flex-direction: column;\n        -webkit-flex-direction: column;\n        -webkit-appearance: none;\n        -mozilla-appearance: none;\n      }\n    </style>\n    <iron-autogrow-textarea\n      autofocus=\"\"\n      id=\"cell\"\n      label$=\"[[label]]\"\n      value$=\"{{value}}\"\n    >\n    </iron-autogrow-textarea>\n    <div id=\"icons\"><slot></slot></div>\n    <iron-a11y-keys\n      id=\"down\"\n      keys=\"down\"\n      target$=\"[[cell]]\"\n      on-keys-pressed=\"_onCellBelow\"\n    >\n    </iron-a11y-keys>\n    <iron-a11y-keys\n      id=\"up\"\n      keys=\"up\"\n      target$=\"[[cell]]\"\n      on-keys-pressed=\"_onCellAbove\"\n    >\n    </iron-a11y-keys>\n    <iron-a11y-keys\n      id=\"left\"\n      keys=\"left\"\n      target$=\"[[cell]]\"\n      on-keys-pressed=\"_onCellLeft\"\n    >\n    </iron-a11y-keys>\n    <iron-a11y-keys\n      id=\"right\"\n      keys=\"right\"\n      target$=\"[[cell]]\"\n      on-keys-pressed=\"_onCellRight\"\n    >\n    </iron-a11y-keys>\n  "],["\n    <style is=\"custom-style\">\n      :host {\n        padding: 0;\n        margin: 0;\n        width: 100%;\n        min-width: unset;\n        display: inline-flex;\n        justify-content: space-between;\n        align-items: center;\n        align-content: stretch;\n      }\n      :host iron-autogrow-textarea {\n        width: 100%;\n        padding: 0;\n        border: none;\n        font-weight: unset;\n        resize: none;\n        -webkit-appearance: none;\n        -mozilla-appearance: none;\n        flex-grow: 1;\n        --iron-autogrow-textarea: {\n          padding: 0;\n          font-weight: unset;\n          border: none;\n          resize: none;\n          flex-direction: column;\n          -webkit-flex-direction: column;\n          -webkit-appearance: none;\n          -mozilla-appearance: none;\n        }\n      }\n      :host iron-autogrow-textarea > * {\n        padding: 0;\n        font-weight: unset;\n        border: none;\n        resize: none;\n        flex-direction: column;\n        -webkit-flex-direction: column;\n        -webkit-appearance: none;\n        -mozilla-appearance: none;\n      }\n    </style>\n    <iron-autogrow-textarea\n      autofocus=\"\"\n      id=\"cell\"\n      label\\$=\"[[label]]\"\n      value\\$=\"{{value}}\"\n    >\n    </iron-autogrow-textarea>\n    <div id=\"icons\"><slot></slot></div>\n    <iron-a11y-keys\n      id=\"down\"\n      keys=\"down\"\n      target\\$=\"[[cell]]\"\n      on-keys-pressed=\"_onCellBelow\"\n    >\n    </iron-a11y-keys>\n    <iron-a11y-keys\n      id=\"up\"\n      keys=\"up\"\n      target\\$=\"[[cell]]\"\n      on-keys-pressed=\"_onCellAbove\"\n    >\n    </iron-a11y-keys>\n    <iron-a11y-keys\n      id=\"left\"\n      keys=\"left\"\n      target\\$=\"[[cell]]\"\n      on-keys-pressed=\"_onCellLeft\"\n    >\n    </iron-a11y-keys>\n    <iron-a11y-keys\n      id=\"right\"\n      keys=\"right\"\n      target\\$=\"[[cell]]\"\n      on-keys-pressed=\"_onCellRight\"\n    >\n    </iron-a11y-keys>\n  "]);_templateObject_6c33355062ec11e9ba56c1f762879bb4=function _templateObject_6c33355062ec11e9ba56c1f762879bb4(){return data};return data}/**
`editable-table-editor-cell`

An editable cell in the editable-table-editor 
(editable-table-editor.html) interface.

* @demo demo/index.html

@microcopy - the mental model for this element

<editable-table-editor-cell 
  row="3"                     //The index of the cell's row
  column="2"                  //The index of the cell's column
  value="">                   //The editable contents of the cell
  <iron-icon class="sortable-icon"icon="editable-table:sortable" aria-hidden="true"></iron-icon>
  <iron-icon class="filter-icon"icon="editable-table:filter-off"></iron-icon>
</editable-table-editor-cell>

*/(0,_polymerLegacy.Polymer)({_template:(0,_polymerLegacy.html)(_templateObject_6c33355062ec11e9ba56c1f762879bb4()),is:"editable-table-editor-cell",listeners:{"bind-value-changed":"_onValueChanged"},behaviors:[editableTableBehaviors.cellBehaviors],properties:{/**
     * cell row
     */row:{type:Number,value:null},/**
     * cell column
     */column:{type:Number,value:null},/**
     * cell label
     */label:{type:String,computed:"_getCellLabel(column,row)"},/**
     * cell contents
     */value:{type:String,value:!1,reflectToAttribute:!0}},/**
   * set iron-a11y-keys target to this
   */ready:function ready(){this.cell=this.$.cell},/**
   * focus the on text area
   */focus:function focus(){this.cell.textarea.focus()},/**
   * if clicking in td but outside textarea, focus the text area
   */_getCellLabel:function _getCellLabel(column,row){return"Cell "+this._getLabel(column,"Column")+this._getLabel(row,"Row")},/**
   * if clicking in td but outside textarea, focus the text area
   */_onValueChanged:function _onValueChanged(e){var root=this;root.fire("cell-value-changed",{row:root.row,column:root.column,value:e.detail.value})},/**
   * FROM: https://stackoverflow.com/questions/2897155/get-cursor-position-in-characters-within-a-text-input-field
   * Returns the caret (cursor) position of the specified text field.
   * Return value range is 0-oField.value.length.
   */getCaretPosition:function getCaretPosition(){var caret=0;// IE Support
if(document.selection){// Set focus on the element
this.$.cell.focus();// To get cursor position, get empty selection range
var sel=document.selection.createRange();// Move selection start to 0 position
sel.moveStart("character",-this.$.cell.value.length);// The caret position is selection length
caret=sel.text.length}else if(this.$.cell.shadowRoot.querySelector("textarea").selectionStart||"0"==this.$.cell.shadowRoot.querySelector("textarea").selectionStart){caret=this.$.cell.shadowRoot.querySelector("textarea").selectionStart}return caret},/**
   * make sure caret is in the correct position
   */setCaretPosition:function setCaretPosition(start,end){var textarea=this.$.cell.shadowRoot.querySelector("textarea");textarea.focus();if(textarea.createTextRange){var range=textarea.createTextRange();range.collapse(!0);range.moveEnd("character",end);range.moveStart("character",start);range.select()}else if(textarea.setSelectionRange){textarea.setSelectionRange(start,end);textarea.selectionStart=start;textarea.selectionEnd=end}},/**
   * set focus to textarea
   */setFocus:function setFocus(start,end){this.$.cell.shadowRoot.querySelector("textarea").focus();if(start!==void 0&&end!==void 0){this.setCaretPosition(start,end)}else if(start!==void 0){this.setCaretPosition(start,start)}else{this.setCaretPosition(0,0)}},/**
   * handle left
   */_onCellLeft:function _onCellLeft(e){this.fire("cell-move",{cell:this.parentNode,direction:"left"})},/**
   * handle right
   */_onCellRight:function _onCellRight(e){this.fire("cell-move",{cell:this.parentNode,direction:"right"})},/**
   * handle up
   */_onCellAbove:function _onCellAbove(e){this.fire("cell-move",{cell:this.parentNode,direction:"up"})},/**
   * handle down
   */_onCellBelow:function _onCellBelow(e){this.fire("cell-move",{cell:this.parentNode,direction:"down"})}})});