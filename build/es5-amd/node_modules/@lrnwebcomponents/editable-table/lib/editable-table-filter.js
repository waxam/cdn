define(["exports", "../../../lit-element/lit-element.js", "../../../@polymer/paper-button/paper-button.js", "../../simple-tooltip/simple-tooltip.js", "../../../@polymer/iron-icons/iron-icons.js", "./editable-table-iconset.js"], function (_exports, _litElement, _paperButton, _simpleTooltip, _ironIcons, _editableTableIconset) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.EditableTableFilter = void 0;

  function _templateObject2_8e439cd0c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        paper-button {\n          padding: var(--editable-table-cell-padding, 0);\n          margin: 0;\n          width: auto;\n          min-width: unset;\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          align-content: stretch;\n          text-transform: unset;\n          font-family: var(--editable-table-font-family);\n        }\n        paper-button > div {\n          flex-grow: 1;\n        }\n        iron-icon {\n          min-width: 24px;\n        }\n        .sr-only {\n          position: absolute;\n          left: -9999px;\n          font-size: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n        #filter-off {\n          opacity: 0.25;\n        }\n        :host(:not([filtered])) .filtered,\n        :host(:not([filtered]):not(:focus):not(:hover)) #filter,\n        :host(:not([filtered]):focus) #filter-off,\n        :host(:not([filtered]):hover) #filter-off,\n        :host([filtered]:not(:focus):not(:hover)) #filter-off,\n        :host([filtered]:focus) #filter,\n        :host([filtered]:hover) #filter {\n          display: none;\n        }\n      "]);

    _templateObject2_8e439cd0c96f11ea8be5e1d5fe7ec787 = function _templateObject2_8e439cd0c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  function _templateObject_8e439cd0c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <paper-button\n        id=\"button\"\n        class=\"container\"\n        @click=\"", "\"\n      >\n        <span>", "</span>\n        <span class=\"sr-only\" .hidden=\"", "\"> (filtered)</span>\n        <span class=\"sr-only\"> Toggle filter.</span>\n        <iron-icon id=\"filter\" icon=\"editable-table:filter\"></iron-icon>\n        <iron-icon id=\"filter-off\" icon=\"editable-table:filter-off\"></iron-icon>\n      </paper-button>\n      <simple-tooltip for=\"button\"\n        >Toggle Column ", " filter for\n        \"", "\"</simple-tooltip\n      >\n    "]);

    _templateObject_8e439cd0c96f11ea8be5e1d5fe7ec787 = function _templateObject_8e439cd0c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  /**
   * `editable-table-editor-filter`
   * `Displays a cell in the editable-table-display mode (editable-table-display.html) as a filter button.`
   *
   * @demo ./demo/display.html
   * @polymer
   * @element editable-table-editor-filter
   */
  var EditableTableFilter =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(EditableTableFilter, _LitElement);
    babelHelpers.createClass(EditableTableFilter, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_8e439cd0c96f11ea8be5e1d5fe7ec787(), this._onFilterClicked, this.text, !this.filtered, this.columnIndex, this.text);
      }
    }], [{
      key: "styles",
      get: function get() {
        return [(0, _litElement.css)(_templateObject2_8e439cd0c96f11ea8be5e1d5fe7ec787())];
      }
    }, {
      key: "tag",
      get: function get() {
        return "editable-table-filter";
      }
    }]);

    function EditableTableFilter() {
      var _this;

      babelHelpers.classCallCheck(this, EditableTableFilter);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(EditableTableFilter).call(this));
      _this.columnIndex = null;
      _this.filtered = false;
      _this.text = "";
      return _this;
    }

    babelHelpers.createClass(EditableTableFilter, [{
      key: "_getPressed",

      /**
       * Listens for button click
       */
      value: function _getPressed(filtered) {
        return filtered ? "true" : "false";
      }
      /**
       * Fires when filter button is clicked
       * @event toggle-filter
       */

    }, {
      key: "_onFilterClicked",
      value: function _onFilterClicked() {
        this.dispatchEvent(new CustomEvent("toggle-filter", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: this
        }));
      }
    }], [{
      key: "properties",
      get: function get() {
        return {
          /**
           * Index of the column
           */
          columnIndex: {
            type: Number,
            attribute: "column-index"
          },

          /**
           * Whether the column is filtered
           */
          filtered: {
            type: Boolean,
            reflect: true
          },

          /**
           * Column header text
           */
          text: {
            type: String
          }
        };
      }
    }]);
    return EditableTableFilter;
  }(_litElement.LitElement);

  _exports.EditableTableFilter = EditableTableFilter;
  window.customElements.define(EditableTableFilter.tag, EditableTableFilter);
});