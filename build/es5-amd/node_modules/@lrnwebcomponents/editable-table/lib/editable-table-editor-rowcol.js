define(["exports", "../../../@polymer/polymer/polymer-element.js", "../../../@polymer/polymer/lib/utils/render-status.js", "../../../@polymer/paper-menu-button/paper-menu-button.js", "../../../@polymer/paper-button/paper-button.js", "../../../@polymer/paper-listbox/paper-listbox.js", "../../../@polymer/paper-tooltip/paper-tooltip.js", "./editable-table-editor-insdel.js", "./editable-table-behaviors.js"], function (_exports, _polymerElement, _renderStatus, _paperMenuButton, _paperButton, _paperListbox, _paperTooltip, _editableTableEditorInsdel, _editableTableBehaviors) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.EditableTableEditorRowcol = void 0;

  function _templateObject_e5f32430b46e11e9978b67ee5ebb8bc8() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n        }\n        :host #label {\n          margin: 0;\n          padding: 0;\n        }\n        :host paper-menu-button {\n          margin: 0;\n          padding: 0;\n          width: 100%;\n        }\n        :host paper-button {\n          margin: 0;\n          display: block;\n          background-color: transparent;\n        }\n        :host([condensed]) paper-button {\n          padding-top: 0;\n          padding-bottom: 0;\n        }\n      </style>\n      <paper-menu-button id=\"menu\">\n        <paper-button slot=\"dropdown-trigger\">\n          <span id=\"label\">[[label]]</span>\n          <iron-icon icon=\"arrow-drop-down\"></iron-icon>\n        </paper-button>\n        <paper-listbox slot=\"dropdown-content\" label$=\"[[label]]\">\n          <editable-table-editor-insdel\n            action=\"insert\"\n            index$=\"[[index]]\"\n            type$=\"[[type]]\"\n            before=\"true\"\n            >Insert [[type]] Before</editable-table-editor-insdel\n          >\n          <editable-table-editor-insdel\n            action=\"insert\"\n            index$=\"[[index]]\"\n            type$=\"[[type]]\"\n            >Insert [[type]] After</editable-table-editor-insdel\n          >\n          <editable-table-editor-insdel\n            action=\"delete\"\n            index$=\"[[index]]\"\n            type$=\"[[type]]\"\n            >Delete [[type]]</editable-table-editor-insdel\n          >\n        </paper-listbox>\n      </paper-menu-button>\n    "], ["\n      <style>\n        :host {\n          display: block;\n        }\n        :host #label {\n          margin: 0;\n          padding: 0;\n        }\n        :host paper-menu-button {\n          margin: 0;\n          padding: 0;\n          width: 100%;\n        }\n        :host paper-button {\n          margin: 0;\n          display: block;\n          background-color: transparent;\n        }\n        :host([condensed]) paper-button {\n          padding-top: 0;\n          padding-bottom: 0;\n        }\n      </style>\n      <paper-menu-button id=\"menu\">\n        <paper-button slot=\"dropdown-trigger\">\n          <span id=\"label\">[[label]]</span>\n          <iron-icon icon=\"arrow-drop-down\"></iron-icon>\n        </paper-button>\n        <paper-listbox slot=\"dropdown-content\" label\\$=\"[[label]]\">\n          <editable-table-editor-insdel\n            action=\"insert\"\n            index\\$=\"[[index]]\"\n            type\\$=\"[[type]]\"\n            before=\"true\"\n            >Insert [[type]] Before</editable-table-editor-insdel\n          >\n          <editable-table-editor-insdel\n            action=\"insert\"\n            index\\$=\"[[index]]\"\n            type\\$=\"[[type]]\"\n            >Insert [[type]] After</editable-table-editor-insdel\n          >\n          <editable-table-editor-insdel\n            action=\"delete\"\n            index\\$=\"[[index]]\"\n            type\\$=\"[[type]]\"\n            >Delete [[type]]</editable-table-editor-insdel\n          >\n        </paper-listbox>\n      </paper-menu-button>\n    "]);

    _templateObject_e5f32430b46e11e9978b67ee5ebb8bc8 = function _templateObject_e5f32430b46e11e9978b67ee5ebb8bc8() {
      return data;
    };

    return data;
  }

  /**
  `editable-table-editor-rowcol`
  
  A header label and menu for inserting and deleting a row or a column 
  of the editable-table interface (editable-table.html).
  
  * @demo demo/index.html
  
  @microcopy - the mental model for this element
  
  <editable-table-editor-rowcol 
    condensed                     //Decrease the padding to match the rest of the table cells when table is condensed? Default is false.         
    index="1"                     //The index of the row or column
    type="Column">                //The type of menu, as in "Row" or "Column"
  </editable-table-editor-rowcol>
  
  */
  var EditableTableEditorRowcol =
  /*#__PURE__*/
  function (_cellBehaviors) {
    babelHelpers.inherits(EditableTableEditorRowcol, _cellBehaviors);

    function EditableTableEditorRowcol() {
      babelHelpers.classCallCheck(this, EditableTableEditorRowcol);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(EditableTableEditorRowcol).apply(this, arguments));
    }

    babelHelpers.createClass(EditableTableEditorRowcol, [{
      key: "connectedCallback",
      value: function connectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(EditableTableEditorRowcol.prototype), "connectedCallback", this).call(this);
        (0, _renderStatus.afterNextRender)(this, function () {
          this.addEventListener("insdel-tapped", this._onTap.bind(this));
        });
      }
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        this.removeEventListener("insdel-tapped", this._onTap.bind(this));
        babelHelpers.get(babelHelpers.getPrototypeOf(EditableTableEditorRowcol.prototype), "disconnectedCallback", this).call(this);
      }
    }, {
      key: "_onTap",
      value: function _onTap(e) {}
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_e5f32430b46e11e9978b67ee5ebb8bc8());
      }
    }, {
      key: "tag",
      get: function get() {
        return "editable-table-editor-rowcol";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * The index of the row or column
           */
          index: {
            type: Number,
            value: null
          },

          /**
           * The index of the row or column
           */
          label: {
            type: String,
            computed: "_getLabel(index,type)"
          },

          /**
           * Is it row or column?
           */
          type: {
            type: String,
            value: null
          }
        };
      }
    }]);
    return EditableTableEditorRowcol;
  }((0, _editableTableBehaviors.cellBehaviors)(_polymerElement.PolymerElement));

  _exports.EditableTableEditorRowcol = EditableTableEditorRowcol;
  window.customElements.define(EditableTableEditorRowcol.tag, EditableTableEditorRowcol);
});