define(["../../../@polymer/polymer/polymer-legacy.js","../../../@polymer/paper-button/paper-button.js","../../../@polymer/paper-toggle-button/paper-toggle-button.js","../../../@polymer/paper-item/paper-item.js","../../../@polymer/paper-tooltip/paper-tooltip.js"],function(_polymerLegacy,_paperButton,_paperToggleButton,_paperItem,_paperTooltip){"use strict";function _templateObject_e89c5580620c11e99c573b9129e18660(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        display: block;\n      }\n      :host .setting {\n        font-size: 95%;\n        padding: var(--editable-table-toggle-padding, 8px 0px);\n        justify-content: space-between;\n        width: 100%;\n      }\n      :host([disabled]) .setting-text {\n        opacity: 0.5;\n      }\n    </style>\n    <div class=\"setting\">\n      <div class=\"setting-control\">\n        <paper-toggle-button\n          id=\"button\"\n          checked$=\"[[value]]\"\n          disabled$=\"[[disabled]]\"\n          >[[label]]</paper-toggle-button\n        >\n        <paper-tooltip id=\"tooltip\" for=\"button\">[[tooltip]]</paper-tooltip>\n      </div>\n    </div>\n  "],["\n    <style>\n      :host {\n        display: block;\n      }\n      :host .setting {\n        font-size: 95%;\n        padding: var(--editable-table-toggle-padding, 8px 0px);\n        justify-content: space-between;\n        width: 100%;\n      }\n      :host([disabled]) .setting-text {\n        opacity: 0.5;\n      }\n    </style>\n    <div class=\"setting\">\n      <div class=\"setting-control\">\n        <paper-toggle-button\n          id=\"button\"\n          checked\\$=\"[[value]]\"\n          disabled\\$=\"[[disabled]]\"\n          >[[label]]</paper-toggle-button\n        >\n        <paper-tooltip id=\"tooltip\" for=\"button\">[[tooltip]]</paper-tooltip>\n      </div>\n    </div>\n  "]);_templateObject_e89c5580620c11e99c573b9129e18660=function _templateObject_e89c5580620c11e99c573b9129e18660(){return data};return data}/**
`editable-table-editor-toggle`

A toggle button for an property in the editable-table 
interface (editable-table.html).

* @demo demo/index.html

@microcopy - the mental model for this element

<editable-table-editor-toggle
  hidden                          //Hide and disable this toggle? Default is false.
  label="Condensed"               //The label for the toggle button
  prop="condensed"                //The property controlled by this toggle
  tooltip="Condense cell height." //A tooltip for this toggle.
  value="true">                   //The value of this toggle.
</editable-table-editor-toggle>

*/(0,_polymerLegacy.Polymer)({_template:(0,_polymerLegacy.html)(_templateObject_e89c5580620c11e99c573b9129e18660()),is:"editable-table-editor-toggle",listeners:{change:"_onChange"},properties:{/**
     * is the toggle disabled
     */disabled:{type:Boolean,value:!1,reflectToAttribute:!0},/**
     * label for menu setting
     */label:{type:String,value:null},/**
     * the property to update
     */prop:{type:String,value:null},/**
     * tool tip for menu setting
     */tooltip:{type:String,value:null},/**
     * boolean value of menu setting
     */value:{type:Boolean,value:!1}},/**
   * Set up event listener to fire when toggled
   */_onChange:function _onChange(e){var root=this;if(e.srcElement===this.$.button)root.fire("editable-table-setting-changed",{prop:this.prop,value:e.srcElement.checked})}})});