define(["exports","../../../@polymer/polymer/polymer-element.js","../../../@polymer/paper-button/paper-button.js","../../../@polymer/iron-icons/iron-icons.js","./editable-table-iconset.js"],function(_exports,_polymerElement,_paperButton,_ironIcons,_editableTableIconset){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.EditableTableSort=void 0;function _templateObject_e1785cf07a9c11ea8ed6ed8c9eef0ab1(){var data=babelHelpers.taggedTemplateLiteral(["\n      <style is=\"custom-style\">\n        :host paper-button {\n          padding: var(--editable-table-cell-padding, 0);\n          margin: 0;\n          width: auto;\n          min-width: unset;\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          align-content: stretch;\n          text-transform: unset;\n          font-family: var(--editable-table-font-family);\n        }\n        :host paper-button > div {\n          flex-grow: 1;\n        }\n        :host .sr-only {\n          position: absolute;\n          left: -9999px;\n          font-size: 0;\n          height: 0;\n          width: 0;\n          overflow: hidden;\n        }\n        :host(:not([sort-mode=\"asc\"])) .asc,\n        :host(:not([sort-mode=\"desc\"])) .desc,\n        :host(:not([sort-mode=\"none\"])) .none,\n        :host #asc,\n        :host #desc,\n        :host([sorting]:not([sort-mode=\"none\"])) #none {\n          display: none;\n        }\n        :host([sorting][sort-mode=\"asc\"]) #asc,\n        :host([sorting][sort-mode=\"desc\"]) #desc {\n          display: flex;\n        }\n      </style>\n      <paper-button id=\"button\" class=\"container\" on-click=\"_onSortClicked\">\n        [[text]] <span class=\"sr-only asc\">(ascending)</span>\n        <span class=\"sr-only desc\">(descending)</span>\n        <span class=\"sr-only\"> Toggle sort mode.</span>\n        <iron-icon id=\"asc\" icon=\"arrow-drop-up\"></iron-icon>\n        <iron-icon id=\"desc\" icon=\"arrow-drop-down\"></iron-icon>\n        <iron-icon id=\"none\" icon=\"editable-table:sortable\"></iron-icon>\n      </paper-button>\n    "]);_templateObject_e1785cf07a9c11ea8ed6ed8c9eef0ab1=function _templateObject_e1785cf07a9c11ea8ed6ed8c9eef0ab1(){return data};return data}/**
 * `editable-table-editor-sort`
 * A column header that functions as a three-state sort button (no sort, sort ascending, sort descending) for the table-editor-display mode (table-editor-display.html).
 *
 * @demo ./demo/display.html
 *
 * @polymer
 * @element editable-table-editor-sort
 */var EditableTableSort=/*#__PURE__*/function(_PolymerElement){babelHelpers.inherits(EditableTableSort,_PolymerElement);function EditableTableSort(){babelHelpers.classCallCheck(this,EditableTableSort);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(EditableTableSort).apply(this,arguments))}babelHelpers.createClass(EditableTableSort,[{key:"_onSortClicked",/**
   * Fires when sort button is clicked
   * @event change-sort-mode
   */value:function _onSortClicked(){this.dispatchEvent(new CustomEvent("change-sort-mode",{bubbles:!0,cancelable:!0,composed:!0,detail:this}))}/**
   * Changes the sort mode
   * @param {string} mode the sort mode: `asc` for ascending or `desc` for descending;
   */},{key:"setSortMode",value:function setSortMode(mode){this.sortMode=mode;this.__checked="asc"===mode?!0:"desc"===mode?mode:!1}/**
   * Determines if column number is the same as the current sort column
   * @param {number} columnIndex the index of the column
   * @param {number} sortColumn the index of the column being sorted
   * @returns {boolean} whether this column is being sorted
   */},{key:"_isSorting",value:function _isSorting(columnIndex,sortColumn){return columnIndex===sortColumn}}],[{key:"template",get:function get(){return(0,_polymerElement.html)(_templateObject_e1785cf07a9c11ea8ed6ed8c9eef0ab1())}},{key:"tag",get:function get(){return"editable-table-sort"}},{key:"properties",get:function get(){return{/**
       * Sort ascending, descending or none
       */columnIndex:{type:Number,value:null,reflectToAttribute:!0},/**
       * Sort mode: ascending, descending or none
       */sortMode:{type:String,value:"none",reflectToAttribute:!0},/**
       * Index of the current sort column
       */sortColumn:{type:Number,value:-1,reflectToAttribute:!0},/**
       * Whether the column is being sorted
       */sorting:{type:Boolean,computed:"_isSorting(columnIndex,sortColumn)",reflectToAttribute:!0},/**
       * Column header text
       */text:{type:String,value:""}}}}]);return EditableTableSort}(_polymerElement.PolymerElement);_exports.EditableTableSort=EditableTableSort;window.customElements.define(EditableTableSort.tag,EditableTableSort)});