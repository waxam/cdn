define(["exports", "../../../@polymer/polymer/polymer-element.js", "../../../@polymer/polymer/lib/utils/render-status.js", "../../../@polymer/iron-autogrow-textarea/iron-autogrow-textarea.js", "../../../@polymer/iron-icons/iron-icons.js", "../../../@polymer/paper-tooltip/paper-tooltip.js", "../../dropdown-select/dropdown-select.js", "../../simple-colors/simple-colors.js", "../../responsive-utility/lib/responsive-utility-behaviors.js", "../../a11y-collapse/a11y-collapse.js", "./editable-table-behaviors.js", "./editable-table-editor-rowcol.js", "./editable-table-editor-toggle.js", "./editable-table-editor-cell.js", "./editable-table-iconset.js", "./editable-table-styles.js"], function (_exports, _polymerElement, _renderStatus, _ironAutogrowTextarea, _ironIcons, _paperTooltip, _dropdownSelect, _simpleColors, _responsiveUtilityBehaviors, _a11yCollapse, _editableTableBehaviors, _editableTableEditorRowcol, _editableTableEditorToggle, _editableTableEditorCell, _editableTableIconset, _editableTableStyles) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.EditableTableEditor = void 0;

  function _templateObject_883b8680b49511e9bfd4f79a8a57e0f7() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <style is=\"custom-style\" include=\"editable-table-styles simple-colors\">\n        :host {\n          --a11y-collapse-border: 1px solid #ddd;\n          --a11y-collapse-horizontal-padding: 0;\n          --a11y-collapse: {\n            margin: 0;\n          }\n          --a11y-collapse-heading-focus: {\n            background-color: #f0f0f0;\n          }\n        }\n        :host,\n        :host paper-item {\n          font-size: 12pt;\n        }\n        :host dropdown-select {\n          padding: 0;\n        }\n        :host #accent {\n          --paper-input-container: {\n            padding-top: 0;\n          }\n        }\n        :host([responsive-size=\"xs\"]) editable-table-editor-settings {\n          padding: 3px 0;\n        }\n        :host .filter-icon,\n        :host .sortable-icon {\n          display: none;\n          opacity: 0.4;\n          width: 24px;\n          height: 24px;\n        }\n        :host([sort]) .tbody .tr:first-child .sortable-icon {\n          display: inline-block;\n          opacity: 0.25;\n        }\n        :host([filter]:not([sort])) .filter-icon,\n        :host([filter][sort]) .tbody .tr:not(:first-child) .filter-icon {\n          display: inline-block;\n          opacity: 0.25;\n        }\n        :host .field-group {\n          width: 100%;\n          margin: 0 0 10px;\n          padding: 0;\n        }\n        :host .field-group {\n          display: flex;\n          justify-content: space-between;\n          align-items: baseline;\n          transition: all 2s;\n          flex-wrap: wrap;\n        }\n        :host .field-group.field-group-stretch {\n          align-items: stretch;\n        }\n        :host .field-group-border {\n          border: 1px solid #ddd;\n          border-radius: 4px;\n          padding: 15px;\n          margin: 15px;\n        }\n        :host .field-group-grow {\n          flex-grow: 1;\n          transition: width 2s;\n        }\n        :host .field-group-shrink {\n          flex-shrink: 1;\n          transition: width 2s;\n        }\n        :host .field-group-label {\n          padding-right: 8px;\n          font-weight: bold;\n        }\n        :host .field-group label {\n          line-height: 30px;\n        }\n        :host #caption {\n          padding: 0;\n          display: inline-block;\n          width: unset;\n        }\n        :host .caption.field-group {\n          margin-bottom: 0;\n        }\n        :host .table .th,\n        :host .table .td {\n          border: 1px solid #ddd;\n        }\n        :host .table .th {\n          padding: 0;\n          vertical-align: center;\n          color: black;\n          background-color: #f0f0f0;\n        }\n        :host .table .td {\n          vertical-align: top;\n          padding: 8px 4px;\n        }\n        :host .table .th:first-child {\n          width: 96px;\n        }\n        :host([condensed]) .table .th {\n          padding: 0;\n        }\n        :host([condensed]) .table .td {\n          padding: 0 4px;\n        }\n        :host .table[bordered] .td {\n          border: 1px solid var(--editable-table-border-color);\n        }\n        :host([dark]) table .tbody .th {\n          border-right: 1px solid var(--editable-table-bg-color);\n        }\n        :host([dark]) .table .thead .th:not(:first-child) {\n          border-bottom: 1px solid var(--editable-table-bg-color);\n        }\n        :host .table([bordered]) .thead .th:not(:first-child) {\n          border-bottom: 1px solid var(--editable-table-border-color);\n        }\n        :host([striped]) .table .tr:nth-child(2n + 1) .td {\n          @apply --editable-table-style-stripe;\n        }\n        :host([column-header]) .table .tbody .tr:first-child .td {\n          @apply --editable-table-style-column-header;\n        }\n        :host([row-header]) .table .tbody .tr .td:first-of-type {\n          @apply --editable-table-style-row-header;\n        }\n        :host([footer]) .table .tbody .tr:last-of-type .td {\n          @apply --editable-table-style-footer;\n        }\n      </style>\n      <p class=\"sr-only\">Table Editor</p>\n      <p class=\"field-group\">\n        <label aria-hidden=\"true\" class=\"field-group-label\"\n          >Table Caption\n        </label>\n        <iron-autogrow-textarea\n          id=\"caption\"\n          class=\"field-group-grow caption\"\n          label=\"Table Caption\"\n          placeholder=\"A title for the table.\"\n          value$=\"{{caption}}\"\n        >\n        </iron-autogrow-textarea>\n      </p>\n      <p class=\"field-group\">\n        <label aria-hidden=\"true\" class=\"field-group-label\"\n          >Table Summary (for accessibility)\n        </label>\n        <iron-autogrow-textarea\n          id=\"summary\"\n          class=\"field-group-grow\"\n          label=\"Table Summary (for accessibility)\"\n          placeholder=\"Describe what the table contains. What does each row represent? What does each column represent?\"\n          value$=\"{{summary}}\"\n        >\n        </iron-autogrow-textarea>\n      </p>\n      <div id=\"table-outer\">\n        <a11y-collapse\n          accordion=\"\"\n          icon=\"settings\"\n          label=\"show settings\"\n          label-expanded=\"hide settings\"\n          tooltip=\"Show/hide table settings.\"\n        >\n          <div slot=\"heading\" class=\"field-group-label\">Table Settings</div>\n          <div class=\"field-group field-group-stretch\">\n            <div class=\"field-group-border field-group-grow\">\n              <label class=\"\">Headers and Footers: </label>\n              <editable-table-editor-toggle\n                label=\"First Column\"\n                prop=\"rowHeader\"\n                tooltip=\"The first column is a row header.\"\n                value$=\"{{rowHeader}}\"\n              >\n              </editable-table-editor-toggle>\n              <editable-table-editor-toggle\n                label=\"First Row\"\n                prop=\"columnHeader\"\n                tooltip=\"The first row is a column header.\"\n                value$=\"{{columnHeader}}\"\n              >\n              </editable-table-editor-toggle>\n              <editable-table-editor-toggle\n                hidden$=\"[[hideFooter]]\"\n                label=\"Last Row\"\n                prop=\"footer\"\n                tooltip=\"The last row is a table footer.\"\n                value$=\"{{footer}}\"\n              >\n              </editable-table-editor-toggle>\n            </div>\n            <div\n              class=\"field-group-border field-group-grow\"\n              hidden$=\"[[hideTableTheme]]\"\n            >\n              <label>Theme: </label>\n              <div class=\"field-group-grow\">\n                <dropdown-select\n                  id=\"accent\"\n                  label=\"Accent Color\"\n                  value$=\"{{accentColor}}\"\n                >\n                  <paper-item value=\"none\">None</paper-item>\n                  <paper-item value=\"red\">Red</paper-item>\n                  <paper-item value=\"pink\">Pink</paper-item>\n                  <paper-item value=\"purple\">Purple</paper-item>\n                  <paper-item value=\"deep-purple\">Deep Purple</paper-item>\n                  <paper-item value=\"indigo\">Indigo</paper-item>\n                  <paper-item value=\"blue\">Blue</paper-item>\n                  <paper-item value=\"light-blue\">Light Blue</paper-item>\n                  <paper-item value=\"cyan\">Cyan</paper-item>\n                  <paper-item value=\"teal\">Teal</paper-item>\n                  <paper-item value=\"green\">Green</paper-item>\n                  <paper-item value=\"light-green\">Light Green</paper-item>\n                  <paper-item value=\"lime\">Lime</paper-item>\n                  <paper-item value=\"yellow\">Yellow</paper-item>\n                  <paper-item value=\"amber\">Amber</paper-item>\n                  <paper-item value=\"orange\">Orange</paper-item>\n                  <paper-item value=\"deep-orange\">Deep Orange</paper-item>\n                  <paper-item value=\"brown\">Deep Orange</paper-item>\n                  <paper-item value=\"blue-grey\">Blue-Grey</paper-item>\n                </dropdown-select>\n              </div>\n              <paper-tooltip for=\"accent\"\n                >Set an accent color for the table.</paper-tooltip\n              >\n              <editable-table-editor-toggle\n                hidden$=\"[[hideDarkTheme]]\"\n                label=\"Dark\"\n                prop=\"dark\"\n                tooltip=\"Use the dark theme.\"\n                value$=\"{{dark}}\"\n              >\n              </editable-table-editor-toggle>\n            </div>\n            <div\n              class=\"field-group-border field-group-grow\"\n              hidden$=\"[[hideTableStyles]]\"\n            >\n              <label>Styles: </label>\n              <editable-table-editor-toggle\n                hidden$=\"[[hideBordered]]\"\n                label=\"Bordered\"\n                prop=\"bordered\"\n                tooltip=\"Add borders to cells.\"\n                value$=\"{{bordered}}\"\n              >\n              </editable-table-editor-toggle>\n              <editable-table-editor-toggle\n                hidden$=\"[[hideStriped]]\"\n                label=\"Striped\"\n                prop=\"striped\"\n                tooltip=\"Add shading to alternating rows.\"\n                value$=\"{{striped}}\"\n              >\n              </editable-table-editor-toggle>\n              <editable-table-editor-toggle\n                hidden$=\"[[hideCondensed]]\"\n                label=\"Condensed\"\n                prop=\"condensed\"\n                tooltip=\"Condense cell height.\"\n                value$=\"{{condensed}}\"\n              >\n              </editable-table-editor-toggle>\n              <editable-table-editor-toggle\n                hidden$=\"[[hideScroll]]\"\n                label=\"Disable Responsive\"\n                prop=\"scroll\"\n                tooltip=\"Disables the default responsive feature.\"\n                value$=\"{{scroll}}\"\n              >\n              </editable-table-editor-toggle>\n            </div>\n            <div\n              class=\"field-group-border field-group-grow\"\n              hidden$=\"[[hideTableSort]]\"\n            >\n              <label>Sorting and Filtering: </label>\n              <editable-table-editor-toggle\n                disabled$=\"[[!columnHeader]]\"\n                hidden$=\"[[hideSort]]\"\n                label=\"Enable Sorting\"\n                prop=\"sort\"\n                tooltip=\"When first row is a column header, make the column sortable.\"\n                value$=\"{{sort}}\"\n              >\n              </editable-table-editor-toggle>\n              <editable-table-editor-toggle\n                hidden$=\"[[hideFilter]]\"\n                label=\"Enable Filters\"\n                prop=\"filter\"\n                tooltip=\"When a cell is clicked toggle a filter based on that cell's value.\"\n                value$=\"{{filter}}\"\n              >\n              </editable-table-editor-toggle>\n            </div>\n          </div>\n        </a11y-collapse>\n        <table\n          id=\"table\"\n          class=\"table\"\n          bordered$=\"{{bordered}}\"\n          condensed$=\"{{condensed}}\"\n          striped$=\"{{striped}}\"\n          summary=\"Editable table in edit mode. The table body contains fields to edit table data. Each column header contains buttons for editing the column. Each row header contains buttons for editing the row.\"\n        >\n          <caption class=\"sr-only\">\n            Editable Table Data\n          </caption>\n          <thead class=\"thead\">\n            <tr class=\"tr\">\n              <th class=\"th\" scope=\"col\">\n                <span class=\"sr-only\">Row Functions</span>\n              </th>\n              <template\n                id=\"headers\"\n                is=\"dom-repeat\"\n                items=\"[[data]]\"\n                as=\"row\"\n                index-as=\"tr\"\n                restamp=\"true\"\n              >\n                <template is=\"dom-if\" if=\"[[_isFirstRow(tr)]]\" restamp=\"true\">\n                  <template\n                    id=\"headercols\"\n                    is=\"dom-repeat\"\n                    items=\"[[row]]\"\n                    as=\"cell\"\n                    index-as=\"th\"\n                    restamp=\"true\"\n                  >\n                    <th class=\"th\" scope=\"col\">\n                      <editable-table-editor-rowcol\n                        condensed$=\"{{condensed}}\"\n                        index$=\"[[th]]\"\n                        type=\"Column\"\n                      ></editable-table-editor-rowcol>\n                    </th>\n                  </template>\n                </template>\n              </template>\n            </tr>\n          </thead>\n          <tbody id=\"tbody\" class=\"tbody\">\n            <template\n              id=\"rows\"\n              is=\"dom-repeat\"\n              items=\"[[data]]\"\n              as=\"row\"\n              index-as=\"tr\"\n              restamp=\"true\"\n            >\n              <tr class=\"tr\">\n                <th class=\"th\" scope=\"row\">\n                  <editable-table-editor-rowcol\n                    condensed$=\"{{condensed}}\"\n                    index$=\"[[tr]]\"\n                    type=\"Row\"\n                  ></editable-table-editor-rowcol>\n                </th>\n                <template\n                  id=\"columns\"\n                  is=\"dom-repeat\"\n                  items=\"[[row]]\"\n                  as=\"cell\"\n                  restamp=\"true\"\n                >\n                  <td class=\"td\">\n                    <editable-table-editor-cell\n                      row=\"[[tr]]\"\n                      column=\"[[index]]\"\n                      value$=\"{{cell}}\"\n                    >\n                      <iron-icon\n                        class=\"sortable-icon\"\n                        icon=\"editable-table:sortable\"\n                        aria-hidden=\"true\"\n                      ></iron-icon>\n                      <iron-icon\n                        class=\"filter-icon\"\n                        icon=\"editable-table:filter-off\"\n                      ></iron-icon>\n                    </editable-table-editor-cell>\n                  </td>\n                </template>\n              </tr>\n            </template>\n          </tbody>\n        </table>\n      </div>\n    "], ["\n      <style is=\"custom-style\" include=\"editable-table-styles simple-colors\">\n        :host {\n          --a11y-collapse-border: 1px solid #ddd;\n          --a11y-collapse-horizontal-padding: 0;\n          --a11y-collapse: {\n            margin: 0;\n          }\n          --a11y-collapse-heading-focus: {\n            background-color: #f0f0f0;\n          }\n        }\n        :host,\n        :host paper-item {\n          font-size: 12pt;\n        }\n        :host dropdown-select {\n          padding: 0;\n        }\n        :host #accent {\n          --paper-input-container: {\n            padding-top: 0;\n          }\n        }\n        :host([responsive-size=\"xs\"]) editable-table-editor-settings {\n          padding: 3px 0;\n        }\n        :host .filter-icon,\n        :host .sortable-icon {\n          display: none;\n          opacity: 0.4;\n          width: 24px;\n          height: 24px;\n        }\n        :host([sort]) .tbody .tr:first-child .sortable-icon {\n          display: inline-block;\n          opacity: 0.25;\n        }\n        :host([filter]:not([sort])) .filter-icon,\n        :host([filter][sort]) .tbody .tr:not(:first-child) .filter-icon {\n          display: inline-block;\n          opacity: 0.25;\n        }\n        :host .field-group {\n          width: 100%;\n          margin: 0 0 10px;\n          padding: 0;\n        }\n        :host .field-group {\n          display: flex;\n          justify-content: space-between;\n          align-items: baseline;\n          transition: all 2s;\n          flex-wrap: wrap;\n        }\n        :host .field-group.field-group-stretch {\n          align-items: stretch;\n        }\n        :host .field-group-border {\n          border: 1px solid #ddd;\n          border-radius: 4px;\n          padding: 15px;\n          margin: 15px;\n        }\n        :host .field-group-grow {\n          flex-grow: 1;\n          transition: width 2s;\n        }\n        :host .field-group-shrink {\n          flex-shrink: 1;\n          transition: width 2s;\n        }\n        :host .field-group-label {\n          padding-right: 8px;\n          font-weight: bold;\n        }\n        :host .field-group label {\n          line-height: 30px;\n        }\n        :host #caption {\n          padding: 0;\n          display: inline-block;\n          width: unset;\n        }\n        :host .caption.field-group {\n          margin-bottom: 0;\n        }\n        :host .table .th,\n        :host .table .td {\n          border: 1px solid #ddd;\n        }\n        :host .table .th {\n          padding: 0;\n          vertical-align: center;\n          color: black;\n          background-color: #f0f0f0;\n        }\n        :host .table .td {\n          vertical-align: top;\n          padding: 8px 4px;\n        }\n        :host .table .th:first-child {\n          width: 96px;\n        }\n        :host([condensed]) .table .th {\n          padding: 0;\n        }\n        :host([condensed]) .table .td {\n          padding: 0 4px;\n        }\n        :host .table[bordered] .td {\n          border: 1px solid var(--editable-table-border-color);\n        }\n        :host([dark]) table .tbody .th {\n          border-right: 1px solid var(--editable-table-bg-color);\n        }\n        :host([dark]) .table .thead .th:not(:first-child) {\n          border-bottom: 1px solid var(--editable-table-bg-color);\n        }\n        :host .table([bordered]) .thead .th:not(:first-child) {\n          border-bottom: 1px solid var(--editable-table-border-color);\n        }\n        :host([striped]) .table .tr:nth-child(2n + 1) .td {\n          @apply --editable-table-style-stripe;\n        }\n        :host([column-header]) .table .tbody .tr:first-child .td {\n          @apply --editable-table-style-column-header;\n        }\n        :host([row-header]) .table .tbody .tr .td:first-of-type {\n          @apply --editable-table-style-row-header;\n        }\n        :host([footer]) .table .tbody .tr:last-of-type .td {\n          @apply --editable-table-style-footer;\n        }\n      </style>\n      <p class=\"sr-only\">Table Editor</p>\n      <p class=\"field-group\">\n        <label aria-hidden=\"true\" class=\"field-group-label\"\n          >Table Caption\n        </label>\n        <iron-autogrow-textarea\n          id=\"caption\"\n          class=\"field-group-grow caption\"\n          label=\"Table Caption\"\n          placeholder=\"A title for the table.\"\n          value\\$=\"{{caption}}\"\n        >\n        </iron-autogrow-textarea>\n      </p>\n      <p class=\"field-group\">\n        <label aria-hidden=\"true\" class=\"field-group-label\"\n          >Table Summary (for accessibility)\n        </label>\n        <iron-autogrow-textarea\n          id=\"summary\"\n          class=\"field-group-grow\"\n          label=\"Table Summary (for accessibility)\"\n          placeholder=\"Describe what the table contains. What does each row represent? What does each column represent?\"\n          value\\$=\"{{summary}}\"\n        >\n        </iron-autogrow-textarea>\n      </p>\n      <div id=\"table-outer\">\n        <a11y-collapse\n          accordion=\"\"\n          icon=\"settings\"\n          label=\"show settings\"\n          label-expanded=\"hide settings\"\n          tooltip=\"Show/hide table settings.\"\n        >\n          <div slot=\"heading\" class=\"field-group-label\">Table Settings</div>\n          <div class=\"field-group field-group-stretch\">\n            <div class=\"field-group-border field-group-grow\">\n              <label class=\"\">Headers and Footers: </label>\n              <editable-table-editor-toggle\n                label=\"First Column\"\n                prop=\"rowHeader\"\n                tooltip=\"The first column is a row header.\"\n                value\\$=\"{{rowHeader}}\"\n              >\n              </editable-table-editor-toggle>\n              <editable-table-editor-toggle\n                label=\"First Row\"\n                prop=\"columnHeader\"\n                tooltip=\"The first row is a column header.\"\n                value\\$=\"{{columnHeader}}\"\n              >\n              </editable-table-editor-toggle>\n              <editable-table-editor-toggle\n                hidden\\$=\"[[hideFooter]]\"\n                label=\"Last Row\"\n                prop=\"footer\"\n                tooltip=\"The last row is a table footer.\"\n                value\\$=\"{{footer}}\"\n              >\n              </editable-table-editor-toggle>\n            </div>\n            <div\n              class=\"field-group-border field-group-grow\"\n              hidden\\$=\"[[hideTableTheme]]\"\n            >\n              <label>Theme: </label>\n              <div class=\"field-group-grow\">\n                <dropdown-select\n                  id=\"accent\"\n                  label=\"Accent Color\"\n                  value\\$=\"{{accentColor}}\"\n                >\n                  <paper-item value=\"none\">None</paper-item>\n                  <paper-item value=\"red\">Red</paper-item>\n                  <paper-item value=\"pink\">Pink</paper-item>\n                  <paper-item value=\"purple\">Purple</paper-item>\n                  <paper-item value=\"deep-purple\">Deep Purple</paper-item>\n                  <paper-item value=\"indigo\">Indigo</paper-item>\n                  <paper-item value=\"blue\">Blue</paper-item>\n                  <paper-item value=\"light-blue\">Light Blue</paper-item>\n                  <paper-item value=\"cyan\">Cyan</paper-item>\n                  <paper-item value=\"teal\">Teal</paper-item>\n                  <paper-item value=\"green\">Green</paper-item>\n                  <paper-item value=\"light-green\">Light Green</paper-item>\n                  <paper-item value=\"lime\">Lime</paper-item>\n                  <paper-item value=\"yellow\">Yellow</paper-item>\n                  <paper-item value=\"amber\">Amber</paper-item>\n                  <paper-item value=\"orange\">Orange</paper-item>\n                  <paper-item value=\"deep-orange\">Deep Orange</paper-item>\n                  <paper-item value=\"brown\">Deep Orange</paper-item>\n                  <paper-item value=\"blue-grey\">Blue-Grey</paper-item>\n                </dropdown-select>\n              </div>\n              <paper-tooltip for=\"accent\"\n                >Set an accent color for the table.</paper-tooltip\n              >\n              <editable-table-editor-toggle\n                hidden\\$=\"[[hideDarkTheme]]\"\n                label=\"Dark\"\n                prop=\"dark\"\n                tooltip=\"Use the dark theme.\"\n                value\\$=\"{{dark}}\"\n              >\n              </editable-table-editor-toggle>\n            </div>\n            <div\n              class=\"field-group-border field-group-grow\"\n              hidden\\$=\"[[hideTableStyles]]\"\n            >\n              <label>Styles: </label>\n              <editable-table-editor-toggle\n                hidden\\$=\"[[hideBordered]]\"\n                label=\"Bordered\"\n                prop=\"bordered\"\n                tooltip=\"Add borders to cells.\"\n                value\\$=\"{{bordered}}\"\n              >\n              </editable-table-editor-toggle>\n              <editable-table-editor-toggle\n                hidden\\$=\"[[hideStriped]]\"\n                label=\"Striped\"\n                prop=\"striped\"\n                tooltip=\"Add shading to alternating rows.\"\n                value\\$=\"{{striped}}\"\n              >\n              </editable-table-editor-toggle>\n              <editable-table-editor-toggle\n                hidden\\$=\"[[hideCondensed]]\"\n                label=\"Condensed\"\n                prop=\"condensed\"\n                tooltip=\"Condense cell height.\"\n                value\\$=\"{{condensed}}\"\n              >\n              </editable-table-editor-toggle>\n              <editable-table-editor-toggle\n                hidden\\$=\"[[hideScroll]]\"\n                label=\"Disable Responsive\"\n                prop=\"scroll\"\n                tooltip=\"Disables the default responsive feature.\"\n                value\\$=\"{{scroll}}\"\n              >\n              </editable-table-editor-toggle>\n            </div>\n            <div\n              class=\"field-group-border field-group-grow\"\n              hidden\\$=\"[[hideTableSort]]\"\n            >\n              <label>Sorting and Filtering: </label>\n              <editable-table-editor-toggle\n                disabled\\$=\"[[!columnHeader]]\"\n                hidden\\$=\"[[hideSort]]\"\n                label=\"Enable Sorting\"\n                prop=\"sort\"\n                tooltip=\"When first row is a column header, make the column sortable.\"\n                value\\$=\"{{sort}}\"\n              >\n              </editable-table-editor-toggle>\n              <editable-table-editor-toggle\n                hidden\\$=\"[[hideFilter]]\"\n                label=\"Enable Filters\"\n                prop=\"filter\"\n                tooltip=\"When a cell is clicked toggle a filter based on that cell's value.\"\n                value\\$=\"{{filter}}\"\n              >\n              </editable-table-editor-toggle>\n            </div>\n          </div>\n        </a11y-collapse>\n        <table\n          id=\"table\"\n          class=\"table\"\n          bordered\\$=\"{{bordered}}\"\n          condensed\\$=\"{{condensed}}\"\n          striped\\$=\"{{striped}}\"\n          summary=\"Editable table in edit mode. The table body contains fields to edit table data. Each column header contains buttons for editing the column. Each row header contains buttons for editing the row.\"\n        >\n          <caption class=\"sr-only\">\n            Editable Table Data\n          </caption>\n          <thead class=\"thead\">\n            <tr class=\"tr\">\n              <th class=\"th\" scope=\"col\">\n                <span class=\"sr-only\">Row Functions</span>\n              </th>\n              <template\n                id=\"headers\"\n                is=\"dom-repeat\"\n                items=\"[[data]]\"\n                as=\"row\"\n                index-as=\"tr\"\n                restamp=\"true\"\n              >\n                <template is=\"dom-if\" if=\"[[_isFirstRow(tr)]]\" restamp=\"true\">\n                  <template\n                    id=\"headercols\"\n                    is=\"dom-repeat\"\n                    items=\"[[row]]\"\n                    as=\"cell\"\n                    index-as=\"th\"\n                    restamp=\"true\"\n                  >\n                    <th class=\"th\" scope=\"col\">\n                      <editable-table-editor-rowcol\n                        condensed\\$=\"{{condensed}}\"\n                        index\\$=\"[[th]]\"\n                        type=\"Column\"\n                      ></editable-table-editor-rowcol>\n                    </th>\n                  </template>\n                </template>\n              </template>\n            </tr>\n          </thead>\n          <tbody id=\"tbody\" class=\"tbody\">\n            <template\n              id=\"rows\"\n              is=\"dom-repeat\"\n              items=\"[[data]]\"\n              as=\"row\"\n              index-as=\"tr\"\n              restamp=\"true\"\n            >\n              <tr class=\"tr\">\n                <th class=\"th\" scope=\"row\">\n                  <editable-table-editor-rowcol\n                    condensed\\$=\"{{condensed}}\"\n                    index\\$=\"[[tr]]\"\n                    type=\"Row\"\n                  ></editable-table-editor-rowcol>\n                </th>\n                <template\n                  id=\"columns\"\n                  is=\"dom-repeat\"\n                  items=\"[[row]]\"\n                  as=\"cell\"\n                  restamp=\"true\"\n                >\n                  <td class=\"td\">\n                    <editable-table-editor-cell\n                      row=\"[[tr]]\"\n                      column=\"[[index]]\"\n                      value\\$=\"{{cell}}\"\n                    >\n                      <iron-icon\n                        class=\"sortable-icon\"\n                        icon=\"editable-table:sortable\"\n                        aria-hidden=\"true\"\n                      ></iron-icon>\n                      <iron-icon\n                        class=\"filter-icon\"\n                        icon=\"editable-table:filter-off\"\n                      ></iron-icon>\n                    </editable-table-editor-cell>\n                  </td>\n                </template>\n              </tr>\n            </template>\n          </tbody>\n        </table>\n      </div>\n    "]);

    _templateObject_883b8680b49511e9bfd4f79a8a57e0f7 = function _templateObject_883b8680b49511e9bfd4f79a8a57e0f7() {
      return data;
    };

    return data;
  }

  /**
  `editable-table-editor`
  
  An editor interface for editable-table (editable-table.html). 
  (See editable-table-behaviors.html for more information.)
  
  * @demo demo/index.html
  
  @microcopy - the mental model for this element
  
  <editable-table-editor 
    accent-color="indigo"     //Optional accent color for column headers and border. Default is none. (See https://lrnwebcomponents.github.io/simple-colors/components/simple-colors/)
    bordered                  //Adds borders to table. Default is no border.
    caption="..."             //The caption or title for the table.
    column-header             //Does the table use the first row as a column-header? Default is false.
    condensed                 //Condense the padding above and below the table? Default is false.
    dark                      //Optional dark theme. Default is light theme. (See https://lrnwebcomponents.github.io/simple-colors/components/simple-colors/)
    data='[                   //Table data as an array. For example:
      [ ["..."], ["..."] ],     //This line represents a row with two columns
      [ ["..."], ["..."] ],     //This line represents another row with two columns
      [ ["..."], ["..."] ]      //This line represents a third row with two columns
    ]'
    filter                    //Allow table to toggle filtering? When a cell is toggled, only rows that have the same value as that cell will be shown. Default is no filter.
    footer                    //Does the table use the last row as a footer? Default is false.
    hide-accent-color           //Hide the accent color dropdown menu? Default is false which enables the menu which changes the accent-color property.
    hide-bordered              //Hide the bordered toggle? Default is false so that a toggle button to control the bordered property.
    hide-condensed             //Hide the condensed toggle? Default is false so that a toggle button to control the condensed property.
    hide-dark-theme             //Hide the dark theme toggle? Default is false so that a toggle button to control the dark property.
    hide-filter                //Hide the filter toggle? Default is false so that a toggle button to control the filter property.
    hide-sort                  //Hide the sort toggle? Default is false so that a toggle button to control the sort property.
    hide-scroll                //Hide the scroll toggle? Default is false so that a toggle button to control the scroll property.
    hide-striped               //Hide the striped toggle? Default is false so that a toggle button to control the striped property.
    row-header                //Does the table use the first column as a row header? Default is false.
    scroll                    //Does the table use scrolling to fit when it is too wide?  Default is false: a responsive layout where only two columns are shown and a dropdown menu controls which column to display.
    sort                      //Does the table allow sorting by column where column headers become sort buttons? Default is false.
    striped                   //Does the table have alternating stipes of shading for its body rows? Default is false.
    summary="...">            //An accessible description of the table, what each row reporesents, and what each column represents.
  </editable-table-editor>
  */
  var EditableTableEditor =
  /*#__PURE__*/
  function (_editBehaviors) {
    babelHelpers.inherits(EditableTableEditor, _editBehaviors);

    function EditableTableEditor() {
      babelHelpers.classCallCheck(this, EditableTableEditor);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(EditableTableEditor).apply(this, arguments));
    }

    babelHelpers.createClass(EditableTableEditor, [{
      key: "ready",

      /**
       * click detection
       */
      value: function ready() {
        babelHelpers.get(babelHelpers.getPrototypeOf(EditableTableEditor.prototype), "ready", this).call(this);

        this.onclick = function (e) {
          var el = e.srcElement !== null && e.srcElement.tagName !== null && e.srcElement.tagName.toLowerCase() === "td" ? e.srcElement : false;

          if (el && el.getElementsByTagName("editable-table-cell") !== null) {
            console.log(el.children[0]);
            el.children[0].focus();
          }
        };
      }
    }, {
      key: "connectedCallback",
      value: function connectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(EditableTableEditor.prototype), "connectedCallback", this).call(this);
        (0, _renderStatus.afterNextRender)(this, function () {
          this.addEventListener("cell-move", this._onCellMove.bind(this));
          this.addEventListener("cell-value-changed", this._onCellValueChange.bind(this));
          this.addEventListener("insert-row", this._handleInsertRow.bind(this));
          this.addEventListener("insert-column", this._handleInsertColumn.bind(this));
          this.addEventListener("delete-row", this._handleDeleteRow.bind(this));
          this.addEventListener("delete-column", this._handleDeleteColumn.bind(this));
          this.addEventListener("editable-table-setting-changed", this._onTableSettingChange.bind(this));
          this.addEventListener("dropdown-select-changed", this._onAccentChange.bind(this));
        });
      }
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        this.removeEventListener("cell-move", this._onCellMove.bind(this));
        this.removeEventListener("cell-value-changed", this._onCellValueChange.bind(this));
        this.removeEventListener("insert-row", this._handleInsertRow.bind(this));
        this.removeEventListener("insert-column", this._handleInsertColumn.bind(this));
        this.removeEventListener("delete-row", this._handleDeleteRow.bind(this));
        this.removeEventListener("delete-column", this._handleDeleteColumn.bind(this));
        this.removeEventListener("editable-table-setting-changed", this._onTableSettingChange.bind(this));
        this.removeEventListener("dropdown-select-changed", this._onAccentChange.bind(this));
        babelHelpers.get(babelHelpers.getPrototypeOf(EditableTableEditor.prototype), "disconnectedCallback", this).call(this);
      }
      /**
       * Get the current accent color
       */

    }, {
      key: "_getAccentSelected",
      value: function _getAccentSelected(accentColor) {
        return accentColor !== null ? accentColor : "none";
      }
      /**
       * Gets the row data for a given row index
       */

    }, {
      key: "_getCurrentRow",
      value: function _getCurrentRow(index, data) {
        var row = null;

        if (data !== undefined && data !== null && data[index] !== undefined && data[index] !== null) {
          row = data[index];
        }

        return row;
      }
      /**
       * Handles delete column event
       */

    }, {
      key: "_handleDeleteColumn",
      value: function _handleDeleteColumn(e) {
        this.deleteColumn(e.detail);
      }
      /**
       * Handles delete row event
       */

    }, {
      key: "_handleDeleteRow",
      value: function _handleDeleteRow(e) {
        this.deleteRow(e.detail);
      }
      /**
       * Handles insert column event
       */

    }, {
      key: "_handleInsertColumn",
      value: function _handleInsertColumn(e) {
        this.insertColumn(e.detail);
      }
      /**
       * Handles insert row event
       */

    }, {
      key: "_handleInsertRow",
      value: function _handleInsertRow(e) {
        this.insertRow(e.detail);
      }
      /**
       * Tests for first row of data. Workaround to restamp column headers.
       */

    }, {
      key: "_isFirstRow",
      value: function _isFirstRow(index) {
        return index === 0;
      }
      /**
       * Handle accent dropdown-select change
       */

    }, {
      key: "_onAccentChange",
      value: function _onAccentChange(e) {
        this.accentColor = e.detail.value !== "none" ? e.detail.value : null;
      }
      /**
       * Move the focus/cursor to the correct cell when navigation keys are pressed
       */

    }, {
      key: "_onCellMove",
      value: function _onCellMove(e) {
        var dir = e.detail.direction,
            cell = e.detail.cell;
        var row = cell.parentNode,
            body = this.$.tbody;
        var x = Array.prototype.indexOf.call(row.children, cell);
        var y = Array.prototype.indexOf.call(body.children, row);

        if (dir === "down") {
          if (y + 1 < body.children.length - 1) {
            body.children[y + 1].children[x].children[0].setFocus();
          } else {
            this.insertRow(y);
          }
        } else if (dir === "up") {
          if (y > 0) {
            body.children[y - 1].children[x].children[0].setFocus();
          }
        } else if (dir === "right") {
          if (x + 1 < row.children.length - 1) {
            row.children[x + 1].children[0].setFocus();
          } else if (y + 1 < body.children.length - 1) {
            body.children[y + 1].children[1].children[0].setFocus();
          }
        } else if (dir === "left") {
          if (x > 1) {
            row.children[x - 1].children[0].setFocus();
          } else if (y > 0) {
            body.children[y - 2].children[body.children[y - 2].children.length - 2].children[0].setFocus();
          }
        }
      }
      /**
       * Updates data when cell value changes
       */

    }, {
      key: "_onCellValueChange",
      value: function _onCellValueChange(e) {
        this.set("data." + e.detail.row + "." + e.detail.column, e.detail.value);
      }
      /**
       * Updates table properties when setting changes
       */

    }, {
      key: "_onTableSettingChange",
      value: function _onTableSettingChange(e) {
        this[e.detail.prop] = e.detail.value;
      }
      /**
       * Makes sure there is always on cell to work from
       */

    }, {
      key: "_setMinimumData",
      value: function _setMinimumData(data) {
        if (data.length < 1 || data[0].length < 1) {
          this.set("data", [["", "", ""], ["", "", ""], ["", "", ""]]);
        }
      }
      /**
       * Are all of the table style choices hidden?
       */

    }, {
      key: "_tableStylesHidden",
      value: function _tableStylesHidden(hideBordered, hideCondensed, hideStriped, hideScroll) {
        return hideBordered && hideCondensed && hideStriped && hideScroll;
      }
      /**
       * Are all of the theme choices hidden?
       */

    }, {
      key: "_tableThemeHidden",
      value: function _tableThemeHidden(hideAccentColor, hideDarkTheme) {
        return hideAccentColor && hideDarkTheme;
      }
      /**
       * Are all of the theme choices hidden?
       */

    }, {
      key: "_tableSortHidden",
      value: function _tableSortHidden(hideSort, hideFilter) {
        return hideSort && hideFilter;
      }
      /**
       * Delete a column at the given index
       */

    }, {
      key: "deleteColumn",
      value: function deleteColumn(index) {
        if (confirm("Delete entire column?")) {
          for (var i = 0; i < this.data.length; i++) {
            this.splice("data." + i, index, 1);
          }
        }
      }
      /**
       * Delete a row at the given index
       */

    }, {
      key: "deleteRow",
      value: function deleteRow(index) {
        if (confirm("Delete entire row?")) {
          this.splice("data", index, 1);
        }
      }
      /**
       * Insert a column at the given index
       */

    }, {
      key: "insertColumn",
      value: function insertColumn(index) {
        var temp = new Array(),
            first = null;

        for (var i = 0; i < this.data.length; i++) {
          this.splice("data." + i, index, 0, "");
        }
      }
      /**
       * Insert a row at the given index
       */

    }, {
      key: "insertRow",
      value: function insertRow(index) {
        var temp = new Array();

        for (var i = 0; i < this.data[0].length; i++) {
          temp.push("");
        }

        this.splice("data", index + 1, 0, temp);
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_883b8680b49511e9bfd4f79a8a57e0f7());
      }
    }, {
      key: "tag",
      get: function get() {
        return "editable-table-editor";
      }
    }, {
      key: "observers",
      get: function get() {
        return ["_setMinimumData(data)"];
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * Get accent color and change unspecified to none.
           */
          accentSelected: {
            type: String,
            computed: "_getAccentSelected(accentColor)"
          },

          /**
           * Hide the table styles menu
           */
          hideTableStyles: {
            type: Boolean,
            computed: "_tableStylesHidden(hideBordered,hideCondensed,hideStriped,hideScroll)"
          },

          /**
           * Hide the table theme menu
           */
          hideTableTheme: {
            type: Boolean,
            computed: "_tableThemeHidden(hideAccentColor,hideDarkTheme)"
          },

          /**
           * Hide the table sorting & filtering menu
           */
          hideTableSort: {
            type: Boolean,
            computed: "_tableSortHidden(hideSort,hideFilter)"
          }
        };
      }
    }]);
    return EditableTableEditor;
  }((0, _editableTableBehaviors.editBehaviors)((0, _editableTableBehaviors.displayBehaviors)((0, _responsiveUtilityBehaviors.ResponsiveUtilityBehaviors)(_polymerElement.PolymerElement))));

  _exports.EditableTableEditor = EditableTableEditor;
  window.customElements.define(EditableTableEditor.tag, EditableTableEditor);
});