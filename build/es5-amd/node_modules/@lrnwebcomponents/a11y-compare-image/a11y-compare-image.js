define(["exports", "require", "../../lit-element/lit-element.js"], function (_exports, _require, _litElement) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.a11yCompareImage = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _templateObject2_77573c20c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <figure>\n        <figcaption>\n          <slot name=\"heading\"></slot>\n          <div id=\"description\"><slot name=\"description\"></slot></div>\n        </figcaption>\n        <div id=\"container\">\n          <div>\n            <slot id=\"bottom\" name=\"bottom\"></slot>\n            <div id=\"top\">\n              <slot name=\"top\"></slot>\n            </div>\n          </div>\n        </div>\n        <paper-slider id=\"slider\" value=\"50\"></paper-slider>\n      </figure>\n    "]);

    _templateObject2_77573c20c96f11ea8be5e1d5fe7ec787 = function _templateObject2_77573c20c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  function _templateObject_77573c20c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: inline-flex;\n          margin: 15px 0;\n        }\n        :host([hidden]) {\n          display: none !important;\n        }\n        figure {\n          margin: 0;\n        }\n        #container,\n        #container > div {\n          margin: 0;\n          padding: 0;\n        }\n        #container > div {\n          position: relative;\n        }\n        #top {\n          top: 0;\n          left: 0;\n          position: absolute;\n          opacity: var(--a11y-compare-image-opacity, 1);\n          width: var(--a11y-compare-image-width, 50%);\n          overflow: hidden;\n        }\n        ::slotted([slot=\"top\"]) {\n          width: var(--a11y-compare-image-image-width);\n        }\n        ::slotted([slot=\"top\"]),\n        #bottom {\n          display: block;\n        }\n        #bottom {\n          width: 100%;\n        }\n        #slider {\n          width: calc(100% + 32px);\n          margin: -15px 0 0 -16px;\n        }\n        ::slotted([slot=\"bottom\"]) {\n          max-width: 100%;\n        }\n      "]);

    _templateObject_77573c20c96f11ea8be5e1d5fe7ec787 = function _templateObject_77573c20c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  /**
   * `a11y-compare-image`
   * Layers images over each other with a slider interface to compare them
   * @demo demo/index.html
   * @element a11y-compare-image
   */
  var a11yCompareImage =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(a11yCompareImage, _LitElement);
    babelHelpers.createClass(a11yCompareImage, null, [{
      key: "styles",

      /**
       * LitElement constructable styles enhancement
       */
      get: function get() {
        return [(0, _litElement.css)(_templateObject_77573c20c96f11ea8be5e1d5fe7ec787())];
      }
    }]);

    function a11yCompareImage() {
      var _this;

      babelHelpers.classCallCheck(this, a11yCompareImage);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(a11yCompareImage).call(this));
      _this.opacity = false;
      new Promise(function (res, rej) {
        return _require.default(["../../@polymer/iron-image/iron-image.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../../@polymer/paper-slider/paper-slider.js"], res, rej);
      });
      return _this;
    }

    babelHelpers.createClass(a11yCompareImage, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject2_77573c20c96f11ea8be5e1d5fe7ec787());
      }
    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        changedProperties.forEach(function (oldValue, propName) {
          if (["topSrc"].includes(propName)) {
            _this2._slide();
          }
        });
      }
    }, {
      key: "firstUpdated",
      value: function firstUpdated() {
        var _this3 = this;

        this._slide();

        this.shadowRoot.querySelector("#slider").addEventListener("immediate-value-changed", function (e) {
          _this3._slide();
        });
      }
      /**
       * updates the slider
       */

    }, {
      key: "_slide",
      value: function _slide() {
        var top = this.shadowRoot.querySelector("#top"),
            slider = this.shadowRoot.querySelector("#slider");

        if (this.opacity === false) {
          top.style.setProperty("--a11y-compare-image-width", slider.immediateValue + "%");
          top.style.setProperty("--a11y-compare-image-image-width", 10000 / slider.immediateValue + "%");
          top.style.setProperty("--a11y-compare-image-opacity", 1);
        } else {
          top.style.setProperty("--a11y-compare-image-width", "100%");
          top.style.setProperty("--a11y-compare-image-image-width", "100%");
          top.style.setProperty("--a11y-compare-image-opacity", slider.immediateValue / 100);
        }
      }
    }], [{
      key: "tag",
      get: function get() {
        return "a11y-compare-image";
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(a11yCompareImage), "properties", this), {
          /**
           * src for top image
           */
          bottomAlt: {
            type: String,
            attribute: "bottom-alt"
          },

          /**
           * aria-describedby for top image
           */
          bottomDescriptionId: {
            type: String,
            attribute: "bottom-description-id"
          },

          /**
           * src for top image
           */
          bottomSrc: {
            type: String,
            attribute: "bottom-src"
          },

          /**
           * text for button that displays longdesc
           */
          longdescText: {
            type: String,
            attribute: "summary-text"
          },

          /**
           * mode for the slider: wipe
           */
          opacity: {
            type: Boolean
          },

          /**
           * @deprecated Use `slot=heading`
           */
          title: {
            type: String
          },

          /**
           * src for top image
           */
          topAlt: {
            type: String,
            attribute: "top-alt"
          },

          /**
           * aria-describedby for top image
           */
          topDescriptionId: {
            type: String,
            attribute: "top-description-id"
          },

          /**
           * src for top image
           */
          topSrc: {
            type: String,
            attribute: "top-src"
          }
        });
      }
    }]);
    return a11yCompareImage;
  }(_litElement.LitElement);

  _exports.a11yCompareImage = a11yCompareImage;
  window.customElements.define(a11yCompareImage.tag, a11yCompareImage);
});