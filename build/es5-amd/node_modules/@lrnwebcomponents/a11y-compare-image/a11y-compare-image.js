define(["exports", "require", "../../lit-element/lit-element.js"], function (_exports, _require, _litElement) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.a11yCompareImage = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _templateObject3_24e32010019d11eb9027c17497ee62cd() {
    var data = babelHelpers.taggedTemplateLiteral([" <div class=\"marker\" style=\"left: ", "%;\"></div> "]);

    _templateObject3_24e32010019d11eb9027c17497ee62cd = function _templateObject3_24e32010019d11eb9027c17497ee62cd() {
      return data;
    };

    return data;
  }

  function _templateObject2_24e32010019d11eb9027c17497ee62cd() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <figure>\n        <figcaption>\n          <slot name=\"heading\"></slot>\n          <div id=\"description\"><slot name=\"description\"></slot></div>\n        </figcaption>\n        <div id=\"container\" style=\"background-image: url(", ")\">\n          <div>\n            <div id=\"placeholder\">\n              <slot id=\"bottom\" name=\"bottom\"></slot>\n            </div>\n            <slot name=\"top\" hidden></slot>\n            <div\n              id=\"layer\"\n              style=\"background-image: url(", ")\"\n            ></div>\n            <slot></slot>\n          </div>\n        </div>\n        <div id=\"input\">\n          ", "\n          <paper-slider id=\"slider\" value=\"0\"></paper-slider>\n        </div>\n      </figure>\n    "]);

    _templateObject2_24e32010019d11eb9027c17497ee62cd = function _templateObject2_24e32010019d11eb9027c17497ee62cd() {
      return data;
    };

    return data;
  }

  function _templateObject_24e32010019d11eb9027c17497ee62cd() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: inline-flex;\n          margin: 15px 0;\n        }\n        :host([hidden]) {\n          display: none !important;\n        }\n        figure {\n          margin: 0;\n        }\n        #container,\n        #container > div {\n          margin: 0;\n          padding: 0;\n        }\n        #container,\n        #input {\n          position: relative;\n        }\n        /* Added background-size: cover to adjust the bottom layer to match top in first example */\n        #container {\n          background-size: cover;\n          background-repeat: no-repeat;\n        }\n\n        #layer {\n          top: 0;\n          left: 0;\n          position: absolute;\n          height: 100%;\n          opacity: var(--a11y-compare-image-opacity, 1);\n          width: var(--a11y-compare-image-width, 50%);\n          background-size: cover;\n          background-position-x: 0%;\n          background-repeat: no-repeat;\n        }\n        #placeholder {\n          opacity: 0;\n        }\n\n        #bottom {\n          width: 100%;\n        }\n        #slider {\n          top: 0;\n          left: 0;\n          padding-top: 10px;\n          position: absolute;\n          width: calc(100% + 32px);\n          margin: -15px 0 0 -16px;\n        }\n        .marker {\n          top: 6px;\n          position: absolute;\n          width: 1px;\n          outline: 2px solid #bbb;\n          background-color: #bbb;\n          padding-top: 10px;\n        }\n        ::slotted([slot=\"bottom\"]) {\n          max-width: 100%;\n        }\n      "]);

    _templateObject_24e32010019d11eb9027c17497ee62cd = function _templateObject_24e32010019d11eb9027c17497ee62cd() {
      return data;
    };

    return data;
  }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `a11y-compare-image`
   * Layers images over each other with a slider interface to compare them
   * @demo demo/index.html
   * @element a11y-compare-image
   */
  var a11yCompareImage = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(a11yCompareImage, _LitElement);

    var _super = _createSuper(a11yCompareImage);

    babelHelpers.createClass(a11yCompareImage, null, [{
      key: "styles",

      /**
       * LitElement constructable styles enhancement
       */
      get: function get() {
        return [(0, _litElement.css)(_templateObject_24e32010019d11eb9027c17497ee62cd())];
      }
    }]);

    function a11yCompareImage() {
      var _this;

      babelHelpers.classCallCheck(this, a11yCompareImage);
      _this = _super.call(this);
      _this.opacity = false;
      _this.position = 0;
      _this.__markers = [];
      new Promise(function (res, rej) {
        return _require.default(["../../@polymer/iron-image/iron-image.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../../@polymer/paper-slider/paper-slider.js"], res, rej);
      });
      return _this;
    }

    babelHelpers.createClass(a11yCompareImage, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject2_24e32010019d11eb9027c17497ee62cd(), this.__lower, this.__upper, this.__markers.map(function (marker) {
          return (0, _litElement.html)(_templateObject3_24e32010019d11eb9027c17497ee62cd(), marker);
        }));
      }
    }, {
      key: "firstUpdated",
      value: function firstUpdated() {
        var _this2 = this;

        var slider = this.shadowRoot.querySelector("#slider");
        slider.value = this.position || 0;

        this._slide();

        slider.addEventListener("immediate-value-changed", function (e) {
          _this2._slide();
        });
      }
      /**
       * updates the slider
       */

    }, {
      key: "_slide",
      value: function _slide() {
        var container = this.shadowRoot.querySelector("#container");
        var layers = this.querySelectorAll("[slot=top],[slot=bottom]"); // This is the total number of transitions between layers

        var total = layers.length - 1; //This is percent of the slider for each section

        var section = 100 / total;
        var slider = this.shadowRoot.querySelector("#slider"); // Index of the upper image

        var active = Math.floor(slider.immediateValue / section) || 0; // This is the layer number that is current on top.

        this.activeLayer = active + 1; // This is the slider percent when upper image is at 0.

        var lastSection = section * active; // How far we are into the current section.

        var relativePosition = slider.immediateValue - lastSection; // Percentage into the current section

        this.position = relativePosition * 100 / section || 0; // Set background images

        this.__upper = layers[active + 1].src || layers[active].src;
        this.__lower = layers[active].src; // Adding Fake markers behind the slider.

        if (total - 1 != this.__markers.length) {
          this._updateMarkers(total);
        }

        if (this.opacity === false) {
          container.style.setProperty("--a11y-compare-image-width", this.position + "%");
          container.style.setProperty("--a11y-compare-image-opacity", 1);
        } else {
          container.style.setProperty("--a11y-compare-image-width", "100%");
          container.style.setProperty("--a11y-compare-image-opacity", this.position / 100);
        }
      }
    }, {
      key: "_updateMarkers",
      value: function _updateMarkers(total) {
        this.__markers = [];

        if (total != 0) {
          var step = 100 / total;

          for (var i = step; i < 100; i += step) {
            this.__markers.push(i);
          }
        }
      }
    }], [{
      key: "tag",
      get: function get() {
        return "a11y-compare-image";
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(a11yCompareImage), "properties", this)), {}, {
          activeLayer: {
            type: Number,
            attribute: "active-layer",
            reflect: true
          },

          /**
           * mode for the slider: wipe
           */
          opacity: {
            type: Boolean
          },
          position: {
            type: Number,
            attribute: "position",
            reflect: true
          },
          __lower: {
            type: String
          },
          __upper: {
            type: String
          },
          __markers: {
            type: Array
          }
        });
      }
    }]);
    return a11yCompareImage;
  }(_litElement.LitElement);

  _exports.a11yCompareImage = a11yCompareImage;
  window.customElements.define(a11yCompareImage.tag, a11yCompareImage);
});