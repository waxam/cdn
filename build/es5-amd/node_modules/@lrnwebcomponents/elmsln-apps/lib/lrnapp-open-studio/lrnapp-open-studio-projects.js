define(["exports", "require", "../../../../lit-element/lit-element.js", "../../../materializecss-styles/materializecss-styles.js", "../../../../@polymer/polymer/lib/elements/custom-style.js"], function (_exports, _require, _litElement, _materializecssStyles, _customStyle) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappOpenStudioProjects = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  function _templateObject6_f8d92bf02c1c11eaacb4bf54e86db688() {
    var data = babelHelpers.taggedTemplateLiteral(["\n            <h1 class=\"empty-title black-text\">\n              Please select an Author and Project in order to review their\n              portfolio\n            </h1>\n          "]);

    _templateObject6_f8d92bf02c1c11eaacb4bf54e86db688 = function _templateObject6_f8d92bf02c1c11eaacb4bf54e86db688() {
      return data;
    };

    return data;
  }

  function _templateObject5_f8d92bf02c1c11eaacb4bf54e86db688() {
    var data = babelHelpers.taggedTemplateLiteral(["\n                <a\n                  name=\"", "\"\n                  class=\"assignment-", "\"\n                  ><h2 class=\"assignment-title\">\n                    ", "\n                  </h2></a\n                >\n                <lrnapp-studio-submission-display\n                  .submission=\"", "\"\n                  class=\"ferpa-protect\"\n                ></lrnapp-studio-submission-display>\n              "]);

    _templateObject5_f8d92bf02c1c11eaacb4bf54e86db688 = function _templateObject5_f8d92bf02c1c11eaacb4bf54e86db688() {
      return data;
    };

    return data;
  }

  function _templateObject4_f8d92bf02c1c11eaacb4bf54e86db688() {
    var data = babelHelpers.taggedTemplateLiteral(["\n                  <lrnsys-button\n                    icon=\"", "\"\n                    icon-class=\"", "\"\n                    @click=\"", "\"\n                    label=\"", "\"\n                    data-assignment-id=\"", "\"\n                    class=\"project-step\"\n                    hover-class=\"blue white-text\"\n                    raised=\"\"\n                    ?hidden=\"", "\"\n                  ></lrnsys-button>\n                "]);

    _templateObject4_f8d92bf02c1c11eaacb4bf54e86db688 = function _templateObject4_f8d92bf02c1c11eaacb4bf54e86db688() {
      return data;
    };

    return data;
  }

  function _templateObject3_f8d92bf02c1c11eaacb4bf54e86db688() {
    var data = babelHelpers.taggedTemplateLiteral(["\n            <h1 class=\"project-title black-text\">\n              ", "\n            </h1>\n            <div class=\"project-steps\">\n              ", "\n            </div>\n            ", "\n          "]);

    _templateObject3_f8d92bf02c1c11eaacb4bf54e86db688 = function _templateObject3_f8d92bf02c1c11eaacb4bf54e86db688() {
      return data;
    };

    return data;
  }

  function _templateObject2_f8d92bf02c1c11eaacb4bf54e86db688() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <custom-style>\n        <style include=\"materializecss-styles\">\n          :host {\n            display: block;\n          }\n        </style>\n      </custom-style>\n      ", "\n    "]);

    _templateObject2_f8d92bf02c1c11eaacb4bf54e86db688 = function _templateObject2_f8d92bf02c1c11eaacb4bf54e86db688() {
      return data;
    };

    return data;
  }

  function _templateObject_f8d92bf02c1c11eaacb4bf54e86db688() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n          align-content: center;\n        }\n        h1.empty-title,\n        h1.project-title {\n          font-size: 2em;\n        }\n        h2.assignment-title {\n          font-size: 1.5em;\n          font-weight: bold;\n          width: 100%;\n          border-bottom: solid 1px grey;\n        }\n        .project-steps {\n          display: flex;\n          align-items: center;\n        }\n        .project-step {\n          overflow: hidden;\n          text-overflow: ellipsis;\n          word-break: break-all;\n          word-wrap: break-word;\n        }\n      "]);

    _templateObject_f8d92bf02c1c11eaacb4bf54e86db688 = function _templateObject_f8d92bf02c1c11eaacb4bf54e86db688() {
      return data;
    };

    return data;
  }

  var LrnappOpenStudioProjects =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(LrnappOpenStudioProjects, _LitElement);
    babelHelpers.createClass(LrnappOpenStudioProjects, null, [{
      key: "styles",

      /**
       * LitElement constructable styles enhancement
       */
      get: function get() {
        return [(0, _litElement.css)(_templateObject_f8d92bf02c1c11eaacb4bf54e86db688())];
      }
    }]);

    function LrnappOpenStudioProjects() {
      var _this;

      babelHelpers.classCallCheck(this, LrnappOpenStudioProjects);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(LrnappOpenStudioProjects).call(this));
      new Promise(function (res, rej) {
        return _require.default(["../../../lrnsys-button/lrnsys-button.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../lrnapp-studio-submission/lrnapp-studio-submission-display.js"], res, rej);
      });
      return _this;
    }

    babelHelpers.createClass(LrnappOpenStudioProjects, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return (0, _litElement.html)(_templateObject2_f8d92bf02c1c11eaacb4bf54e86db688(), this.showSubmissions ? (0, _litElement.html)(_templateObject3_f8d92bf02c1c11eaacb4bf54e86db688(), this.activeProject.attributes.title, this.activeProject.attributes.steps.map(function (assignment) {
          return (0, _litElement.html)(_templateObject4_f8d92bf02c1c11eaacb4bf54e86db688(), _this2._getSubmissionIcon(assignment.id), _this2._getSubmissionClass(assignment.id), _this2._scrollToTarget, assignment.title, assignment.id, !assignment.title);
        }), this.renderSubmissions.map(function (submission) {
          return (0, _litElement.html)(_templateObject5_f8d92bf02c1c11eaacb4bf54e86db688(), submission.relationships.assignment.title, submission.relationships.assignment.id, submission.relationships.assignment.title, submission);
        })) : (0, _litElement.html)(_templateObject6_f8d92bf02c1c11eaacb4bf54e86db688()));
      }
    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this3 = this;

        changedProperties.forEach(function (oldValue, propName) {
          if (["submissions", "activeProject", "activeAuthorId"].includes(propName)) {
            _this3.renderSubmissions = _this3._renderSubmissionsCompute(_this3.submissions, _this3.activeProject, _this3.activeAuthorId);
          }

          if (propName == "renderSubmissions") {
            // notify
            _this3.dispatchEvent(new CustomEvent("render-submissions-changed", {
              detail: {
                value: _this3[propName]
              }
            }));
          }

          if (propName == "projects") {
            _this3.showSubmissions = _this3._activeProjectCompute(_this3.activeProjectId, _this3.activeAuthorId); // notify

            _this3.dispatchEvent(new CustomEvent("projects-changed", {
              detail: {
                value: _this3[propName]
              }
            }));
          }

          if (propName == "activeAuthorId") {
            _this3.showSubmissions = _this3._showSubmissions(_this3.activeProjectId, _this3.activeAuthorId);
          }

          if (propName == "activeProjectId") {
            _this3.showSubmissions = _this3._showSubmissions(_this3.activeProjectId, _this3.activeAuthorId);
            _this3.activeProject = _this3._activeProjectCompute(_this3.activeProjectId, _this3.projects);
          }

          if (propName == "submissions") {
            // notify
            _this3.dispatchEvent(new CustomEvent("submissions-changed", {
              detail: {
                value: _this3[propName]
              }
            }));
          }

          if (propName == "sourcePath") {
            // notify
            _this3.dispatchEvent(new CustomEvent("source-path-changed", {
              detail: {
                value: _this3[propName]
              }
            }));
          }

          if (propName == "basePath") {
            // notify
            _this3.dispatchEvent(new CustomEvent("base-path-changed", {
              detail: {
                value: _this3[propName]
              }
            }));
          }
        });
      }
    }, {
      key: "_renderSubmissionsCompute",
      value: function _renderSubmissionsCompute(submissions, activeProject, activeAuthorId) {
        // if we don't have all three variables then we need to bail and set to null
        if (!submissions || !activeProject || !activeAuthorId) {
          return null;
        }

        var renderSubmissions = []; // make an array of parent assignment ids

        var parentAssignments = activeProject.attributes.steps.map(function (step) {
          return step.id;
        }); // filter the submissions by if they are listed in the active projects steps

        renderSubmissions = submissions.filter(function (submission) {
          return parentAssignments.includes(submission.relationships.assignment.id);
        }); // sort render submissions by how the assignment steps are listed in the active project

        renderSubmissions.sort(function (a, b) {
          for (var index = 0; index < activeProject.attributes.steps.length; index++) {
            if (activeProject.attributes.steps[index].id == a.relationships.assignment.id) {
              return -1;
            }

            if (activeProject.attributes.steps[index].id == b.relationships.assignment.id) {
              return 1;
            }
          }

          return 0;
        });
        return renderSubmissions;
      }
    }, {
      key: "_activeProjectCompute",
      value: function _activeProjectCompute(activeProjectId, projects) {
        var activeProject = null;

        if (projects) {
          activeProject = projects.find(function (project) {
            return project.id === activeProjectId;
          });
        }

        return activeProject;
      }
    }, {
      key: "_showSubmissions",
      value: function _showSubmissions(activeProjectId, activeAuthorId) {
        if (activeProjectId && activeAuthorId) {
          return true;
        }

        return false;
      }
    }, {
      key: "_getSubmissionIcon",
      value: function _getSubmissionIcon(id) {
        for (var index = 0; index < this.renderSubmissions.length; index++) {
          if (this.renderSubmissions[index].relationships.assignment.id == id) {
            return "check";
          }
        }

        return "assignment";
      }
    }, {
      key: "_getSubmissionClass",
      value: function _getSubmissionClass(id) {
        for (var index = 0; index < this.renderSubmissions.length; index++) {
          if (this.renderSubmissions[index].relationships.assignment.id == id) {
            return "green-text text-darken-2";
          }
        }

        return "grey-text";
      }
    }, {
      key: "_scrollToTarget",
      value: function _scrollToTarget(e) {
        var local = e.target; // this will have the id of the current submission

        var active = local.getAttribute("data-assignment-id");

        if (this.shadowRoot.querySelector(".assignment-" + active)) {
          this.shadowRoot.querySelector(".assignment-" + active).scrollIntoView({
            block: "end",
            behavior: "smooth"
          });
        }
      }
      /**
       * Simple way to convert from object to array.
       */

    }, {
      key: "_toArray",
      value: function _toArray(obj) {
        if (obj == null) {
          return [];
        }

        return Object.keys(obj).map(function (key) {
          return obj[key];
        });
      }
    }], [{
      key: "tag",
      get: function get() {
        return "lrnapp-open-studio-projects";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          elmslnCourse: {
            type: String,
            attribute: "elmsln-course"
          },
          elmslnSection: {
            type: String,
            attribute: "elmsln-section"
          },
          basePath: {
            type: String,
            attribute: "base-path"
          },
          csrfToken: {
            type: String,
            attribute: "csrf-token"
          },
          endPoint: {
            type: String,
            attribute: "end-point"
          },

          /**
           * The projects that exist so we can make other calls for data
           */
          projects: {
            type: Array
          },

          /**
           * The submissions that exist so we can make other calls for data
           */
          submissions: {
            type: Array
          },

          /**
           * The renderSubmissions we kick to the screen
           */
          renderSubmissions: {
            type: Array
          },
          activeProjectId: {
            type: String,
            reflect: true,
            attribute: "active-project-id"
          },
          activeProject: {
            type: Object
          },
          activeAuthorId: {
            type: String,
            reflect: true
          },
          showSubmissions: {
            type: Boolean
          },

          /**
           * Endpoint for submission data.
           */
          sourcePath: {
            type: String
          }
        };
      }
    }]);
    return LrnappOpenStudioProjects;
  }(_litElement.LitElement);

  _exports.LrnappOpenStudioProjects = LrnappOpenStudioProjects;
  window.customElements.define(LrnappOpenStudioProjects.tag, LrnappOpenStudioProjects);
});