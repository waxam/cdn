define(["exports", "../../../../lit-element/lit-element.js", "../../../../@polymer/polymer/lib/elements/custom-style.js", "../../../../@polymer/paper-input/paper-input.js", "../../../../@vaadin/vaadin-grid/vaadin-grid.js", "../../../../@vaadin/vaadin-grid/vaadin-grid-column.js", "../../../../@vaadin/vaadin-grid/vaadin-grid-sorter.js", "../../../../@vaadin/vaadin-grid/vaadin-grid-filter.js", "../../../lrnsys-button/lrnsys-button.js", "../../../materializecss-styles/materializecss-styles.js", "../lrnapp-studio-submission/lrnapp-studio-submission-display.js"], function (_exports, _litElement, _customStyle, _paperInput, _vaadinGrid, _vaadinGridColumn, _vaadinGridSorter, _vaadinGridFilter, _lrnsysButton, _materializecssStyles, _lrnappStudioSubmissionDisplay) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappOpenStudioTable = void 0;

  function _templateObject2_021507901bb311eabd7cc30119585ddb() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n          align-content: center;\n          padding: 0.8em;\n        }\n        #loading {\n          width: 100%;\n          z-index: 1000;\n          opacity: 0.8;\n          text-align: center;\n          align-content: center;\n          justify-content: center;\n          height: 100vh;\n          position: absolute;\n          background-color: white;\n        }\n        .center-data {\n          text-align: center;\n        }\n        vaadin-grid {\n          height: 75vh;\n          font-family: Roboto, sans-serif;\n          --divider-color: rgba(0, 0, 0, var(--dark-divider-opacity));\n        }\n\n        vaadin-grid .cell {\n          overflow: hidden;\n          text-overflow: ellipsis;\n          padding-right: 56px;\n        }\n\n        vaadin-grid .cell.last {\n          padding-right: 24px;\n        }\n\n        vaadin-grid .cell.numeric {\n          text-align: right;\n        }\n\n        vaadin-grid paper-checkbox {\n          --primary-color: var(--paper-indigo-500);\n          margin: 0 24px;\n        }\n\n        vaadin-grid vaadin-grid-sorter .cell {\n          flex: 1;\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n\n        vaadin-grid vaadin-grid-sorter iron-icon {\n          transform: scale(0.8);\n        }\n\n        vaadin-grid vaadin-grid-sorter:not([direction]) iron-icon {\n          color: rgba(0, 0, 0, var(--dark-disabled-opacity));\n        }\n\n        vaadin-grid vaadin-grid-sorter[direction] {\n          color: rgba(0, 0, 0, var(--dark-primary-opacity));\n        }\n\n        vaadin-grid vaadin-grid-sorter[direction=\"desc\"] iron-icon {\n          transform: scale(0.8) rotate(180deg);\n        }\n        vaadin-grid-sorter {\n          text-align: center;\n        }\n      "]);

    _templateObject2_021507901bb311eabd7cc30119585ddb = function _templateObject2_021507901bb311eabd7cc30119585ddb() {
      return data;
    };

    return data;
  }

  function _templateObject_021507901bb311eabd7cc30119585ddb() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <custom-style>\n        <style include=\"materializecss-styles\">\n          vaadin-grid {\n            --vaadin-grid-cell: {\n              padding: 0;\n            }\n\n            --vaadin-grid-header-cell: {\n              height: 3.5em;\n              color: rgba(0, 0, 0, var(--dark-secondary-opacity));\n              font-size: 1em;\n            }\n\n            --vaadin-grid-body-cell: {\n              height: 3em;\n              color: rgba(0, 0, 0, var(--dark-primary-opacity));\n              font-size: 0.8em;\n            }\n\n            --vaadin-grid-body-row-hover-cell: {\n              background-color: var(--paper-grey-200);\n            }\n\n            --vaadin-grid-body-row-selected-cell: {\n              background-color: var(--paper-grey-100);\n            }\n\n            --vaadin-grid-focused-cell: {\n              box-shadow: none;\n              font-weight: bold;\n            }\n          }\n\n          vaadin-grid vaadin-grid-sorter {\n            --vaadin-grid-sorter-arrow: {\n              display: none !important;\n            }\n          }\n        </style>\n      </custom-style>\n      <vaadin-grid\n        column-reordering-allowed=\"\"\n        id=\"material\"\n        aria-label=\"Course list\"\n        .items=\"", "\"\n        @items-changed=\"", "\"\n      >\n        <vaadin-grid-column resizable=\"\">\n          <template class=\"header\">\n            <vaadin-grid-sorter path=\"relationships.project.data.title\"\n              >Project</vaadin-grid-sorter\n            >\n          </template>\n          <template>\n            <paper-button\n              @click=\"", "\"\n              data-project-id=\"[[item.relationships.project.data.id]]\"\n              data-author-id=\"[[item.relationships.author.data.id]]\"\n              >[[item.relationships.project.data.title]]</paper-button\n            >\n          </template>\n        </vaadin-grid-column>\n        <vaadin-grid-column resizable=\"\">\n          <template class=\"header\">\n            <vaadin-grid-sorter path=\"relationships.assignment.data.title\"\n              >Assignment</vaadin-grid-sorter\n            >\n          </template>\n          <template>\n            [[item.relationships.assignment.data.title]]\n          </template>\n        </vaadin-grid-column>\n        <vaadin-grid-column resizable=\"\" width=\"20em\" flex-grow=\"0\">\n          <template class=\"header\">\n            <vaadin-grid-sorter path=\"attributes.title\"\n              >Title</vaadin-grid-sorter\n            >\n          </template>\n          <template>\n            <paper-button\n              @click=\"", "\"\n              data-submission-id=\"{{item.id}}\"\n              >[[item.attributes.title]]</paper-button\n            >\n          </template>\n          <template class=\"footer\">\n            <vaadin-grid-filter\n              aria-label=\"Title\"\n              path=\"attributes.title\"\n              value=\"[[_filterTitle]]\"\n            >\n              <paper-input\n                slot=\"filter\"\n                label=\"Title\"\n                value=\"{{_filterTitle::input}}\"\n                focus-target=\"\"\n              ></paper-input>\n            </vaadin-grid-filter>\n          </template>\n        </vaadin-grid-column>\n        <vaadin-grid-column resizable=\"\">\n          <template class=\"header\">\n            <vaadin-grid-sorter path=\"meta.changed\"\n              >Submitted</vaadin-grid-sorter\n            >\n          </template>\n          <template>\n            [[item.meta.humandate]]\n          </template>\n          <template class=\"footer\">\n            <vaadin-grid-filter\n              aria-label=\"Submitted\"\n              path=\"meta.changed\"\n              value=\"[[_filterSubmitted]]\"\n            >\n              <paper-input\n                slot=\"filter\"\n                label=\"Submitted\"\n                value=\"{{_filterSubmitted::input}}\"\n                focus-target=\"\"\n              ></paper-input>\n            </vaadin-grid-filter>\n          </template>\n        </vaadin-grid-column>\n        <vaadin-grid-column resizable=\"\">\n          <template class=\"header\">\n            <vaadin-grid-sorter path=\"relationships.author.data.display_name\"\n              >Author</vaadin-grid-sorter\n            >\n          </template>\n          <template>\n            [[item.relationships.author.data.display_name]]\n          </template>\n        </vaadin-grid-column>\n        <vaadin-grid-column resizable=\"\" width=\"[[_numWidth]]\">\n          <template class=\"header\">\n            <vaadin-grid-sorter path=\"meta.comment_count\"\n              >Comments</vaadin-grid-sorter\n            >\n          </template>\n          <template>\n            <span class=\"center-data\">[[item.meta.comment_count]]</span>\n          </template>\n          <template class=\"footer\">\n            <vaadin-grid-filter\n              aria-label=\"Comments\"\n              path=\"meta.comment_count\"\n              value=\"[[_filterCommentsCount]]\"\n            >\n              <paper-input\n                slot=\"filter\"\n                label=\"Comments\"\n                value=\"{{_filterCommentsCount::input}}\"\n                focus-target=\"\"\n              ></paper-input>\n            </vaadin-grid-filter>\n          </template>\n        </vaadin-grid-column>\n        <vaadin-grid-column resizable=\"\" width=\"[[_numWidth]]\">\n          <template class=\"header\">\n            <vaadin-grid-sorter path=\"attributes.images.length\"\n              >Images</vaadin-grid-sorter\n            >\n          </template>\n          <template>\n            <span class=\"center-data\">[[item.attributes.images.length]]</span>\n          </template>\n          <template class=\"footer\">\n            <vaadin-grid-filter\n              aria-label=\"Images\"\n              path=\"attributes.images.length\"\n              value=\"[[_filterImageCount]]\"\n            >\n              <paper-input\n                slot=\"filter\"\n                label=\"Images\"\n                value=\"{{_filterImageCount::input}}\"\n                focus-target=\"\"\n              ></paper-input>\n            </vaadin-grid-filter>\n          </template>\n        </vaadin-grid-column>\n        <vaadin-grid-column resizable=\"\" width=\"[[_numWidth]]\">\n          <template class=\"header\">\n            <vaadin-grid-sorter path=\"attributes.video.length\"\n              >Video</vaadin-grid-sorter\n            >\n          </template>\n          <template>\n            <span class=\"center-data\">[[item.attributes.video.length]]</span>\n          </template>\n          <template class=\"footer\">\n            <vaadin-grid-filter\n              aria-label=\"Video\"\n              path=\"attributes.video.length\"\n              value=\"[[_filterVideosCount]]\"\n            >\n              <paper-input\n                slot=\"filter\"\n                label=\"Video\"\n                value=\"{{_filterVideosCount::input}}\"\n                focus-target=\"\"\n              ></paper-input>\n            </vaadin-grid-filter>\n          </template>\n        </vaadin-grid-column>\n        <vaadin-grid-column resizable=\"\" width=\"[[_numWidth]]\">\n          <template class=\"header\">\n            <vaadin-grid-sorter path=\"attributes.links.length\"\n              >Links</vaadin-grid-sorter\n            >\n          </template>\n          <template>\n            <span class=\"center-data\">[[item.attributes.links.length]]</span>\n          </template>\n          <template class=\"footer\">\n            <vaadin-grid-filter\n              aria-label=\"Links\"\n              path=\"attributes.links.length\"\n              value=\"[[_filterLinksCount]]\"\n            >\n              <paper-input\n                slot=\"filter\"\n                label=\"Links\"\n                value=\"{{_filterLinksCount::input}}\"\n                focus-target=\"\"\n              ></paper-input>\n            </vaadin-grid-filter>\n          </template>\n        </vaadin-grid-column>\n        <vaadin-grid-column resizable=\"\" width=\"[[_numWidth]]\">\n          <template class=\"header\">\n            <vaadin-grid-sorter path=\"attributes.files.length\"\n              >Files</vaadin-grid-sorter\n            >\n          </template>\n          <template>\n            <span class=\"center-data\">[[item.attributes.files.length]]</span>\n          </template>\n          <template class=\"footer\">\n            <vaadin-grid-filter\n              aria-label=\"Files\"\n              path=\"attributes.files.length\"\n              value=\"[[_filterFileCount]]\"\n            >\n              <paper-input\n                slot=\"filter\"\n                label=\"Files\"\n                value=\"{{_filterFileCount::input}}\"\n                focus-target=\"\"\n              ></paper-input>\n            </vaadin-grid-filter>\n          </template>\n        </vaadin-grid-column>\n      </vaadin-grid>\n    "]);

    _templateObject_021507901bb311eabd7cc30119585ddb = function _templateObject_021507901bb311eabd7cc30119585ddb() {
      return data;
    };

    return data;
  }

  var LrnappOpenStudioTable =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(LrnappOpenStudioTable, _LitElement);
    babelHelpers.createClass(LrnappOpenStudioTable, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_021507901bb311eabd7cc30119585ddb(), this.submissions, this.submissionsEvent, this._loadProjectRoute, this._loadSubmissionUrl);
      }
    }, {
      key: "submissionsEvent",
      value: function submissionsEvent(e) {
        this.submissions = babelHelpers.toConsumableArray(e.detail.value);
      }
    }], [{
      key: "styles",

      /**
       * LitElement constructable styles enhancement
       */
      get: function get() {
        return [(0, _litElement.css)(_templateObject2_021507901bb311eabd7cc30119585ddb())];
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnapp-open-studio-table";
      }
    }]);

    function LrnappOpenStudioTable() {
      var _this;

      babelHelpers.classCallCheck(this, LrnappOpenStudioTable);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(LrnappOpenStudioTable).call(this));
      _this._numWidth = "2.25em";
      _this.activeSubmission = null;
      return _this;
    }

    babelHelpers.createClass(LrnappOpenStudioTable, [{
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        changedProperties.forEach(function (oldValue, propName) {
          if (propName == "submissions") {
            // notify
            _this2.dispatchEvent(new CustomEvent("submissions-changed", {
              detail: {
                value: _this2[propName]
              }
            }));
          }

          if (propName == "sourcePath") {
            // notify
            _this2.dispatchEvent(new CustomEvent("source-path-changed", {
              detail: {
                value: _this2[propName]
              }
            }));
          }

          if (propName == "basePath") {
            // notify
            _this2.dispatchEvent(new CustomEvent("base-path-changed", {
              detail: {
                value: _this2[propName]
              }
            }));
          }

          if (propName == "activeSubmission") {
            // notify
            _this2.dispatchEvent(new CustomEvent("active-submission-changed", {
              detail: {
                value: _this2[propName]
              }
            }));
          }
        });
      }
    }, {
      key: "_loadProjectRoute",
      value: function _loadProjectRoute(e) {
        var local = e.target; // this will have the id of the current submission

        var project = local.getAttribute("data-project-id");
        var author = local.getAttribute("data-author-id"); // fire event w/ parts of the route to changes

        this.dispatchEvent(new CustomEvent("route-change", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: {
            data: {
              page: "projects"
            },
            queryParams: {
              author: author,
              project: project
            }
          }
        }));
      }
      /**
       * Handle tap on paper-button above to redirect to the correct submission url.
       */

    }, {
      key: "_loadSubmissionUrl",
      value: function _loadSubmissionUrl(e) {
        var root = this;
        var local = e.target; // this will have the id of the current submission

        var active = local.getAttribute("data-submission-id"); // @todo need a cleaner integration but this at least goes the right place for now

        window.location.href = this.basePath + "lrnapp-studio-submission/submissions/" + active;
      }
      /**
       * Handle response for the whole projects object.
       */

    }, {
      key: "_handleResponse",
      value: function _handleResponse(event) {
        this.shadowRoot.querySelector("#loading").hidden = true;
      }
      /**
       * Simple way to convert from object to array.
       */

    }, {
      key: "_toArray",
      value: function _toArray(obj) {
        if (obj == null) {
          return [];
        }

        return Object.keys(obj).map(function (key) {
          return obj[key];
        });
      }
    }], [{
      key: "properties",
      get: function get() {
        return {
          elmslnCourse: {
            type: String,
            attribute: "elmsln-course"
          },
          elmslnSection: {
            type: String,
            attribute: "elmsln-section"
          },
          basePath: {
            type: String,
            attribute: "base-path"
          },
          csrfToken: {
            type: String,
            attribute: "csrf-token"
          },
          endPoint: {
            type: String,
            attribute: "end-point"
          },

          /**
           * The submissions to render
           */
          submissions: {
            type: Array
          },
          _numWidth: {
            type: String
          },

          /**
           * Endpoint for submission data.
           */
          sourcePath: {
            type: String,
            attribute: "source-path"
          },

          /**
           * Active / clicked submission.
           */
          activeSubmission: {
            type: String,
            attribute: "active-submission"
          }
        };
      }
    }]);
    return LrnappOpenStudioTable;
  }(_litElement.LitElement);

  _exports.LrnappOpenStudioTable = LrnappOpenStudioTable;
  window.customElements.define(LrnappOpenStudioTable.tag, LrnappOpenStudioTable);
});