define(["exports", "../../../../lit-element/lit-element.js", "../../../../@polymer/iron-ajax/iron-ajax.js", "../../../../@polymer/iron-list/iron-list.js", "../../../../@polymer/iron-pages/iron-pages.js", "../../../../@polymer/iron-selector/iron-selector.js", "../../../../@polymer/app-layout/app-toolbar/app-toolbar.js", "../../../../@polymer/app-route/app-location.js", "../../../../@polymer/app-route/app-route.js", "../../../../@polymer/paper-dropdown-menu/paper-dropdown-menu.js", "../../../../@polymer/paper-listbox/paper-listbox.js", "../../../../@polymer/paper-item/paper-item.js", "../../../../@polymer/paper-toast/paper-toast.js", "../../../lrndesign-gallerycard/lrndesign-gallerycard.js", "../../../elmsln-loading/elmsln-loading.js", "./lrnapp-open-studio-table.js", "./lrnapp-open-studio-projects.js", "./lrnapp-open-studio-assignments.js"], function (_exports, _litElement, _ironAjax, _ironList, _ironPages, _ironSelector, _appToolbar, _appLocation, _appRoute, _paperDropdownMenu, _paperListbox, _paperItem, _paperToast, _lrndesignGallerycard, _elmslnLoading, _lrnappOpenStudioTable, _lrnappOpenStudioProjects, _lrnappOpenStudioAssignments) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappOpenStudio = void 0;

  function _templateObject5_6ce664402d8511ea80ccf124101da415() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n          align-content: center;\n        }\n        #loading {\n          width: 100%;\n          z-index: 1000;\n          opacity: 0.8;\n          text-align: center;\n          align-content: center;\n          justify-content: center;\n          height: 100vh;\n          position: absolute;\n          background-color: white;\n        }\n        iron-selector {\n          line-height: 1em;\n        }\n        iron-selector lrnsys-button {\n          display: inline-flex;\n        }\n        iron-selector a {\n          display: inline-block;\n        }\n        .gallerycard-wrapper {\n          margin: 0;\n          padding: 0;\n        }\n        lrndesign-gallerycard {\n          padding: 0;\n          margin: 1em;\n          height: 15em;\n          width: 14em;\n        }\n        app-toolbar {\n          height: 48px;\n        }\n        .gallery-grid {\n          margin: 0 auto;\n          width: 95%;\n        }\n        .iron-selected .display-mode {\n          background-color: var(--elmsln-system-color-dark);\n          color: white;\n          --lrnsys-button-link-color: white;\n        }\n        .iron-list-container {\n          display: flex;\n          flex-direction: column;\n          min-height: 50vh;\n        }\n        iron-list {\n          height: 100vh;\n        }\n      "]);

    _templateObject5_6ce664402d8511ea80ccf124101da415 = function _templateObject5_6ce664402d8511ea80ccf124101da415() {
      return data;
    };

    return data;
  }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _templateObject4_6ce664402d8511ea80ccf124101da415() {
    var data = babelHelpers.taggedTemplateLiteral(["\n                <paper-item item-id=\"", "\"\n                  >", "</paper-item\n                >\n              "]);

    _templateObject4_6ce664402d8511ea80ccf124101da415 = function _templateObject4_6ce664402d8511ea80ccf124101da415() {
      return data;
    };

    return data;
  }

  function _templateObject3_6ce664402d8511ea80ccf124101da415() {
    var data = babelHelpers.taggedTemplateLiteral(["\n                <paper-item item-id=\"", "\"\n                  >", "</paper-item\n                >\n              "]);

    _templateObject3_6ce664402d8511ea80ccf124101da415 = function _templateObject3_6ce664402d8511ea80ccf124101da415() {
      return data;
    };

    return data;
  }

  function _templateObject2_6ce664402d8511ea80ccf124101da415() {
    var data = babelHelpers.taggedTemplateLiteral(["\n                <paper-item item-id=\"", "\"\n                  >", "</paper-item\n                >\n              "]);

    _templateObject2_6ce664402d8511ea80ccf124101da415 = function _templateObject2_6ce664402d8511ea80ccf124101da415() {
      return data;
    };

    return data;
  }

  function _templateObject_6ce664402d8511ea80ccf124101da415() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <iron-ajax\n        auto\n        url=\"", "\"\n        params=\"\"\n        handle-as=\"json\"\n        @last-response-changed=\"", "\"\n        @response=\"", "\"\n      ></iron-ajax>\n\n      <app-location\n        .route=\"", "\"\n        @route-changed=\"", "\"\n        .query-params=\"", "\"\n        @query-params-changed=\"", "\"\n      ></app-location>\n      <app-route\n        .route=\"", "\"\n        @route-changed=\"", "\"\n        .data=\"", "\"\n        @data-changed=\"", "\"\n        .tail=\"", "\"\n        @tail-changed=\"", "\"\n        .query-params=\"", "\"\n        @query-params-changed=\"", "\"\n        pattern=\"", "/:page\">\n      </app-route>\n\n      <div id=\"loading\">\n        <h3>Loading..</h3>\n        <elmsln-loading color=\"grey-text\" size=\"large\"></elmsln-loading>\n      </div>\n      <app-toolbar>\n        <iron-selector\n          selected=\"", "\"\n          @selected-changed=\"", "\"\n          attr-for-selected=\"name\"\n          role=\"navigation\"\n        >\n          <a tabindex=\"-1\" name=\"submissions\" @click=\"", "\"\n            ><lrnsys-button\n              icon=\"apps\"\n              label=\"Submission display\"\n              hover-class=\"amber darken-4 white-text\"\n              class=\"display-mode\"\n              button-class=\"display-mode style-scope lrnapp-open-studio x-scope lrnsys-button-0\"\n            ></lrnsys-button\n          ></a>\n          <a tabindex=\"-1\" name=\"projects\" @click=\"", "\"\n            ><lrnsys-button\n              icon=\"folder\"\n              label=\"Project board\"\n              hover-class=\"amber darken-4 white-text\"\n              class=\"display-mode\"\n              button-class=\"display-mode style-scope lrnapp-open-studio x-scope lrnsys-button-0\"\n            ></lrnsys-button\n          ></a>\n          <a tabindex=\"-1\" name=\"assignments\" @click=\"", "\"\n            ><lrnsys-button\n              icon=\"list\"\n              label=\"Assignment centric\"\n              hover-class=\"amber darken-4 white-text\"\n              class=\"display-mode\"\n              button-class=\"display-mode style-scope lrnapp-open-studio x-scope lrnsys-button-0\"\n            ></lrnsys-button\n          ></a>\n          <a tabindex=\"-1\" name=\"table\" @click=\"", "\"\n            ><lrnsys-button\n              icon=\"view-list\"\n              label=\"Table view\"\n              hover-class=\"amber darken-4 white-text\"\n              class=\"display-mode\"\n              button-class=\"display-mode style-scope lrnapp-open-studio x-scope lrnsys-button-0\"\n            ></lrnsys-button\n          ></a>\n        </iron-selector>\n        <span main-title></span>\n        <span\n          top-item\n          style=\"text-align:right;font-size:.5em;padding-right:1em;\"\n          >Displaying ", " of\n          ", "</span\n        >\n        <paper-dropdown-menu label=\"Author\" ?hidden=\"", "\">\n          <paper-listbox\n            slot=\"dropdown-content\"\n            class=\"dropdown-content\"\n            selected=\"", "\"\n            @selected-changed=\"", "\"\n            attr-for-selected=\"item-id\"\n          >\n            <paper-item></paper-item>\n            ", "\n          </paper-listbox>\n        </paper-dropdown-menu>\n        <paper-dropdown-menu label=\"Project\" ?hidden=\"", "\">\n          <paper-listbox\n            slot=\"dropdown-content\"\n            class=\"dropdown-content\"\n            selected=\"", "\"\n            @selected-changed=\"", "\"\n            attr-for-selected=\"item-id\"\n          >\n            <paper-item></paper-item>\n            ", "\n          </paper-listbox>\n        </paper-dropdown-menu>\n        <paper-dropdown-menu label=\"Assignment\" ?hidden=\"", "\">\n          <paper-listbox\n            slot=\"dropdown-content\"\n            class=\"dropdown-content\"\n            selected=\"", "\"\n            @selected-changed=\"", "\"\n            attr-for-selected=\"item-id\"\n          >\n            <paper-item></paper-item>\n            ", "\n            </template>\n          </paper-listbox>\n        </paper-dropdown-menu>\n      </app-toolbar>\n      <div class=\"gallery-grid\">\n        <iron-pages\n          selected=\"", "\"\n          @selected-changed=\"", "\"\n          attr-for-selected=\"name\"\n          fallback-selection=\"submissions\"\n          role=\"main\"\n        >\n          <div class=\"iron-list-container\" name=\"submissions\">\n            <iron-list\n              id=\"ironlist\"\n              .items=\"", "\"\n              as=\"item\"\n              grid\n              scroll-target=\"document\"\n            >\n              <template>\n                <div class=\"gallerycard-wrapper\">\n                  <a href=\"", "lrnapp-studio-submission/submissions/[[item.id]]\">\n                    <lrndesign-gallerycard\n                      elevation=\"2\"\n                      data-submission-id=\"[[item.id]]\"\n                      title=\"[[item.attributes.title]]\"\n                      author=\"[[item.relationships.author.data]]\"\n                      comments=\"[[item.meta.comment_count]]\"\n                      image=\"[[item.display.image]]\"\n                      icon=\"[[item.display.icon]]\"\n                      date=\"[[item.meta.humandate]]\"\n                      class=\"ferpa-protect\"\n                    ></lrndesign-gallerycard>\n                  </a>\n                </div>\n              </template>\n            </iron-list>\n          </div>\n          <lrnapp-open-studio-assignments\n            name=\"assignments\"\n            base-path=\"", "\"\n            .submissions=\"", "\"\n            .assignments=\"", "\"\n            active-author-id=\"", "\"\n            active-assignment-id=\"", "\"\n          ></lrnapp-open-studio-assignments>\n          <lrnapp-open-studio-projects\n            name=\"projects\"\n            base-path=\"", "\"\n            .projects=\"", "\"\n            .submissions=\"", "\"\n            .assignments=\"", "\"\n            active-author-id=\"", "\"\n            active-project-id=\"", "\"\n          ></lrnapp-open-studio-projects>\n          <lrnapp-open-studio-table\n            name=\"table\"\n            base-path=\"", "\"\n            .submissions=\"", "\"\n          ></lrnapp-open-studio-table>\n        </iron-pages>\n      </div>\n      <paper-toast id=\"toast\"></paper-toast>\n    "]);

    _templateObject_6ce664402d8511ea80ccf124101da415 = function _templateObject_6ce664402d8511ea80ccf124101da415() {
      return data;
    };

    return data;
  }

  var LrnappOpenStudio =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(LrnappOpenStudio, _LitElement);
    babelHelpers.createClass(LrnappOpenStudio, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_6ce664402d8511ea80ccf124101da415(), this.sourcePath, this.studioResponseChangedEvent, this._handleResponse, this.route, this.routeChangedEvent, this.queryParams, this.queryParamsChangedEvent, this.route, this.routeChangedEvent, this.data, this.dataChangedEvent, this.tail, this.tailChangedEvent, this.queryParams, this.queryParamsChangedEvent, this.endPoint, this.data.page, this.dataPageChangedEvent, this._submissionsClicked, this._projectsClicked, this._assignmentsClicked, this._tableClicked, this.submissions.length, this.originalSubmissions.length, !this.authors, this.queryParams.author, this.queryParamsAuthorEvent, this._toArray(this.authors).map(function (author) {
          return (0, _litElement.html)(_templateObject2_6ce664402d8511ea80ccf124101da415(), author.id, author.display_name);
        }), !this.projects, this.queryParams.project, this.queryParamsProjectEvent, this._toArray(this.projects).map(function (project) {
          return (0, _litElement.html)(_templateObject3_6ce664402d8511ea80ccf124101da415(), project.id, project.attributes.title);
        }), !this.assignments, this.queryParams.assignment, this.queryParamsAssignmentEvent, this._toArray(this.assignments).map(function (assignment) {
          return (0, _litElement.html)(_templateObject4_6ce664402d8511ea80ccf124101da415(), assignment.id, assignment.attributes.title);
        }), this.data.page, this.dataPageChangedEvent, this.submissions, this.basePath, this.basePath, this.submissions, this.assignments, this.queryParams.author, this.queryParams.assignment, this.basePath, this.projects, this.submissions, this.assignments, this.queryParams.author, this.queryParams.project, this.basePath, this.submissions);
      }
    }, {
      key: "dataPageChangedEvent",
      value: function dataPageChangedEvent(e) {
        var attr = this.data;
        attr.page = e.detail.value;
        this.data = _objectSpread({}, attr);
      }
    }, {
      key: "queryParamsAssignmentEvent",
      value: function queryParamsAssignmentEvent(e) {
        var attr = this.queryParams.attributes;
        attr.assignment = e.detail.value;
        this.queryParams.attributes = _objectSpread({}, attr);
      }
    }, {
      key: "queryParamsProjectEvent",
      value: function queryParamsProjectEvent(e) {
        var attr = this.queryParams.attributes;
        attr.project = e.detail.value;
        this.queryParams.attributes = _objectSpread({}, attr);
      }
    }, {
      key: "queryParamsAuthorEvent",
      value: function queryParamsAuthorEvent(e) {
        var attr = this.queryParams.attributes;
        attr.author = e.detail.value;
        this.queryParams.attributes = _objectSpread({}, attr);
      }
    }, {
      key: "studioResponseChangedEvent",
      value: function studioResponseChangedEvent(e) {
        this.studioResponse = _objectSpread({}, e.detail.value);
      }
    }, {
      key: "queryParamsChangedEvent",
      value: function queryParamsChangedEvent(e) {
        this.queryParams = _objectSpread({}, e.detail.value);
      }
    }, {
      key: "dataChangedEvent",
      value: function dataChangedEvent(e) {
        this.data = _objectSpread({}, e.detail.value);
      }
    }, {
      key: "routeChangedEvent",
      value: function routeChangedEvent(e) {
        this.route = _objectSpread({}, e.detail.value);
      }
    }, {
      key: "tailChangedEvent",
      value: function tailChangedEvent(e) {
        this.tail = _objectSpread({}, e.detail.value);
      }
    }], [{
      key: "styles",

      /**
       * LitElement constructable styles enhancement
       */
      get: function get() {
        return [(0, _litElement.css)(_templateObject5_6ce664402d8511ea80ccf124101da415())];
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnapp-open-studio";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          elmslnCourse: {
            type: String,
            attribute: "elmsln-course"
          },
          elmslnSection: {
            type: String,
            attribute: "elmsln-section"
          },
          basePath: {
            type: String,
            attribute: "base-path"
          },
          csrfToken: {
            type: String,
            attribute: "csrf-token"
          },
          endPoint: {
            type: String,
            attribute: "end-point"
          },

          /**
           * The studioResponse from server
           */
          studioResponse: {
            type: Object,
            attribute: "studio-response"
          },

          /**
           * The submissions to render; potentially filtered
           */
          submissions: {
            type: Object
          },

          /**
           * The original submissions array; used to filter against
           */
          originalSubmissions: {
            type: Object,
            attribute: "original-submissions"
          },

          /**
           * The submissions to render
           */
          projects: {
            type: Array
          },

          /**
           * The assignments to render
           */
          assignments: {
            type: Array
          },

          /**
           * The authors to render
           */
          authors: {
            type: Array
          },

          /**
           * sourcePath for submission data.
           */
          sourcePath: {
            type: String,
            attribute: "source-path"
          },

          /**
           * Active / clicked submission.
           */
          activeSubmission: {
            type: String,
            attribute: "active-submission"
          },
          queryParams: {
            type: Object
          },
          _blockcycle: {
            type: Boolean
          }
        };
      }
    }]);

    function LrnappOpenStudio() {
      var _this;

      babelHelpers.classCallCheck(this, LrnappOpenStudio);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(LrnappOpenStudio).call(this));
      _this.projects = [];
      _this.assignments = [];
      _this.authors = [];
      _this.activeSubmission = null;
      _this._blockcycle = false;
      setTimeout(function () {
        _this.addEventListener("route-change", _this._routeChange.bind(babelHelpers.assertThisInitialized(_this)));
      }, 0);
      return _this;
    }

    babelHelpers.createClass(LrnappOpenStudio, [{
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        changedProperties.forEach(function (oldValue, propName) {
          if (propName == "basePath") {
            // notify
            _this2.dispatchEvent(new CustomEvent("base-path-changed", {
              detail: {
                value: _this2[propName]
              }
            }));
          }

          if (propName == "sourcePath") {
            // notify
            _this2.dispatchEvent(new CustomEvent("source-path-changed", {
              detail: {
                value: _this2[propName]
              }
            }));
          }

          if (propName == "endPoint") {
            // notify
            _this2.dispatchEvent(new CustomEvent("end-point-changed", {
              detail: {
                value: _this2[propName]
              }
            }));
          }

          if (propName == "studioResponse") {
            // notify
            _this2.dispatchEvent(new CustomEvent("studio-response-changed", {
              detail: {
                value: _this2[propName]
              }
            }));
          }

          if (propName == "submissions") {
            // notify
            _this2.dispatchEvent(new CustomEvent("submissions-changed", {
              detail: {
                value: _this2[propName]
              }
            }));
          }

          if (["originalSubmissions", "queryParams"].includes(propName)) {
            _this2.submissions = babelHelpers.toConsumableArray(_this2._submissionsCompute(_this2.originalSubmissions, _this2.queryParams));
          }

          if (propName == "originalSubmissions") {
            // notify
            _this2.dispatchEvent(new CustomEvent("original-submissions-changed", {
              detail: {
                value: _this2[propName]
              }
            }));
          }

          if (propName == "activeSubmission") {
            // notify
            _this2.dispatchEvent(new CustomEvent("active-submission-changed", {
              detail: {
                value: _this2[propName]
              }
            }));
          }

          if (propName == "queryParams") {
            _this2._deleteToast(_this2.queryParams.deletetoast);

            _this2._assignmentFilterChanged(_this2.queryParams.assignment);

            _this2._projectFilterChanged(_this2.queryParams.project); // notify


            _this2.dispatchEvent(new CustomEvent("query-params-changed", {
              detail: {
                value: _this2[propName]
              }
            }));
          }

          if (["projects", "assignments", "authors"].includes(propName)) {
            // notify
            _this2.dispatchEvent(new CustomEvent("".concat(propName, "-changed"), {
              detail: {
                value: _this2[propName]
              }
            }));
          }

          if (["route", "endPoint"].includes(propName)) {
            _this2._routeChanged(_this2.route, _this2.endPoint);
          }
        });
      } // If the current route is outside the scope of our app
      // then allow the website to break out of the single page
      // application routing

    }, {
      key: "_routeChanged",
      value: function _routeChanged(route, endPoint) {
        if (typeof route.path === "string") {
          if (typeof endPoint === "string") {
            if (route.path.startsWith(endPoint)) {
              return;
            }
          } // reload the page which since route changed will load that page


          window.location.reload();
        }
      }
      /**
       * Change route from deeper in the app.
       */

    }, {
      key: "_routeChange",
      value: function _routeChange(e) {
        var details = e.detail;

        if (babelHelpers.typeof(details.queryParams.assignment) !== (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined))) {
          var attr = this.queryParams;
          attr.assignment = details.queryParams.assignment;
          this.queryParams = _objectSpread({}, attr);
        }

        if (babelHelpers.typeof(details.queryParams.project) !== (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined))) {
          var _attr = this.queryParams;
          _attr.project = details.queryParams.project;
          this.queryParams = _objectSpread({}, _attr);
        }

        if (babelHelpers.typeof(details.queryParams.author) !== (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined))) {
          var _attr2 = this.queryParams;
          _attr2.author = details.queryParams.author;
          this.queryParams = _objectSpread({}, _attr2);
        }

        if (babelHelpers.typeof(details.data.page) !== (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined))) {
          var _attr3 = this.data;
          _attr3.page = details.data.page;
          this.data = _objectSpread({}, _attr3);
        }
      }
    }, {
      key: "_submissionsCompute",
      value: function _submissionsCompute(originalSubmissions, queryParams) {
        var _this3 = this;

        // if we don't have an original submissions object to work with then we need to bail
        if (typeof originalSubmissions === "undefined") {
          return [];
        } // define vars


        var root = this;
        var filteredSubmissions = []; // filter the submissions by the query params

        filteredSubmissions = originalSubmissions.filter(function (submission) {
          if (typeof root.queryParams.author !== "undefined") {
            if (submission.relationships.author.data.id !== root.queryParams.author) {
              return false;
            }
          }

          if (typeof root.queryParams.project !== "undefined") {
            if (submission.relationships.project.data.id !== root.queryParams.project) {
              return false;
            }
          }

          if (typeof root.queryParams.assignment !== "undefined") {
            if (submission.relationships.assignment.id !== root.queryParams.assignment) {
              return false;
            }
          }

          return true;
        }); // delay and repaint, can help with refresh issues

        setTimeout(function () {
          _this3.shadowRoot.querySelector("#ironlist").fire("iron-resize");
        }, 200);
        return filteredSubmissions;
      }
    }, {
      key: "_tableClicked",
      value: function _tableClicked(e) {
        var attr = this.route;
        attr.path = this.endPoint + "/table";
        this.route = _objectSpread({}, attr);
      }
      /**
       * Support having a toast message because of delete or error elsewhere.
       */

    }, {
      key: "_deleteToast",
      value: function _deleteToast(deletetoast, old) {
        if (babelHelpers.typeof(deletetoast) !== (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined))) {
          if (deletetoast == "error") {
            this.shadowRoot.querySelector("#toast").show("That submission on longer exists!");
          } else {
            this.shadowRoot.querySelector("#toast").show("Submission deleted successfully!");
          }

          var attr = this.queryParams;
          attr.deletetoast = undefined;
          this.queryParams = _objectSpread({}, attr);
        }
      }
    }, {
      key: "_assignmentFilterChanged",
      value: function _assignmentFilterChanged(assignment) {
        // if we have a assignment then we need to uncheck project
        if (babelHelpers.typeof(assignment) !== (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined)) && !this._blockcycle) {
          this._blockcycle = true;
          var attr = this.queryParams;
          attr.project = undefined;
          attr.assignment = assignment;
          this.queryParams = _objectSpread({}, attr);
        } else {
          this._blockcycle = false;
        }
      }
    }, {
      key: "_projectFilterChanged",
      value: function _projectFilterChanged(project) {
        // if we have a project then we need to uncheck assignment
        if (babelHelpers.typeof(project) !== (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined)) && !this._blockcycle) {
          this._blockcycle = true;
          var attr = this.queryParams;
          attr.project = project;
          attr.assignment = undefined;
          this.queryParams = _objectSpread({}, attr);
        } else {
          this._blockcycle = false;
        }
      }
      /**
       * Handle response for the whole projects object.
       */

    }, {
      key: "_handleResponse",
      value: function _handleResponse(event) {
        var root = this;
        var author = {};
        var project = {};
        var tmp = {
          authors: [],
          assignments: []
        };
        var assignment = {};
        var assignments = [];
        var authors = []; // get the submission response's data and convert to array ahead of time

        var submissions = [];

        if (root.studioResponse.data.submissions != null) {
          submissions = this._toArray(root.studioResponse.data.submissions);
        }

        var projects = [];

        if (root.studioResponse.data.projects != null) {
          projects = this._toArray(root.studioResponse.data.projects);
        }

        this.projects = babelHelpers.toConsumableArray(projects); // original = active off the bat then we apply filters later to chang this

        this.originalSubmissions = babelHelpers.toConsumableArray(submissions); // figure out authors and assignments

        for (var index = 0; index < submissions.length; index++) {
          author = submissions[index].relationships.author.data;
          tmp.authors[author.id] = author;
          project = submissions[index].relationships.project.data;
          assignment = submissions[index].relationships.assignment;
          tmp.assignments[assignment.id] = assignment;
          tmp.assignments[assignment.id].project = project.id;
        } // this is stupid but we have to normalize the IDs or else dom repeats will be screwed up


        tmp.authors.forEach(function (element) {
          authors.push(element);
        }); // this is stupid but we have to normalize the IDs or else dom repeats will be screwed up

        tmp.assignments.forEach(function (element) {
          assignments.push(element);
        });
        root.shadowRoot.querySelector("#loading").hidden = true;
        this.assignments = [].concat(assignments);
        this.authors = [].concat(authors);
      }
    }, {
      key: "_submissionsClicked",
      value: function _submissionsClicked(e) {
        this.route.path = this.endPoint + "/submissions";
        this.route = _objectSpread({}, this.route);
      }
    }, {
      key: "_projectsClicked",
      value: function _projectsClicked(e) {
        this.route.path = this.endPoint + "/projects";
        this.route = _objectSpread({}, this.route);
      }
    }, {
      key: "_assignmentsClicked",
      value: function _assignmentsClicked(e) {
        this.route.path = this.endPoint + "/assignments";
        this.route = _objectSpread({}, this.route);
      }
      /**
       * Simple way to convert from object to array.
       */

    }, {
      key: "_toArray",
      value: function _toArray(obj) {
        if (obj == null) {
          return [];
        }

        return Object.keys(obj).map(function (key) {
          return obj[key];
        });
      }
    }]);
    return LrnappOpenStudio;
  }(_litElement.LitElement);

  _exports.LrnappOpenStudio = LrnappOpenStudio;
  window.customElements.define(LrnappOpenStudio.tag, LrnappOpenStudio);
});