define(["exports", "../../../../lit-element/lit-element.js", "../../../../@polymer/iron-pages/iron-pages.js", "./lrnapp-studio-submission-display.js", "./lrnapp-studio-submission-edit.js", "./lrnapp-studio-submission-critique.js"], function (_exports, _litElement, _ironPages, _lrnappStudioSubmissionDisplay, _lrnappStudioSubmissionEdit, _lrnappStudioSubmissionCritique) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappStudioSubmissionObject = void 0;

  function _templateObject2_faae61202c1c11eaacb4bf54e86db688() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n      "]);

    _templateObject2_faae61202c1c11eaacb4bf54e86db688 = function _templateObject2_faae61202c1c11eaacb4bf54e86db688() {
      return data;
    };

    return data;
  }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _templateObject_faae61202c1c11eaacb4bf54e86db688() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <iron-pages selected=\"", "\">\n        <lrnapp-studio-submission-display\n          .submission=\"", "\"\n          @submission-changed=\"", "\"\n        ></lrnapp-studio-submission-display>\n        <lrnapp-studio-submission-edit\n          .submission=\"", "\"\n          @submission-changed=\"", "\"\n        ></lrnapp-studio-submission-edit>\n        <lrnapp-studio-submission-critique\n          .submission=\"", "\"\n          @submission-changed=\"", "\"\n          ?edit=\"", "\"\n        ></lrnapp-studio-submission-critique>\n      </iron-pages>\n    "]);

    _templateObject_faae61202c1c11eaacb4bf54e86db688 = function _templateObject_faae61202c1c11eaacb4bf54e86db688() {
      return data;
    };

    return data;
  }

  var LrnappStudioSubmissionObject =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(LrnappStudioSubmissionObject, _LitElement);
    babelHelpers.createClass(LrnappStudioSubmissionObject, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_faae61202c1c11eaacb4bf54e86db688(), this.selectedPage, this.submission, this.submissionChanged, this.submission, this.submissionChanged, this.submission, this.submissionChanged, this.edit);
      }
    }, {
      key: "submissionChanged",
      value: function submissionChanged(e) {
        this.submission = _objectSpread({}, e.detail.value);
      }
    }], [{
      key: "styles",

      /**
       * LitElement constructable styles enhancement
       */
      get: function get() {
        return [(0, _litElement.css)(_templateObject2_faae61202c1c11eaacb4bf54e86db688())];
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnapp-studio-submission-object";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          elmslnCourse: {
            type: String,
            attribute: "elmsln-course"
          },
          elmslnSection: {
            type: String,
            attribute: "elmsln-section"
          },
          basePath: {
            type: String,
            attribute: "base-path"
          },
          csrfToken: {
            type: String,
            attribute: "csrf-token"
          },
          endPoint: {
            type: String,
            attribute: "end-point"
          },
          submission: {
            type: Object
          },
          edit: {
            type: Boolean
          },
          selectedPage: {
            type: Number,
            attribute: "selected-page"
          }
        };
      }
    }]);

    function LrnappStudioSubmissionObject() {
      var _this;

      babelHelpers.classCallCheck(this, LrnappStudioSubmissionObject);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(LrnappStudioSubmissionObject).call(this));
      _this.submission = null;
      _this.edit = false;
      _this.selectedPage = 0;
      return _this;
    }

    babelHelpers.createClass(LrnappStudioSubmissionObject, [{
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        changedProperties.forEach(function (oldValue, propName) {
          if (propName == "submission") {
            // notify
            _this2.dispatchEvent(new CustomEvent("submission-changed", {
              detail: {
                value: _this2[propName]
              }
            }));
          }

          if (["edit", "submission"].includes(propName)) {
            _this2._selectedPageChanged(_this2.edit, _this2.submission.meta.submissionType);
          }
        });
      }
    }, {
      key: "_selectedPageChanged",
      value: function _selectedPageChanged(edit, type) {
        var selected = 0;

        if (edit) {
          switch (type) {
            case "default":
              selected = 1;
              break;

            case "critique":
              selected = 2;
              break;
          }
        } else {
          switch (type) {
            case "default":
              selected = 0;
              break;

            case "critique":
              selected = 2;
              break;
          }
        }

        this.selectedPage = selected;
      }
    }]);
    return LrnappStudioSubmissionObject;
  }(_litElement.LitElement);

  _exports.LrnappStudioSubmissionObject = LrnappStudioSubmissionObject;
  window.customElements.define(LrnappStudioSubmissionObject.tag, LrnappStudioSubmissionObject);
});