define(["exports", "../../../../@polymer/polymer/polymer-element.js", "../../../../@polymer/iron-ajax/iron-ajax.js", "../../../../@polymer/polymer/lib/elements/dom-if.js", "../../../../@polymer/paper-toast/paper-toast.js", "../../../lrnsys-button/lrnsys-button.js"], function (_exports, _polymerElement, _ironAjax, _domIf, _paperToast, _lrnsysButton) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappStudioSubmissionButton = void 0;

  function _templateObject_708a3630d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n        }\n      </style>\n      <template is=\"dom-if\" if=\"[[!submissionId]]\">\n        <lrnsys-button\n          raised\n          on-click=\"_createSubmission\"\n          label=\"Create submission\"\n        ></lrnsys-button>\n        <iron-ajax\n          id=\"ajaxCreateStub\"\n          url=\"[[endPoint]]/api/submissions/create-stub?token=[[csrfToken]]\"\n          method=\"POST\"\n          body=\"[[assignmentId]]\"\n          handle-as=\"json\"\n          on-response=\"_ajaxCreateStubHandler\"\n        ></iron-ajax>\n      </template>\n      <template is=\"dom-if\" if=\"[[submissionId]]\">\n        <lrnsys-button\n          raised=\"\"\n          label=\"View submission\"\n          show-href=\"[[_submissionUrl(submissionId)]]\"\n          href=\"[[_submissionUrl(submissionId)]]\"\n        ></lrnsys-button>\n      </template>\n      <template is=\"dom-if\" if=\"[[displayErrors]]\">\n        <paper-toast id=\"toast\"></paper-toast>\n      </template>\n    "]);

    _templateObject_708a3630d34d11ea880ba1e93364c49c = function _templateObject_708a3630d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  /**
   * `lrnapp-studio-submission-button`
   * `Allows users to either start a submission or link to a submission.`
  
  Usage:
  ```
  <lrnapp-studio-submission-button assignment-id="[[id]]" submission-id="{{submissionId}}" end-point="[[endPoint]]" csrf-token=[[csrfToken]]></lrnapp-studio-submission-button>
  */
  var LrnappStudioSubmissionButton =
  /*#__PURE__*/
  function (_PolymerElement) {
    babelHelpers.inherits(LrnappStudioSubmissionButton, _PolymerElement);

    function LrnappStudioSubmissionButton() {
      babelHelpers.classCallCheck(this, LrnappStudioSubmissionButton);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(LrnappStudioSubmissionButton).apply(this, arguments));
    }

    babelHelpers.createClass(LrnappStudioSubmissionButton, [{
      key: "_createSubmission",
      value: function _createSubmission() {
        this.shadowRoot.querySelector("#ajaxCreateStub").generateRequest();
      }
    }, {
      key: "_ajaxCreateStubHandler",
      value: function _ajaxCreateStubHandler(e) {
        var status = e.detail.response.status;
        var response = e.detail.response;

        if (status === 201) {
          var submissionId = e.detail.response.data.id;

          if (submissionId) {
            this.submissionId = submissionId; // auto implies we should just go there to the edit form after creation

            if (this.auto) {
              window.location.href = this._submissionUrl(submissionId) + "/edit";
            }
          }
        } // if we have errors to display


        if (typeof response.errors !== "undefined") {
          var ul = document.createElement("ul");
          var text = "";
          response.errors.forEach(function (error) {
            text = text + " " + error;
          });
          this.shadowRoot.querySelector("#toast").show(text);
        }
      }
    }, {
      key: "_submissionUrl",
      value: function _submissionUrl(id) {
        return this.endPoint + "/submissions/" + id;
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_708a3630d34d11ea880ba1e93364c49c());
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnapp-studio-submission-button";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          auto: {
            type: Boolean,
            reflectToAttribute: true,
            value: false,
            notify: true
          },
          assignmentId: {
            type: String,
            reflectToAttribute: true
          },
          submissionId: {
            type: String,
            value: false,
            reflectToAttribute: true
          },
          displayErrors: {
            type: Boolean,
            value: true
          },
          elmslnCourse: {
            type: String
          },
          elmslnSection: {
            type: String
          },
          basePath: {
            type: String,
            notify: true,
            reflectToAttribute: true
          },
          csrfToken: {
            type: String,
            notify: true,
            reflectToAttribute: true
          },
          endPoint: {
            type: String,
            notify: true,
            reflectToAttribute: true
          }
        };
      }
    }]);
    return LrnappStudioSubmissionButton;
  }(_polymerElement.PolymerElement);

  _exports.LrnappStudioSubmissionButton = LrnappStudioSubmissionButton;
  window.customElements.define(LrnappStudioSubmissionButton.tag, LrnappStudioSubmissionButton);
});