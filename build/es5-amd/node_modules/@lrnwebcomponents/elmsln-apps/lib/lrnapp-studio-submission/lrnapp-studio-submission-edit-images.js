define(["exports", "../../../../@polymer/polymer/polymer-element.js", "../../../secure-request/secure-request.js", "../../../../@polymer/polymer/lib/legacy/polymer.dom.js", "../../../../@polymer/paper-dialog/paper-dialog.js", "../../../../@polymer/paper-dialog-scrollable/paper-dialog-scrollable.js", "../../../../@polymer/iron-icon/iron-icon.js", "../../../../@polymer/paper-button/paper-button.js", "../../../../@polymer/polymer/lib/elements/dom-if.js", "../../../../@vaadin/vaadin-upload/vaadin-upload.js", "../../../../@polymer/polymer/lib/elements/dom-repeat.js", "./lrnapp-studio-submission-edit-add-asset.js", "./lrnapp-studio-submission-edit-image.js"], function (_exports, _polymerElement, _secureRequest, _polymerDom, _paperDialog, _paperDialogScrollable, _ironIcon, _paperButton, _domIf, _vaadinUpload, _domRepeat, _lrnappStudioSubmissionEditAddAsset, _lrnappStudioSubmissionEditImage) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappStudioSubmissionEditImages = void 0;

  function _templateObject_97beacf0c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n          position: relative;\n          min-height: 200px;\n        }\n        #pages {\n          display: block;\n        }\n        .images__images {\n          display: flex;\n          flex-wrap: wrap;\n        }\n        .images__images > * {\n          margin-right: 16px;\n          min-width: 200px;\n        }\n        neon-animated-pages .iron-selected {\n          position: static;\n        }\n        paper-dialog {\n          width: 50%;\n          width: 50vmax;\n          padding: 16px;\n        }\n      </style>\n      <div class=\"images__images\">\n        <template is=\"dom-repeat\" items=\"[[images]]\" as=\"image\">\n          <lrnapp-studio-submission-edit-image\n            image=\"[[image]]\"\n            on-deleted=\"_deleteImage\"\n            data-index$=\"[[index]]\"\n          ></lrnapp-studio-submission-edit-image>\n        </template>\n        <lrnapp-studio-submission-edit-add-asset\n          on-click=\"_addImage\"\n          icon=\"image:photo-library\"\n        ></lrnapp-studio-submission-edit-add-asset>\n      </div>\n      <paper-dialog id=\"dialog\">\n        <h2>Add Image(s)</h2>\n        <paper-dialog-scrollable>\n          <div class=\"images__upload\">\n            <template is=\"dom-if\" if=\"[[uploadUrl]]\">\n              <vaadin-upload\n                accept=\"[[fileTypes]]\"\n                target=\"[[uploadUrl]]\"\n                method=\"POST\"\n                form-data-name=\"file-upload\"\n                on-upload-success=\"_handleImageUploadSuccess\"\n              >\n                <div class=\"images__drop-label\">\n                  <iron-icon icon=\"description\"></iron-icon>\n                  Upload files here:\n                </div>\n              </vaadin-upload>\n            </template>\n          </div>\n        </paper-dialog-scrollable>\n        <div class=\"buttons\">\n          <paper-button dialog-dismiss=\"\">Cancel</paper-button>\n        </div>\n      </paper-dialog>\n    "], ["\n      <style>\n        :host {\n          display: block;\n          position: relative;\n          min-height: 200px;\n        }\n        #pages {\n          display: block;\n        }\n        .images__images {\n          display: flex;\n          flex-wrap: wrap;\n        }\n        .images__images > * {\n          margin-right: 16px;\n          min-width: 200px;\n        }\n        neon-animated-pages .iron-selected {\n          position: static;\n        }\n        paper-dialog {\n          width: 50%;\n          width: 50vmax;\n          padding: 16px;\n        }\n      </style>\n      <div class=\"images__images\">\n        <template is=\"dom-repeat\" items=\"[[images]]\" as=\"image\">\n          <lrnapp-studio-submission-edit-image\n            image=\"[[image]]\"\n            on-deleted=\"_deleteImage\"\n            data-index\\$=\"[[index]]\"\n          ></lrnapp-studio-submission-edit-image>\n        </template>\n        <lrnapp-studio-submission-edit-add-asset\n          on-click=\"_addImage\"\n          icon=\"image:photo-library\"\n        ></lrnapp-studio-submission-edit-add-asset>\n      </div>\n      <paper-dialog id=\"dialog\">\n        <h2>Add Image(s)</h2>\n        <paper-dialog-scrollable>\n          <div class=\"images__upload\">\n            <template is=\"dom-if\" if=\"[[uploadUrl]]\">\n              <vaadin-upload\n                accept=\"[[fileTypes]]\"\n                target=\"[[uploadUrl]]\"\n                method=\"POST\"\n                form-data-name=\"file-upload\"\n                on-upload-success=\"_handleImageUploadSuccess\"\n              >\n                <div class=\"images__drop-label\">\n                  <iron-icon icon=\"description\"></iron-icon>\n                  Upload files here:\n                </div>\n              </vaadin-upload>\n            </template>\n          </div>\n        </paper-dialog-scrollable>\n        <div class=\"buttons\">\n          <paper-button dialog-dismiss=\"\">Cancel</paper-button>\n        </div>\n      </paper-dialog>\n    "]);

    _templateObject_97beacf0c96f11ea8be5e1d5fe7ec787 = function _templateObject_97beacf0c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  var LrnappStudioSubmissionEditImages =
  /*#__PURE__*/
  function (_SecureRequestXhr) {
    babelHelpers.inherits(LrnappStudioSubmissionEditImages, _SecureRequestXhr);

    function LrnappStudioSubmissionEditImages() {
      babelHelpers.classCallCheck(this, LrnappStudioSubmissionEditImages);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(LrnappStudioSubmissionEditImages).apply(this, arguments));
    }

    babelHelpers.createClass(LrnappStudioSubmissionEditImages, [{
      key: "_addImage",
      value: function _addImage(e) {
        // @todo switch to singleton
        this.$.dialog.open();
      }
    }, {
      key: "_selectPage",
      value: function _selectPage(e) {
        var normalizedEvent = (0, _polymerDom.dom)(e);
        var page = normalizedEvent.localTarget.getAttribute("data-page");
        this.set("selectedPage", page);
      }
    }, {
      key: "_handleImageUploadSuccess",
      value: function _handleImageUploadSuccess(e) {
        this.set("selectedPage", 0);
        var images = [];
        var response = e.detail.xhr.response; // normalize response string

        var response = JSON.parse(response); // get the newely created file

        if (response.data.file) {
          var file = response.data.file; // add it to the list of submission images.
          // find out if the image is already referenced in the submission
          // images array and if it is replace it.

          var replacement = false;

          if (this.images) {
            images = this.images.map(function (image) {
              if (image.fid === file.fid) {
                replacement = true;
                return file;
              } else {
                return image;
              }
            });
          } // if the image was not a replacement then add it to the array


          if (!replacement) {
            images.push(file);
          }

          this.set("images", []);
          this.set("images", images);
          this.$.dialog.close();
        }
      }
    }, {
      key: "_deleteImage",
      value: function _deleteImage(e) {
        var normalizedEvent = (0, _polymerDom.dom)(e); // console.log(normalizedEvent.localTarget);

        var deleteIndex = normalizedEvent.localTarget.getAttribute("data-index");
        this.splice("images", deleteIndex, 1);
      }
      /**
       * attached life cycle
       */

    }, {
      key: "connectedCallback",
      value: function connectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(LrnappStudioSubmissionEditImages.prototype), "connectedCallback", this).call(this);
        var uploadUrl = this.generateUrl("/api/files");

        if (uploadUrl !== null) {
          this.set("uploadUrl", uploadUrl);
        }
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_97beacf0c96f11ea8be5e1d5fe7ec787());
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnapp-studio-submission-edit-images";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          images: {
            type: Array,
            notify: true,
            value: []
          },
          selectedPage: {
            type: String,
            value: 0
          },
          uploadUrl: {
            type: String,
            value: null
          }
        };
      }
    }]);
    return LrnappStudioSubmissionEditImages;
  }((0, _secureRequest.SecureRequestXhr)(_polymerElement.PolymerElement));

  _exports.LrnappStudioSubmissionEditImages = LrnappStudioSubmissionEditImages;
  window.customElements.define(LrnappStudioSubmissionEditImages.tag, LrnappStudioSubmissionEditImages);
});