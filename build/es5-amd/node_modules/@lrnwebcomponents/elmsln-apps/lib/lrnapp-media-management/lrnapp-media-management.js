define(["exports", "../../../../@polymer/polymer/polymer-element.js", "../../../../@polymer/polymer/lib/utils/render-status.js", "../../../../@polymer/iron-ajax/iron-ajax.js", "../../../../@polymer/iron-scroll-threshold/iron-scroll-threshold.js", "../../../../@polymer/iron-image/iron-image.js", "../../../../@polymer/iron-list/iron-list.js", "../../../../@polymer/paper-button/paper-button.js", "../../../elmsln-loading/elmsln-loading.js", "../../../materializecss-styles/materializecss-styles.js"], function (_exports, _polymerElement, _renderStatus, _ironAjax, _ironScrollThreshold, _ironImage, _ironList, _paperButton, _elmslnLoading, _materializecssStyles) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappMediaManagement = void 0;

  function _templateObject_a74c8f10b49511e9bfd4f79a8a57e0f7() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <style include=\"materializecss-styles\">\n        :host {\n          display: block;\n        }\n        paper-button {\n          padding: 0;\n          margin: 0;\n          min-width: 16px;\n        }\n        #details {\n          opacity: 0.5;\n          position: absolute;\n          bottom: 0;\n          right: 0;\n          margin: 0 16px 0 0;\n          background-color: white;\n          padding: 8px;\n        }\n        #details:hover {\n          opacity: 1;\n        }\n        #details span {\n          font-size: 10px;\n          font-weight: normal;\n        }\n        #details .comment-on-work {\n          font-size: 12px;\n          background-color: white;\n        }\n      </style>\n      <iron-ajax\n        id=\"ajax\"\n        url=\"[[source-path]]\"\n        params=\"\"\n        handle-as=\"json\"\n        last-response=\"{{submissions}}\"\n      ></iron-ajax>\n      <iron-scroll-threshold on-lower-threshold=\"_loadMoreData\" id=\"threshold\">\n        <iron-list grid items=\"[[_toArray(submissions.data)]]\" as=\"item\">\n          <template>\n            <paper-card\n              heading=\"{{item.title}}\"\n              image=\"\"\n              elevation=\"2\"\n              animated-shadow=\"true\"\n            >\n              <div class=\"card-content\"></div>\n              <div class=\"card-actions\">\n                <a href=\"{{item.url}}\"\n                  ><paper-button raised>View</paper-button></a\n                >\n                <a href=\"{{item.edit_url}}\"\n                  ><paper-button raised>Edit</paper-button></a\n                >\n              </div>\n            </paper-card>\n          </template>\n        </iron-list>\n      </iron-scroll-threshold>\n      <paper-dialog id=\"dialog\">\n        <paper-dialog-scrollable id=\"dialogResponse\">\n          <iron-image src=\"{{activeImage}}\"></iron-image>\n          <div id=\"details\">\n            <div class=\"title\">\n              <span>Title:</span> <span>{{activeTitle}}</span>\n            </div>\n            <div class=\"author\">\n              <span>Author:</span> <span>{{activeAuthor}}</span>\n            </div>\n            <div class=\"comments\">\n              <span>Comments:</span> <span>{{activeComments}}</span>\n            </div>\n            <div class=\"comment-on-work\">\n              <a href=\"{{activeUrl}}\">\n                <paper-button raised>Comment on this work</paper-button>\n              </a>\n            </div>\n          </div>\n        </paper-dialog-scrollable>\n      </paper-dialog>\n    "]);

    _templateObject_a74c8f10b49511e9bfd4f79a8a57e0f7 = function _templateObject_a74c8f10b49511e9bfd4f79a8a57e0f7() {
      return data;
    };

    return data;
  }

  var LrnappMediaManagement =
  /*#__PURE__*/
  function (_PolymerElement) {
    babelHelpers.inherits(LrnappMediaManagement, _PolymerElement);

    function LrnappMediaManagement() {
      babelHelpers.classCallCheck(this, LrnappMediaManagement);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(LrnappMediaManagement).apply(this, arguments));
    }

    babelHelpers.createClass(LrnappMediaManagement, [{
      key: "connectedCallback",
      value: function connectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(LrnappMediaManagement.prototype), "connectedCallback", this).call(this);
        (0, _renderStatus.afterNextRender)(this, function () {
          this.addEventListener("click", this._triggerDialog.bind(this));
        });
      }
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        this.removeEventListener("click", this._triggerDialog.bind(this));
        babelHelpers.get(babelHelpers.getPrototypeOf(LrnappMediaManagement.prototype), "disconnectedCallback", this).call(this);
      }
    }, {
      key: "_triggerDialog",

      /**
       * When someone clicks if there is a url, then we need to
       * remote load whatever is in that url.
       */
      value: function _triggerDialog(e) {
        var root = this; // make sure we found an image as we're going through here

        if (e.target.nextElementSibling.nodeName == "IMG") {
          root.activeImage = e.target.nextElementSibling.src;
          root.activeTitle = e.target.parentElement.title;
          root.activeAuthor = e.target.parentElement.author;
          root.activeComments = e.target.parentElement.comments;
          root.activeUrl = e.target.parentElement.openUrl;
          this.shadowRoot.querySelector("#dialog").toggle();
        }
      }
    }, {
      key: "_loadMoreData",
      value: function _loadMoreData(e) {
        var root = this;
        root.shadowRoot.querySelector("#ajax").generateRequest();
        root.shadowRoot.querySelector("#threshold").clearTriggers();
      }
      /**
       * Simple way to convert from object to array.
       */

    }, {
      key: "_toArray",
      value: function _toArray(obj) {
        if (obj == null) {
          return [];
        }

        return Object.keys(obj).map(function (key) {
          return obj[key];
        });
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_a74c8f10b49511e9bfd4f79a8a57e0f7());
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnapp-media-management";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          elmslnCourse: {
            type: String
          },
          elmslnSection: {
            type: String
          },
          basePath: {
            type: String
          },
          csrfToken: {
            type: String
          },
          endPoint: {
            type: String
          },
          submissions: {
            type: Array,
            notify: true
          },
          activeImage: {
            type: String,
            reflectToAttribute: true,
            notify: true
          },
          activeTitle: {
            type: String,
            reflectToAttribute: true,
            notify: true
          },
          activeAuthor: {
            type: String,
            reflectToAttribute: true,
            notify: true
          },
          activeComments: {
            type: String,
            reflectToAttribute: true,
            notify: true
          },
          activeUrl: {
            type: String,
            reflectToAttribute: true,
            notify: true
          }
        };
      }
    }]);
    return LrnappMediaManagement;
  }(_polymerElement.PolymerElement);

  _exports.LrnappMediaManagement = LrnappMediaManagement;
  window.customElements.define(LrnappMediaManagement.tag, LrnappMediaManagement);
});