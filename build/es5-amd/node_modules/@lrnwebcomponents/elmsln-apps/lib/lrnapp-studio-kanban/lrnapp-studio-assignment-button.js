define(["exports", "../../../../lit-element/lit-element.js", "../../../../@polymer/iron-ajax/iron-ajax.js", "../../../../@polymer/paper-toast/paper-toast.js", "../../../lrnsys-button/lrnsys-button.js"], function (_exports, _litElement, _ironAjax, _paperToast, _lrnsysButton) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappStudioAssignmentButton = void 0;

  function _templateObject3_03f70e001bb311eabd7cc30119585ddb() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n      "]);

    _templateObject3_03f70e001bb311eabd7cc30119585ddb = function _templateObject3_03f70e001bb311eabd7cc30119585ddb() {
      return data;
    };

    return data;
  }

  function _templateObject2_03f70e001bb311eabd7cc30119585ddb() {
    var data = babelHelpers.taggedTemplateLiteral(["\n            <paper-toast id=\"toast\"></paper-toast>\n          "]);

    _templateObject2_03f70e001bb311eabd7cc30119585ddb = function _templateObject2_03f70e001bb311eabd7cc30119585ddb() {
      return data;
    };

    return data;
  }

  function _templateObject_03f70e001bb311eabd7cc30119585ddb() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <lrnsys-button\n        @click=\"", "\"\n        icon-class=\"", "\"\n        alt=\"", "\"\n        class=\"", "\"\n        button-class=\"", "\"\n        hover-class=\"", "\"\n        icon=\"", "\"\n      ></lrnsys-button>\n      <iron-ajax\n        id=\"ajaxCreateStub\"\n        url=\"", "/api/assignments/create-stub?token=", "\"\n        method=\"POST\"\n        body=\"", "\"\n        handle-as=\"json\"\n        @response=\"", "\"\n      ></iron-ajax>\n      ", "\n    "]);

    _templateObject_03f70e001bb311eabd7cc30119585ddb = function _templateObject_03f70e001bb311eabd7cc30119585ddb() {
      return data;
    };

    return data;
  }

  /**
   *`lrnapp-studio-assignment-button`
   * Allows users to either start a assignment or link to a assignment.
   */
  var LrnappStudioAssignmentButton =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(LrnappStudioAssignmentButton, _LitElement);
    babelHelpers.createClass(LrnappStudioAssignmentButton, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_03f70e001bb311eabd7cc30119585ddb(), this._createAssignment, this.iconClass, this.alt, this.classes, this.classes, this.hoverClass, this.icon, this.endPoint, this.csrfToken, this.projectId, this._ajaxCreateStubHandler, this.displayErrors ? (0, _litElement.html)(_templateObject2_03f70e001bb311eabd7cc30119585ddb()) : "");
      }
    }], [{
      key: "styles",

      /**
       * LitElement constructable styles enhancement
       */
      get: function get() {
        return [(0, _litElement.css)(_templateObject3_03f70e001bb311eabd7cc30119585ddb())];
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnapp-studio-assignment-button";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          elmslnCourse: {
            type: String,
            attribute: "elmsln-course"
          },
          elmslnSection: {
            type: String,
            attribute: "elmsln-section"
          },
          basePath: {
            type: String,
            attribute: "base-path"
          },
          projectId: {
            type: String,
            attribute: "project-id"
          },
          iconClass: {
            type: String,
            attribute: "icon-class"
          },
          alt: {
            type: String
          },
          classes: {
            type: String
          },
          hoverClass: {
            type: String,
            attribute: "hover-class"
          },
          icon: {
            type: String
          },
          csrfToken: {
            type: String,
            attribute: "csrf-token",
            reflect: true
          },
          endPoint: {
            type: String,
            attribute: "end-point",
            reflect: true
          },
          auto: {
            type: Boolean,
            reflect: true
          },
          displayErrors: {
            type: Boolean
          }
        };
      }
    }]);

    function LrnappStudioAssignmentButton() {
      var _this;

      babelHelpers.classCallCheck(this, LrnappStudioAssignmentButton);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(LrnappStudioAssignmentButton).call(this));
      _this.icon = null;
      _this.hoverClass = null;
      _this.classes = null;
      _this.alt = null;
      _this.iconClass = null;
      _this.displayErrors = true;
      _this.auto = false;
      return _this;
    }

    babelHelpers.createClass(LrnappStudioAssignmentButton, [{
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        changedProperties.forEach(function (oldValue, propName) {
          if (propName == "auto") {
            // notify
            _this2.dispatchEvent(new CustomEvent("auto-changed", {
              detail: {
                value: _this2[propName]
              }
            }));
          }

          if (propName == "basePath") {
            // notify
            _this2.dispatchEvent(new CustomEvent("base-path-changed", {
              detail: {
                value: _this2[propName]
              }
            }));
          }

          if (propName == "csrfToken") {
            // notify
            _this2.dispatchEvent(new CustomEvent("csrf-token-changed", {
              detail: {
                value: _this2[propName]
              }
            }));
          }

          if (propName == "endPoint") {
            // notify
            _this2.dispatchEvent(new CustomEvent("end-point-changed", {
              detail: {
                value: _this2[propName]
              }
            }));
          }
        });
      }
    }, {
      key: "_createAssignment",
      value: function _createAssignment() {
        this.shadowRoot.querySelector("#ajaxCreateStub").generateRequest();
      }
    }, {
      key: "_ajaxCreateStubHandler",
      value: function _ajaxCreateStubHandler(e) {
        var status = e.detail.response.status;
        var response = e.detail.response;

        if (status === 201) {
          var assignment = e.detail.response.data;

          if (assignment) {
            this.dispatchEvent(new CustomEvent("assignment-created", {
              bubbles: true,
              cancelable: true,
              composed: true,
              detail: {
                assignment: assignment
              }
            }));
          }
        } // if we have errors to display


        if (typeof response.errors !== "undefined") {
          var text = "";
          response.errors.forEach(function (error) {
            text = text + " " + error;
          });
          this.shadowRoot.querySelector("#toast").show(text);
        }
      }
    }]);
    return LrnappStudioAssignmentButton;
  }(_litElement.LitElement);

  _exports.LrnappStudioAssignmentButton = LrnappStudioAssignmentButton;
  window.customElements.define(LrnappStudioAssignmentButton.tag, LrnappStudioAssignmentButton);
});