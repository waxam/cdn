define(["exports", "../../../../@polymer/polymer/polymer-element.js", "../../../../@polymer/polymer/lib/utils/render-status.js", "../../../../@polymer/polymer/lib/legacy/polymer.dom.js", "../../../../@polymer/iron-ajax/iron-ajax.js", "../../../../@polymer/app-route/app-location.js", "../elmsln-base-deps.js", "../../../../@polymer/app-route/app-route.js", "../../../../@polymer/iron-icon/iron-icon.js", "../../../../@polymer/iron-icons/editor-icons.js", "../../../../@polymer/iron-icons/communication-icons.js", "../../../../@polymer/iron-icons/iron-icons.js", "../../../../@polymer/paper-badge/paper-badge.js", "../../../../@polymer/paper-toggle-button/paper-toggle-button.js", "../../../../@polymer/app-layout/app-toolbar/app-toolbar.js", "../../../../@polymer/app-layout/app-header/app-header.js", "../../../../@polymer/paper-card/paper-card.js", "../../../../@polymer/iron-list/iron-list.js", "../../../../@polymer/paper-toast/paper-toast.js", "../../../../@polymer/paper-button/paper-button.js", "../../../../@polymer/paper-dialog/paper-dialog.js", "../../../lrnsys-render-html/lrnsys-render-html.js", "../../../lrnsys-layout/lib/lrnsys-dialog.js", "../../../lrnsys-button/lrnsys-button.js", "../../../elmsln-loading/elmsln-loading.js", "../../../materializecss-styles/materializecss-styles.js", "./lrnapp-studio-project-button.js", "./lrnapp-studio-assignment-button.js", "../lrnapp-studio-submission/lrnapp-studio-submission-button.js"], function (_exports, _polymerElement, _renderStatus, _polymerDom, _ironAjax, _appLocation, _elmslnBaseDeps, _appRoute, _ironIcon, _editorIcons, _communicationIcons, _ironIcons, _paperBadge, _paperToggleButton, _appToolbar, _appHeader, _paperCard, _ironList, _paperToast, _paperButton, _paperDialog, _lrnsysRenderHtml, _lrnsysDialog, _lrnsysButton, _elmslnLoading, _materializecssStyles, _lrnappStudioProjectButton, _lrnappStudioAssignmentButton, _lrnappStudioSubmissionButton) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappStudioKanban = void 0;

  function _templateObject_975563d0c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <style include=\"materializecss-styles\">\n        [hidden] {\n          display: none !important;\n        }\n        :host {\n          display: block;\n        }\n        #loading {\n          width: 100%;\n          z-index: 1000;\n          opacity: 0.8;\n          text-align: center;\n          align-content: center;\n          justify-content: center;\n          height: 100vh;\n          position: absolute;\n          background-color: white;\n        }\n        .projects-container {\n          -webkit-box-pack: start;\n          -ms-flex-pack: start;\n          justify-content: flex-start;\n          -webkit-box-align: start;\n          -ms-flex-align: start;\n          align-items: flex-start;\n          min-height: 23em;\n          width: 150vw;\n        }\n        @media screen and (max-width: 800px) {\n          .projects-container {\n            width: auto;\n          }\n        }\n        #activetoggle {\n          padding-left: 16px;\n        }\n        .projects-window {\n          width: 100vw;\n          overflow-x: scroll;\n          overflow-y: hidden;\n          scrollbar-face-color: #833900;\n          scrollbar-shadow-color: #ffc107;\n          scrollbar-highlight-color: #ffc107;\n          scrollbar-3dlight-color: #ffc107;\n          scrollbar-darkshadow-color: #ffc107;\n          scrollbar-track-color: #ffc107;\n          scrollbar-arrow-color: #ffc107;\n        }\n        .projects-window::-webkit-scrollbar-track {\n          background-color: #833900;\n        }\n        /* the new scrollbar will have a flat appearance with the set background color */\n        .projects-window::-webkit-scrollbar-thumb {\n          background-color: #ffc107;\n        }\n        /* this will style the thumb, ignoring the track */\n        .projects-window::-webkit-scrollbar-button {\n          background-color: #833900;\n        }\n        /* optionally, you can style the top and the bottom buttons (left and right for horizontal bars) */\n        .projects-window::-webkit-scrollbar-corner {\n          background-color: #833900;\n        }\n        /* if both the vertical and the horizontal bars appear, then perhaps the right bottom corner*/\n        .projects-window::-webkit-scrollbar {\n          width: 1rem;\n          height: 1rem;\n        }\n        /* this targets the default scrollbar (compulsory) */\n        paper-button {\n          padding: 0;\n          margin: 0;\n          min-width: 1rem;\n        }\n        .project-card {\n          width: 100%;\n          min-width: 20em;\n          max-width: 20em;\n          margin: 0;\n          height: 100%;\n          min-height: 10em;\n          --paper-card-header: {\n            max-width: 60%;\n            word-break: break-all;\n          }\n        }\n        .project-container {\n          padding: 1em;\n        }\n        .project-card .card-content {\n          height: 100%;\n          min-height: 288px;\n          max-height: 300px;\n          overflow: scroll;\n        }\n        .project-operations {\n          position: absolute;\n          top: 0;\n          right: 0;\n        }\n        .project-operations .operation {\n          display: inline-flex;\n        }\n        .project-operations .operation[hidden] {\n          display: none;\n        }\n        .assignment-row {\n          border: 1px solid #000000;\n          background-color: #ffffff;\n        }\n        .assignment-row .assignment-row-button.active {\n          background-color: var(--paper-amber-50);\n          font-weight: bold;\n        }\n        .assignment-row:hover .assignment-operations {\n          display: block;\n          overflow: visible;\n          margin: 0.2em;\n        }\n        .assignment-row-button {\n          width: 100%;\n          justify-content: flex-start;\n          text-transform: none;\n        }\n        .status-indicator {\n          border-right: 1px solid grey;\n          padding: 0.5em;\n          margin: 0 0.5em 0 0;\n          display: inline-flex;\n          line-height: 2em;\n          height: 2em;\n          justify-content: center;\n          align-items: center;\n        }\n        .button-contents {\n          display: flex;\n          align-content: center;\n        }\n        .assignment-operations {\n          position: absolute;\n          top: 0;\n          right: 0;\n          padding: 0;\n          display: none;\n        }\n        .assignment-operations.show {\n          display: block;\n          overflow: visible;\n        }\n        .assignment-operations .operation {\n          display: inline-flex;\n          width: 2.5em;\n          height: 2.5em;\n          margin: -4px 4px 0 0;\n        }\n        .assignment-operations .operation[hidden] {\n          display: none;\n        }\n        lrnapp-studio-project-button {\n          margin: 0em auto;\n          max-width: 20em;\n        }\n      </style>\n      <iron-ajax\n        auto=\"\"\n        id=\"projectbackend\"\n        url=\"[[sourcePath]]\"\n        handle-as=\"json\"\n        last-response=\"{{projectResponse}}\"\n        on-response=\"_handleProjectResponse\"\n      >\n      </iron-ajax>\n      <iron-ajax\n        id=\"backend\"\n        url=\"[[sourcePath]]\"\n        params=\"\"\n        handle-as=\"json\"\n        last-response=\"{{backendResponse}}\"\n        on-response=\"_handleUpdateResponse\"\n      >\n      </iron-ajax>\n\n      <app-location\n        route=\"{{route}}\"\n        query-params=\"{{queryParams}}\"\n      ></app-location>\n      <app-route\n        route=\"{{route}}\"\n        pattern=\"[[endPoint]]/:page\"\n        data=\"{{data}}\"\n        tail=\"{{tail}}\"\n        query-params=\"{{queryParams}}\"\n      >\n      </app-route>\n      <div id=\"loading\">\n        <h3>Loading..</h3>\n        <elmsln-loading color=\"grey-text\" size=\"large\"></elmsln-loading>\n      </div>\n      <lrnapp-studio-project-button\n        hidden$=\"[[!projectResponse.data.canCreateProjects]]\"\n        classes=\"amber darken-4 white-text\"\n        end-point=\"[[endPoint]]\"\n        csrf-token=\"[[csrfToken]]\"\n        icon=\"add\"\n      ></lrnapp-studio-project-button>\n      <div class=\"projects-window\">\n        <iron-list\n          items=\"[[_toArray(projectResponse.data.projects)]]\"\n          as=\"project\"\n          class=\"projects-container\"\n          grid=\"\"\n          mutable-data\n        >\n          <template class=\"projects-container-items\">\n            <div class=\"project-container\">\n              <paper-card\n                id$=\"project-[[project.id]]\"\n                class=\"project-card grey lighten-3\"\n                heading=\"[[project.attributes.title]]\"\n                elevation=\"2\"\n              >\n                <div class=\"project-operations\">\n                  <lrnsys-button\n                    icon-class=\"no-margin\"\n                    id$=\"project-[[project.id]]-edit\"\n                    alt=\"Edit project\"\n                    class=\"operation\"\n                    hover-class=\"amber lighten-2\"\n                    hidden=\"[[!project.meta.canUpdate]]\"\n                    icon=\"create\"\n                    on-click=\"_makeProjectEditLink\"\n                  >\n                  </lrnsys-button>\n                  <lrnapp-studio-assignment-button\n                    project-id=\"[[project.id]]\"\n                    icon-class=\"no-margin\"\n                    id$=\"project-[[project.id]]-add\"\n                    alt=\"Add assignment\"\n                    class=\"operation\"\n                    hover-class=\"amber lighten-2\"\n                    hidden=\"[[!project.meta.canUpdate]]\"\n                    icon=\"add\"\n                    end-point=\"[[endPoint]]\"\n                    csrf-token=\"[[csrfToken]]\"\n                  >\n                  </lrnapp-studio-assignment-button>\n                  <lrnsys-button\n                    id$=\"project-[[project.id]]-delete\"\n                    alt=\"Delete project!\"\n                    class=\"operation\"\n                    hover-class=\"red darken-2 white-text\"\n                    header=\"Delete project!\"\n                    hidden=\"[[!project.meta.canDelete]]\"\n                    icon=\"delete-forever\"\n                    on-click=\"_deleteProjectDialog\"\n                    icon-class=\"no-margin\"\n                  >\n                  </lrnsys-button>\n                </div>\n                <div class=\"card-content\">\n                  <iron-list\n                    items=\"[[_toArray(project.relationships.assignments)]]\"\n                    as=\"assignment\"\n                    mutable-data\n                  >\n                    <template>\n                      <div class=\"assignment-row\" id=\"assignment\">\n                        <lrnsys-button\n                          id$=\"assignment-[[project.id]]-[[assignment.id]]\"\n                          class=\"assignment-row-button\"\n                          hover-class=\"amber lighten-5\"\n                          on-click=\"assignmentClick\"\n                          icon=\"[[assignment.meta.relatedSubmissions.complete.icon]]\"\n                        >\n                          [[assignment.attributes.title]]\n                        </lrnsys-button>\n                        <span class=\"assignment-operations\">\n                          <lrnsys-button\n                            id$=\"assignment-[[project.id]]-[[assignment.id]]-add-critique\"\n                            icon=\"editor:insert-comment\"\n                            alt=\"Add critique\"\n                            class=\"operation\"\n                            hover-class=\"green lighten-2\"\n                            hidden=\"[[!assignment.meta.canCritique]]\"\n                            href$=\"[[assignment.meta.critiqueLink]]\"\n                            icon-class=\"no-margin\"\n                          ></lrnsys-button>\n                          <lrnsys-button\n                            id$=\"assignment-[[project.id]]-[[assignment.id]]-edit\"\n                            icon=\"editor:mode-edit\"\n                            alt=\"Edit\"\n                            class=\"operation\"\n                            hover-class=\"amber lighten-4\"\n                            hidden=\"[[!assignment.meta.canUpdate]]\"\n                            on-click=\"_makeAssignmentEditLink\"\n                            icon-class=\"no-margin green-text text-darken-4\"\n                          ></lrnsys-button>\n                          <lrnsys-button\n                            id$=\"assignment-[[project.id]]-[[assignment.id]]-delete\"\n                            icon=\"delete\"\n                            alt=\"Delete\"\n                            class=\"operation\"\n                            hover-class=\"amber lighten-4\"\n                            hidden=\"[[!assignment.meta.canDelete]]\"\n                            on-click=\"_deleteAssignmentDialog\"\n                            icon-class=\"no-margin red-text text-darken-4\"\n                          ></lrnsys-button>\n                        </span>\n                      </div>\n                    </template>\n                  </iron-list>\n                </div>\n              </paper-card>\n            </div>\n          </template>\n        </iron-list>\n      </div>\n      <paper-toast text=\"Updated\" id=\"toast\"></paper-toast>\n      <paper-dialog id=\"delete\" modal=\"\">\n        <h3>[[_deleteTitle]]</h3>\n        <p>[[_deleteText]]</p>\n        <div class=\"buttons\">\n          <paper-button dialog-dismiss=\"\">Decline</paper-button>\n          <paper-button\n            id=\"deleteaccept\"\n            on-click=\"_handleDelete\"\n            dialog-confirm=\"\"\n            autofocus=\"\"\n            >Accept</paper-button\n          >\n        </div>\n      </paper-dialog>\n      <paper-dialog id=\"activeitemcontainer\" with-backdrop>\n        <div id=\"activecontent\">\n          <app-header reveals>\n            <app-toolbar\n              class$=\"[[activeAssignmentNode.meta.relatedSubmissions.complete.color]]\"\n            >\n              <div>\n                <iron-icon\n                  icon=\"[[activeAssignmentNode.meta.relatedSubmissions.complete.icon]]\"\n                  disabled$=\"[[!activeAssignmentNode.meta.relatedSubmissions.canCreate]]\"\n                ></iron-icon>\n                [[activeAssignmentNode.meta.relatedSubmissions.complete.submission.title]]\n              </div>\n              <div\n                spacer=\"\"\n                class=\"comment-box\"\n                hidden$=\"[[!activeAssignmentNode.meta.relatedSubmissions.complete.submission.id]]\"\n              >\n                <paper-button\n                  id$=\"assignment-[[activeAssignmentNode.relationships.project.data.id]]-[[activeAssignmentNode.id]]-comments\"\n                  style=\"margin:0;padding:.25em;text-transform:none;\"\n                >\n                  <iron-icon icon=\"communication:forum\"></iron-icon>\n                  [[activeAssignmentNode.meta.relatedSubmissions.complete.submission.meta.comments.count]]\n                  Comments\n                </paper-button>\n                <paper-badge\n                  hidden$=\"[[displayNewBadge(activeAssignmentNode.meta.relatedSubmissions.complete.submission.meta.new)]]\"\n                  for$=\"assignment-[[activeAssignmentNode.relationships.project.data.id]]-[[activeAssignmentNode.id]]-comments\"\n                  label$=\"[[activeAssignmentNode.meta.relatedSubmissions.complete.submission.meta.comments.new]]\"\n                ></paper-badge>\n              </div>\n\n              <lrnapp-studio-submission-button\n                spacer\n                auto\n                assignment-id=\"[[activeAssignmentNode.id]]\"\n                submission=\"{{submission}}\"\n                end-point=\"[[buildSubmissionPath(basePath)]]\"\n                csrf-token=\"[[csrfToken]]\"\n                submission-id=\"[[activeAssignmentNode.meta.relatedSubmissions.complete.submission.id]]\"\n              ></lrnapp-studio-submission-button>\n              <paper-toggle-button\n                id=\"activetoggle\"\n                on-click=\"statusToggle\"\n              ></paper-toggle-button>\n              <span id=\"activetoggletext\"></span>\n            </app-toolbar>\n            <div class=\"status-rationale\">\n              [[activeAssignmentNode.meta.relatedSubmissions.complete.rationale.text]]\n            </div>\n          </app-header>\n          <lrnsys-render-html\n            style=\"padding:2em;\"\n            html=\"[[activeAssignmentNode.attributes.body]]\"\n          ></lrnsys-render-html>\n        </div>\n      </paper-dialog>\n    "], ["\n      <style include=\"materializecss-styles\">\n        [hidden] {\n          display: none !important;\n        }\n        :host {\n          display: block;\n        }\n        #loading {\n          width: 100%;\n          z-index: 1000;\n          opacity: 0.8;\n          text-align: center;\n          align-content: center;\n          justify-content: center;\n          height: 100vh;\n          position: absolute;\n          background-color: white;\n        }\n        .projects-container {\n          -webkit-box-pack: start;\n          -ms-flex-pack: start;\n          justify-content: flex-start;\n          -webkit-box-align: start;\n          -ms-flex-align: start;\n          align-items: flex-start;\n          min-height: 23em;\n          width: 150vw;\n        }\n        @media screen and (max-width: 800px) {\n          .projects-container {\n            width: auto;\n          }\n        }\n        #activetoggle {\n          padding-left: 16px;\n        }\n        .projects-window {\n          width: 100vw;\n          overflow-x: scroll;\n          overflow-y: hidden;\n          scrollbar-face-color: #833900;\n          scrollbar-shadow-color: #ffc107;\n          scrollbar-highlight-color: #ffc107;\n          scrollbar-3dlight-color: #ffc107;\n          scrollbar-darkshadow-color: #ffc107;\n          scrollbar-track-color: #ffc107;\n          scrollbar-arrow-color: #ffc107;\n        }\n        .projects-window::-webkit-scrollbar-track {\n          background-color: #833900;\n        }\n        /* the new scrollbar will have a flat appearance with the set background color */\n        .projects-window::-webkit-scrollbar-thumb {\n          background-color: #ffc107;\n        }\n        /* this will style the thumb, ignoring the track */\n        .projects-window::-webkit-scrollbar-button {\n          background-color: #833900;\n        }\n        /* optionally, you can style the top and the bottom buttons (left and right for horizontal bars) */\n        .projects-window::-webkit-scrollbar-corner {\n          background-color: #833900;\n        }\n        /* if both the vertical and the horizontal bars appear, then perhaps the right bottom corner*/\n        .projects-window::-webkit-scrollbar {\n          width: 1rem;\n          height: 1rem;\n        }\n        /* this targets the default scrollbar (compulsory) */\n        paper-button {\n          padding: 0;\n          margin: 0;\n          min-width: 1rem;\n        }\n        .project-card {\n          width: 100%;\n          min-width: 20em;\n          max-width: 20em;\n          margin: 0;\n          height: 100%;\n          min-height: 10em;\n          --paper-card-header: {\n            max-width: 60%;\n            word-break: break-all;\n          }\n        }\n        .project-container {\n          padding: 1em;\n        }\n        .project-card .card-content {\n          height: 100%;\n          min-height: 288px;\n          max-height: 300px;\n          overflow: scroll;\n        }\n        .project-operations {\n          position: absolute;\n          top: 0;\n          right: 0;\n        }\n        .project-operations .operation {\n          display: inline-flex;\n        }\n        .project-operations .operation[hidden] {\n          display: none;\n        }\n        .assignment-row {\n          border: 1px solid #000000;\n          background-color: #ffffff;\n        }\n        .assignment-row .assignment-row-button.active {\n          background-color: var(--paper-amber-50);\n          font-weight: bold;\n        }\n        .assignment-row:hover .assignment-operations {\n          display: block;\n          overflow: visible;\n          margin: 0.2em;\n        }\n        .assignment-row-button {\n          width: 100%;\n          justify-content: flex-start;\n          text-transform: none;\n        }\n        .status-indicator {\n          border-right: 1px solid grey;\n          padding: 0.5em;\n          margin: 0 0.5em 0 0;\n          display: inline-flex;\n          line-height: 2em;\n          height: 2em;\n          justify-content: center;\n          align-items: center;\n        }\n        .button-contents {\n          display: flex;\n          align-content: center;\n        }\n        .assignment-operations {\n          position: absolute;\n          top: 0;\n          right: 0;\n          padding: 0;\n          display: none;\n        }\n        .assignment-operations.show {\n          display: block;\n          overflow: visible;\n        }\n        .assignment-operations .operation {\n          display: inline-flex;\n          width: 2.5em;\n          height: 2.5em;\n          margin: -4px 4px 0 0;\n        }\n        .assignment-operations .operation[hidden] {\n          display: none;\n        }\n        lrnapp-studio-project-button {\n          margin: 0em auto;\n          max-width: 20em;\n        }\n      </style>\n      <iron-ajax\n        auto=\"\"\n        id=\"projectbackend\"\n        url=\"[[sourcePath]]\"\n        handle-as=\"json\"\n        last-response=\"{{projectResponse}}\"\n        on-response=\"_handleProjectResponse\"\n      >\n      </iron-ajax>\n      <iron-ajax\n        id=\"backend\"\n        url=\"[[sourcePath]]\"\n        params=\"\"\n        handle-as=\"json\"\n        last-response=\"{{backendResponse}}\"\n        on-response=\"_handleUpdateResponse\"\n      >\n      </iron-ajax>\n\n      <app-location\n        route=\"{{route}}\"\n        query-params=\"{{queryParams}}\"\n      ></app-location>\n      <app-route\n        route=\"{{route}}\"\n        pattern=\"[[endPoint]]/:page\"\n        data=\"{{data}}\"\n        tail=\"{{tail}}\"\n        query-params=\"{{queryParams}}\"\n      >\n      </app-route>\n      <div id=\"loading\">\n        <h3>Loading..</h3>\n        <elmsln-loading color=\"grey-text\" size=\"large\"></elmsln-loading>\n      </div>\n      <lrnapp-studio-project-button\n        hidden\\$=\"[[!projectResponse.data.canCreateProjects]]\"\n        classes=\"amber darken-4 white-text\"\n        end-point=\"[[endPoint]]\"\n        csrf-token=\"[[csrfToken]]\"\n        icon=\"add\"\n      ></lrnapp-studio-project-button>\n      <div class=\"projects-window\">\n        <iron-list\n          items=\"[[_toArray(projectResponse.data.projects)]]\"\n          as=\"project\"\n          class=\"projects-container\"\n          grid=\"\"\n          mutable-data\n        >\n          <template class=\"projects-container-items\">\n            <div class=\"project-container\">\n              <paper-card\n                id\\$=\"project-[[project.id]]\"\n                class=\"project-card grey lighten-3\"\n                heading=\"[[project.attributes.title]]\"\n                elevation=\"2\"\n              >\n                <div class=\"project-operations\">\n                  <lrnsys-button\n                    icon-class=\"no-margin\"\n                    id\\$=\"project-[[project.id]]-edit\"\n                    alt=\"Edit project\"\n                    class=\"operation\"\n                    hover-class=\"amber lighten-2\"\n                    hidden=\"[[!project.meta.canUpdate]]\"\n                    icon=\"create\"\n                    on-click=\"_makeProjectEditLink\"\n                  >\n                  </lrnsys-button>\n                  <lrnapp-studio-assignment-button\n                    project-id=\"[[project.id]]\"\n                    icon-class=\"no-margin\"\n                    id\\$=\"project-[[project.id]]-add\"\n                    alt=\"Add assignment\"\n                    class=\"operation\"\n                    hover-class=\"amber lighten-2\"\n                    hidden=\"[[!project.meta.canUpdate]]\"\n                    icon=\"add\"\n                    end-point=\"[[endPoint]]\"\n                    csrf-token=\"[[csrfToken]]\"\n                  >\n                  </lrnapp-studio-assignment-button>\n                  <lrnsys-button\n                    id\\$=\"project-[[project.id]]-delete\"\n                    alt=\"Delete project!\"\n                    class=\"operation\"\n                    hover-class=\"red darken-2 white-text\"\n                    header=\"Delete project!\"\n                    hidden=\"[[!project.meta.canDelete]]\"\n                    icon=\"delete-forever\"\n                    on-click=\"_deleteProjectDialog\"\n                    icon-class=\"no-margin\"\n                  >\n                  </lrnsys-button>\n                </div>\n                <div class=\"card-content\">\n                  <iron-list\n                    items=\"[[_toArray(project.relationships.assignments)]]\"\n                    as=\"assignment\"\n                    mutable-data\n                  >\n                    <template>\n                      <div class=\"assignment-row\" id=\"assignment\">\n                        <lrnsys-button\n                          id\\$=\"assignment-[[project.id]]-[[assignment.id]]\"\n                          class=\"assignment-row-button\"\n                          hover-class=\"amber lighten-5\"\n                          on-click=\"assignmentClick\"\n                          icon=\"[[assignment.meta.relatedSubmissions.complete.icon]]\"\n                        >\n                          [[assignment.attributes.title]]\n                        </lrnsys-button>\n                        <span class=\"assignment-operations\">\n                          <lrnsys-button\n                            id\\$=\"assignment-[[project.id]]-[[assignment.id]]-add-critique\"\n                            icon=\"editor:insert-comment\"\n                            alt=\"Add critique\"\n                            class=\"operation\"\n                            hover-class=\"green lighten-2\"\n                            hidden=\"[[!assignment.meta.canCritique]]\"\n                            href\\$=\"[[assignment.meta.critiqueLink]]\"\n                            icon-class=\"no-margin\"\n                          ></lrnsys-button>\n                          <lrnsys-button\n                            id\\$=\"assignment-[[project.id]]-[[assignment.id]]-edit\"\n                            icon=\"editor:mode-edit\"\n                            alt=\"Edit\"\n                            class=\"operation\"\n                            hover-class=\"amber lighten-4\"\n                            hidden=\"[[!assignment.meta.canUpdate]]\"\n                            on-click=\"_makeAssignmentEditLink\"\n                            icon-class=\"no-margin green-text text-darken-4\"\n                          ></lrnsys-button>\n                          <lrnsys-button\n                            id\\$=\"assignment-[[project.id]]-[[assignment.id]]-delete\"\n                            icon=\"delete\"\n                            alt=\"Delete\"\n                            class=\"operation\"\n                            hover-class=\"amber lighten-4\"\n                            hidden=\"[[!assignment.meta.canDelete]]\"\n                            on-click=\"_deleteAssignmentDialog\"\n                            icon-class=\"no-margin red-text text-darken-4\"\n                          ></lrnsys-button>\n                        </span>\n                      </div>\n                    </template>\n                  </iron-list>\n                </div>\n              </paper-card>\n            </div>\n          </template>\n        </iron-list>\n      </div>\n      <paper-toast text=\"Updated\" id=\"toast\"></paper-toast>\n      <paper-dialog id=\"delete\" modal=\"\">\n        <h3>[[_deleteTitle]]</h3>\n        <p>[[_deleteText]]</p>\n        <div class=\"buttons\">\n          <paper-button dialog-dismiss=\"\">Decline</paper-button>\n          <paper-button\n            id=\"deleteaccept\"\n            on-click=\"_handleDelete\"\n            dialog-confirm=\"\"\n            autofocus=\"\"\n            >Accept</paper-button\n          >\n        </div>\n      </paper-dialog>\n      <paper-dialog id=\"activeitemcontainer\" with-backdrop>\n        <div id=\"activecontent\">\n          <app-header reveals>\n            <app-toolbar\n              class\\$=\"[[activeAssignmentNode.meta.relatedSubmissions.complete.color]]\"\n            >\n              <div>\n                <iron-icon\n                  icon=\"[[activeAssignmentNode.meta.relatedSubmissions.complete.icon]]\"\n                  disabled\\$=\"[[!activeAssignmentNode.meta.relatedSubmissions.canCreate]]\"\n                ></iron-icon>\n                [[activeAssignmentNode.meta.relatedSubmissions.complete.submission.title]]\n              </div>\n              <div\n                spacer=\"\"\n                class=\"comment-box\"\n                hidden\\$=\"[[!activeAssignmentNode.meta.relatedSubmissions.complete.submission.id]]\"\n              >\n                <paper-button\n                  id\\$=\"assignment-[[activeAssignmentNode.relationships.project.data.id]]-[[activeAssignmentNode.id]]-comments\"\n                  style=\"margin:0;padding:.25em;text-transform:none;\"\n                >\n                  <iron-icon icon=\"communication:forum\"></iron-icon>\n                  [[activeAssignmentNode.meta.relatedSubmissions.complete.submission.meta.comments.count]]\n                  Comments\n                </paper-button>\n                <paper-badge\n                  hidden\\$=\"[[displayNewBadge(activeAssignmentNode.meta.relatedSubmissions.complete.submission.meta.new)]]\"\n                  for\\$=\"assignment-[[activeAssignmentNode.relationships.project.data.id]]-[[activeAssignmentNode.id]]-comments\"\n                  label\\$=\"[[activeAssignmentNode.meta.relatedSubmissions.complete.submission.meta.comments.new]]\"\n                ></paper-badge>\n              </div>\n\n              <lrnapp-studio-submission-button\n                spacer\n                auto\n                assignment-id=\"[[activeAssignmentNode.id]]\"\n                submission=\"{{submission}}\"\n                end-point=\"[[buildSubmissionPath(basePath)]]\"\n                csrf-token=\"[[csrfToken]]\"\n                submission-id=\"[[activeAssignmentNode.meta.relatedSubmissions.complete.submission.id]]\"\n              ></lrnapp-studio-submission-button>\n              <paper-toggle-button\n                id=\"activetoggle\"\n                on-click=\"statusToggle\"\n              ></paper-toggle-button>\n              <span id=\"activetoggletext\"></span>\n            </app-toolbar>\n            <div class=\"status-rationale\">\n              [[activeAssignmentNode.meta.relatedSubmissions.complete.rationale.text]]\n            </div>\n          </app-header>\n          <lrnsys-render-html\n            style=\"padding:2em;\"\n            html=\"[[activeAssignmentNode.attributes.body]]\"\n          ></lrnsys-render-html>\n        </div>\n      </paper-dialog>\n    "]);

    _templateObject_975563d0c96f11ea8be5e1d5fe7ec787 = function _templateObject_975563d0c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  var LrnappStudioKanban =
  /*#__PURE__*/
  function (_PolymerElement) {
    babelHelpers.inherits(LrnappStudioKanban, _PolymerElement);

    function LrnappStudioKanban() {
      babelHelpers.classCallCheck(this, LrnappStudioKanban);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(LrnappStudioKanban).apply(this, arguments));
    }

    babelHelpers.createClass(LrnappStudioKanban, [{
      key: "connectedCallback",
      value: function connectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(LrnappStudioKanban.prototype), "connectedCallback", this).call(this);
        (0, _renderStatus.afterNextRender)(this, function () {
          this.addEventListener("project-created", this._handleProjectCreated.bind(this));
          this.addEventListener("assignment-created", this._handleAssignmentCreated.bind(this));
          setTimeout(function () {
            window.dispatchEvent(new Event("resize"));
          }, 2000);
        });
      }
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        this.removeEventListener("project-created", this._handleProjectCreated.bind(this));
        this.removeEventListener("assignment-created", this._handleAssignmentCreated.bind(this));
        babelHelpers.get(babelHelpers.getPrototypeOf(LrnappStudioKanban.prototype), "disconnectedCallback", this).call(this);
      }
    }, {
      key: "_routeChanged",
      // If the current route is outside the scope of our app
      // then allow the website to break out of the single page
      // application routing
      value: function _routeChanged(route, endPoint) {
        if (typeof route.path === "string") {
          if (typeof endPoint === "string") {
            if (route.path.startsWith(endPoint) || route.path == "/") {
              return;
            }
          }

          window.location.reload();
        }
      }
      /**
       * Support having a toast message because of delete or error elsewhere.
       */

    }, {
      key: "_deleteToast",
      value: function _deleteToast(deletetoast, old) {
        if (babelHelpers.typeof(deletetoast) !== (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined))) {
          if (deletetoast == "error") {
            this.$.toast.show("That submission on longer exists!");
          } else {
            this.$.toast.show("Submission deleted successfully!");
          }

          this.set("queryParams.deletetoast", undefined);
          this.notifyPath("queryParams.deletetoast");
        }
      }
      /**
       * @todo  remove this once we have a modal for it
       */

    }, {
      key: "_makeProjectEditLink",
      value: function _makeProjectEditLink(e) {
        var normalizedEvent = (0, _polymerDom.dom)(e);
        var local = normalizedEvent.localTarget;
        var parts = local.id.split("-");
        window.location.href = this.basePath + "../node/" + parts[1] + "/edit?destination=apps/lrnapp-studio-kanban";
      }
      /**
       * @todo  remove this once we have a modal for it
       */

    }, {
      key: "_makeAssignmentEditLink",
      value: function _makeAssignmentEditLink(e) {
        var normalizedEvent = (0, _polymerDom.dom)(e);
        var local = normalizedEvent.localTarget;
        var parts = local.id.split("-");
        window.location.href = this.basePath + "../node/" + parts[2] + "/edit?destination=apps/lrnapp-studio-kanban";
      }
      /**
       * Handle the push to delete a project, pop up the modal.
       */

    }, {
      key: "_deleteProjectDialog",
      value: function _deleteProjectDialog(e) {
        var normalizedEvent = (0, _polymerDom.dom)(e);
        var local = normalizedEvent.localTarget;
        var parts = local.id.split("-"); // set values so we know what to drop

        this.projectToDelete = parts[1];
        this._deleteTitle = "Delete project";
        this._deleteText = "Are you sure you want to delete this project and all related assignments!?";
        this._deleteType = "project";
        this.$.delete.open();
      }
      /**
       * Handle the call to delete the assignment specified.
       */

    }, {
      key: "_handleDelete",
      value: function _handleDelete() {
        if (this._deleteType == "project") {
          this.$.backend.method = "DELETE";
          this.$.backend.body = this.projectToDelete;
          this.$.backend.url = this.endPoint + "/api/projects/" + this.projectToDelete + "?token=" + this.csrfToken;
          this.$.backend.generateRequest();
        } else if (this._deleteType == "assignment") {
          this.$.backend.method = "DELETE";
          this.$.backend.body = this.assignmentToDelete;
          this.$.backend.url = this.endPoint + "/api/assignments/" + this.assignmentToDelete + "?token=" + this.csrfToken;
          this.$.backend.generateRequest();
        }
      }
      /**
       * Handle the push to delete an assignment, pop up the modal.
       */

    }, {
      key: "_deleteAssignmentDialog",
      value: function _deleteAssignmentDialog(e) {
        var normalizedEvent = (0, _polymerDom.dom)(e);
        var local = normalizedEvent.localTarget;
        var parts = local.id.split("-");
        this.assignmentToDelete = parts[2]; // set values so we know what to drop

        this._deleteTitle = "Delete assignment";
        this._deleteText = "Are you sure you want to delete this assignment?";
        this._deleteType = "assignment";
        this.$.delete.open();
      }
      /**
       * if we should show new badge based on new comment count.
       */

    }, {
      key: "displayNewBadge",
      value: function displayNewBadge(count) {
        if (babelHelpers.typeof(count) === (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined)) || count == 0) {
          return true;
        }

        return false;
      }
      /**
       * Handle toggling the status for the submission.
       */

    }, {
      key: "statusToggle",
      value: function statusToggle(e) {
        // find our xhr for callbacks
        var xhr = this.$.backend; // break the id out into project and assignment

        var parts = this.activeAssignment.split("-"); // focus in on the submissions / assignment meta

        var submission = this.projectResponse.data.projects["project-" + parts[1]].relationships.assignments["assignment-" + parts[2]].meta.relatedSubmissions.complete; // ensure this isn't disabled though it shouldn't be possible

        if (!this.shadowRoot.querySelector("#activetoggle").disabled) {
          // hide the loading screen
          this.$.loading.hidden = false; // queue of the request parameters

          xhr.params = {
            submissionid: submission.submission.id,
            status: this.shadowRoot.querySelector("#activetoggle").checked
          }; // send the request

          xhr.generateRequest();
        }
      }
      /**
       * Handle toggle for mouse class and manage classList array for paper-button.
       */

    }, {
      key: "assignmentClick",
      value: function assignmentClick(e) {
        var normalizedEvent = (0, _polymerDom.dom)(e);
        var local = normalizedEvent.localTarget;

        if (this.activeAssignment != null && this.activeAssignment != local.id) {
          this.shadowRoot.querySelector("#" + this.activeAssignment).nextElementSibling.classList.remove("show");
          this.shadowRoot.querySelector("#" + this.activeAssignment).classList.remove("active");
        }

        this.activeAssignment = local.id;
        var parts = this.activeAssignment.split("-");
        this.activeAssignmentNode = this.projectResponse.data.projects["project-" + parts[1]].relationships.assignments["assignment-" + parts[2]];

        this._setToggle(false);

        local.nextElementSibling.classList.add("show");
        local.classList.add("active");
        this.$.activeitemcontainer.toggle();
      }
      /**
       * Handle response for the whole projects object.
       */

    }, {
      key: "_handleProjectResponse",
      value: function _handleProjectResponse(event) {
        var _this = this;

        this.$.loading.hidden = true;

        this._setToggle(true);

        if (this.activeAssignment) {
          setTimeout(function () {
            var parts = _this.activeAssignment.split("-");

            _this.set("activeAssignmentNode", {});

            _this.activeAssignmentNode = _this.projectResponse.data.projects["project-" + parts[1]].relationships.assignments["assignment-" + parts[2]];
          }, 100);
        }
      }
      /**
       * buildSubmissionPath for generating a new submission or linking to existing.
       */

    }, {
      key: "buildSubmissionPath",
      value: function buildSubmissionPath(path) {
        return path + "lrnapp-studio-submission";
      }
      /**
       * Handle a response from updating an item
       */

    }, {
      key: "_handleUpdateResponse",
      value: function _handleUpdateResponse(event) {
        var _this2 = this;

        if (this.backendResponse.status == 200) {
          this.$.toast.text = "Updated successfully";
          this.$.toast.toggle(); // this will force a repaint of the UI pieces on reload

          this.set("projectResponse", {});
          this.$.projectbackend.generateRequest();
          setTimeout(function () {
            var parts = _this2.activeAssignment.split("-");

            _this2.set("activeAssignmentNode", {});

            _this2.activeAssignmentNode = _this2.projectResponse.data.projects["project-" + parts[1]].relationships.assignments["assignment-" + parts[2]];
          }, 500);
        } else {
          // this would imply an error
          this.$.loading.hidden = true;
        }
      }
      /**
       * set the toggle state when assignment gets focus
       */

    }, {
      key: "_setToggle",
      value: function _setToggle(update) {
        if (this.activeAssignment != null) {
          var parts = this.activeAssignment.split("-"); // focus in on the submissions / assignment meta

          var submission = this.projectResponse.data.projects["project-" + parts[1]].relationships.assignments["assignment-" + parts[2]].meta.relatedSubmissions.complete; // not finished but also not started

          if (submission.status == 0 && submission.submission.length == 0) {
            if (!update) {
              this.shadowRoot.querySelector("#activetoggle").disabled = true;
              this.shadowRoot.querySelector("#activetoggle").checked = false;
            }

            this.shadowRoot.querySelector("#activetoggle").title = "Submission not started";
            this.shadowRoot.querySelector("#activetoggletext").textContent = "Submission not started";
          } else if (submission.status == 0) {
            if (!update) {
              this.shadowRoot.querySelector("#activetoggle").disabled = false;
              this.shadowRoot.querySelector("#activetoggle").checked = false;
            }

            this.shadowRoot.querySelector("#activetoggle").title = "Submission started";
            this.shadowRoot.querySelector("#activetoggletext").textContent = "Submission in progress";
          } else {
            if (!update) {
              this.shadowRoot.querySelector("#activetoggle").disabled = false;
              this.shadowRoot.querySelector("#activetoggle").checked = true;
            }

            this.shadowRoot.querySelector("#activetoggle").title = "Submission ready";
            this.shadowRoot.querySelector("#activetoggletext").textContent = "Submission ready";
          }
        }
      }
      /**
       * Event came from the project button to indicate it was successful.
       */

    }, {
      key: "_handleProjectCreated",
      value: function _handleProjectCreated(e) {
        this.$.toast.text = "Project added";
        this.$.toast.toggle();
        this.$.projectbackend.generateRequest();
      }
      /**
       * Event came from the assignment button to indicate it was successful.
       */

    }, {
      key: "_handleAssignmentCreated",
      value: function _handleAssignmentCreated(e) {
        this.$.toast.text = "Assignment added";
        this.$.toast.toggle();
        this.$.projectbackend.generateRequest();
      }
      /*
       * Simple way to convert from object to array.
       */

    }, {
      key: "_toArray",
      value: function _toArray(obj) {
        if (obj == null) {
          return [];
        }

        return Object.keys(obj).map(function (key) {
          return obj[key];
        });
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_975563d0c96f11ea8be5e1d5fe7ec787());
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnapp-studio-kanban";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          elmslnCourse: {
            type: String
          },
          elmslnSection: {
            type: String
          },
          basePath: {
            type: String,
            notify: true
          },
          csrfToken: {
            type: String,
            notify: true
          },
          endPoint: {
            type: String,
            notify: true
          },
          activeAssignment: {
            type: String,
            value: null,
            notify: true
          },
          activeAssignmentNode: {
            type: Object
          },
          projectToDelete: {
            type: String,
            value: null,
            notify: true
          },
          assignmentToDelete: {
            type: String,
            value: null,
            notify: true
          },
          sourcePath: {
            type: String,
            notify: true
          },

          /**
           * Submission for two-way data binding on return from the button being pushed
           */
          submission: {
            type: Object,
            notify: true
          },

          /**
           * Response from the server.
           */
          projectResponse: {
            type: Object,
            notify: true
          },

          /**
           * Response from the server for non-project requests.
           */
          backendResponse: {
            type: Object,
            notify: true
          }
        };
      }
    }, {
      key: "observers",
      get: function get() {
        return ["_routeChanged(route, endPoint)", "_deleteToast(queryParams.deletetoast)"];
      }
    }]);
    return LrnappStudioKanban;
  }(_polymerElement.PolymerElement);

  _exports.LrnappStudioKanban = LrnappStudioKanban;
  window.customElements.define(LrnappStudioKanban.tag, LrnappStudioKanban);
});