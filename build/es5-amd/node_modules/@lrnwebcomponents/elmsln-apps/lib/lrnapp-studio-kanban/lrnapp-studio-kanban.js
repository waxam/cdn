define(["exports", "../../../../lit-element/lit-element.js", "../../../../@polymer/polymer/lib/elements/custom-style.js", "../../../../@polymer/iron-ajax/iron-ajax.js", "../../../../@polymer/app-route/app-location.js", "../../../../@polymer/app-route/app-route.js", "../../../../@polymer/iron-icon/iron-icon.js", "../../../../@polymer/iron-icons/editor-icons.js", "../../../../@polymer/iron-icons/communication-icons.js", "../../../../@polymer/iron-icons/iron-icons.js", "../../../../@polymer/paper-badge/paper-badge.js", "../../../../@polymer/paper-toggle-button/paper-toggle-button.js", "../../../../@polymer/app-layout/app-toolbar/app-toolbar.js", "../../../../@polymer/app-layout/app-header/app-header.js", "../../../../@polymer/paper-card/paper-card.js", "../../../../@polymer/paper-toast/paper-toast.js", "../../../../@polymer/paper-button/paper-button.js", "../../../../@polymer/paper-dialog/paper-dialog.js", "../../../lrnsys-render-html/lrnsys-render-html.js", "../../../lrnsys-layout/lib/lrnsys-dialog.js", "../../../lrnsys-button/lrnsys-button.js", "../../../elmsln-loading/elmsln-loading.js", "../../../materializecss-styles/lib/colors.js", "./lrnapp-studio-project-button.js", "./lrnapp-studio-assignment-button.js", "../lrnapp-studio-submission/lrnapp-studio-submission-button.js"], function (_exports, _litElement, _customStyle, _ironAjax, _appLocation, _appRoute, _ironIcon, _editorIcons, _communicationIcons, _ironIcons, _paperBadge, _paperToggleButton, _appToolbar, _appHeader, _paperCard, _paperToast, _paperButton, _paperDialog, _lrnsysRenderHtml, _lrnsysDialog, _lrnsysButton, _elmslnLoading, _colors, _lrnappStudioProjectButton, _lrnappStudioAssignmentButton, _lrnappStudioSubmissionButton) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappStudioKanban = void 0;

  function _templateObject4_e9a41d202da211eaa247b36e11306899() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n        #loading {\n          width: 100%;\n          z-index: 1000;\n          opacity: 0.8;\n          text-align: center;\n          align-content: center;\n          justify-content: center;\n          height: 100vh;\n          position: absolute;\n          background-color: white;\n        }\n        .projects-container {\n          -webkit-box-pack: start;\n          -ms-flex-pack: start;\n          justify-content: flex-start;\n          -webkit-box-align: start;\n          -ms-flex-align: start;\n          align-items: flex-start;\n          min-height: 23em;\n          width: 150vw;\n        }\n        @media screen and (max-width: 800px) {\n          .projects-container {\n            width: auto;\n          }\n        }\n        #activetoggle {\n          padding-left: 16px;\n        }\n        .projects-window {\n          width: 100vw;\n          overflow-x: scroll;\n          overflow-y: hidden;\n          scrollbar-face-color: #833900;\n          scrollbar-shadow-color: #ffc107;\n          scrollbar-highlight-color: #ffc107;\n          scrollbar-3dlight-color: #ffc107;\n          scrollbar-darkshadow-color: #ffc107;\n          scrollbar-track-color: #ffc107;\n          scrollbar-arrow-color: #ffc107;\n        }\n        .projects-window::-webkit-scrollbar-track {\n          background-color: #833900;\n        }\n        /* the new scrollbar will have a flat appearance with the set background color */\n        .projects-window::-webkit-scrollbar-thumb {\n          background-color: #ffc107;\n        }\n        /* this will style the thumb, ignoring the track */\n        .projects-window::-webkit-scrollbar-button {\n          background-color: #833900;\n        }\n        /* optionally, you can style the top and the bottom buttons (left and right for horizontal bars) */\n        .projects-window::-webkit-scrollbar-corner {\n          background-color: #833900;\n        }\n        /* if both the vertical and the horizontal bars appear, then perhaps the right bottom corner*/\n        .projects-window::-webkit-scrollbar {\n          width: 1rem;\n          height: 1rem;\n        }\n        /* this targets the default scrollbar (compulsory) */\n        paper-button {\n          padding: 0;\n          margin: 0;\n          min-width: 1rem;\n        }\n        .project-card {\n          width: 100%;\n          min-width: 20em;\n          max-width: 20em;\n          margin: 0;\n          height: 100%;\n          min-height: 10em;\n        }\n        .project-container {\n          padding: 1em;\n        }\n        .project-card .card-content {\n          height: 100%;\n          min-height: 288px;\n          max-height: 300px;\n          overflow: scroll;\n        }\n        .project-operations {\n          position: absolute;\n          top: 0;\n          right: 0;\n        }\n        .project-operations .operation {\n          display: inline-flex;\n        }\n        .project-operations .operation[hidden] {\n          display: none;\n        }\n        .assignment-row {\n          border: 1px solid #000000;\n          background-color: #ffffff;\n        }\n        .assignment-row .assignment-row-button.active {\n          background-color: var(--paper-amber-50);\n          font-weight: bold;\n        }\n        .assignment-row:hover .assignment-operations {\n          display: block;\n          overflow: visible;\n          margin: 0.2em;\n        }\n        .assignment-row-button {\n          width: 100%;\n          justify-content: flex-start;\n          text-transform: none;\n        }\n        .status-indicator {\n          border-right: 1px solid grey;\n          padding: 0.5em;\n          margin: 0 0.5em 0 0;\n          display: inline-flex;\n          line-height: 2em;\n          height: 2em;\n          justify-content: center;\n          align-items: center;\n        }\n        .button-contents {\n          display: flex;\n          align-content: center;\n        }\n        .assignment-operations {\n          position: absolute;\n          top: 0;\n          right: 0;\n          padding: 0;\n          display: none;\n        }\n        .assignment-operations.show {\n          display: block;\n          overflow: visible;\n        }\n        .assignment-operations .operation {\n          display: inline-flex;\n          width: 2.5em;\n          height: 2.5em;\n          margin: -4px 4px 0 0;\n        }\n        .assignment-operations .operation[hidden] {\n          display: none;\n        }\n        lrnapp-studio-project-button {\n          margin: 0em auto;\n          max-width: 20em;\n        }\n      "]);

    _templateObject4_e9a41d202da211eaa247b36e11306899 = function _templateObject4_e9a41d202da211eaa247b36e11306899() {
      return data;
    };

    return data;
  }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _templateObject3_e9a41d202da211eaa247b36e11306899() {
    var data = babelHelpers.taggedTemplateLiteral(["\n                      <div class=\"assignment-row\" id=\"assignment\">\n                        <lrnsys-button\n                          id=\"assignment-", "-", "\"\n                          class=\"assignment-row-button\"\n                          hover-class=\"amber lighten-5\"\n                          @click=\"", "\"\n                          icon=\"", "\"\n                        >\n                          ", "\n                        </lrnsys-button>\n                        <span class=\"assignment-operations\">\n                          <lrnsys-button\n                            id=\"assignment-", "-", "-add-critique\"\n                            icon=\"editor:insert-comment\"\n                            alt=\"Add critique\"\n                            class=\"operation\"\n                            hover-class=\"green lighten-2\"\n                            ?hidden=\"", "\"\n                            href=\"", "\"\n                            icon-class=\"no-margin\"\n                          ></lrnsys-button>\n                          <lrnsys-button\n                            id=\"assignment-", "-", "-edit\"\n                            icon=\"editor:mode-edit\"\n                            alt=\"Edit\"\n                            class=\"operation\"\n                            hover-class=\"amber lighten-4\"\n                            ?hidden=\"", "\"\n                            @click=\"", "\"\n                            icon-class=\"no-margin green-text text-darken-4\"\n                          ></lrnsys-button>\n                          <lrnsys-button\n                            id=\"assignment-", "-", "-delete\"\n                            icon=\"delete\"\n                            alt=\"Delete\"\n                            class=\"operation\"\n                            hover-class=\"amber lighten-4\"\n                            hidden=\"", "\"\n                            @click=\"", "\"\n                            icon-class=\"no-margin red-text text-darken-4\"\n                          ></lrnsys-button>\n                        </span>\n                      </div>\n                    "]);

    _templateObject3_e9a41d202da211eaa247b36e11306899 = function _templateObject3_e9a41d202da211eaa247b36e11306899() {
      return data;
    };

    return data;
  }

  function _templateObject2_e9a41d202da211eaa247b36e11306899() {
    var data = babelHelpers.taggedTemplateLiteral(["\n            <div class=\"project-container\">\n              <paper-card\n                id=\"project-", "\"\n                class=\"project-card grey lighten-3\"\n                heading=\"", "\"\n                elevation=\"2\"\n              >\n                <div class=\"project-operations\">\n                  <lrnsys-button\n                    icon-class=\"no-margin\"\n                    id=\"project-", "-edit\"\n                    alt=\"Edit project\"\n                    class=\"operation\"\n                    hover-class=\"amber lighten-2\"\n                    ?hidden=\"", "\"\n                    icon=\"create\"\n                    @click=\"", "\"\n                  >\n                  </lrnsys-button>\n                  <lrnapp-studio-assignment-button\n                    project-id=\"", "\"\n                    icon-class=\"no-margin\"\n                    id=\"project-", "-add\"\n                    alt=\"Add assignment\"\n                    class=\"operation\"\n                    hover-class=\"amber lighten-2\"\n                    ?hidden=\"", "\"\n                    icon=\"add\"\n                    end-point=\"", "\"\n                    csrf-token=\"", "\"\n                  >\n                  </lrnapp-studio-assignment-button>\n                  <lrnsys-button\n                    id=\"project-", "-delete\"\n                    alt=\"Delete project!\"\n                    class=\"operation\"\n                    hover-class=\"red darken-2 white-text\"\n                    header=\"Delete project!\"\n                    ?hidden=\"", "\"\n                    icon=\"delete-forever\"\n                    @click=\"", "\"\n                    icon-class=\"no-margin\"\n                  >\n                  </lrnsys-button>\n                </div>\n                <div class=\"card-content\">\n                  ", "\n                </div>\n              </paper-card>\n            </div>\n          "]);

    _templateObject2_e9a41d202da211eaa247b36e11306899 = function _templateObject2_e9a41d202da211eaa247b36e11306899() {
      return data;
    };

    return data;
  }

  function _templateObject_e9a41d202da211eaa247b36e11306899() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <custom-style>\n        <style>\n          .project-card {\n            --paper-card-header: {\n              max-width: 60%;\n              word-break: break-all;\n            }\n          }\n        </style>\n      </custom-style>\n      <iron-ajax\n        auto=\"\"\n        id=\"projectbackend\"\n        url=\"", "\"\n        handle-as=\"json\"\n        @last-response-changed=\"", "\"\n        @response=\"", "\"\n      >\n      </iron-ajax>\n      <iron-ajax\n        id=\"backend\"\n        url=\"", "\"\n        params=\"\"\n        handle-as=\"json\"\n        @last-response-changed=\"", "\"\n        @response=\"", "\"\n      >\n      </iron-ajax>\n\n      <app-location\n        .route=\"", "\"\n        @route-changed=\"", "\"\n        .query-params=\"", "\"\n        @query-params-changed=\"", "\"\n      ></app-location>\n      <app-route\n        .route=\"", "\"\n        @route-changed=\"", "\"\n        pattern=\"", "/:page\"\n        .data=\"", "\"\n        @data-changed=\"", "\"\n        .tail=\"", "\"\n        @tail-changed=\"", "\"\n        .query-params=\"", "\"\n        @query-params-changed=\"", "\"\n      >\n      </app-route>\n      <div id=\"loading\">\n        <h3>Loading..</h3>\n        <elmsln-loading color=\"grey-text\" size=\"large\"></elmsln-loading>\n      </div>\n      <lrnapp-studio-project-button\n        ?hidden=\"", "\"\n        classes=\"amber darken-4 white-text\"\n        end-point=\"", "\"\n        csrf-token=\"", "\"\n        icon=\"add\"\n      ></lrnapp-studio-project-button>\n      <div class=\"projects-window\">\n        ", "\n      </div>\n      <paper-toast text=\"Updated\" id=\"toast\"></paper-toast>\n      <paper-dialog id=\"delete\" modal=\"\">\n        <h3>", "</h3>\n        <p>", "</p>\n        <div class=\"buttons\">\n          <paper-button dialog-dismiss=\"\">Decline</paper-button>\n          <paper-button\n            id=\"deleteaccept\"\n            @click=\"", "\"\n            dialog-confirm=\"\"\n            autofocus=\"\"\n            >Accept</paper-button\n          >\n        </div>\n      </paper-dialog>\n      <paper-dialog id=\"activeitemcontainer\" with-backdrop>\n        <div id=\"activecontent\">\n          <app-header reveals>\n            <app-toolbar\n              class=\"", "\"\n            >\n              <div>\n                <iron-icon\n                  icon=\"", "\"\n                  ?disabled=\"", "\"\n                ></iron-icon>\n                ", "\n              </div>\n              <div\n                spacer=\"\"\n                class=\"comment-box\"\n                ?hidden=\"", "\"\n              >\n                <paper-button\n                  id=\"assignment-", "-", "-comments\"\n                  style=\"margin:0;padding:.25em;text-transform:none;\"\n                >\n                  <iron-icon icon=\"communication:forum\"></iron-icon>\n                  ", "\n                  Comments\n                </paper-button>\n                <paper-badge\n                  ?hidden=\"", "\"\n                  for=\"assignment-", "-", "-comments\"\n                  label=\"", "\"\n                ></paper-badge>\n              </div>\n\n              <lrnapp-studio-submission-button\n                spacer\n                auto\n                assignment-id=\"", "\"\n                .submission=\"", "\"\n                end-point=\"", "\"\n                csrf-token=\"", "\"\n                submission-id=\"", "\"\n              ></lrnapp-studio-submission-button>\n              <paper-toggle-button\n                id=\"activetoggle\"\n                @click=\"", "\"\n              ></paper-toggle-button>\n              <span id=\"activetoggletext\"></span>\n            </app-toolbar>\n            <div class=\"status-rationale\">\n              ", "\n            </div>\n          </app-header>\n          <lrnsys-render-html\n            style=\"padding:2em;\"\n            html=\"", "\"\n          ></lrnsys-render-html>\n        </div>\n      </paper-dialog>\n    "]);

    _templateObject_e9a41d202da211eaa247b36e11306899 = function _templateObject_e9a41d202da211eaa247b36e11306899() {
      return data;
    };

    return data;
  }

  var LrnappStudioKanban =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(LrnappStudioKanban, _LitElement);
    babelHelpers.createClass(LrnappStudioKanban, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return (0, _litElement.html)(_templateObject_e9a41d202da211eaa247b36e11306899(), this.sourcePath, this.projectResponseChanged, this._handleProjectResponse, this.sourcePath, this.backendResponseChanged, this._handleUpdateResponse, this.route, this.routeChangedEvent, this.queryParams, this.queryParamsChangedEvent, this.route, this.routeChangedEvent, this.endPoint, this.data, this.dataChangedEvent, this.tail, this.tailChangedEvent, this.queryParams, this.queryParamsChangedEvent, !this.projectResponse.data.canCreateProjects, this.endPoint, this.csrfToken, this._toArray(this.projectResponse.data.projects).map(function (project) {
          return (0, _litElement.html)(_templateObject2_e9a41d202da211eaa247b36e11306899(), project.id, project.attributes.title, project.id, !project.meta.canUpdate, _this2._makeProjectEditLink, project.id, project.id, !project.meta.canUpdate, _this2.endPoint, _this2.csrfToken, project.id, !project.meta.canDelete, _this2._deleteProjectDialog, _this2._toArray(project.relationships.assignments).map(function (assignment) {
            return (0, _litElement.html)(_templateObject3_e9a41d202da211eaa247b36e11306899(), project.id, assignment.id, _this2.assignmentClick, assignment.meta.relatedSubmissions.complete.icon, assignment.attributes.title, project.id, assignment.id, !assignment.meta.canCritique, assignment.meta.critiqueLink, project.id, assignment.id, !assignment.meta.canUpdate, _this2._makeAssignmentEditLink, project.id, assignment.id, !assignment.meta.canDelete, _this2._deleteAssignmentDialog);
          }));
        }), this._deleteTitle, this._deleteText, this._handleDelete, this.activeAssignmentNode.meta.relatedSubmissions.complete.color, this.activeAssignmentNode.meta.relatedSubmissions.complete.icon, !this.activeAssignmentNode.meta.relatedSubmissions.canCreate, this.activeAssignmentNode.meta.relatedSubmissions.complete.submission.title, !this.activeAssignmentNode.meta.relatedSubmissions.complete.submission.id, this.activeAssignmentNode.relationships.project.data.id, this.activeAssignmentNode.id, this.activeAssignmentNode.meta.relatedSubmissions.complete.submission.meta.comments.count, this.displayNewBadge(this.activeAssignmentNode.meta.relatedSubmissions.complete.submission.meta.new), this.activeAssignmentNode.relationships.project.data.id, this.activeAssignmentNode.id, this.activeAssignmentNode.meta.relatedSubmissions.complete.submission.meta.comments.new, this.activeAssignmentNode.id, this.submission, this.buildSubmissionPath(this.basePath), this.csrfToken, this.activeAssignmentNode.meta.relatedSubmissions.complete.submission.id, this.statusToggle, this.activeAssignmentNode.meta.relatedSubmissions.complete.rationale.text, this.activeAssignmentNode.attributes.body);
      }
    }, {
      key: "backendResponseChanged",
      value: function backendResponseChanged(e) {
        this.backendResponse = _objectSpread({}, e.detail.value);
      }
    }, {
      key: "projectResponseChanged",
      value: function projectResponseChanged(e) {
        this.projectResponse = _objectSpread({}, e.detail.value);
      }
    }, {
      key: "routeChangedEvent",
      value: function routeChangedEvent(e) {
        this.route = _objectSpread({}, e.detail.value);
      }
    }, {
      key: "queryParamsChangedEvent",
      value: function queryParamsChangedEvent(e) {
        this.queryParams = _objectSpread({}, e.detail.value);
      }
    }, {
      key: "tailChangedEvent",
      value: function tailChangedEvent(e) {
        this.tail = _objectSpread({}, e.detail.value);
      }
    }, {
      key: "dataChangedEvent",
      value: function dataChangedEvent(e) {
        this.data = _objectSpread({}, e.detail.value);
      }
    }], [{
      key: "styles",

      /**
       * LitElement constructable styles enhancement
       */
      get: function get() {
        return [_colors.materialCssStyles, (0, _litElement.css)(_templateObject4_e9a41d202da211eaa247b36e11306899())];
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnapp-studio-kanban";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          elmslnCourse: {
            type: String,
            attribute: "elmsln-course"
          },
          elmslnSection: {
            type: String,
            attribute: "elmsln-section"
          },
          basePath: {
            type: String,
            attribute: "base-path"
          },
          csrfToken: {
            type: String,
            attribute: "csrf-token"
          },
          endPoint: {
            type: String,
            attribute: "end-point"
          },
          activeAssignment: {
            type: String,
            attribute: "active-assignment"
          },
          activeAssignmentNode: {
            type: Object
          },
          projectToDelete: {
            type: String,
            attribute: "project-to-delete"
          },
          assignmentToDelete: {
            type: String,
            attribute: "assignment-to-delete"
          },
          sourcePath: {
            type: String,
            attribute: "source-path"
          },

          /**
           * Submission for two-way data binding on return from the button being pushed
           */
          submission: {
            type: Object
          },

          /**
           * Response from the server.
           */
          projectResponse: {
            type: Object
          },

          /**
           * Response from the server for non-project requests.
           */
          backendResponse: {
            type: Object
          }
        };
      }
    }]);

    function LrnappStudioKanban() {
      var _this;

      babelHelpers.classCallCheck(this, LrnappStudioKanban);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(LrnappStudioKanban).call(this));
      _this.activeAssignmentNode = {
        attributes: {},
        meta: {
          relatedSubmissions: {
            complete: {
              submission: {
                meta: {
                  comments: {}
                }
              },
              rationale: {}
            }
          }
        },
        relationships: {
          project: {
            data: {}
          }
        }
      };
      _this.projectResponse = {
        data: {}
      };
      _this.assignmentToDelete = null;
      _this.projectToDelete = null;
      _this.activeAssignment = null;
      setTimeout(function () {
        _this.addEventListener("project-created", _this._handleProjectCreated.bind(babelHelpers.assertThisInitialized(_this)));

        _this.addEventListener("assignment-created", _this._handleAssignmentCreated.bind(babelHelpers.assertThisInitialized(_this)));
      }, 0);
      return _this;
    }

    babelHelpers.createClass(LrnappStudioKanban, [{
      key: "updated",
      value: function updated(changedProperties) {
        var _this3 = this;

        changedProperties.forEach(function (oldValue, propName) {
          var notifiedProps = ["basePath", "csrfToken", "endPoint", "activeAssignment", "backendResponse", "projectResponse", "submission", "sourcePath", "assignmentToDelete", "projectToDelete"];

          if (notifiedProps.includes(propName)) {
            // notify
            var eventName = "".concat(propName.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, "$1-$2").toLowerCase(), "-changed");

            _this3.dispatchEvent(new CustomEvent(eventName, {
              detail: {
                value: _this3[propName]
              }
            }));
          }

          if (["route", "endPoint"].includes(propName)) {
            _this3._routeChanged(_this3.route, _this3.endPoint);
          }

          if (propName == "queryParams") {
            _this3._deleteToast(_this3.queryParams.deletetoast);
          }
        });
      } // If the current route is outside the scope of our app
      // then allow the website to break out of the single page
      // application routing

    }, {
      key: "_routeChanged",
      value: function _routeChanged(route, endPoint) {
        if (typeof route.path === "string") {
          if (typeof endPoint === "string") {
            if (route.path.startsWith(endPoint) || route.path == "/") {
              return;
            }
          }

          window.location.reload();
        }
      }
      /**
       * Support having a toast message because of delete or error elsewhere.
       */

    }, {
      key: "_deleteToast",
      value: function _deleteToast(deletetoast, old) {
        if (babelHelpers.typeof(deletetoast) !== (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined))) {
          if (deletetoast == "error") {
            this.shadowRoot.querySelector("#toast").show("That submission on longer exists!");
          } else {
            this.shadowRoot.querySelector("#toast").show("Submission deleted successfully!");
          }

          var attr = this.queryParams;
          attr.deletetoast = undefined;
          this.queryParams = _objectSpread({}, attr);
        }
      }
      /**
       * @todo  remove this once we have a modal for it
       */

    }, {
      key: "_makeProjectEditLink",
      value: function _makeProjectEditLink(e) {
        var local = e.target;
        var parts = local.id.split("-");
        window.location.href = this.basePath + "../node/" + parts[1] + "/edit?destination=apps/lrnapp-studio-kanban";
      }
      /**
       * @todo  remove this once we have a modal for it
       */

    }, {
      key: "_makeAssignmentEditLink",
      value: function _makeAssignmentEditLink(e) {
        var local = e.target;
        var parts = local.id.split("-");
        window.location.href = this.basePath + "../node/" + parts[2] + "/edit?destination=apps/lrnapp-studio-kanban";
      }
      /**
       * Handle the push to delete a project, pop up the modal.
       */

    }, {
      key: "_deleteProjectDialog",
      value: function _deleteProjectDialog(e) {
        var local = e.target;
        var parts = local.id.split("-"); // set values so we know what to drop

        this.projectToDelete = parts[1];
        this._deleteTitle = "Delete project";
        this._deleteText = "Are you sure you want to delete this project and all related assignments!?";
        this._deleteType = "project";
        this.shadowRoot.querySelector("#delete").open();
      }
      /**
       * Handle the call to delete the assignment specified.
       */

    }, {
      key: "_handleDelete",
      value: function _handleDelete() {
        if (this._deleteType == "project") {
          this.shadowRoot.querySelector("#backend").method = "DELETE";
          this.shadowRoot.querySelector("#backend").body = this.projectToDelete;
          this.shadowRoot.querySelector("#backend").url = this.endPoint + "/api/projects/" + this.projectToDelete + "?token=" + this.csrfToken;
          this.shadowRoot.querySelector("#backend").generateRequest();
        } else if (this._deleteType == "assignment") {
          this.shadowRoot.querySelector("#backend").method = "DELETE";
          this.shadowRoot.querySelector("#backend").body = this.assignmentToDelete;
          this.shadowRoot.querySelector("#backend").url = this.endPoint + "/api/assignments/" + this.assignmentToDelete + "?token=" + this.csrfToken;
          this.shadowRoot.querySelector("#backend").generateRequest();
        }
      }
      /**
       * Handle the push to delete an assignment, pop up the modal.
       */

    }, {
      key: "_deleteAssignmentDialog",
      value: function _deleteAssignmentDialog(e) {
        var local = e.target;
        var parts = local.id.split("-");
        this.assignmentToDelete = parts[2]; // set values so we know what to drop

        this._deleteTitle = "Delete assignment";
        this._deleteText = "Are you sure you want to delete this assignment?";
        this._deleteType = "assignment";
        this.shadowRoot.querySelector("#delete").open();
      }
      /**
       * if we should show new badge based on new comment count.
       */

    }, {
      key: "displayNewBadge",
      value: function displayNewBadge(count) {
        if (babelHelpers.typeof(count) === (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined)) || count == 0) {
          return true;
        }

        return false;
      }
      /**
       * Handle toggling the status for the submission.
       */

    }, {
      key: "statusToggle",
      value: function statusToggle(e) {
        // find our xhr for callbacks
        var xhr = this.shadowRoot.querySelector("#backend"); // break the id out into project and assignment

        var parts = this.activeAssignment.split("-"); // focus in on the submissions / assignment meta

        var submission = this.projectResponse.data.projects["project-" + parts[1]].relationships.assignments["assignment-" + parts[2]].meta.relatedSubmissions.complete; // ensure this isn't disabled though it shouldn't be possible

        if (!this.shadowRoot.querySelector("#activetoggle").disabled) {
          // hide the loading screen
          this.shadowRoot.querySelector("#loading").hidden = false; // queue of the request parameters

          xhr.params = {
            submissionid: submission.submission.id,
            status: this.shadowRoot.querySelector("#activetoggle").checked
          }; // send the request

          xhr.generateRequest();
        }
      }
      /**
       * Handle toggle for mouse class and manage classList array for paper-button.
       */

    }, {
      key: "assignmentClick",
      value: function assignmentClick(e) {
        var local = e.target;

        if (this.activeAssignment != null && this.activeAssignment != local.id) {
          this.shadowRoot.querySelector("#" + this.activeAssignment).nextElementSibling.classList.remove("show");
          this.shadowRoot.querySelector("#" + this.activeAssignment).classList.remove("active");
        }

        this.activeAssignment = local.id;
        var parts = this.activeAssignment.split("-");
        this.activeAssignmentNode = this.projectResponse.data.projects["project-" + parts[1]].relationships.assignments["assignment-" + parts[2]];

        this._setToggle(false);

        local.nextElementSibling.classList.add("show");
        local.classList.add("active");
        this.shadowRoot.querySelector("#activeitemcontainer").toggle();
      }
      /**
       * Handle response for the whole projects object.
       */

    }, {
      key: "_handleProjectResponse",
      value: function _handleProjectResponse(event) {
        var _this4 = this;

        this.shadowRoot.querySelector("#loading").hidden = true;

        this._setToggle(true);

        if (this.activeAssignment) {
          setTimeout(function () {
            var parts = _this4.activeAssignment.split("-");

            _this4.activeAssignmentNode = _this4.projectResponse.data.projects["project-" + parts[1]].relationships.assignments["assignment-" + parts[2]];
          }, 100);
        }
      }
      /**
       * buildSubmissionPath for generating a new submission or linking to existing.
       */

    }, {
      key: "buildSubmissionPath",
      value: function buildSubmissionPath(path) {
        return path + "lrnapp-studio-submission";
      }
      /**
       * Handle a response from updating an item
       */

    }, {
      key: "_handleUpdateResponse",
      value: function _handleUpdateResponse(event) {
        var _this5 = this;

        if (this.backendResponse.status == 200) {
          this.shadowRoot.querySelector("#toast").text = "Updated successfully";
          this.shadowRoot.querySelector("#toast").toggle(); // this will force a repaint of the UI pieces on reload

          this.projectResponse = {};
          this.shadowRoot.querySelector("#projectbackend").generateRequest();
          setTimeout(function () {
            var parts = _this5.activeAssignment.split("-");

            _this5.activeAssignmentNode = _this5.projectResponse.data.projects["project-" + parts[1]].relationships.assignments["assignment-" + parts[2]];
          }, 500);
        } else {
          // this would imply an error
          this.shadowRoot.querySelector("#loading").hidden = true;
        }
      }
      /**
       * set the toggle state when assignment gets focus
       */

    }, {
      key: "_setToggle",
      value: function _setToggle(update) {
        if (this.activeAssignment != null) {
          var parts = this.activeAssignment.split("-"); // focus in on the submissions / assignment meta

          var submission = this.projectResponse.data.projects["project-" + parts[1]].relationships.assignments["assignment-" + parts[2]].meta.relatedSubmissions.complete; // not finished but also not started

          if (submission.status == 0 && submission.submission.length == 0) {
            if (!update) {
              this.shadowRoot.querySelector("#activetoggle").disabled = true;
              this.shadowRoot.querySelector("#activetoggle").checked = false;
            }

            this.shadowRoot.querySelector("#activetoggle").title = "Submission not started";
            this.shadowRoot.querySelector("#activetoggletext").textContent = "Submission not started";
          } else if (submission.status == 0) {
            if (!update) {
              this.shadowRoot.querySelector("#activetoggle").disabled = false;
              this.shadowRoot.querySelector("#activetoggle").checked = false;
            }

            this.shadowRoot.querySelector("#activetoggle").title = "Submission started";
            this.shadowRoot.querySelector("#activetoggletext").textContent = "Submission in progress";
          } else {
            if (!update) {
              this.shadowRoot.querySelector("#activetoggle").disabled = false;
              this.shadowRoot.querySelector("#activetoggle").checked = true;
            }

            this.shadowRoot.querySelector("#activetoggle").title = "Submission ready";
            this.shadowRoot.querySelector("#activetoggletext").textContent = "Submission ready";
          }
        }
      }
      /**
       * Event came from the project button to indicate it was successful.
       */

    }, {
      key: "_handleProjectCreated",
      value: function _handleProjectCreated(e) {
        this.shadowRoot.querySelector("#toast").text = "Project added";
        this.shadowRoot.querySelector("#toast").toggle();
        this.shadowRoot.querySelector("#projectbackend").generateRequest();
      }
      /**
       * Event came from the assignment button to indicate it was successful.
       */

    }, {
      key: "_handleAssignmentCreated",
      value: function _handleAssignmentCreated(e) {
        this.shadowRoot.querySelector("#toast").text = "Assignment added";
        this.shadowRoot.querySelector("#toast").toggle();
        this.shadowRoot.querySelector("#projectbackend").generateRequest();
      }
      /*
       * Simple way to convert from object to array.
       */

    }, {
      key: "_toArray",
      value: function _toArray(obj) {
        if (obj == null) {
          return [];
        }

        return Object.keys(obj).map(function (key) {
          return obj[key];
        });
      }
    }]);
    return LrnappStudioKanban;
  }(_litElement.LitElement);

  _exports.LrnappStudioKanban = LrnappStudioKanban;
  window.customElements.define(LrnappStudioKanban.tag, LrnappStudioKanban);
});