define(["exports", "../../../../lit-element/lit-element.js", "../../../../@polymer/iron-ajax/iron-ajax.js", "../../../../@polymer/paper-toast/paper-toast.js", "../../../lrnsys-button/lrnsys-button.js"], function (_exports, _litElement, _ironAjax, _paperToast, _lrnsysButton) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappStudioProjectButton = void 0;

  function _templateObject4_6d21e6a02d8511ea80ccf124101da415() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n      "]);

    _templateObject4_6d21e6a02d8511ea80ccf124101da415 = function _templateObject4_6d21e6a02d8511ea80ccf124101da415() {
      return data;
    };

    return data;
  }

  function _templateObject3_6d21e6a02d8511ea80ccf124101da415() {
    var data = babelHelpers.taggedTemplateLiteral(["\n            <paper-toast id=\"toast\"></paper-toast>\n          "]);

    _templateObject3_6d21e6a02d8511ea80ccf124101da415 = function _templateObject3_6d21e6a02d8511ea80ccf124101da415() {
      return data;
    };

    return data;
  }

  function _templateObject2_6d21e6a02d8511ea80ccf124101da415() {
    var data = babelHelpers.taggedTemplateLiteral(["\n            <lrnsys-button\n              raised=\"\"\n              class=\"", "\"\n              button-class=\"", "\"\n              icon=\"", "\"\n              @click=\"", "\"\n              label=\"Create project\"\n            ></lrnsys-button>\n            <iron-ajax\n              id=\"ajaxCreateStub\"\n              url=\"", "\"\n              method=\"POST\"\n              handle-as=\"json\"\n              @response=\"", "\"\n            ></iron-ajax>\n          "]);

    _templateObject2_6d21e6a02d8511ea80ccf124101da415 = function _templateObject2_6d21e6a02d8511ea80ccf124101da415() {
      return data;
    };

    return data;
  }

  function _templateObject_6d21e6a02d8511ea80ccf124101da415() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      ", "\n      ", "\n    "]);

    _templateObject_6d21e6a02d8511ea80ccf124101da415 = function _templateObject_6d21e6a02d8511ea80ccf124101da415() {
      return data;
    };

    return data;
  }

  /**
   * `lrnapp-studio-project-button`
   * Allows users to create new projects.
   */
  var LrnappStudioProjectButton =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(LrnappStudioProjectButton, _LitElement);
    babelHelpers.createClass(LrnappStudioProjectButton, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_6d21e6a02d8511ea80ccf124101da415(), this.createProjectsUrl ? (0, _litElement.html)(_templateObject2_6d21e6a02d8511ea80ccf124101da415(), this.classes, this.classes, this.icon, this._createProject, this.createProjectsUrl, this._ajaxCreateStubHandler) : "", this.displayErrors ? (0, _litElement.html)(_templateObject3_6d21e6a02d8511ea80ccf124101da415()) : "");
      }
    }], [{
      key: "styles",

      /**
       * LitElement constructable styles enhancement
       */
      get: function get() {
        return [(0, _litElement.css)(_templateObject4_6d21e6a02d8511ea80ccf124101da415())];
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnapp-studio-project-button";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          elmslnCourse: {
            type: String,
            attribute: "elmsln-course"
          },
          elmslnSection: {
            type: String,
            attribute: "elmsln-section"
          },
          basePath: {
            type: String,
            attribute: "base-path"
          },
          csrfToken: {
            type: String,
            attribute: "csrf-token"
          },
          endPoint: {
            type: String,
            attribute: "end-point"
          },
          auto: {
            type: Boolean,
            reflect: true
          },
          displayErrors: {
            type: Boolean,
            attribute: "display-errors"
          },
          createProjectsUrl: {
            type: String,
            attribute: "create-projects-url"
          },
          classes: {
            type: String
          },
          icon: {
            type: String
          }
        };
      }
    }]);

    function LrnappStudioProjectButton() {
      var _this;

      babelHelpers.classCallCheck(this, LrnappStudioProjectButton);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(LrnappStudioProjectButton).call(this));
      _this.icon = "";
      _this.classes = "";
      _this.displayErrors = true;
      _this.auto = false;
      return _this;
    }

    babelHelpers.createClass(LrnappStudioProjectButton, [{
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        changedProperties.forEach(function (oldValue, propName) {
          if (["endPoint", "csrfToken"].includes(propName)) {
            _this2.createProjectsUrl = _this2.endPoint + "/api/projects/create-stub?token=" + _this2.csrfToken;
          }

          if (propName == "auto") {
            // notify
            _this2.dispatchEvent(new CustomEvent("auto-changed", {
              detail: {
                value: _this2[propName]
              }
            }));
          }
        });
      }
    }, {
      key: "_createProject",
      value: function _createProject() {
        this.shadowRoot.querySelector("#ajaxCreateStub").generateRequest();
      }
    }, {
      key: "_ajaxCreateStubHandler",
      value: function _ajaxCreateStubHandler(e) {
        var status = e.detail.response.status;
        var response = e.detail.response;

        if (status === 201) {
          var project = e.detail.response.data;

          if (project) {
            this.dispatchEvent(new CustomEvent("project-created", {
              bubbles: true,
              cancelable: true,
              composed: true,
              detail: {
                project: project
              }
            }));
          }
        } // if we have errors to display


        if (typeof response.errors !== "undefined") {
          var ul = document.createElement("ul");
          var text = "";
          response.errors.forEach(function (error) {
            text = text + " " + error;
          });
          this.shadowRoot.querySelector("#toast").show(text);
        }
      }
    }]);
    return LrnappStudioProjectButton;
  }(_litElement.LitElement);

  _exports.LrnappStudioProjectButton = LrnappStudioProjectButton;
  window.customElements.define(LrnappStudioProjectButton.tag, LrnappStudioProjectButton);
});