define(["exports", "../../../../@polymer/polymer/polymer-element.js", "../../../../@polymer/iron-icons/iron-icons.js", "../../../../@polymer/iron-icons/hardware-icons.js", "../../../../@polymer/iron-ajax/iron-ajax.js", "../../../../@polymer/polymer/lib/elements/dom-repeat.js", "../../../../@polymer/paper-icon-button/paper-icon-button.js", "../../../../@polymer/paper-styles/color.js", "../../../paper-search/lib/paper-search-bar.js", "../../../../@polymer/paper-tooltip/paper-tooltip.js", "../../../../@polymer/paper-slider/paper-slider.js", "../../../../@polymer/app-layout/app-layout.js", "../../../../@polymer/app-layout/app-drawer/app-drawer.js", "../../../../@polymer/app-layout/app-header/app-header.js", "../../../../@polymer/app-layout/app-toolbar/app-toolbar.js", "../../../../@polymer/app-layout/app-scroll-effects/app-scroll-effects.js", "../../../../@polymer/app-route/app-location.js", "../../../../@polymer/app-route/app-route.js", "../../../materializecss-styles/materializecss-styles.js", "../../../lrndesign-stepper/lrndesign-stepper.js", "../../../lrnsys-progress/lrnsys-progress.js", "../../../elmsln-loading/elmsln-loading.js", "../../../page-scroll-position/page-scroll-position.js", "../../../hax-body/hax-body.js", "../../../material-progress/material-progress.js", "../../../lrndesign-mapmenu/lrndesign-mapmenu.js"], function (_exports, _polymerElement, _ironIcons, _hardwareIcons, _ironAjax, _domRepeat, _paperIconButton, _color, _paperSearchBar, _paperTooltip, _paperSlider, _appLayout, _appDrawer, _appHeader, _appToolbar, _appScrollEffects, _appLocation, _appRoute, _materializecssStyles, _lrndesignStepper, _lrnsysProgress, _elmslnLoading, _pageScrollPosition, _haxBody, _materialProgress, _lrndesignMapmenu) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappBookProgressDashboard = void 0;

  function _templateObject_79268080add011e983121daa910d1ce6() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <style include=\"materializecss-styles\">\n        :host {\n          display: block;\n        }\n        paper-progress {\n          --paper-progress-active-color: var(--paper-blue-300, blue);\n          --paper-progress-secondary-color: var(--paper-yellow-300, yellow);\n          --paper-progress-container-color: var(--paper-green-300, green);\n          height: 1.5em;\n          display: inline-block;\n          vertical-align: text-top;\n        }\n        lrndesign-avatar {\n          display: inline-block;\n        }\n        lrnsys-progress-circle {\n          font-size: 4em;\n        }\n        .progress-icon {\n          height: 2.5em;\n          width: 2.5em;\n          padding: 0.25em;\n          display: inline-block;\n          color: white;\n          background-color: var(--paper-gray-300, gray);\n          border-radius: 50%;\n        }\n        .progress-row {\n          display: block;\n          width: 100%;\n        }\n        .progress-left,\n        .progress-right {\n          padding: 1em;\n          display: inline-block;\n          height: 10em;\n          vertical-align: text-top;\n        }\n        material-progress-histo {\n          width: 100%;\n          @apply (--paper-font-body2);\n        }\n        material-progress-bars {\n          width: 100%;\n          @apply (--paper-font-body2);\n        }\n        material-progress-bars > .bar > span {\n          text-align: end;\n          font-size: 0.9em;\n          @apply (--layout-flex);\n        }\n        .bar {\n          background-color: var(--paper-deep-orange-500);\n        }\n        .bar.run {\n          background-color: var(--paper-purple-500);\n        }\n        .bar.hello {\n          background-color: var(--paper-cyan-500);\n        }\n        .bar.world {\n          background-color: var(--paper-orange-500);\n        }\n      </style>\n      <iron-ajax\n        id=\"dataajax\"\n        url=\"[[sourcePath]]\"\n        params=\"[[requestParams]]\"\n        handle-as=\"json\"\n        on-response=\"handleDataResponse\"\n        last-response=\"{{readTimeData}}\"\n      ></iron-ajax>\n\n      <div id=\"bodyloading\" class=\"loading\">\n        <elmsln-loading color=\"grey-text\" size=\"large\"></elmsln-loading>\n        <h3 class=\"loading-text\">Loading content..</h3>\n      </div>\n      <div>\n        <material-progress-bars max=\"128\" bar-height=\"22\" animated=\"\">\n          <div class=\"bar\" data-value=\"21\">\n            <iron-icon icon=\"av:video-library\"></iron-icon>\n          </div>\n          <div class=\"bar run\" data-value=\"13\">\n            <iron-icon icon=\"maps:directions-run\"></iron-icon>\n          </div>\n          <div class=\"bar hello\" data-value=\"50\">\n            <iron-icon icon=\"maps:directions-bike\"></iron-icon>\n            <span>Hello</span>\n          </div>\n          <div class=\"bar world\" data-value=\"30\"><span>World</span></div>\n        </material-progress-bars>\n        <material-progress-histo bar-height=\"22\" animated=\"\">\n          <div class=\"bar\" data-value=\"21\">\n            <iron-icon icon=\"maps:directions-walk\"></iron-icon>\n          </div>\n          <div class=\"bar run\" data-value=\"13\">\n            <iron-icon icon=\"maps:directions-run\"></iron-icon>\n          </div>\n          <div class=\"bar hello\" data-value=\"50\">\n            <iron-icon icon=\"maps:directions-bike\"></iron-icon>\n            <span>Hello</span>\n          </div>\n          <div class=\"bar world\" data-value=\"30\"><span>World</span></div>\n        </material-progress-histo>\n        <template is=\"dom-repeat\" items=\"[[dashboardItems]]\" as=\"item\">\n          <div class=\"progress-row\">\n            <div class=\"progress-left\">\n              <lrnsys-progress-circle\n                status=\"disabled\"\n                class=\"flex\"\n                icon=\"[[item.meta.icon]]\"\n              ></lrnsys-progress-circle>\n            </div>\n            <div class=\"progress-right\">\n              <h3 class=\"progress-item-title\">[[item.attributes.title]]</h3>\n              <div class=\"description-content\">\n                <div>\n                  <lrn-icon icon=\"network\" class=\"progress-icon\"></lrn-icon>\n                  <paper-progress\n                    value=\"70\"\n                    secondary-progress=\"80\"\n                  ></paper-progress>\n                </div>\n                <div>\n                  <lrndesign-avatar\n                    src=\"[[userData.user.avatar]]\"\n                    label=\"[[userData.user.display_name]]\"\n                  ></lrndesign-avatar>\n                  <paper-progress\n                    value=\"70\"\n                    secondary-progress=\"80\"\n                  ></paper-progress>\n                </div>\n              </div>\n            </div>\n          </div>\n        </template>\n      </div>\n    "]);

    _templateObject_79268080add011e983121daa910d1ce6 = function _templateObject_79268080add011e983121daa910d1ce6() {
      return data;
    };

    return data;
  }

  /**
  `lrnapp-book-progress-dashboard`
  A LRN element
  
  * @demo demo/index.html
  
  @microcopy
    progress - the amount the student has moved through the active item(s)
    active item - pages of content the user is engaging with
    stats
  
  */
  var LrnappBookProgressDashboard =
  /*#__PURE__*/
  function (_PolymerElement) {
    babelHelpers.inherits(LrnappBookProgressDashboard, _PolymerElement);

    function LrnappBookProgressDashboard() {
      babelHelpers.classCallCheck(this, LrnappBookProgressDashboard);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(LrnappBookProgressDashboard).apply(this, arguments));
    }

    babelHelpers.createClass(LrnappBookProgressDashboard, [{
      key: "_routeDataChanged",

      /**
       * Notice route data has changed.
       */
      value: function _routeDataChanged(newValue, oldValue) {
        if (babelHelpers.typeof(newValue) !== (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined))) {
          this.requestParams[newValue.type] = newValue.id; // if we're visible kick off the call

          if (this.progressChanged) {
            this.$.dataajax.generateRequest();
          }
        }
      }
      /**
       * Showing element state has changed
       */

    }, {
      key: "_showProgressChanged",
      value: function _showProgressChanged(newValue, oldValue) {
        // ensure we are visible
        if (newValue && babelHelpers.typeof(this.routeData) !== (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined))) {
          this.$.dataajax.generateRequest();
        }
      }
      /**
       * Response data.
       */

    }, {
      key: "handleDataResponse",
      value: function handleDataResponse(obj) {
        var response = obj.detail.response.data; // show the info

        this.$.bodyloading.hidden = true; // split the data into two sets

        this.userData = response.userdata;
        this.dashboardItems = this._toArray(response.items);
      }
      /**
       * Simple way to convert from object to array.
       */

    }, {
      key: "_toArray",
      value: function _toArray(obj) {
        if (obj == null) {
          return [];
        }

        return Object.keys(obj).map(function (key) {
          return obj[key];
        });
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_79268080add011e983121daa910d1ce6());
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnapp-book-progress-dashboard";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * Data about the active route; this includes item type and id.
           */
          routeData: {
            type: Object,
            observer: "_routeDataChanged"
          },

          /**
           * Params for the request for outline/book to load.
           */
          requestParams: {
            type: Object,
            value: {
              node: null
            }
          },

          /**
           * Path to get data into the UI
           */
          sourcePath: {
            type: String
          },

          /**
           * Read time data
           */
          readTimeData: {
            type: Object,
            value: []
          },

          /**
           * User data.
           */
          userData: {
            type: Object,
            value: []
          },

          /**
           * If this is visible; useful for toggling / activating.
           */
          showProgress: {
            type: Boolean,
            value: false,
            reflectToAttribute: true,
            observer: "_showProgressChanged"
          }
        };
      }
    }]);
    return LrnappBookProgressDashboard;
  }(_polymerElement.PolymerElement);

  _exports.LrnappBookProgressDashboard = LrnappBookProgressDashboard;
  window.customElements.define(LrnappBookProgressDashboard.tag, LrnappBookProgressDashboard);
});