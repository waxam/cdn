define(["exports", "../../../../lit-element/lit-element.js", "../../../../@polymer/iron-ajax/iron-ajax.js", "../../../../@polymer/paper-button/paper-button.js", "../../../hexagon-loader/hexagon-loader.js", "../../../lrndesign-gallerycard/lrndesign-gallerycard.js"], function (_exports, _litElement, _ironAjax, _paperButton, _hexagonLoader, _lrndesignGallerycard) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappBlockNeedFeedback = void 0;

  function _templateObject3_f8ee88b02c1c11eaacb4bf54e86db688() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n        paper-button {\n          width: 100%;\n        }\n      "]);

    _templateObject3_f8ee88b02c1c11eaacb4bf54e86db688 = function _templateObject3_f8ee88b02c1c11eaacb4bf54e86db688() {
      return data;
    };

    return data;
  }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _templateObject2_f8ee88b02c1c11eaacb4bf54e86db688() {
    var data = babelHelpers.taggedTemplateLiteral(["\n          <paper-button @click=\"", "\">\n            <lrndesign-gallerycard\n              data-submission-id=\"", "\"\n              title=\"", "\"\n              author=\"", "\"\n              comments=\"", "\"\n              image=\"", "\"\n              icon=\"", "\"\n              class=\"ferpa-protect\"\n            >\n            </lrndesign-gallerycard>\n          </paper-button>\n        "]);

    _templateObject2_f8ee88b02c1c11eaacb4bf54e86db688 = function _templateObject2_f8ee88b02c1c11eaacb4bf54e86db688() {
      return data;
    };

    return data;
  }

  function _templateObject_f8ee88b02c1c11eaacb4bf54e86db688() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <iron-ajax\n        auto=\"\"\n        url=\"", "\"\n        handle-as=\"json\"\n        @last-response-changed=\"", "\"\n        @response=\"", "\"\n      ></iron-ajax>\n      <hexagon-loader\n        id=\"loader\"\n        item-count=\"4\"\n        ?loading=", "\n        size=\"small\"\n      ></hexagon-loader>\n      ", "\n    "]);

    _templateObject_f8ee88b02c1c11eaacb4bf54e86db688 = function _templateObject_f8ee88b02c1c11eaacb4bf54e86db688() {
      return data;
    };

    return data;
  }

  var LrnappBlockNeedFeedback =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(LrnappBlockNeedFeedback, _LitElement);
    babelHelpers.createClass(LrnappBlockNeedFeedback, [{
      key: "render",
      value: function render() {
        var _this2 = this;

        return (0, _litElement.html)(_templateObject_f8ee88b02c1c11eaacb4bf54e86db688(), this.sourcePath, this.responseEvent, this.handleResponse, this.loading, this._toArray(this.response.data).map(function (item) {
          return (0, _litElement.html)(_templateObject2_f8ee88b02c1c11eaacb4bf54e86db688(), _this2._loadSubmissionUrl, item.id, item.attributes.title, item.relationships.author.data, item.meta.comment_count, item.display.image, item.display.icon);
        }));
      }
    }, {
      key: "responseEvent",
      value: function responseEvent(e) {
        this.response = _objectSpread({}, e.detail.value);
      }
    }], [{
      key: "styles",

      /**
       * LitElement constructable styles enhancement
       */
      get: function get() {
        return [(0, _litElement.css)(_templateObject3_f8ee88b02c1c11eaacb4bf54e86db688())];
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnapp-block-need-feedback";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          sourcePath: {
            type: String,
            attribute: "source-path"
          },
          response: {
            type: Array
          },
          loading: {
            type: Boolean
          }
        };
      }
    }]);

    function LrnappBlockNeedFeedback() {
      var _this;

      babelHelpers.classCallCheck(this, LrnappBlockNeedFeedback);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(LrnappBlockNeedFeedback).call(this));
      _this.loading = true;
      return _this;
    }

    babelHelpers.createClass(LrnappBlockNeedFeedback, [{
      key: "updated",
      value: function updated(changedProperties) {
        var _this3 = this;

        changedProperties.forEach(function (oldValue, propName) {
          var notifiedProps = ["sourcePath", "response"];

          if (notifiedProps.includes(propName)) {
            // notify
            var eventName = "".concat(propName.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, "$1-$2").toLowerCase(), "-changed");

            _this3.dispatchEvent(new CustomEvent(eventName, {
              detail: {
                value: _this3[propName]
              }
            }));
          }
        });
      }
      /**
       * Handle tap on paper-button above to redirect to the correct submission url.
       */

    }, {
      key: "_loadSubmissionUrl",
      value: function _loadSubmissionUrl(e) {
        var local = e.target; // this will have the id of the current submission

        var active = local.getAttribute("data-submission-id"); // @todo need a cleaner integration but this at least goes the right place for now

        window.location.href = this.basePath + "lrnapp-studio-submission/submissions/" + active;
      }
    }, {
      key: "handleResponse",
      value: function handleResponse(e) {
        this.loading = false;
      }
    }, {
      key: "_toArray",
      value: function _toArray(obj) {
        if (obj == null) {
          return [];
        }

        return Object.keys(obj).map(function (key) {
          return obj[key];
        });
      }
    }]);
    return LrnappBlockNeedFeedback;
  }(_litElement.LitElement);

  _exports.LrnappBlockNeedFeedback = LrnappBlockNeedFeedback;
  window.customElements.define(LrnappBlockNeedFeedback.tag, LrnappBlockNeedFeedback);
});