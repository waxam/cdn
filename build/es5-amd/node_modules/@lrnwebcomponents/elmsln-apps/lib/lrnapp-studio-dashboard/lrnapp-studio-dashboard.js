define(["exports", "../../../../@polymer/polymer/polymer-element.js", "../../../../@polymer/paper-card/paper-card.js", "../../../materializecss-styles/materializecss-styles.js", "./lrnapp-block-recent-project.js", "./lrnapp-block-recent-submissions.js", "./lrnapp-block-recent-comments.js", "./lrnapp-block-need-feedback.js"], function (_exports, _polymerElement, _paperCard, _materializecssStyles, _lrnappBlockRecentProject, _lrnappBlockRecentSubmissions, _lrnappBlockRecentComments, _lrnappBlockNeedFeedback) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappStudioDashboard = void 0;

  function _templateObject_70606710d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <style include=\"materializecss-styles\">\n        :host {\n          display: block;\n          padding: 0 2em;\n        }\n        h1.title {\n          font-size: 2em;\n          color: black;\n          margin: 0;\n          padding: 0.5em 0 0 0;\n          text-transform: none;\n          text-align: left;\n        }\n        p.para {\n          margin: 0;\n          padding: 0.25em 0.5em;\n        }\n        .dashboard-row {\n          width: 100%;\n          display: inline-flex;\n        }\n        .dashboard-item {\n          width: 30%;\n        }\n      </style>\n      <h1 class=\"title\">Welcome back [[username]]!</h1>\n      <p class=\"para\">Here's what's been going on in the studio</p>\n      <div class=\"dashboard-row\">\n        <paper-card heading=\"Your active project\" class=\"dashboard-item\">\n          <div class=\"card-content\">\n            <lrnapp-block-recent-project\n              csrf-token=\"[[csrfToken]]\"\n              end-point=\"[[_getEndPoint(basePath)]]\"\n              base-path=\"[[basePath]]\"\n              source-path=\"[[_getDataSource(csrfToken, basePath,'recent-project')]]\"\n            >\n            </lrnapp-block-recent-project>\n          </div>\n        </paper-card>\n        <paper-card\n          heading=\"Classmates needing feedback\"\n          class=\"dashboard-item\"\n        >\n          <div class=\"card-content\">\n            <lrnapp-block-need-feedback\n              csrf-token=\"[[csrfToken]]\"\n              end-point=\"[[_getEndPoint(basePath)]]\"\n              base-path=\"[[basePath]]\"\n              source-path=\"[[_getDataSource(csrfToken, basePath,'need-feedback')]]\"\n            >\n            </lrnapp-block-need-feedback>\n          </div>\n        </paper-card>\n        <paper-card heading=\"Recent Studio submissions\" class=\"dashboard-item\">\n          <div class=\"card-content\">\n            <lrnapp-block-recent-submissions\n              csrf-token=\"[[csrfToken]]\"\n              end-point=\"[[_getEndPoint(basePath)]]\"\n              base-path=\"[[basePath]]\"\n              source-path=\"[[_getDataSource(csrfToken, basePath,'recent-submissions')]]\"\n            >\n            </lrnapp-block-recent-submissions>\n          </div>\n        </paper-card>\n        <paper-card heading=\"Recent Studio comments\" class=\"dashboard-item\">\n          <div class=\"card-content\">\n            <lrnapp-block-recent-comments\n              csrf-token=\"[[csrfToken]]\"\n              end-point=\"[[_getEndPoint(basePath)]]\"\n              base-path=\"[[basePath]]\"\n              source-path=\"[[_getDataSource(csrfToken, basePath,'recent-comments')]]\"\n            >\n            </lrnapp-block-recent-comments>\n          </div>\n        </paper-card>\n      </div>\n    "]);

    _templateObject_70606710d34d11ea880ba1e93364c49c = function _templateObject_70606710d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  var LrnappStudioDashboard =
  /*#__PURE__*/
  function (_PolymerElement) {
    babelHelpers.inherits(LrnappStudioDashboard, _PolymerElement);

    function LrnappStudioDashboard() {
      babelHelpers.classCallCheck(this, LrnappStudioDashboard);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(LrnappStudioDashboard).apply(this, arguments));
    }

    babelHelpers.createClass(LrnappStudioDashboard, [{
      key: "connectedCallback",
      value: function connectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(LrnappStudioDashboard.prototype), "connectedCallback", this).call(this);
        setTimeout(function () {
          window.dispatchEvent(new Event("resize"));
        }, 2000);
      }
    }, {
      key: "_getEndPoint",
      value: function _getEndPoint(basePath) {
        return basePath + "lrnapp-studio-dashboard/blocks";
      }
    }, {
      key: "_getDataSource",
      value: function _getDataSource(csrfToken, basePath, dataPoint) {
        return basePath + "lrnapp-studio-dashboard/blocks/" + dataPoint + "?token=" + csrfToken;
      }
      /**
       * Simple way to convert from object to array.
       */

    }, {
      key: "_toArray",
      value: function _toArray(obj) {
        if (obj == null) {
          return [];
        }

        return Object.keys(obj).map(function (key) {
          return obj[key];
        });
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_70606710d34d11ea880ba1e93364c49c());
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnapp-studio-dashboard";
      }
    }, {
      key: "properties",
      get: function get() {
        var _ref;

        return _ref = {
          elmslnCourse: {
            type: String
          },
          elmslnSection: {
            type: String
          },
          basePath: {
            type: String
          },
          csrfToken: {
            type: String
          },
          endPoint: {
            type: String
          },
          username: {
            type: String,
            reflectToAttribute: true
          }
        }, babelHelpers.defineProperty(_ref, "basePath", {
          type: String,
          notify: true,
          reflectToAttribute: true
        }), babelHelpers.defineProperty(_ref, "csrfToken", {
          type: String,
          notify: true,
          reflectToAttribute: true
        }), babelHelpers.defineProperty(_ref, "sourcePath", {
          type: String,
          notify: true,
          reflectToAttribute: true
        }), _ref;
      }
    }]);
    return LrnappStudioDashboard;
  }(_polymerElement.PolymerElement);

  _exports.LrnappStudioDashboard = LrnappStudioDashboard;
  window.customElements.define(LrnappStudioDashboard.tag, LrnappStudioDashboard);
});