define(["../../../../@polymer/polymer/polymer-legacy.js","../../../../@polymer/polymer/lib/legacy/polymer.dom.js","../../../../@polymer/polymer/lib/utils/async.js","../../../../@polymer/iron-icons/iron-icons.js","../../../../@polymer/iron-icons/hardware-icons.js","../../../../@polymer/iron-ajax/iron-ajax.js","../../../../@polymer/paper-icon-button/paper-icon-button.js","../../../../@polymer/paper-styles/color.js","../../../../@polymer/paper-tooltip/paper-tooltip.js","../../../../@polymer/app-route/app-location.js","../../../../@polymer/app-route/app-route.js","../../../grid-plate/grid-plate.js","../../../responsive-grid/lib/responsive-grid-row.js","../../../responsive-grid/lib/responsive-grid-col.js","../../../materializecss-styles/materializecss-styles.js"],function(_polymerLegacy,_polymerDom,async,_ironIcons,_hardwareIcons,_ironAjax,_paperIconButton,_color,_paperTooltip,_appLocation,_appRoute,_gridPlate,_responsiveGridRow,_responsiveGridCol,_materializecssStyles){"use strict";async=babelHelpers.interopRequireWildcard(async);function _templateObject_229b78c06a9011e9a3fbc91c56f16a14(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style include=\"materializecss-styles\">\n      :host {\n        display: block;\n        font-size: 16px;\n        box-sizing: content-box;\n      }\n      :host([loading]) #content {\n        opacity: .2;\n      }\n      #content {\n        opacity: 1;\n        visibility: visible;\n        transition: all .4s ease;\n      }\n    </style>\n    <div id=\"hackycontainer\"><style id=\"hackycsspotterhates\"></style></div>\n    <iron-ajax\n      id=\"fulloutlinepath\"\n      url=\"[[fullOutlinePath]]\"\n      handle-as=\"json\"\n      on-response=\"handleOutlineResponse\"\n      last-response=\"{{outlineData}}\"></iron-ajax>\n    <iron-ajax\n      id=\"pageajax\"\n      params=\"[[requestParams]]\"\n      url=\"[[sourcePath]]\"\n      handle-as=\"json\"\n      on-response=\"handleResponse\"\n      last-response=\"{{pageData}}\"\n      loading=\"{{_loading}}\"></iron-ajax>\n    <app-location route=\"{{route}}\" query-params=\"{{queryParams}}\"></app-location>\n    <app-route\n      route=\"{{route}}\"\n      pattern=\"[[endPoint]]/:type/:id\"\n      data=\"{{data}}\"\n      tail=\"{{tail}}\"\n      query-params=\"{{queryParams}}\">\n    </app-route>\n    <main id=\"etb-tool-nav\" data-offcanvas=\"\">\n      <div id=\"anchor\"></div>\n      <div class=\"inner-wrap\">\n        <section class=\"main-section etb-book\" style=\"min-height: 318px;\">\n          <h2 class=\"element-invisible\">Content navigation</h2>\n          <div class=\"r-header row\">\n            <div class=\"r-header__left\">\n              <div class=\"book-navigation-header book-sibling-nav-container book-navigation-header-2\">\n                <div class=\"book-navigation-header book-sibling-nav-container book-navigation-header-<?php print $count ?>\">\n                  <lrnsys-dialog id=\"outlinepopover\" data-voicecommand=\"open outline\" class=\"black-text\" hover-class=\"grey darken-3 white-text\" label=\"Outline\" header=\"Outline\">\n                    <span slot=\"button\">\n                      <iron-icon icon=\"explore\"></iron-icon>\n                      Outline\n                    </span>\n                    <div class=\"elmsln-modal-content\" id=\"block-mooc-helper-mooc-helper-toc-nav-modal\">\n                      <div id=\"outlinemodal\" on-tap=\"_modalTap\"><slot name=\"outlinemodal\"></slot></div>\n                    </div>\n                  </lrnsys-dialog>\n                  <div id=\"navigation\"><slot name=\"navigation\"></slot></div>\n                </div>\n              </div>\n            </div>\n            <div id=\"options\" class=\"r-header__right\">\n              <slot name=\"options\"></slot>\n            </div>\n          </div>\n          <div class=\"elmsln-content-wrap\" role=\"main\">\n          <responsive-grid-row gutter=\"4\">\n            <responsive-grid-col xl=\"3\" lg=\"3\" md=\"3\" sm=\"4\" xs=\"12\">\n              <section id=\"block-mooc-nav-block-mooc-nav-nav\" class=\"mooc-nav-block-left block block-mooc-nav-block contextual-links-region block-mooc-nav-block-mooc-nav column\" role=\"navigation\" aria-label$=\"[[outlineTitle]]\">\n                <div class=\"block-mooc-nav-block-mooc-title black white-text\">[[outlineTitle]]</div>\n                <div id=\"outline\"><slot name=\"outline\"></slot></div>\n              </section>\n              <div id=\"blocks\"><slot name=\"blocks\"></slot></div>\n            </responsive-grid-col>\n            <responsive-grid-col xl=\"8\" lg=\"8\" md=\"9\" sm=\"7\" xs=\"12\">\n              <a id=\"main-content\" class=\"scrollspy\" data-scrollspy=\"scrollspy\"></a>\n              <div class=\"column\">\n                <div id=\"content\"><slot name=\"content\"></slot></div>\n              </div>\n            </responsive-grid-col>\n          </responsive-grid-row>\n        </section>\n        <a class=\"exit-off-canvas\"></a>\n      </div>\n    </main>"]);_templateObject_229b78c06a9011e9a3fbc91c56f16a14=function _templateObject_229b78c06a9011e9a3fbc91c56f16a14(){return data};return data}/**
 * `lrnapp-book`
 * A LRN element
 *
 * @demo demo/index.html
 * @microcopy
 * - node / circle - A progress circle on the line
 * - nodes / items - the list of items in the progress bar
 * - bubble - reserved for when events fire out of an element or value is tracking events
 * - percentage - amount complete either in the bar or the nodes themselves
 * - bar - the underlayed bar that's tracking overall progression
 * - author mode - authoring mode
 */(0,_polymerLegacy.Polymer)({_template:(0,_polymerLegacy.html)(_templateObject_229b78c06a9011e9a3fbc91c56f16a14()),is:"mooc-content",observers:["_routeChanged(data, route, endPoint)"],properties:{/**
     * Source of data
     */sourcePath:{type:String},/**
     * Full outline path
     */fullOutlinePath:{type:String},/**
     * App route tracking.
     */route:{type:Object,notify:!0/* transition */ /* transition */},/**
     * Title for the content
     */currentTitle:{type:String},/**
     * Params for the request for outline/book to load.
     */requestParams:{type:Object,notify:!0,value:{node:null}},/**
     * Returned data for processing.
     */pageData:{type:Object,value:{}},/**
     * Returned data for processing.
     */outlineData:{type:Object,value:{}},/**
     * Ensure scrolling doesn't influence during a transition.
     */resetScroll:{type:Boolean,value:!1},/**
     * Store current page data.
     */responseData:{type:Object,value:{}},/**
     * BasePath from drupal
     */basePath:{type:String},/**
     * elmslnCourse from drupal
     */elmslnCourse:{type:String},/**
     * nav title
     */outlineTitle:{type:String},/**
     * Node ID
     */nid:{type:Number},/**
     * loading pegged to the ajax call running
     */_loading:{type:Boolean,observer:"_contentLoading",value:!1},/**
     * loading pegged to the ajax call running
     */loading:{type:Boolean,reflectToAttribute:!0,value:!1},/**
     * Aliases
     */aliases:{type:Array},/**
     * active item for tracking reference after clicks.
     */activeNodeItem:{type:Object,value:null}},/**
   * Ensure modal is closed on tap of an item.
   */_modalTap:function _modalTap(e){var normalizedEvent=(0,_polymerDom.dom)(e),local=normalizedEvent.localTarget;// verify that it is a button√ü
if("LRNSYS-BUTTON"===local.tagName){if(null!=this.activeNodeItem){this.activeNodeItem.classList.remove("book-menu-item-active")}this.activeNodeItem=local;this.activeNodeItem.classList.add("book-menu-item-active");this.$.outlinepopover.toggleDialog()}},/**
   * Notice loading state has changed.
   */_contentLoading:function _contentLoading(newValue,oldValue){var _this=this;if(("undefined"===typeof newValue?"undefined":babelHelpers.typeof(newValue))!==("undefined"===typeof void 0?"undefined":"undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))&&!newValue){setTimeout(function(){_this.loading=!1;_this._resetScroll("anchor");_this.$["main-content"].focus()},500)}else{this.loading=!0}},/**
   * Callback to push the data into the page.
   */handleResponse:function handleResponse(e){// handle the HTML we just got
if(babelHelpers.typeof(this.pageData.data)!==("undefined"===typeof void 0?"undefined":"undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))){var data=this.pageData.data;// test for advanced ops
if(babelHelpers.typeof(data.ops.redirect)!==("undefined"===typeof void 0?"undefined":"undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))){this.set("route.path",data.ops.redirect);this._routeChanged(this.data,this.route,this.endPoint)}else{this.outlineTitle=data.bookOutline.subject;this.$.content.innerHTML=data.content;this.$.navigation.innerHTML=data.topNavigation;this.$.outline.innerHTML=data.bookOutline.content;this.$.options.innerHTML=data.options;// inject styles, destroying previous ones
this.__injectStyle(data.styles);// fire drupal behaviors.. this is evil. Polymer is invoking Drupal behaviors..
window.Drupal.attachBehaviors(document,window.Drupal.settings);// first time this fires let's get the outline block in the background
if(babelHelpers.typeof(this.outlineData.data)===("undefined"===typeof void 0?"undefined":"undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))){this.$.fulloutlinepath.generateRequest()}async.microTask.run(function(){window.dispatchEvent(new Event("resize"))})}}},/**
   * Callback to push the data into the page.
   */handleOutlineResponse:function handleOutlineResponse(e){// handle the HTML we just got
var data=this.outlineData.data;if(("undefined"===typeof data?"undefined":babelHelpers.typeof(data))!==("undefined"===typeof void 0?"undefined":"undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))){this.$.outlinemodal.innerHTML=data.outline;this.aliases=data.aliases}},/**
   * If the current route is outside the scope of our app then allow
   * the website to break out of the single page application routing.
   *
   * This is really critical that we get happy paths that don't trigger a redirec
   * loop so some of the logic will seem a bit repetative but we're trying to trap
   * may different potentially valid addresses / use-cases which still must trigger
   * a reload within the app (without looping) and still allow outbound links to go
   * through as they should.
   */_routeChanged:function _routeChanged(data,route,endPoint){if("string"===typeof route.path){// target for url alias that might be delivered into content
// and menu items throughout the UI
var urlAlias=route.path.replace("/"+this.elmslnCourse+"/","");if(route.path.startsWith("/"+this.elmslnCourse+"/node/")){var tmp=route.path.split("/");// ensure this is a number so we know what we're doing
if(!isNaN(parseFloat(tmp[tmp.length-1]))&&isFinite(tmp[tmp.length-1])){this.nid=tmp[tmp.length-1];// trigger change if data location changed
this.requestParams.node=this.nid;// send request out the door to the actual end point
this.$.pageajax.generateRequest();// @todo better state management in the modal itself
// so that we can detect if it's open or not without
// something stupid like this
// close outline dialog if it's open
if(this.$.outlinepopover.$.modal.opened){this.$.outlinepopover.$.modal.opened=!1}return}else if("edit"==tmp[tmp.length-1]){window.location.reload()}}// test for an node alias, then send off
else if(babelHelpers.typeof(this.aliases[urlAlias])!==("undefined"===typeof void 0?"undefined":"undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))){this.nid=this.aliases[urlAlias].replace("node/","");// trigger change if data location changed
this.requestParams.node=this.nid;this.$.pageajax.generateRequest();// @todo better state management in the modal itself
// so that we can detect if it's open or not without
// something stupid like this
if(this.$.outlinepopover.$.modal.opened){this.$.outlinepopover.$.modal.opened=!1}return}// implies front page on first load, so fix that
else if(""==urlAlias){this.requestParams.node=this.nid;// ensure that we don't see this again
this.set("route.path","/"+this.elmslnCourse+"/node/"+this.nid);this.$.pageajax.generateRequest();return}}// ensure nothing went super wrong which may be leading to a busted site
// so we can avoid an infinite loop
if(""!=this.elmslnCourse){// reload the page which since route changed will load that page
window.location.reload()}},/**
   * Reset scroll position visually and internally data wise.
   */_resetScroll:function _resetScroll(){var item=0<arguments.length&&arguments[0]!==void 0?arguments[0]:"anchor";this.resetScroll=!0;this.$[item].scrollIntoView({block:"nearest",behavior:"smooth"})},/**
   * Simple way to convert from object to array.
   */_toArray:function _toArray(obj){return Object.keys(obj).map(function(key){return obj[key]})},/**
   * Inject styles dynamically from inline CSS blocks.
   * This is a function and capability that will drive Potter nuts.
   * Because of this we're using the unheard of ___ convention. This
   * means that it's such a private function that we wish we'd never
   * actually have thought of it. Fortunately, it came from a stackoverflow
   * article so we don't have to take credit for our own undoing with
   * what this enables.
   */__injectStyle:function __injectStyle(style){// target and wipe our id area by force
if(null!=this.shadowRoot.querySelector("#hackycsspotterhates")){(0,_polymerDom.dom)(this.$.hackycontainer).innerHTML=""}// construct a new style tag and inject it overtop of what was there previously
var customStyle=document.createElement("style","custom-style");customStyle.id="hackycsspotterhates";// inject our styles
customStyle.textContent=style;// we have now successfully ruined something encapsulated and once beautiful
(0,_polymerDom.dom)(this.$.hackycontainer).appendChild(customStyle)}})});