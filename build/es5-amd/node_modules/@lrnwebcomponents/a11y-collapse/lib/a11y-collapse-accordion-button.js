define(["exports","../../../@polymer/polymer/polymer-element.js","../../../@polymer/polymer/lib/utils/render-status.js","./a11y-collapse-button-styles.js","../../../@polymer/iron-icon/iron-icon.js","../../../@polymer/paper-tooltip/paper-tooltip.js"],function(_exports,_polymerElement,_renderStatus,_a11yCollapseButtonStyles,_ironIcon,_paperTooltip){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.A11yCollapseAccordionButton=void 0;function _templateObject_d907b070943811e98e3c411fb3099df0(){var data=babelHelpers.taggedTemplateLiteral(["\n      <style include=\"a11y-collapse-button-styles\">\n        :host #heading:focus,\n        :host #heading:hover {\n          @apply --a11y-collapse-heading-focus;\n        }\n        :host #heading:focus #text,\n        :host #heading:hover #text {\n          @apply --a11y-collapse-heading-text-focus;\n        }\n        :host #heading:focus #expand,\n        :host #heading:hover #expand {\n          @apply --a11y-collapse-icon-focus;\n        }\n      </style>\n      <div\n        id=\"heading\"\n        aria-controls=\"content\"\n        aria-expanded$=\"[[expanded]]\"\n        disabled$=\"[[disabled]]\"\n        label$=\"[[label]]\"\n        role=\"button\"\n      >\n        <div id=\"text\"><slot></slot></div>\n        <iron-icon\n          id=\"expand\"\n          aria-hidden=\"true\"\n          icon$=\"[[icon]]\"\n          rotated$=\"[[rotated]]\"\n        >\n        </iron-icon>\n      </div>\n      <paper-tooltip for=\"heading\" offset=\"24\">[[tooltip]]</paper-tooltip>\n    "],["\n      <style include=\"a11y-collapse-button-styles\">\n        :host #heading:focus,\n        :host #heading:hover {\n          @apply --a11y-collapse-heading-focus;\n        }\n        :host #heading:focus #text,\n        :host #heading:hover #text {\n          @apply --a11y-collapse-heading-text-focus;\n        }\n        :host #heading:focus #expand,\n        :host #heading:hover #expand {\n          @apply --a11y-collapse-icon-focus;\n        }\n      </style>\n      <div\n        id=\"heading\"\n        aria-controls=\"content\"\n        aria-expanded\\$=\"[[expanded]]\"\n        disabled\\$=\"[[disabled]]\"\n        label\\$=\"[[label]]\"\n        role=\"button\"\n      >\n        <div id=\"text\"><slot></slot></div>\n        <iron-icon\n          id=\"expand\"\n          aria-hidden=\"true\"\n          icon\\$=\"[[icon]]\"\n          rotated\\$=\"[[rotated]]\"\n        >\n        </iron-icon>\n      </div>\n      <paper-tooltip for=\"heading\" offset=\"24\">[[tooltip]]</paper-tooltip>\n    "]);_templateObject_d907b070943811e98e3c411fb3099df0=function _templateObject_d907b070943811e98e3c411fb3099df0(){return data};return data}/**
`a11y-collapse-accordion-button`
An accessible expand collapse.

@microcopy - the mental model for this element

  <a11y-collapse-accordion-button 
    disabled
    icon=""                         //The expand/collapse icon. Default is "icons:expand-more"
    label=""                        //The expand/collapse label. Default is "expand/collapse"
    tooltip=""                      //The expand/collapse tooltip. Default is "toggle expand/collapse"
    <p slot="heading">...</p>       //Named slot for a heading.
    ...                             //Unnamed slot for a collapsible content.
  </a11y-collapse-accordion-button>

  CSS Variables: 
  --a11y-collapse-accordion-button-horizontal-padding               //sets the horizontal padding (left and right) inside the a11y-collapse-accordion-button
  --a11y-collapse-accordion-button-vertical-padding                 //sets the horizontal padding (top and bottom) inside the a11y-collapse-accordion-button
  --a11y-collapse-accordion-button-border                           //sets the border style. Default is 0px solid black

  CSS Mixins: 
  --a11y-collapse-icon-button-icon-focus: { ... };             //sets CSS for the a11y-collapse-icon-button icon when button is focused or hovered
  --a11y-collapse-heading-focus: { ... };                      //sets CSS for the a11y-collapse heading when focused or hovered
  --a11y-collapse-heading-text-focus: { ... };                 //sets CSS for the a11y-collapse heading text when focused or hovered

 * @customElement
 * @polymer
 * @see ../a11y-collapse.js
 * @see ./a11y-collapse-button-styles.js
 */var A11yCollapseAccordionButton=/*#__PURE__*/function(_PolymerElement){babelHelpers.inherits(A11yCollapseAccordionButton,_PolymerElement);function A11yCollapseAccordionButton(){babelHelpers.classCallCheck(this,A11yCollapseAccordionButton);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(A11yCollapseAccordionButton).apply(this,arguments))}babelHelpers.createClass(A11yCollapseAccordionButton,[{key:"connectedCallback",/**
   * life cycle
   */value:function connectedCallback(){babelHelpers.get(babelHelpers.getPrototypeOf(A11yCollapseAccordionButton.prototype),"connectedCallback",this).call(this);(0,_renderStatus.afterNextRender)(this,function(){this.addEventListener("click",this._onTap.bind(this))})}/**
   * Handle tap
   */},{key:"_onTap",value:function _onTap(e){if(!this.disabled){this.dispatchEvent(new CustomEvent("a11y-collapse-tap",{bubbles:!0,cancelable:!0,composed:!0,detail:this}))}}}],[{key:"tag",get:function get(){return"a11y-collapse-accordion-button"}},{key:"template",get:function get(){return(0,_polymerElement.html)(_templateObject_d907b070943811e98e3c411fb3099df0())}},{key:"properties",get:function get(){return{/**
       * is disabled?
       */disabled:{type:Boolean,value:!1,reflectToAttribute:!0},/**
       * icon when expanded
       */expanded:{type:Boolean,value:!1,reflectToAttribute:!0},/**
       * icon for the button
       */icon:{type:String,value:"icons:expand-more"},/**
       * label for the button
       */label:{type:String,value:"expand/collapse"},/**
       * tooltip for the button
       */tooltip:{type:String,value:"toggle expand/collapse"},/**
       * If no expanded icon is set, the default icon will rotate when expanded
       */rotated:{type:Boolean,value:!1}}}}]);return A11yCollapseAccordionButton}(_polymerElement.PolymerElement);_exports.A11yCollapseAccordionButton=A11yCollapseAccordionButton;window.customElements.define(A11yCollapseAccordionButton.tag,A11yCollapseAccordionButton)});