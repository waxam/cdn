/*!
 * wavesurfer.js 2.1.0 (Mon Oct 01 2018 11:34:54 GMT+0200 (Central European Summer Time))
 * https://github.com/katspaugh/wavesurfer.js
 * @license BSD-3-Clause
 */
!function (e, r) {
  "object" == (typeof exports === "undefined" ? "undefined" : babelHelpers.typeof(exports)) && "object" == (typeof module === "undefined" ? "undefined" : babelHelpers.typeof(module)) ? module.exports = r() : "function" == typeof define && define.amd ? define("minimap", [], r) : "object" == (typeof exports === "undefined" ? "undefined" : babelHelpers.typeof(exports)) ? exports.minimap = r() : (e.WaveSurfer = e.WaveSurfer || {}, e.WaveSurfer.minimap = r());
}(window, function () {
  return function (i) {
    var t = {};

    function n(e) {
      if (t[e]) return t[e].exports;
      var r = t[e] = {
        i: e,
        l: !1,
        exports: {}
      };
      return i[e].call(r.exports, r, r.exports, n), r.l = !0, r.exports;
    }

    return n.m = i, n.c = t, n.d = function (e, r, i) {
      n.o(e, r) || Object.defineProperty(e, r, {
        enumerable: !0,
        get: i
      });
    }, n.r = function (e) {
      "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
        value: "Module"
      }), Object.defineProperty(e, "__esModule", {
        value: !0
      });
    }, n.t = function (r, e) {
      if (1 & e && (r = n(r)), 8 & e) return r;
      if (4 & e && "object" == babelHelpers.typeof(r) && r && r.__esModule) return r;
      var i = Object.create(null);
      if (n.r(i), Object.defineProperty(i, "default", {
        enumerable: !0,
        value: r
      }), 2 & e && "string" != typeof r) for (var t in r) {
        n.d(i, t, function (e) {
          return r[e];
        }.bind(null, t));
      }
      return i;
    }, n.n = function (e) {
      var r = e && e.__esModule ? function () {
        return e.default;
      } : function () {
        return e;
      };
      return n.d(r, "a", r), r;
    }, n.o = function (e, r) {
      return Object.prototype.hasOwnProperty.call(e, r);
    }, n.p = "localhost:8080/dist/plugin/", n(n.s = 1);
  }([, function (e, r, i) {
    "use strict";

    function t(e, r) {
      for (var i = 0; i < r.length; i++) {
        var t = r[i];
        t.enumerable = t.enumerable || !1, t.configurable = !0, "value" in t && (t.writable = !0), Object.defineProperty(e, t.key, t);
      }
    }

    function n(e, r, i) {
      return r && t(e.prototype, r), i && t(e, i), e;
    }

    Object.defineProperty(r, "__esModule", {
      value: !0
    }), r.default = void 0;

    var o = function () {
      function s(e, r) {
        var i = this;

        if (function (e, r) {
          if (!babelHelpers.instanceof(e, r)) throw new TypeError("Cannot call a class as a function");
        }(this, s), this.params = r.util.extend({}, r.params, {
          showRegions: !1,
          showOverview: !1,
          overviewBorderColor: "green",
          overviewBorderSize: 2,
          container: !1,
          height: Math.max(Math.round(r.params.height / 4), 20)
        }, e, {
          scrollParent: !1,
          fillParent: !0
        }), "string" == typeof e.container) {
          var t = document.querySelector(e.container);
          t || console.warn("Wavesurfer minimap container ".concat(e.container, " was not found! The minimap will be automatically appended below the waveform.")), this.params.container = t;
        }

        e.container || (this.params.container = r.util.style(document.createElement("minimap"), {
          display: "block"
        })), this.drawer = new r.Drawer(this.params.container, this.params), this.wavesurfer = r, this.util = r.util, this.renderEvent = "MediaElement" === r.params.backend ? "waveform-ready" : "ready", this.overviewRegion = null, this.drawer.createWrapper(), this.createElements();
        var n = !1;
        this._onShouldRender = function () {
          n || (i.bindWavesurferEvents(), i.bindMinimapEvents(), n = !0), document.body.contains(i.params.container) || r.container.insertBefore(i.params.container, null), i.wavesurfer.regions && i.params.showRegions && i.regions(), i.render();
        }, this._onAudioprocess = function (e) {
          i.drawer.progress(i.wavesurfer.backend.getPlayedPercents());
        }, this._onSeek = function () {
          return i.drawer.progress(r.backend.getPlayedPercents());
        }, this._onScroll = function (e) {
          i.draggingOverview || i.moveOverviewRegion(e.target.scrollLeft / i.ratio);
        }, this._onMouseover = function (e) {
          i.draggingOverview && (i.draggingOverview = !1);
        };
        var o = 0;
        this._onResize = r.util.debounce(function () {
          o != i.drawer.wrapper.clientWidth && (o = i.drawer.wrapper.clientWidth, i.render(), i.drawer.progress(i.wavesurfer.backend.getPlayedPercents()));
        });
      }

      return n(s, null, [{
        key: "create",
        value: function value(r) {
          return {
            name: "minimap",
            deferInit: !(!r || !r.deferInit) && r.deferInit,
            params: r,
            staticProps: {
              initMinimap: function initMinimap(e) {
                console.warn("Deprecated initMinimap!"), r = e, this.initPlugins("minimap");
              }
            },
            instance: s
          };
        }
      }]), n(s, [{
        key: "init",
        value: function value() {
          this.wavesurfer.isReady && this._onShouldRender(), this.wavesurfer.on(this.renderEvent, this._onShouldRender);
        }
      }, {
        key: "destroy",
        value: function value() {
          window.removeEventListener("resize", this._onResize, !0), window.removeEventListener("orientationchange", this._onResize, !0), this.wavesurfer.drawer.wrapper.removeEventListener("mouseover", this._onMouseover), this.wavesurfer.un(this.renderEvent, this._onShouldRender), this.wavesurfer.un("seek", this._onSeek), this.wavesurfer.un("scroll", this._onScroll), this.wavesurfer.un("audioprocess", this._onAudioprocess), this.drawer.destroy(), this.overviewRegion = null, this.unAll();
        }
      }, {
        key: "regions",
        value: function value() {
          var r = this;
          this.regions = {}, this.wavesurfer.on("region-created", function (e) {
            r.regions[e.id] = e, r.renderRegions();
          }), this.wavesurfer.on("region-updated", function (e) {
            r.regions[e.id] = e, r.renderRegions();
          }), this.wavesurfer.on("region-removed", function (e) {
            delete r.regions[e.id], r.renderRegions();
          });
        }
      }, {
        key: "renderRegions",
        value: function value() {
          var e,
              o = this,
              r = this.drawer.wrapper.querySelectorAll("region");

          for (e = 0; e < r.length; ++e) {
            this.drawer.wrapper.removeChild(r[e]);
          }

          Object.keys(this.regions).forEach(function (e) {
            var r = o.regions[e],
                i = o.drawer.width * ((r.end - r.start) / o.wavesurfer.getDuration()),
                t = o.drawer.width * (r.start / o.wavesurfer.getDuration()),
                n = o.util.style(document.createElement("region"), {
              height: "inherit",
              backgroundColor: r.color,
              width: i + "px",
              left: t + "px",
              display: "block",
              position: "absolute"
            });
            n.classList.add(e), o.drawer.wrapper.appendChild(n);
          });
        }
      }, {
        key: "createElements",
        value: function value() {
          this.drawer.createElements(), this.params.showOverview && (this.overviewRegion = this.util.style(document.createElement("overview"), {
            height: this.drawer.wrapper.offsetHeight - 2 * this.params.overviewBorderSize + "px",
            width: "0px",
            display: "block",
            position: "absolute",
            cursor: "move",
            border: this.params.overviewBorderSize + "px solid " + this.params.overviewBorderColor,
            zIndex: 2,
            opacity: this.params.overviewOpacity
          }), this.drawer.wrapper.appendChild(this.overviewRegion));
        }
      }, {
        key: "bindWavesurferEvents",
        value: function value() {
          window.addEventListener("resize", this._onResize, !0), window.addEventListener("orientationchange", this._onResize, !0), this.wavesurfer.on("audioprocess", this._onAudioprocess), this.wavesurfer.on("seek", this._onSeek), this.params.showOverview && (this.wavesurfer.on("scroll", this._onScroll), this.wavesurfer.drawer.wrapper.addEventListener("mouseover", this._onMouseover));
        }
      }, {
        key: "bindMinimapEvents",
        value: function value() {
          var i = this,
              r = {
            clientX: 0,
            clientY: 0
          },
              t = 0,
              n = !0;
          this.params.interact && (this.drawer.wrapper.addEventListener("click", function (e) {
            i.fireEvent("click", e, i.drawer.handleEvent(e));
          }), this.on("click", function (e, r) {
            n ? (i.drawer.progress(r), i.wavesurfer.seekAndCenter(r)) : n = !0;
          })), this.params.showOverview && (this.overviewRegion.addEventListener("mousedown", function (e) {
            i.draggingOverview = !0, t = e.layerX, r.clientX = e.clientX, r.clientY = e.clientY;
          }), this.drawer.wrapper.addEventListener("mousemove", function (e) {
            i.draggingOverview && i.moveOverviewRegion(e.clientX - i.drawer.container.getBoundingClientRect().left - t);
          }), this.drawer.wrapper.addEventListener("mouseup", function (e) {
            r.clientX - e.clientX == 0 && r.clientX - e.clientX == 0 ? (n = !0, i.draggingOverview = !1) : i.draggingOverview && (n = !1, i.draggingOverview = !1);
          }));
        }
      }, {
        key: "render",
        value: function value() {
          var e = this.drawer.getWidth(),
              r = this.wavesurfer.backend.getPeaks(e, 0, e);
          this.drawer.drawPeaks(r, e, 0, e), this.drawer.progress(this.wavesurfer.backend.getPlayedPercents()), this.params.showOverview && (this.ratio = this.wavesurfer.drawer.width / this.drawer.width, this.waveShowedWidth = this.wavesurfer.drawer.width / this.ratio, this.waveWidth = this.wavesurfer.drawer.width, this.overviewWidth = this.drawer.width / this.ratio, this.overviewPosition = 0, this.moveOverviewRegion(this.wavesurfer.drawer.wrapper.scrollLeft / this.ratio), this.overviewRegion.style.width = this.overviewWidth - 2 * this.params.overviewBorderSize + "px");
        }
      }, {
        key: "moveOverviewRegion",
        value: function value(e) {
          e < 0 ? this.overviewPosition = 0 : e + this.overviewWidth < this.drawer.width ? this.overviewPosition = e : this.overviewPosition = this.drawer.width - this.overviewWidth, this.overviewRegion.style.left = this.overviewPosition + "px", this.draggingOverview && (this.wavesurfer.drawer.wrapper.scrollLeft = this.overviewPosition * this.ratio);
        }
      }]), s;
    }();

    r.default = o, e.exports = r.default;
  }]);
});