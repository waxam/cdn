define(["exports", "require", "../../lit-element/lit-element.js", "../schema-behaviors/schema-behaviors.js", "./lib/oerschema.js"], function (_exports, _require, _litElement, _schemaBehaviors, _oerschema) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.OerSchemaElement = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _templateObject2_8a92a2c0c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: inline-block;\n        }\n      "]);

    _templateObject2_8a92a2c0c96f11ea8be5e1d5fe7ec787 = function _templateObject2_8a92a2c0c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  function _templateObject_8a92a2c0c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <span property=\"oer:", "\">\n        <slot></slot> ", "\n      </span>\n    "]);

    _templateObject_8a92a2c0c96f11ea8be5e1d5fe7ec787 = function _templateObject_8a92a2c0c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  /**
   * `oer-schema`
   * `A LRN element to wrap an oer schema prefix onto materials.`
   * @demo demo/index.html
   * @element oer-schema
   */
  var OerSchemaElement =
  /*#__PURE__*/
  function (_SchemaBehaviors) {
    babelHelpers.inherits(OerSchemaElement, _SchemaBehaviors);
    babelHelpers.createClass(OerSchemaElement, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_8a92a2c0c96f11ea8be5e1d5fe7ec787(), this.oerProperty, this.text);
      }
    }], [{
      key: "styles",

      /**
       * LitElement constructable styles enhancement
       */
      get: function get() {
        return [(0, _litElement.css)(_templateObject2_8a92a2c0c96f11ea8be5e1d5fe7ec787())];
      }
    }, {
      key: "tag",
      get: function get() {
        return "oer-schema";
      }
    }]);

    function OerSchemaElement() {
      var _this;

      babelHelpers.classCallCheck(this, OerSchemaElement);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(OerSchemaElement).call(this));
      _this.text = "";
      _this.oerProperty = "name";
      _this.typeof = "Resource";
      return _this;
    }

    babelHelpers.createClass(OerSchemaElement, [{
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        if (babelHelpers.get(babelHelpers.getPrototypeOf(OerSchemaElement.prototype), "updated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(OerSchemaElement.prototype), "updated", this).call(this, changedProperties);
        }

        changedProperties.forEach(function (oldValue, propName) {
          if (propName == "relatedResource") {
            _this2._OERLink = _this2._generateforComponentLink(_this2.relatedResource);
          }
        });
      }
    }, {
      key: "_generateforComponentLink",
      value: function _generateforComponentLink(source) {
        if (document && document.head) {
          // remove existing if this is moving around
          if (this._OERLink) {
            document.head.removeChild(this._OERLink);
          }

          var link = document.createElement("link");
          link.setAttribute("property", "oer:forComponent");
          link.setAttribute("content", this.relatedResource);
          document.head.appendChild(link);
          return link;
        }
      }
    }], [{
      key: "properties",
      get: function get() {
        return _objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(OerSchemaElement), "properties", this), {
          /**
           * Text to wire into the middle of the element.
           * This is easier to manage then slotted data though
           * this supports both methods.
           */
          text: {
            type: String
          },

          /**
           * Property value for this oer resource
           */
          oerProperty: {
            type: String,
            attribute: "oer-property"
          },

          /**
           * Property value for this oer resource
           */
          typeof: {
            type: String
          },

          /**
           * Related Resource ID
           */
          relatedResource: {
            type: String,
            attribute: "related-resource"
          }
        });
      }
    }, {
      key: "haxProperties",
      get: function get() {
        new Promise(function (res, rej) {
          return _require.default(["../hax-iconset/hax-iconset.js"], res, rej);
        });
        var oerSchema = new _oerschema.OERSchema();
        return {
          canScale: false,
          canPosition: false,
          canEditSource: false,
          gizmo: {
            title: "Schema",
            description: "Schematized element area",
            icon: "hax:oerschema",
            color: "blue",
            groups: ["Instructional"],
            handles: [{
              type: "inline",
              text: "text"
            }],
            meta: {
              author: "ELMS:LN",
              inlineOnly: true
            }
          },
          settings: {
            quick: [{
              slot: "",
              title: "Text",
              inputMethod: "textfield",
              icon: "editor:title"
            }],
            configure: [{
              slot: "",
              title: "Text",
              inputMethod: "textfield",
              icon: "editor:title"
            }, {
              property: "typeof",
              title: "Schema typeof",
              inputMethod: "select",
              allowNull: true,
              options: oerSchema.types
            }, {
              property: "oerProperty",
              title: "Schema property",
              description: "The OER Schema property this represents",
              inputMethod: "select",
              allowNull: true,
              options: {
                name: "name",
                additionalType: "additionalType",
                description: "description",
                image: "image",
                mainEntityOfPage: "mainEntityOfPage",
                sameAs: "sameAs",
                uri: "uri"
              }
            }, {
              property: "relatedResource",
              title: "Related resource",
              description: "A reference to the related Schema resource",
              inputMethod: "textfield",
              icon: "editor:title"
            }],
            advanced: []
          },
          saveOptions: {
            unsetAttributes: ["_oerlink"]
          }
        };
      }
    }]);
    return OerSchemaElement;
  }((0, _schemaBehaviors.SchemaBehaviors)(_litElement.LitElement));

  _exports.OerSchemaElement = OerSchemaElement;
  window.customElements.define(OerSchemaElement.tag, OerSchemaElement);
});