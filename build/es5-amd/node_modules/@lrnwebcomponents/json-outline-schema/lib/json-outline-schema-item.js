define(["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.JSONOutlineSchemaItem = void 0;

  /**
   * Copyright 2019 The Pennsylvania State University
   * @license Apache-2.0, see License.md for full text.
   */

  /**
   * `json-outline-schema-item`
   * @element json-outline-schema-item
   * `A single item inside of json outline schema's items array`
   *
   * @microcopy - language worth noting:
   *  - outline-schema - a schema for expressing the relationship between structured content items
   *  - item - one item within an outline with reference to a resource to load the contents of the item
   */
  var JSONOutlineSchemaItem = /*#__PURE__*/function () {
    /**
     * Establish defaults for a new item
     */
    function JSONOutlineSchemaItem() {
      babelHelpers.classCallCheck(this, JSONOutlineSchemaItem);
      this.id = "item-" + this.generateUUID();
      this.title = "New item";
      this.location = "";
      this.slug = "";
      this.description = "";
      this.parent = "";
      this.metadata = {};
      this.order = 0;
      this.indent = 0;
    }
    /**
     * Load data from the location specified
     */


    babelHelpers.createClass(JSONOutlineSchemaItem, [{
      key: "readLocation",
      value: function readLocation() {
        var basePath = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
        // @todo read location and return contents of it
        //    if (file_exists(basePath + this.location)) {
        //      return file_get_contents(basePath + this.location);
        //    }
        return FALSE;
      }
      /**
       * Load data from the location specified
       */

    }, {
      key: "writeLocation",
      value: function writeLocation(body) {
        var basePath = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "";
        //    if (file_exists(basePath + this.location)) {
        //      return file_put_contents(basePath + this.location, body);
        //    }
        return FALSE;
      }
      /**
       * Generate a UUID
       */

    }, {
      key: "generateUUID",
      value: function generateUUID() {
        return "ss-s-s-s-sss".replace(/s/g, this._uuidPart);
      }
    }, {
      key: "_uuidPart",
      value: function _uuidPart() {
        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);
      }
    }]);
    return JSONOutlineSchemaItem;
  }();

  _exports.JSONOutlineSchemaItem = JSONOutlineSchemaItem;
});