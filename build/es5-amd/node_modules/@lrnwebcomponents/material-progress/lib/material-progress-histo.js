define(["exports", "../../../@polymer/polymer/polymer-element.js", "../../../@polymer/polymer/lib/legacy/class.js", "./material-progress-behavior.js"], function (_exports, _polymerElement, _class, _materialProgressBehavior) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.MaterialProgressHisto = void 0;

  function _templateObject_69de4ba0d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <style>\n        #barsContainer {\n          @apply --layout-vertical;\n          @apply --material-progress-histo-style;\n        }\n        :host > #barsContainer > ::content > * {\n          height: 0px;\n        }\n        :host > #barsContainer > ::content > .bar {\n          border-radius: calc(var(--material-progress-bar-height) / 2);\n        }\n        :host > #barsContainer > ::content > .bar.visible:not(.last) {\n          margin-bottom: 12px;\n        }\n        :host > #barsContainer > ::content > .bar.visible {\n          min-width: var(--material-progress-bar-height);\n        }\n        :host > #barsContainer > ::content > .bar:not(.visible) > * {\n          visibility: hidden;\n        }\n        :host > #barsContainer > ::content > * > span {\n          margin: 0 calc(var(--material-progress-bar-height) * 1 / 3);\n        }\n      </style>\n      <div id=\"barsContainer\">\n        <slot id=\"content\" name=\".bar[data-value]\">\n          <span>test</span>\n        </slot>\n      </div>\n      <div class=\"legend\" hidden$=\"[[_legendNeeded]]\">\n        <template is=\"dom-repeat\" items=\"[[_legendItems]]\" as=\"l\">\n          <span style$=\"color: [[l.color]];\">[[l.label]]</span>\n        </template>\n      </div>\n    "], ["\n      <style>\n        #barsContainer {\n          @apply --layout-vertical;\n          @apply --material-progress-histo-style;\n        }\n        :host > #barsContainer > ::content > * {\n          height: 0px;\n        }\n        :host > #barsContainer > ::content > .bar {\n          border-radius: calc(var(--material-progress-bar-height) / 2);\n        }\n        :host > #barsContainer > ::content > .bar.visible:not(.last) {\n          margin-bottom: 12px;\n        }\n        :host > #barsContainer > ::content > .bar.visible {\n          min-width: var(--material-progress-bar-height);\n        }\n        :host > #barsContainer > ::content > .bar:not(.visible) > * {\n          visibility: hidden;\n        }\n        :host > #barsContainer > ::content > * > span {\n          margin: 0 calc(var(--material-progress-bar-height) * 1 / 3);\n        }\n      </style>\n      <div id=\"barsContainer\">\n        <slot id=\"content\" name=\".bar[data-value]\">\n          <span>test</span>\n        </slot>\n      </div>\n      <div class=\"legend\" hidden\\$=\"[[_legendNeeded]]\">\n        <template is=\"dom-repeat\" items=\"[[_legendItems]]\" as=\"l\">\n          <span style\\$=\"color: [[l.color]];\">[[l.label]]</span>\n        </template>\n      </div>\n    "]);

    _templateObject_69de4ba0d34d11ea880ba1e93364c49c = function _templateObject_69de4ba0d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  var MaterialProgressHisto =
  /*#__PURE__*/
  function (_mixinBehaviors) {
    babelHelpers.inherits(MaterialProgressHisto, _mixinBehaviors);

    function MaterialProgressHisto() {
      babelHelpers.classCallCheck(this, MaterialProgressHisto);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(MaterialProgressHisto).apply(this, arguments));
    }

    babelHelpers.createClass(MaterialProgressHisto, [{
      key: "_getWidthForBar",
      value: function _getWidthForBar(barValue, barValuesSum, maxBarValue, barHeight) {
        var scaleBase = this.scaleToSum ? barValuesSum : maxBarValue;
        var width = (scaleBase > 0 ? Math.floor(barValue / scaleBase * 10000) / 100 : "0") + "%";
        return width;
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_69de4ba0d34d11ea880ba1e93364c49c());
      }
    }, {
      key: "tag",
      get: function get() {
        return "material-progress-histo";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * Scales the bar relatively to the sum of all bars
           * instead of the maximum bar `data-value`.
           */
          scaleToSum: {
            type: Boolean,
            value: false,
            observer: "_refresh"
          }
        };
      }
    }]);
    return MaterialProgressHisto;
  }((0, _class.mixinBehaviors)([MaterialProgressBehaviorImpl], _polymerElement.PolymerElement));

  _exports.MaterialProgressHisto = MaterialProgressHisto;
  window.customElements.define(MaterialProgressHisto.tag, MaterialProgressHisto);
});