define(["exports", "../../@polymer/polymer/polymer-element.js", "../../@vowo/chart-elements/chart-elements.js"], function (_exports, _polymerElement, _chartElements) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnsysChartjs = void 0;

  function _templateObject_89d0b250c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n        }\n      </style>\n      <div>\n        <!--\n        Use the logic from the logic of the template dom-if's to allow for abstraction for all the chart types\n      -->\n        <chart-line labels=\"{{labels}}\" data=\"[[data]]\"></chart-line>\n      </div>\n    "]);

    _templateObject_89d0b250c96f11ea8be5e1d5fe7ec787 = function _templateObject_89d0b250c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  /**
  `lrnsys-chartjs`
  A LRN element
  
  * @demo demo/index.html
  */
  var LrnsysChartjs =
  /*#__PURE__*/
  function (_PolymerElement) {
    babelHelpers.inherits(LrnsysChartjs, _PolymerElement);

    function LrnsysChartjs() {
      babelHelpers.classCallCheck(this, LrnsysChartjs);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(LrnsysChartjs).apply(this, arguments));
    }

    babelHelpers.createClass(LrnsysChartjs, [{
      key: "ready",
      value: function ready() {
        babelHelpers.get(babelHelpers.getPrototypeOf(LrnsysChartjs.prototype), "ready", this).call(this);
        this.data = {
          labels: this.labels,
          datasets: [{
            label: "My First dataset",
            backgroundColor: "rgba(220,220,220,0.2)",
            borderColor: "rgba(220,220,220,1)",
            borderWidth: 1,
            pointBackgroundColor: "rgba(220,220,220,1)",
            pointBorderColor: "#fff",
            pointHoverBackgroundColor: "#fff",
            pointHoverBorderColor: "rgba(220,220,220,1)",
            data: [65, 59, 80, 81, 56, 55, 40]
          }, {
            label: "My Second dataset",
            backgroundColor: "rgba(151,187,205,0.2)",
            borderColor: "rgba(151,187,205,1)",
            borderWidth: 1,
            pointBackgroundColor: "rgba(151,187,205,1)",
            pointBorderColor: "#fff",
            pointHighlightFill: "#fff",
            pointHoverBorderColor: "rgba(151,187,205,1)",
            data: [28, 48, 40, 19, 86, 27, 90]
          }]
        };
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_89d0b250c96f11ea8be5e1d5fe7ec787());
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnsys-chartjs";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          labels: {
            type: Array,
            value: ["January", "February", "March", "April", "May", "June", "July"]
          },
          data: {
            type: Object,
            value: {}
          }
        };
      }
    }]);
    return LrnsysChartjs;
  }(_polymerElement.PolymerElement);

  _exports.LrnsysChartjs = LrnsysChartjs;
  window.customElements.define(LrnsysChartjs.tag, LrnsysChartjs);
});