define(["exports","../../@polymer/polymer/polymer-element.js","../../@polymer/polymer/lib/utils/render-status.js","../hax-body-behaviors/lib/HAXWiring.js","../schema-behaviors/schema-behaviors.js","../../@polymer/polymer/lib/elements/dom-repeat.js"],function(_exports,_polymerElement,_renderStatus,_HAXWiring,_schemaBehaviors,_domRepeat){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.TaskList=void 0;function _templateObject_815562f0a44b11e98c881fc26e93d8f9(){var data=babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n        }\n      </style>\n      <h3><span property=\"oer:name\">[[name]]</span></h3>\n      <ol>\n        <template is=\"dom-repeat\" items=\"[[tasks]]\" as=\"task\">\n          <li><span property=\"oer:task\">[[task.name]]</span></li>\n        </template>\n      </ol>\n    "]);_templateObject_815562f0a44b11e98c881fc26e93d8f9=function _templateObject_815562f0a44b11e98c881fc26e93d8f9(){return data};return data}/**
 * `task-list`
 * Visual listing of tasks with different design components that is
 * OER Schema capable!
 * @demo demo/index.html
 * @microcopy - the mental model for this element
 * - task - a singular thing to accomplish
 */var TaskList=/*#__PURE__*/function(_SchemaBehaviors){babelHelpers.inherits(TaskList,_SchemaBehaviors);function TaskList(){var _this;babelHelpers.classCallCheck(this,TaskList);_this=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(TaskList).call(this));(0,_renderStatus.afterNextRender)(babelHelpers.assertThisInitialized(_this),function(){this.HAXWiring=new _HAXWiring.HAXWiring;this.HAXWiring.setup(TaskList.haxProperties,TaskList.tag,this)});return _this}babelHelpers.createClass(TaskList,[{key:"_generateResourceLink",value:function _generateResourceLink(relatedResource){if(this._resourceLink){document.head.removeChild(this._resourceLink)}var link=document.createElement("link");link.setAttribute("property","oer:forComponent");link.setAttribute("content",relatedResource);document.head.appendChild(link);return link}/**
   * Ensure the values change.
   */},{key:"_valueChanged",value:function _valueChanged(e){for(var i in e.base){for(var j in e.base[i]){this.notifyPath("tasks."+i+"."+j)}}}/**
   * Attached to the DOM, now fire.
   */},{key:"connectedCallback",value:function connectedCallback(){babelHelpers.get(babelHelpers.getPrototypeOf(TaskList.prototype),"connectedCallback",this).call(this);this.setAttribute("typeof","oer:SupportingMaterial")}}],[{key:"template",get:function get(){return(0,_polymerElement.html)(_templateObject_815562f0a44b11e98c881fc26e93d8f9())}},{key:"tag",get:function get(){return"task-list"}},{key:"observers",get:function get(){return["_valueChanged(tasks.*)"]}},{key:"properties",get:function get(){var props={/**
       * Name of this task list
       */name:{type:String,value:"Steps to completion"},/**
       * Related Resource ID
       */relatedResource:{type:String},/**
       * Task list
       */tasks:{type:Array,value:[],notify:!0},_resourceLink:{type:Object,computed:"_generateResourceLink(relatedResource)"}};if(babelHelpers.get(babelHelpers.getPrototypeOf(TaskList),"properties",this)){props=Object.assign(props,babelHelpers.get(babelHelpers.getPrototypeOf(TaskList),"properties",this))}return props}},{key:"haxProperties",get:function get(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"Task list",description:"A list of tasks which is an ordered list",icon:"icons:list",color:"orange",groups:["Content","Instructional"],handles:[],meta:{author:"LRNWebComponents"}},settings:{quick:[{property:"name",title:"Name",description:"Name of the list",inputMethod:"textfield",icon:"editor:title"},{property:"relatedResource",title:"Related resource",description:"A reference to the related Schema resource",inputMethod:"textfield",icon:"editor:title"}],configure:[{property:"name",title:"Name",description:"Name of the list",inputMethod:"textfield",icon:"editor:title"},{property:"relatedResource",title:"Related resource",description:"A reference to the related Schema resource",inputMethod:"textfield",icon:"editor:title"},{property:"tasks",title:"Tasks",description:"The tasks to be completed",inputMethod:"array",properties:[{property:"name",title:"Name",description:"Name of the task",inputMethod:"textfield",required:!0},{property:"link",title:"Link",description:"Optional link",inputMethod:"textfield"}]}],advanced:[]}}}}]);return TaskList}((0,_schemaBehaviors.SchemaBehaviors)(_polymerElement.PolymerElement));_exports.TaskList=TaskList;window.customElements.define(TaskList.tag,TaskList)});