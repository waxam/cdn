define(["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SimpleLoginAvatar = void 0;

  /**
   * `simple-login-avatar`
   * @element simple-login-avatar
   * Inspiration from https://clicknathan.com/web-design/css-avatar-icons/
   */
  var SimpleLoginAvatar =
  /*#__PURE__*/
  function (_HTMLElement) {
    babelHelpers.inherits(SimpleLoginAvatar, _HTMLElement);
    babelHelpers.createClass(SimpleLoginAvatar, null, [{
      key: "tag",
      get: function get() {
        return "simple-login-avatar";
      }
      /**
       * life cycle
       */

    }]);

    function SimpleLoginAvatar() {
      var _this;

      var delayRender = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      babelHelpers.classCallCheck(this, SimpleLoginAvatar);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(SimpleLoginAvatar).call(this));
      _this.tag = SimpleLoginAvatar.tag;
      _this.template = document.createElement("template");

      _this.attachShadow({
        mode: "open"
      });

      if (!delayRender) {
        _this.render();
      }

      return _this;
    }

    babelHelpers.createClass(SimpleLoginAvatar, [{
      key: "connectedCallback",
      value: function connectedCallback() {
        if (window.ShadyCSS) {
          window.ShadyCSS.styleElement(this);
        }
      }
    }, {
      key: "_copyAttribute",
      value: function _copyAttribute(name, to) {
        var recipients = this.shadowRoot.querySelectorAll(to);
        var value = this.getAttribute(name);
        var fname = value == null ? "removeAttribute" : "setAttribute";
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;
        var _iteratorError = undefined;

        try {
          for (var _iterator = recipients[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
            var node = _step.value;
            node[fname](name, value);
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              _iterator.return();
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }
      }
    }, {
      key: "render",
      value: function render() {
        this.shadowRoot.innerHTML = null;
        this.template.innerHTML = this.html;

        if (window.ShadyCSS) {
          window.ShadyCSS.prepareTemplate(this.template, this.tag);
        }

        this.shadowRoot.appendChild(this.template.content.cloneNode(true));
      }
    }, {
      key: "html",
      get: function get() {
        return "\n    <style>\n      :host {\n        margin: 0;\n        display: block;\n        width: var(--simple-login-avatar-width, 200px);\n        height: var(--simple-login-avatar-height, 200px);\n        @apply --simple-login-avatar;\n      }\n      :host([hidden]){ \n        display: none;\n      } \n      #svg {\n        position: absolute;\n        width: var(--simple-login-avatar-width, 200px);\n        height: var(--simple-login-avatar-height, 200px);\n        fill: var(--simple-login-avatar-background, white);\n      }\n      .avatar {\n        position:relative;\n        margin: 0 auto;\n        width: var(--simple-login-avatar-width, 200px);\n        height: var(--simple-login-avatar-height, 200px);\n        display: block;\n        overflow: hidden;\n        text-decoration: none;\n        line-height: 240%;\n        color: var(--simple-login-avatar-background, white);\n        background: var(--simple-login-avatar-color, #36bed4);\n        border-radius: var(--simple-login-avatar-border-radius, 100%);\n      } \n    </style>\n    <div class=\"avatar\">\n      <svg id=\"svg\" viewBox=\"0 0 24 24\" preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\" style=\"pointer-events: none; display: block;\"><g><path d=\"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"></path></g></svg>\n      <slot></slot>\n    </div>";
      }
    }]);
    return SimpleLoginAvatar;
  }(babelHelpers.wrapNativeSuper(HTMLElement));

  _exports.SimpleLoginAvatar = SimpleLoginAvatar;
  window.customElements.define(SimpleLoginAvatar.tag, SimpleLoginAvatar);
});