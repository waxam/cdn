define(["exports", "../../@polymer/polymer/polymer-element.js", "../schema-behaviors/schema-behaviors.js"], function (_exports, _polymerElement, _schemaBehaviors) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.FlashCard = void 0;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _templateObject_5ed8a480545d11eba21e89082e94d7aa() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n        }\n        div.card {\n          -webkit-perspective: 800;\n          width: 400px;\n          height: 300px;\n          position: relative;\n          padding: 0;\n          margin: 0;\n          box-shadow: 0 5px 5px rgba(0, 0, 0, 0.7);\n        }\n        div.card.flipped {\n          -webkit-transform: rotatex(-180deg);\n        }\n        div.card.flipped .back {\n          z-index: 3;\n        }\n        div.card {\n          -webkit-transform-style: preserve-3d;\n          -webkit-transition: 0.5s;\n        }\n        div.card .face {\n          width: 100%;\n          height: 100%;\n          padding: 0;\n          margin: 0;\n          cursor: pointer;\n          position: absolute;\n          -webkit-backface-visibility: hidden;\n          z-index: 2;\n          font-family: Georgia;\n          font-size: 48px;\n          text-align: center;\n          line-height: 200px;\n        }\n        div.card .front {\n          position: absolute;\n          z-index: 1;\n        }\n        div.card .back {\n          -webkit-transform: rotatex(-180deg);\n        }\n      </style>\n      <div class=\"card\" id=\"card\" animated-shadow=\"true\">\n        <div class=\"face front white black-text\">Front</div>\n        <div class=\"face back black white-text\">Back</div>\n      </div>\n    "]);

    _templateObject_5ed8a480545d11eba21e89082e94d7aa = function _templateObject_5ed8a480545d11eba21e89082e94d7aa() {
      return data;
    };

    return data;
  }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `flash-card`
   * @element flash-card
   * @demo demo/index.html
   */
  var FlashCard = /*#__PURE__*/function (_SchemaBehaviors) {
    babelHelpers.inherits(FlashCard, _SchemaBehaviors);

    var _super = _createSuper(FlashCard);

    babelHelpers.createClass(FlashCard, null, [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_5ed8a480545d11eba21e89082e94d7aa());
      }
    }, {
      key: "tag",
      get: function get() {
        return "flash-card";
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(FlashCard), "properties", this)), {}, {
          /**
           * Title
           */
          title: {
            type: String
          }
        });
      }
    }]);

    function FlashCard() {
      var _this;

      babelHelpers.classCallCheck(this, FlashCard);
      _this = _super.call(this);
      setTimeout(function () {
        _this.addEventListener("mouseenter", _this._flipup.bind(babelHelpers.assertThisInitialized(_this)));

        _this.addEventListener("mouseleave", _this._flipback.bind(babelHelpers.assertThisInitialized(_this)));
      }, 0);
      return _this;
    }

    babelHelpers.createClass(FlashCard, [{
      key: "_flipup",

      /**
       * Flip up
       */
      value: function _flipup(e) {
        this.shadowRoot.querySelected("#card").classList.add("flipped");
      }
      /**
       * Flip back
       */

    }, {
      key: "_flipback",
      value: function _flipback(e) {
        this.shadowRoot.querySelected("#card").classList.remove("flipped");
      }
    }], [{
      key: "haxProperties",
      get: function get() {
        return {
          canScale: true,
          canPosition: true,
          canEditSource: true,
          gizmo: {
            title: "Flash card",
            description: "Flip the card over to learn the term",
            icon: "av:play-circle-filled",
            color: "grey",
            groups: ["Education", "Interactive"],
            handles: [],
            meta: {
              author: "ELMS:LN"
            }
          },
          settings: {
            configure: [{
              property: "title",
              title: "Title",
              description: "The title of the element",
              inputMethod: "textfield",
              icon: "editor:title"
            }],
            advanced: []
          }
        };
      }
    }]);
    return FlashCard;
  }((0, _schemaBehaviors.SchemaBehaviors)(_polymerElement.PolymerElement));

  _exports.FlashCard = FlashCard;
  window.customElements.define(FlashCard.tag, FlashCard);
});