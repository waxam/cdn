define(["exports", "../../lit-element/lit-element.js"], function (_exports, _litElement) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.WordCount = void 0;

  function _templateObject2_6c46e7d0545d11eba21e89082e94d7aa() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n        :host:after {\n          content: attr(words-text);\n          position: var(--word-count-position, relative);\n          display: var(--word-count-display, flex);\n          flex-direction: var(--word-count-flex-direction, row-reverse);\n          margin: var(--word-count-margin, 12px);\n          font-size: var(--word-count-font-size, 10px);\n          transition: var(--word-count-transition, 0.3s font-size, color ease);\n          line-height: var(--word-count-line-height, 16px);\n          color: var(--word-count-color, #888888);\n        }\n        :host(:hover):after,\n        :host(:focus):after,\n        :host(:active):after {\n          font-size: var(--word-count-font-size-hover, 12px);\n          font-weight: var(--word-count-font-weight-hover, bold);\n          color: var(--word-count-color-hover, #000000);\n        }\n        .screen-reader-text {\n          border: 0;\n          clip: rect(1px, 1px, 1px, 1px);\n          clip-path: inset(50%);\n          height: 1px;\n          margin: -1px;\n          width: 1px;\n          overflow: hidden;\n          position: absolute !important;\n          word-wrap: normal !important;\n        }\n      "]);

    _templateObject2_6c46e7d0545d11eba21e89082e94d7aa = function _templateObject2_6c46e7d0545d11eba21e89082e94d7aa() {
      return data;
    };

    return data;
  }

  function _templateObject_6c46e7d0545d11eba21e89082e94d7aa() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <slot></slot>\n      <div class=\"screen-reader-text\">", " ", "</div>\n    "]);

    _templateObject_6c46e7d0545d11eba21e89082e94d7aa = function _templateObject_6c46e7d0545d11eba21e89082e94d7aa() {
      return data;
    };

    return data;
  }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `word-count`
   * `Count the words on whatever this wraps`
   *
   * @demo demo/index.html
   * @element word-count
   */
  var WordCount = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(WordCount, _LitElement);

    var _super = _createSuper(WordCount);

    babelHelpers.createClass(WordCount, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_6c46e7d0545d11eba21e89082e94d7aa(), this.wordsPrefix, this.words);
      }
    }], [{
      key: "styles",
      get: function get() {
        return [(0, _litElement.css)(_templateObject2_6c46e7d0545d11eba21e89082e94d7aa())];
      }
    }, {
      key: "tag",
      get: function get() {
        return "word-count";
      }
    }]);

    function WordCount() {
      var _this;

      babelHelpers.classCallCheck(this, WordCount);
      _this = _super.call(this);
      _this.wordsPrefix = "Word count:";
      return _this;
    }

    babelHelpers.createClass(WordCount, [{
      key: "connectedCallback",
      value: function connectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(WordCount.prototype), "connectedCallback", this).call(this);
        this.__observer = new MutationObserver(this._updateWords.bind(this));

        this.__observer.observe(this, {
          attributes: true,
          characterData: true,
          childList: true,
          subtree: true
        });
      }
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        this.__observer.disconnect();

        babelHelpers.get(babelHelpers.getPrototypeOf(WordCount.prototype), "disconnectedCallback", this).call(this);
      }
    }, {
      key: "update",
      value: function update(changedProperties) {
        babelHelpers.get(babelHelpers.getPrototypeOf(WordCount.prototype), "update", this).call(this, changedProperties);

        if (changedProperties.has("wordsPrefix") || changedProperties.has("words")) {
          this.setAttribute("words-text", "".concat(this.wordsPrefix, " ").concat(this.words));
        }
      }
    }, {
      key: "_updateWords",

      /**
       * Update words based on data in the slot.
       */
      value: function _updateWords(mutations) {
        if (this.textContent !== "") {
          this.words = parseInt(this.textContent.split(/\s+/g).length - 1);
        } else {
          this.words = 0;
        }
      }
    }], [{
      key: "properties",
      get: function get() {
        return {
          words: {
            type: Number
          },
          wordsPrefix: {
            type: String
          }
        };
      }
    }]);
    return WordCount;
  }(_litElement.LitElement);

  _exports.WordCount = WordCount;
  window.customElements.define(WordCount.tag, WordCount);
});