define(["exports", "../../lit-element/lit-element.js"], function (_exports, _litElement) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.TwitterEmbed = void 0;

  function _templateObject2_365687a056b211eb8620237ff5403573() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host([contenteditable]) iframe {\n          pointer-events: none;\n        }\n      "]);

    _templateObject2_365687a056b211eb8620237ff5403573 = function _templateObject2_365687a056b211eb8620237ff5403573() {
      return data;
    };

    return data;
  }

  function _templateObject_365687a056b211eb8620237ff5403573() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <div\n        class=\"twitter-tweet twitter-tweet-rendered\"\n        style=\"display: flex; max-width: ", "; width: 100%; margin-top: 10px; margin-bottom: 10px;\"\n      >\n        <iframe\n          sandbox=\"allow-same-origin allow-scripts ", "\"\n          scrolling=\"no\"\n          frameborder=\"0\"\n          loading=\"lazy\"\n          allowtransparency=\"true\"\n          allowfullscreen\n          style=\"position: static; visibility: visible; width: ", "; height: 498px; display: block; flex-grow: 1;\"\n          title=\"Twitter Tweet\"\n          src=\"https://platform.twitter.com/embed/index.html?dnt=true&amp;frame=false&amp;hideCard=false&amp;hideThread=false&amp;id=", "&amp;lang=", "&amp;theme=", "&amp;widgetsVersion=223fc1c4%3A1596143124634&amp;width=", "\"\n          data-tweet-id=\"", "\"\n        >\n        </iframe>\n      </div>\n    "]);

    _templateObject_365687a056b211eb8620237ff5403573 = function _templateObject_365687a056b211eb8620237ff5403573() {
      return data;
    };

    return data;
  }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `twitter-embed`
   * `A simple way to embed tweets from twitter without their whole API, with LitElement
   *
   * @demo demo/index.html
   * @element twitter-embed
   */
  var TwitterEmbed = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(TwitterEmbed, _LitElement);

    var _super = _createSuper(TwitterEmbed);

    babelHelpers.createClass(TwitterEmbed, null, [{
      key: "tag",
      get: function get() {
        return "twitter-embed";
      }
      /**
       * HTMLElement spec
       */

    }]);

    function TwitterEmbed() {
      var _this;

      babelHelpers.classCallCheck(this, TwitterEmbed);
      _this = _super.call(this);
      _this.lang = document && document.documentElement && document.documentElement.lang ? document.documentElement.lang : "en";
      _this.dataWidth = "550px";
      _this.dataTheme = "light";
      _this.tweet = null;
      _this.tweetId = null;
      _this.allowPopups = "allow-popups";
      return _this;
    }
    /**
     * LitElement properties definition
     */


    babelHelpers.createClass(TwitterEmbed, [{
      key: "updated",

      /**
       * LitElement equivalent of attributeChangedCallback
       */
      value: function updated(changedProperties) {
        var _this2 = this;

        changedProperties.forEach(function (oldValue, propName) {
          if (propName === "noPopups") {
            if (_this2[propName]) {
              _this2.allowPopups = "";
            } else {
              _this2.allowPopups = "allow-popups";
            }
          }

          if (propName === "tweet" && _this2[propName] && _this2[propName].includes("twitter.com")) {
            _this2.tweetId = _this2[propName].split("/").pop();
          }
        });
      }
    }, {
      key: "render",

      /**
       * Popular convention / LitElement
       */
      value: function render() {
        return (0, _litElement.html)(_templateObject_365687a056b211eb8620237ff5403573(), this.dataWidth, this.allowPopups, this.dataWidth, this.tweetId, this.lang, this.dataTheme, this.dataWidth, this.tweetId);
      }
    }], [{
      key: "properties",
      get: function get() {
        return {
          tweet: {
            type: String
          },
          lang: {
            type: String
          },
          dataWidth: {
            type: String,
            attribute: "data-width"
          },
          dataTheme: {
            type: String,
            attribute: "data-theme"
          },
          tweetId: {
            type: String,
            attribute: "tweet-id"
          },
          noPopups: {
            type: Boolean,
            attribute: "no-popups"
          },
          allowPopups: {
            type: String
          }
        };
      }
      /**
       * Attached to the DOM, now fire.
       */

    }, {
      key: "haxProperties",
      get: function get() {
        return {
          canScale: true,
          canPosition: true,
          canEditSource: true,
          gizmo: {
            title: "Twitter embed",
            description: "Embed a tweet from twitter in context",
            icon: "hax:meme",
            color: "blue",
            groups: ["Social Media"],
            handles: [],
            meta: {
              author: "ELMS:LN"
            }
          },
          settings: {
            configure: [{
              attribute: "tweet",
              title: "Tweet URL",
              description: "URL of the tweet in question to be embedded",
              inputMethod: "textfield"
            }, {
              attribute: "data-theme",
              title: "Theme",
              description: "Light or dark version of twitter tweets",
              inputMethod: "select",
              options: {
                light: "Light",
                dark: "Dark"
              }
            }, {
              attribute: "no-popups",
              title: "Prevent popup on click",
              description: "This blocks the user from clicking the tweet and going to twitter.com",
              inputMethod: "boolean"
            }],
            advanced: []
          },
          demoSchema: [{
            tag: "twitter-embed",
            content: "",
            properties: {
              tweet: "https://twitter.com/btopro/status/1298632260707639298"
            }
          }]
        };
      }
    }, {
      key: "styles",
      get: function get() {
        return [(0, _litElement.css)(_templateObject2_365687a056b211eb8620237ff5403573())];
      }
    }]);
    return TwitterEmbed;
  }(_litElement.LitElement);

  _exports.TwitterEmbed = TwitterEmbed;
  customElements.define(TwitterEmbed.tag, TwitterEmbed);
});