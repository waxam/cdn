define(["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.TwitterEmbedVanilla = void 0;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `twitter-embed-vanilla`
   * `A simple way to embed tweets from twitter without their whole API.
   *
   * @demo demo/index.html
   * @element twitter-embed-vanilla
   */
  var FALLBACK_LANG = "en";

  var TwitterEmbedVanilla = /*#__PURE__*/function (_HTMLElement) {
    babelHelpers.inherits(TwitterEmbedVanilla, _HTMLElement);

    var _super = _createSuper(TwitterEmbedVanilla);

    /**
     * HTMLElement spec / class based architecture in general
     */
    function TwitterEmbedVanilla() {
      var _this;

      babelHelpers.classCallCheck(this, TwitterEmbedVanilla);
      _this = _super.call(this);
      _this.lang = document.body.getAttribute("xml:lang") || document.body.getAttribute("lang") || document.documentElement.getAttribute("xml:lang") || document.documentElement.getAttribute("lang") || navigator.language || FALLBACK_LANG;
      _this.dataWidth = _this.getAttribute("data-width") ? _this.getAttribute("data-width") : "550px";
      _this.dataTheme = _this.getAttribute("data-theme") ? _this.getAttribute("data-theme") : "light";
      _this.tweet = _this.getAttribute("tweet") ? _this.getAttribute("tweet") : null;
      _this.tweetId = _this.getAttribute("tweet-id") ? _this.getAttribute("tweet-id") : null;
      _this.allowPopups = _this.getAttribute("no-popups") ? "" : "allow-popups";
      return _this;
    }
    /**
     * HTMLElement spec
     */


    babelHelpers.createClass(TwitterEmbedVanilla, [{
      key: "attributeChangedCallback",
      value:
      /**
       * HTMLElement spec
       */
      function attributeChangedCallback(attr, oldValue, newValue) {
        if (attr == "tweet" && newValue && newValue.includes("twitter.com")) {
          this.tweetId = newValue.split("/").pop();
        }

        if (attr == "no-popups") {
          this.allowPopups = newValue == "no-popups" || newValue == "" || !newValue || newValue == null || newValue == "null" ? "" : "allow-popups";
        }

        if (["lang", "no-popups", "tweet-id", "data-width", "data-theme"].includes(attr)) {
          this.innerHTML = this.html;
        }
      }
    }, {
      key: "dataWidth",
      get: function get() {
        return this.getAttribute("data-width");
      },
      set: function set(value) {
        if (value == null || !value) {
          this.removeAttribute("data-width");
        } else {
          this.setAttribute("data-width", value);
        }
      }
    }, {
      key: "dataTheme",
      get: function get() {
        return this.getAttribute("data-theme");
      },
      set: function set(value) {
        if (!value || !["dark", "light"].includes(value)) {
          this.dataTheme = "light";
        } else {
          this.setAttribute("data-theme", value);
        }
      }
    }, {
      key: "lang",
      get: function get() {
        return this.getAttribute("lang");
      },
      set: function set(value) {
        if (value == "" || value == null) {
          this.removeAttribute("lang");
        } else {
          this.setAttribute("lang", value);
        }
      }
    }, {
      key: "tweetId",
      get: function get() {
        return this.getAttribute("tweet-id");
      },
      set: function set(value) {
        if (value == null) {
          this.removeAttribute("tweet-id");
        } else {
          this.setAttribute("tweet-id", value);
        }
      }
    }, {
      key: "tweet",
      get: function get() {
        return this.getAttribute("tweet");
      },
      set: function set(value) {
        if (value == null) {
          this.removeAttribute("tweet");
        } else {
          this.setAttribute("tweet", value);
        }
      }
      /**
       * my own convention, easy to remember
       */

    }, {
      key: "html",
      get: function get() {
        return "\n    <div\n      class=\"twitter-tweet twitter-tweet-rendered\"\n      style=\"display: flex; max-width: ".concat(this.dataWidth, "; width: 100%; margin-top: 10px; margin-bottom: 10px;\">\n      <iframe\n        sandbox=\"allow-same-origin allow-scripts ").concat(this.allowPopups, "\"\n        scrolling=\"no\"\n        frameborder=\"0\"\n        loading=\"lazy\"\n        allowtransparency=\"true\"\n        allowfullscreen=\"true\"\n        style=\"position: static; visibility: visible; width: ").concat(this.dataWidth, "; height: 498px; display: block; flex-grow: 1;\"\n        title=\"Twitter Tweet\"\n        src=\"https://platform.twitter.com/embed/index.html?dnt=true&amp&amp;frame=false&amp;hideCard=false&amp;hideThread=false&amp;id=").concat(this.tweetId, "&amp;lang=").concat(this.lang, "&amp;theme=").concat(this.dataTheme, "&amp;widgetsVersion=223fc1c4%3A1596143124634&amp;width=").concat(this.dataWidth, "\"\n        data-tweet-id=\"").concat(this.tweetId, "\">\n      </iframe>\n    </div>");
      }
    }], [{
      key: "tag",
      get: function get() {
        return "twitter-embed-vanilla";
      }
    }, {
      key: "observedAttributes",
      get: function get() {
        return ["lang", "tweet", "data-width", "data-theme", "tweet-id", "no-popups"];
      }
    }]);
    return TwitterEmbedVanilla;
  }( /*#__PURE__*/babelHelpers.wrapNativeSuper(HTMLElement));

  _exports.TwitterEmbedVanilla = TwitterEmbedVanilla;
  customElements.define(TwitterEmbedVanilla.tag, TwitterEmbedVanilla);
});