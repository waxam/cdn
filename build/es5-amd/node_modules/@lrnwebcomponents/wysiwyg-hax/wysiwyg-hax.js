define(["exports", "../../lit-element/lit-element.js", "../cms-hax/cms-hax.js"], function (_exports, _litElement, _cmsHax) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.WysiwygHax = void 0;

  function _templateObject2_e20553b01bb211eabd7cc30119585ddb() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n      "]);

    _templateObject2_e20553b01bb211eabd7cc30119585ddb = function _templateObject2_e20553b01bb211eabd7cc30119585ddb() {
      return data;
    };

    return data;
  }

  function _templateObject_e20553b01bb211eabd7cc30119585ddb() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <textarea\n        class=\"", "\"\n        id=\"", "\"\n        name=\"", "\"\n        hidden=\"\"\n      >\n      ", "\n      </textarea\n      >\n      <cms-hax\n        hide-message=\"\"\n        redirect-location=\"", "\"\n        update-page-data=\"", "\"\n        end-point=\"", "\"\n        app-store-connection=\"", "\"\n        ?open-default=\"", "\"\n        ?sync-body=\"", "\"\n        ?hide-export-button=\"", "\"\n        ?hide-panel-ops=\"", "\"\n        ?hide-preferences-button=\"", "\"\n        align=\"", "\"\n      >\n      </cms-hax>\n    "]);

    _templateObject_e20553b01bb211eabd7cc30119585ddb = function _templateObject_e20553b01bb211eabd7cc30119585ddb() {
      return data;
    };

    return data;
  }

  /**
   * `wysiwyg-hax`
   * @customElement wysiwyg-hax
   * `Integration of wysiwyg edit form for a page with HAX.`
   */
  var WysiwygHax =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(WysiwygHax, _LitElement);
    babelHelpers.createClass(WysiwygHax, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_e20553b01bb211eabd7cc30119585ddb(), this.fieldClass, this.fieldId, this.fieldName, this.bodyValue, this.redirectLocation, this.updatePageData, this.endPoint, this.appStoreConnection, this.openDefault, this.syncBody, this.hideExportButton, this.hidePanelOps, this.hidePreferencesButton, this.align);
      }
    }], [{
      key: "styles",

      /**
       * LitElement constructable styles enhancement
       */
      get: function get() {
        return [(0, _litElement.css)(_templateObject2_e20553b01bb211eabd7cc30119585ddb())];
      }
    }, {
      key: "tag",
      get: function get() {
        return "wysiwyg-hax";
      }
    }]);

    function WysiwygHax() {
      var _this;

      babelHelpers.classCallCheck(this, WysiwygHax);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(WysiwygHax).call(this));
      _this.openDefault = false;
      _this.hideExportButton = false;
      _this.align = "right";
      _this.fieldId = "textarea-input-field";
      _this.fieldName = "data[content]";
      _this.__imported = false;
      _this.redirectLocation = "";
      _this.updatePageData = "";
      return _this;
    }

    babelHelpers.createClass(WysiwygHax, [{
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        changedProperties.forEach(function (oldValue, propName) {
          if (propName == "activeHaxBody") {
            _this2._activeHaxBodyUpdated(_this2[propName]);
          }
        });
      }
    }, {
      key: "createRenderRoot",
      value: function createRenderRoot() {
        return this;
      }
      /**
       * Ensure we've imported our content on initial setup
       */

    }, {
      key: "_activeHaxBodyUpdated",
      value: function _activeHaxBodyUpdated(newValue) {
        var _this3 = this;

        // ensure we import our content once we get an initial registration of active body
        if (newValue != null && !this.__imported) {
          this.__imported = true; // see what's inside of this, in a template tag

          var children = this.querySelector("template"); // convert this template content into the real thing
          // this helps with correctly preserving everything on the way down

          if (children != null) {
            newValue.importContent(children.innerHTML); // need to dot his because of juggling unfortunately

            this.editMode = false;
            window.HaxStore.write("editMode", this.editMode, this);
            setTimeout(function () {
              _this3.editMode = true;
              window.HaxStore.write("editMode", _this3.editMode, _this3);
            }, 200);
          }
        }
      }
    }, {
      key: "connectedCallback",
      value: function connectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(WysiwygHax.prototype), "connectedCallback", this).call(this);
        document.body.addEventListener("hax-save", this._bodyContentUpdated.bind(this));
        document.body.addEventListener("hax-store-property-updated", this._haxStorePropertyUpdated.bind(this));
      }
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        document.body.removeEventListener("hax-save", this._bodyContentUpdated.bind(this));
        document.body.removeEventListener("hax-store-property-updated", this._haxStorePropertyUpdated.bind(this));
        babelHelpers.get(babelHelpers.getPrototypeOf(WysiwygHax.prototype), "disconnectedCallback", this).call(this);
      }
      /**
       * Store updated, sync.
       */

    }, {
      key: "_haxStorePropertyUpdated",
      value: function _haxStorePropertyUpdated(e) {
        if (e.detail && babelHelpers.typeof(e.detail.value) !== (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined)) && e.detail.property) {
          if (babelHelpers.typeof(e.detail.value) === "object") {
            this[e.detail.property] = babelHelpers.objectSpread({}, e.detail.value);
          } else {
            this[e.detail.property] = e.detail.value;
          }
        }
      }
      /**
       * Set the bubbled up event to the body value that just got changed
       */

    }, {
      key: "_bodyContentUpdated",
      value: function _bodyContentUpdated(e) {
        this.bodyValue = window.HaxStore.instance.activeHaxBody.haxToContent();
      }
    }], [{
      key: "properties",
      get: function get() {
        return {
          /**
           * Default the panel to open
           */
          openDefault: {
            type: Boolean,
            attribute: "open-default"
          },
          redirectLocation: {
            type: String,
            attribute: "redirect-location"
          },
          hideExportButton: {
            type: Boolean,
            attribute: "hide-export-button"
          },

          /**
           * Hide the panel operations (save and cancel),
           */
          hidePanelOps: {
            type: Boolean,
            attribute: "hide-panel-ops"
          },

          /**
           * Hide preferences button
           */
          hidePreferencesButton: {
            type: Boolean,
            attribute: "hide-preferences-button"
          },

          /**
           * Direction to align the hax edit panel
           */
          align: {
            type: String
          },

          /**
           * Data binding of a hidden text area with the value from the hax-body tag
           */
          bodyValue: {
            type: String,
            attribute: "body-value"
          },

          /**
           * Connection object for talking to an app store.
           */
          appStoreConnection: {
            type: String,
            attribute: "app-store-connection"
          },

          /**
           * class on the field
           */
          fieldClass: {
            type: String,
            attribute: "field-class"
          },

          /**
           * fieldId, id value on the input field.
           */
          fieldId: {
            type: String,
            attribute: "field-id"
          },

          /**
           * fieldName, internal to the form in whatever system it's in.
           */
          fieldName: {
            type: String,
            attribute: "field-name"
          },
          syncBody: {
            type: Boolean,
            attribute: "sync-body",
            reflect: true
          },

          /**
           * State of the panel
           */
          editMode: {
            type: Boolean,
            reflect: true,
            attribute: "edit-mode"
          },

          /**
           * Location to save content to.
           */
          endPoint: {
            type: String,
            attribute: "end-point"
          },

          /**
           * Page data, body of text as a string.
           */
          updatePageData: {
            type: String,
            attribute: "update-page-data"
          },

          /**
           * Reference to activeBody.
           */
          activeHaxBody: {
            type: Object
          },
          __imported: {
            type: Boolean
          }
        };
      }
    }]);
    return WysiwygHax;
  }(_litElement.LitElement);

  _exports.WysiwygHax = WysiwygHax;
  window.customElements.define(WysiwygHax.tag, WysiwygHax);
});