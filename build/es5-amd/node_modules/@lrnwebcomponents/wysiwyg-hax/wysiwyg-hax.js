define(["exports", "../../@polymer/polymer/polymer-element.js", "../cms-hax/cms-hax.js"], function (_exports, _polymerElement, _cmsHax) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.WysiwygHax = void 0;

  function _templateObject_3863b9c0e14a11e9bce923988a998e3c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n        }\n      </style>\n      <textarea\n        class$=\"[[fieldClass]]\"\n        id$=\"[[fieldId]]\"\n        name=\"[[fieldName]]\"\n        hidden=\"\"\n      >\n[[bodyValue]]</textarea\n      >\n      <cms-hax\n        open-default=\"[[openDefault]]\"\n        hide-message=\"\"\n        redirect-location=\"[[redirectLocation]]\"\n        update-page-data=\"[[updatePageData]]\"\n        end-point=\"[[endPoint]]\"\n        app-store-connection=\"[[appStoreConnection]]\"\n        hide-export-button=\"[[hideExportButton]]\"\n        align=\"[[align]]\"\n      >\n      </cms-hax>\n    "], ["\n      <style>\n        :host {\n          display: block;\n        }\n      </style>\n      <textarea\n        class$=\"[[fieldClass]]\"\n        id\\$=\"[[fieldId]]\"\n        name=\"[[fieldName]]\"\n        hidden=\"\"\n      >\n[[bodyValue]]</textarea\n      >\n      <cms-hax\n        open-default=\"[[openDefault]]\"\n        hide-message=\"\"\n        redirect-location=\"[[redirectLocation]]\"\n        update-page-data=\"[[updatePageData]]\"\n        end-point=\"[[endPoint]]\"\n        app-store-connection=\"[[appStoreConnection]]\"\n        hide-export-button=\"[[hideExportButton]]\"\n        align=\"[[align]]\"\n      >\n      </cms-hax>\n    "]);

    _templateObject_3863b9c0e14a11e9bce923988a998e3c = function _templateObject_3863b9c0e14a11e9bce923988a998e3c() {
      return data;
    };

    return data;
  }

  /**
   * `wysiwyg-hax`
   * `Integration of wysiwyg edit form for a page with HAX.`
   */
  var WysiwygHax =
  /*#__PURE__*/
  function (_PolymerElement) {
    babelHelpers.inherits(WysiwygHax, _PolymerElement);

    function WysiwygHax() {
      babelHelpers.classCallCheck(this, WysiwygHax);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(WysiwygHax).apply(this, arguments));
    }

    babelHelpers.createClass(WysiwygHax, [{
      key: "_attachDom",

      /**
       * highjack shadowDom
       */
      value: function _attachDom(dom) {
        this.appendChild(dom);
      }
      /**
       * Ensure we've imported our content on initial setup
       */

    }, {
      key: "_activeHaxBodyUpdated",
      value: function _activeHaxBodyUpdated(newValue, oldValue) {
        var _this = this;

        // ensure we import our content once we get an initial registration of active body
        if (newValue != null && !this.__imported) {
          this.__imported = true; // see what's inside of this, in a template tag

          var children = this.querySelector("template"); // convert this template content into the real thing
          // this helps with correctly preserving everything on the way down

          if (children != null) {
            newValue.importContent(children.innerHTML); // need to dot his because of juggling unfortunately

            this.editMode = false;
            window.HaxStore.write("editMode", this.editMode, this);
            setTimeout(function () {
              _this.editMode = true;
              window.HaxStore.write("editMode", _this.editMode, _this);
            }, 200);
          }
        }
      }
    }, {
      key: "connectedCallback",
      value: function connectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(WysiwygHax.prototype), "connectedCallback", this).call(this);
        document.body.addEventListener("hax-save", this._bodyContentUpdated.bind(this));
        document.body.addEventListener("hax-store-property-updated", this._haxStorePropertyUpdated.bind(this));
      }
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        document.body.removeEventListener("hax-save", this._bodyContentUpdated.bind(this));
        document.body.removeEventListener("hax-store-property-updated", this._haxStorePropertyUpdated.bind(this));
        babelHelpers.get(babelHelpers.getPrototypeOf(WysiwygHax.prototype), "disconnectedCallback", this).call(this);
      }
      /**
       * Store updated, sync.
       */

    }, {
      key: "_haxStorePropertyUpdated",
      value: function _haxStorePropertyUpdated(e) {
        if (e.detail && babelHelpers.typeof(e.detail.value) !== (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined)) && e.detail.property) {
          if (babelHelpers.typeof(e.detail.value) === "object") {
            this.set(e.detail.property, null);
          }

          this.set(e.detail.property, e.detail.value);
        }
      }
      /**
       * Set the bubbled up event to the body value that just got changed
       */

    }, {
      key: "_bodyContentUpdated",
      value: function _bodyContentUpdated(e) {
        this.bodyValue = window.HaxStore.instance.activeHaxBody.haxToContent();
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_3863b9c0e14a11e9bce923988a998e3c());
      }
    }, {
      key: "tag",
      get: function get() {
        return "wysiwyg-hax";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * Default the panel to open
           */
          openDefault: {
            type: Boolean,
            value: false
          },
          redirectLocation: {
            type: String
          },

          /**
           * Hide the export button, not a common thing to show
           * in this mode but it's possible for debugging
           */
          hideExportButton: {
            type: Boolean,
            value: true
          },

          /**
           * Direction to align the hax edit panel
           */
          align: {
            type: String,
            value: "right"
          },

          /**
           * Data binding of a hidden text area with the value from the hax-body tag
           */
          bodyValue: {
            type: String
          },

          /**
           * Connection object for talking to an app store.
           */
          appStoreConnection: {
            type: Object
          },

          /**
           * class on the field
           */
          fieldClass: {
            type: String
          },

          /**
           * fieldId, id value on the input field.
           */
          fieldId: {
            type: String,
            value: "textarea-input-field"
          },

          /**
           * fieldName, internal to the form in whatever system it's in.
           */
          fieldName: {
            type: String,
            value: "data[content]"
          },

          /**
           * State of the panel
           */
          editMode: {
            type: Boolean,
            reflectToAttribute: true
          },

          /**
           * Location to save content to.
           */
          endPoint: {
            type: String
          },

          /**
           * Page data, body of text as a string.
           */
          updatePageData: {
            type: String
          },

          /**
           * Reference to activeBody.
           */
          activeHaxBody: {
            type: Object,
            observer: "_activeHaxBodyUpdated"
          },
          __imported: {
            type: Boolean,
            value: false
          }
        };
      }
    }]);
    return WysiwygHax;
  }(_polymerElement.PolymerElement);

  _exports.WysiwygHax = WysiwygHax;
  window.customElements.define(WysiwygHax.tag, WysiwygHax);
});