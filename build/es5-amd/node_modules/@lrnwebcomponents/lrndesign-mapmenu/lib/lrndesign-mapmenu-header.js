define(["exports", "../../../@polymer/polymer/polymer-element.js", "../../lrndesign-avatar/lrndesign-avatar.js", "../../../@polymer/iron-collapse/iron-collapse.js", "../../../@polymer/iron-icon/iron-icon.js", "../../../@polymer/iron-behaviors/iron-button-state.js", "../../../@polymer/polymer/lib/legacy/class.js"], function (_exports, _polymerElement, _lrndesignAvatar, _ironCollapse, _ironIcon, _ironButtonState, _class) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrndesignMapmenuHeader = void 0;

  function _templateObject_080b65e001c211eba2339b0c52070e79() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n        }\n        #container {\n          display: flex;\n          align-items: center;\n        }\n        #icon {\n          margin-right: 10px;\n        }\n        #center {\n          flex: 1 1 auto;\n        }\n        lrndesign-avatar {\n          display: inline-block;\n          background: #fff;\n          border-radius: 50%;\n          box-shadow: 0 1px 1px rgba(0, 0, 0, 0.3);\n          padding: 2px;\n          position: relative;\n          margin-top: -2px;\n        }\n        lrndesign-avatar ::slotted(*) {\n          transform: translateY(2px);\n        }\n        #title {\n          font-size: 19.2px;\n        }\n        #right iron-icon {\n          color: gray;\n          display: inline-flex;\n        }\n      </style>\n      <div id=\"container\">\n        <template is=\"dom-if\" if=\"[[avatarLabel]]\">\n          <div id=\"icon\">\n            <lrndesign-avatar label=\"[[avatarLabel]]\"></lrndesign-avatar>\n          </div>\n        </template>\n        <div id=\"center\">\n          <div id=\"label\">[[label]]</div>\n          <div id=\"title\">[[title]]</div>\n        </div>\n        <div id=\"right\">\n          <template is=\"dom-if\" if=\"[[!opened]]\">\n            <iron-icon icon=\"arrow-drop-down\"></iron-icon>\n          </template>\n          <template is=\"dom-if\" if=\"[[opened]]\">\n            <iron-icon icon=\"arrow-drop-up\"></iron-icon>\n          </template>\n        </div>\n      </div>\n    "]);

    _templateObject_080b65e001c211eba2339b0c52070e79 = function _templateObject_080b65e001c211eba2339b0c52070e79() {
      return data;
    };

    return data;
  }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  var LrndesignMapmenuHeader = /*#__PURE__*/function (_mixinBehaviors) {
    babelHelpers.inherits(LrndesignMapmenuHeader, _mixinBehaviors);

    var _super = _createSuper(LrndesignMapmenuHeader);

    function LrndesignMapmenuHeader() {
      babelHelpers.classCallCheck(this, LrndesignMapmenuHeader);
      return _super.apply(this, arguments);
    }

    babelHelpers.createClass(LrndesignMapmenuHeader, [{
      key: "connectedCallback",
      value: function connectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(LrndesignMapmenuHeader.prototype), "connectedCallback", this).call(this);
        this.setAttribute("role", "button");
        this.setAttribute("tabindex", "0");
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_080b65e001c211eba2339b0c52070e79());
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrndesign-mapmenu-header";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          title: {
            type: String
          },
          label: {
            type: String
          },
          avatarLabel: {
            type: String,
            value: ""
          },
          opened: {
            type: Boolean
          }
        };
      }
    }]);
    return LrndesignMapmenuHeader;
  }((0, _class.mixinBehaviors)([_ironButtonState.IronButtonState], _polymerElement.PolymerElement));

  _exports.LrndesignMapmenuHeader = LrndesignMapmenuHeader;
  window.customElements.define(LrndesignMapmenuHeader.tag, LrndesignMapmenuHeader);
});