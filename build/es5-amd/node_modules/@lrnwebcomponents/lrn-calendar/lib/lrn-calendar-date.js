define(["exports","../../../@polymer/polymer/polymer-element.js","../../../@polymer/paper-button/paper-button.js","../../../@polymer/iron-icons/iron-icons.js","../../materializecss-styles/lib/colors.js","../../../@polymer/paper-card/paper-card.js","../../lrnsys-layout/lib/lrnsys-drawer.js","../../../@polymer/iron-ajax/iron-ajax.js"],function(_exports,_polymerElement,_paperButton,_ironIcons,_colors,_paperCard,_lrnsysDrawer,_ironAjax){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.LrnCalendarDate=void 0;function _templateObject_c1d0690083ae11e9bca9910ed3db32b8(){var data=babelHelpers.taggedTemplateLiteral(["\n      <style include=\"materializecss-styles-colors\">\n        :host {\n          display: block;\n        }\n        ::-webkit-scrollbar {\n          width: 0px; /* remove scrollbar space */\n          background: transparent; /* optional: just make scrollbar invisible */\n        }\n\n        .month {\n          width: 100%;\n          height: 20vh;\n          vertical-align: top;\n          overflow: scroll;\n        }\n        .week {\n          width: 100%;\n          height: 40vh;\n          vertical-align: top;\n          overflow: scroll;\n        }\n        .card-content {\n          position: relative;\n          bottom: 10px;\n          white-space: nowrap;\n          font-size: 12px;\n          padding: 0px 5px;\n          line-height: 7px;\n        }\n        .label {\n          width: 100%;\n        }\n      </style>\n\n      <div id=\"test\">\n        <div>\n          <template is=\"dom-if\" if=\"[[firstWeek]]\">\n            <paper-card class=\"label\"> <h3>[[getWeek(date)]]</h3> </paper-card>\n          </template>\n        </div>\n        <paper-card class$=\"[[view]]\" id=\"dateHeader\">\n          <h5>[[getMonth(date)]]</h5>\n          <template is=\"dom-repeat\" items=\"{{events}}\">\n            <div class=\"card-content\">\n              <lrnsys-drawer\n                text=\"[[timeString(item.event.startDate._time.hour, item.event.startDate._time.minute, item.event.endDate._time.hour,item.event.endDate._time.minute)]] {{item.event.summary}}\"\n                header=\"[[getDateString(date)]]\"\n                align=\"left\"\n                heading-class=\"orange lighten-3 blue-text text-darken-4\"\n                style$=\"[[computeStyle(item)]];overflow:auto;\"\n              >\n                [[displayActivity(item)]]\n                <br /><br />[[displayStart(item)]]<br /><br />[[displayEnd(item)]]<br /><br />[[displayDuration(item)]]<br /><br />[[displayDescription(item)]]<br /><br />[[displayLocation(item)]]\n              </lrnsys-drawer>\n            </div>\n          </template>\n        </paper-card>\n      </div>\n    "]);_templateObject_c1d0690083ae11e9bca9910ed3db32b8=function _templateObject_c1d0690083ae11e9bca9910ed3db32b8(){return data};return data}/**
 * `lrn-calendar-date`
 * `A LRN element`
 *
 * @demo demo/index.html
 *
 */var LrnCalendarDate=/*#__PURE__*/function(_PolymerElement){babelHelpers.inherits(LrnCalendarDate,_PolymerElement);function LrnCalendarDate(){babelHelpers.classCallCheck(this,LrnCalendarDate);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(LrnCalendarDate).apply(this,arguments))}babelHelpers.createClass(LrnCalendarDate,[{key:"getMonth",/*
   * Displays the month in the heading
   */value:function getMonth(date){var monthInt=date.getMonth(),day=date.getDate(),monthsArray=["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"];if(1==day){monthstring=monthsArray[monthInt]+" "+day}else{monthstring=day}return monthstring}/*
   * Displays the weekday for in the column for the first week
   */},{key:"getWeek",value:function getWeek(date){var weekdays=date.getDay(),weekArray=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"];return weekArray[weekdays]}/*
   * Creates the string that displays the time of the event
   */},{key:"timeString",value:function timeString(startHour,startMinute,endHour,endMinute){var amPM=11<startHour?"pm":"am";if(12<startHour){startHour-=12}else if(0==startHour){//If the start time and end time is 12AM
if(0==startMinute&&0==endHour&&0==endMinute){var allDayText="";return allDayText}else{startHour="12"}}if(10>startMinute){startMinute="0"+startMinute}if(0==startMinute){return startHour+amPM}return startHour+":"+startMinute+amPM}/*
   * If an event occurs the whole day the background color is yellow
   */},{key:"computeStyle",value:function computeStyle(item){if(0==item.event.startDate._time.hour)var s="background-color:"+" yellow";else var s="background-color:"+" clear";return s}/*
   * When click for more info, this gives the full date of the event
   */},{key:"getDateString",value:function getDateString(date){var monthInt=date.getMonth(),day=date.getDate(),monthsArray=["January","February","March","April","May","June","July","August","September","October","November","December"];monthstring=monthsArray[monthInt]+" "+date.getDate()+" "+date.getFullYear();return monthstring}/*
   * Displayes the name of the activity in the more info slideout
   */},{key:"displayActivity",value:function displayActivity(e){var activity=e.event.summary;return"Activity: "+activity}/*
   * Displays the start time in the more info slideout
   */},{key:"displayStart",value:function displayStart(e){var startTime=this.timeString(e.event.startDate._time.hour,e.event.startDate._time.minute),endTime=this.timeString(e.event.endDate._time.hour,e.event.endDate._time.minute);/*if(startTime == "12am" && endTime == "12"){
      return "";
    }*/return"Start Time: "+startTime}/*
   * Displays the end time in the more info slideout
   */},{key:"displayEnd",value:function displayEnd(e){var endTime=this.timeString(e.event.endDate._time.hour,e.event.endDate._time.minute);return"End Time: "+endTime}/*
   * Displays the duration in the more info slideout
   */},{key:"displayDuration",value:function displayDuration(e){var duration=e.event.duration,days=duration.days,hours=duration.hours,minutes=duration.minutes,weeks=duration.weeks;if(0==hours&&0==minutes&&1==days){return"Duration: All Day"}if(0==days){if(0==hours){if(0==minutes){return"Duration: "}else{return"Duration: "+minutes+"min"}}else{if(0==minutes){return"Duration: "+hours+"H "}else{return"Duration: "+hours+"H "+minutes+"min "}}}else{if(0==hours&&0==minutes){return"Duration: "+days+"Days "}else if(0<hours&&0==minutes){return"Duration: "+days+"Days "+hours+"H "}else{return"Duration: "+days+"Days "+hours+"H "+minutes+"min "}}}/*
   * Displays the description in the more info slideout
   */},{key:"displayDescription",value:function displayDescription(e){var description=e.event.description;if(!description){return"Description: "}return"Description: "}/*
   * Displays the location in the more info slideout
   */},{key:"displayLocation",value:function displayLocation(e){var location=e.event.location;location=location+"";if(null==location||"null"==location){return"Location: "}return"Location: "+location}}],[{key:"template",get:function get(){return(0,_polymerElement.html)(_templateObject_c1d0690083ae11e9bca9910ed3db32b8())}},{key:"tag",get:function get(){return"lrn-calendar-date"}},{key:"properties",get:function get(){return{title:{type:String,value:"lrn-calendar-date"},name:{type:String},date:{type:Date},loadeddate:{type:Boolean},firstWeek:{type:Boolean},view:{type:String},valid:{type:Boolean,value:!1}}}}]);return LrnCalendarDate}(_polymerElement.PolymerElement);_exports.LrnCalendarDate=LrnCalendarDate;window.customElements.define(LrnCalendarDate.tag,LrnCalendarDate)});