define(["exports", "../../../@polymer/polymer/polymer-element.js", "../../rich-text-editor/lib/buttons/rich-text-editor-prompt-button.js", "../../lrn-math/lrn-math.js"], function (_exports, _polymerElement, _richTextEditorPromptButton, _lrnMath) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HaxTextEditorMath = void 0;

  /**
   * Copyright 2019 Penn State University
   * @license Apache-2.0, see License.md for full text.
   */

  /**
   * `hax-text-editor-math`
   * @element hax-text-editor-math
   * `a math button for hax text editor (custom buttons can extend this)`
   *
   * @microcopy - language worth noting:
   *  -
   *
  
   * @polymer
   */
  var HaxTextEditorMath =
  /*#__PURE__*/
  function (_RichTextEditorPrompt) {
    babelHelpers.inherits(HaxTextEditorMath, _RichTextEditorPrompt);

    function HaxTextEditorMath() {
      var _this;

      babelHelpers.classCallCheck(this, HaxTextEditorMath);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(HaxTextEditorMath).call(this));
      _this.inlineWidget = true;
      var element = _lrnMath.LrnMath;
      _this.fields = element.haxProperties.settings.configure;
      _this.tag = element.tag;
      _this.icon = element.haxProperties.gizmo.icon;
      _this.label = element.haxProperties.gizmo.title;
      _this.toggles = true;
      _this.value = {
        "": null
      };
      return _this;
    } // properties available to the custom element for data binding


    babelHelpers.createClass(HaxTextEditorMath, [{
      key: "deselect",

      /**
       * deselects the text
       */
      value: function deselect() {
        babelHelpers.get(babelHelpers.getPrototypeOf(HaxTextEditorMath.prototype), "deselect", this).call(this);
        var math = this.__selectionContents && this.__selectionContents.tagName && this.__selectionContents.tagName.toLowerCase() === this.tag ? this.__selectionContents : null;
        if (math) math.refresh();
      }
    }], [{
      key: "properties",
      get: function get() {
        return {};
      }
      /**
       * Store the tag name to make it easier to obtain directly.
       */

    }, {
      key: "tag",
      get: function get() {
        return "hax-text-editor-math";
      }
    }]);
    return HaxTextEditorMath;
  }(_richTextEditorPromptButton.RichTextEditorPromptButton);

  _exports.HaxTextEditorMath = HaxTextEditorMath;
  window.customElements.define(HaxTextEditorMath.tag, HaxTextEditorMath);
});