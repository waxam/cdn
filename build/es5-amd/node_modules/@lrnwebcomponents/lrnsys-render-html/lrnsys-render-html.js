define(["exports", "../../lit-element/lit-element.js"], function (_exports, _litElement) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnsysRenderHtml = void 0;

  function _templateObject2_8a195410c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n      "]);

    _templateObject2_8a195410c96f11ea8be5e1d5fe7ec787 = function _templateObject2_8a195410c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  function _templateObject_8a195410c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <div id=\"container\"></div>\n    "]);

    _templateObject_8a195410c96f11ea8be5e1d5fe7ec787 = function _templateObject_8a195410c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  /**
  `lrnsys-render-html`
  A legacy element which just directly renders HTML.
  WARNING: DO NOT USE THIS UNLESS YOU KNOW WHAT YOU ARE DOING!
  
  This element is meant to render html from a source that has already been sanitized.
  Polymer will, by design, not render html for security reasons. This element gets around
  that. Do not render raw user input through this element! This would allow XSS attacks for
  your users.
  
  * @demo demo/index.html
  */
  var LrnsysRenderHtml =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(LrnsysRenderHtml, _LitElement);

    function LrnsysRenderHtml() {
      babelHelpers.classCallCheck(this, LrnsysRenderHtml);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(LrnsysRenderHtml).apply(this, arguments));
    }

    babelHelpers.createClass(LrnsysRenderHtml, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_8a195410c96f11ea8be5e1d5fe7ec787());
      }
    }, {
      key: "firstUpdated",
      value: function firstUpdated() {
        this.shadowRoot.querySelector("#container").innerHTML = this.html;
      }
    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this = this;

        changedProperties.forEach(function (oldValue, propName) {
          if (propName == "html" && _this.shadowRoot) {
            _this.shadowRoot.querySelector("#container").innerHTML = _this[propName];
          }
        });
      }
    }], [{
      key: "styles",

      /**
       * LitElement constructable styles enhancement
       */
      get: function get() {
        return [(0, _litElement.css)(_templateObject2_8a195410c96f11ea8be5e1d5fe7ec787())];
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnsys-render-html";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * String to render as HTML directly
           */
          html: {
            type: String
          }
        };
      }
    }]);
    return LrnsysRenderHtml;
  }(_litElement.LitElement);

  _exports.LrnsysRenderHtml = LrnsysRenderHtml;
  window.customElements.define(LrnsysRenderHtml.tag, LrnsysRenderHtml);
});