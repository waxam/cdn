define(["exports", "../create/local.js", "../units/offset.js", "../utils/is-function.js", "../utils/hooks.js"], function (_exports, _local, _offset, _isFunction, _hooks) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.calendar = calendar;
  _exports.getCalendarFormat = getCalendarFormat;
  _isFunction = babelHelpers.interopRequireDefault(_isFunction);

  function getCalendarFormat(myMoment, now) {
    var diff = myMoment.diff(now, "days", true);
    return diff < -6 ? "sameElse" : diff < -1 ? "lastWeek" : diff < 0 ? "lastDay" : diff < 1 ? "sameDay" : diff < 2 ? "nextDay" : diff < 7 ? "nextWeek" : "sameElse";
  }

  function calendar(time, formats) {
    // We want to compare the start of today, vs this.
    // Getting start-of-today depends on whether we're local/utc/offset or not.
    var now = time || (0, _local.createLocal)(),
        sod = (0, _offset.cloneWithOffset)(now, this).startOf("day"),
        format = _hooks.hooks.calendarFormat(this, sod) || "sameElse";
    var output = formats && ((0, _isFunction.default)(formats[format]) ? formats[format].call(this, now) : formats[format]);
    return this.format(output || this.localeData().calendar(format, this, (0, _local.createLocal)(now)));
  }
});