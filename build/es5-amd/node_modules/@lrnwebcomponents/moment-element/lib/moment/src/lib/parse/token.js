define(["exports", "../utils/has-own-prop.js", "../utils/is-number.js", "../utils/to-int.js"], function (_exports, _hasOwnProp, _isNumber, _toInt) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.addParseToken = addParseToken;
  _exports.addTimeToArrayFromToken = addTimeToArrayFromToken;
  _exports.addWeekParseToken = addWeekParseToken;
  _hasOwnProp = babelHelpers.interopRequireDefault(_hasOwnProp);
  _isNumber = babelHelpers.interopRequireDefault(_isNumber);
  _toInt = babelHelpers.interopRequireDefault(_toInt);
  var tokens = {};

  function addParseToken(token, callback) {
    var i,
        func = callback;

    if (typeof token === "string") {
      token = [token];
    }

    if ((0, _isNumber.default)(callback)) {
      func = function func(input, array) {
        array[callback] = (0, _toInt.default)(input);
      };
    }

    for (i = 0; i < token.length; i++) {
      tokens[token[i]] = func;
    }
  }

  function addWeekParseToken(token, callback) {
    addParseToken(token, function (input, array, config, token) {
      config._w = config._w || {};
      callback(input, config._w, config, token);
    });
  }

  function addTimeToArrayFromToken(token, input, config) {
    if (input != null && (0, _hasOwnProp.default)(tokens, token)) {
      tokens[token](input, config._a, config, token);
    }
  }
});