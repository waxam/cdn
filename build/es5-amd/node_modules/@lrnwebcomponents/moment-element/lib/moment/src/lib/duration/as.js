define(["exports", "./bubble.js", "../units/aliases.js", "../utils/to-int.js"], function (_exports, _bubble, _aliases, _toInt) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.as = as;
  _exports.asYears = _exports.asWeeks = _exports.asSeconds = _exports.asMonths = _exports.asMinutes = _exports.asMilliseconds = _exports.asHours = _exports.asDays = void 0;
  _exports.valueOf = valueOf;
  _toInt = babelHelpers.interopRequireDefault(_toInt);

  function as(units) {
    if (!this.isValid()) {
      return NaN;
    }

    var days;
    var months;
    var milliseconds = this._milliseconds;
    units = (0, _aliases.normalizeUnits)(units);

    if (units === "month" || units === "year") {
      days = this._days + milliseconds / 864e5;
      months = this._months + (0, _bubble.daysToMonths)(days);
      return units === "month" ? months : months / 12;
    } else {
      // handle milliseconds separately because of floating point math errors (issue #1867)
      days = this._days + Math.round((0, _bubble.monthsToDays)(this._months));

      switch (units) {
        case "week":
          return days / 7 + milliseconds / 6048e5;

        case "day":
          return days + milliseconds / 864e5;

        case "hour":
          return days * 24 + milliseconds / 36e5;

        case "minute":
          return days * 1440 + milliseconds / 6e4;

        case "second":
          return days * 86400 + milliseconds / 1000;
        // Math.floor prevents floating point math errors here

        case "millisecond":
          return Math.floor(days * 864e5) + milliseconds;

        default:
          throw new Error("Unknown unit " + units);
      }
    }
  } // TODO: Use this.as('ms')?


  function valueOf() {
    if (!this.isValid()) {
      return NaN;
    }

    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + (0, _toInt.default)(this._months / 12) * 31536e6;
  }

  function makeAs(alias) {
    return function () {
      return this.as(alias);
    };
  }

  var asMilliseconds = makeAs("ms");
  _exports.asMilliseconds = asMilliseconds;
  var asSeconds = makeAs("s");
  _exports.asSeconds = asSeconds;
  var asMinutes = makeAs("m");
  _exports.asMinutes = asMinutes;
  var asHours = makeAs("h");
  _exports.asHours = asHours;
  var asDays = makeAs("d");
  _exports.asDays = asDays;
  var asWeeks = makeAs("w");
  _exports.asWeeks = asWeeks;
  var asMonths = makeAs("M");
  _exports.asMonths = asMonths;
  var asYears = makeAs("y");
  _exports.asYears = asYears;
});