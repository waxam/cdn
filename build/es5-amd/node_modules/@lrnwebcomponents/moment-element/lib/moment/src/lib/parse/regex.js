define(["exports", "../utils/has-own-prop.js", "../utils/is-function.js"], function (_exports, _hasOwnProp, _isFunction) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.addRegexToken = addRegexToken;
  _exports.getParseRegexForToken = getParseRegexForToken;
  _exports.matchWord = _exports.matchUnsigned = _exports.matchTimestamp = _exports.matchSigned = _exports.matchShortOffset = _exports.matchOffset = _exports.match6 = _exports.match5to6 = _exports.match4 = _exports.match3to4 = _exports.match3 = _exports.match2 = _exports.match1to6 = _exports.match1to4 = _exports.match1to3 = _exports.match1to2 = _exports.match1 = void 0;
  _exports.regexEscape = regexEscape;
  _hasOwnProp = babelHelpers.interopRequireDefault(_hasOwnProp);
  _isFunction = babelHelpers.interopRequireDefault(_isFunction);
  var match1 = /\d/; //       0 - 9

  _exports.match1 = match1;
  var match2 = /\d\d/; //      00 - 99

  _exports.match2 = match2;
  var match3 = /\d{3}/; //     000 - 999

  _exports.match3 = match3;
  var match4 = /\d{4}/; //    0000 - 9999

  _exports.match4 = match4;
  var match6 = /[+-]?\d{6}/; // -999999 - 999999

  _exports.match6 = match6;
  var match1to2 = /\d\d?/; //       0 - 99

  _exports.match1to2 = match1to2;
  var match3to4 = /\d\d\d\d?/; //     999 - 9999

  _exports.match3to4 = match3to4;
  var match5to6 = /\d\d\d\d\d\d?/; //   99999 - 999999

  _exports.match5to6 = match5to6;
  var match1to3 = /\d{1,3}/; //       0 - 999

  _exports.match1to3 = match1to3;
  var match1to4 = /\d{1,4}/; //       0 - 9999

  _exports.match1to4 = match1to4;
  var match1to6 = /[+-]?\d{1,6}/; // -999999 - 999999

  _exports.match1to6 = match1to6;
  var matchUnsigned = /\d+/; //       0 - inf

  _exports.matchUnsigned = matchUnsigned;
  var matchSigned = /[+-]?\d+/; //    -inf - inf

  _exports.matchSigned = matchSigned;
  var matchOffset = /Z|[+-]\d\d:?\d\d/gi; // +00:00 -00:00 +0000 -0000 or Z

  _exports.matchOffset = matchOffset;
  var matchShortOffset = /Z|[+-]\d\d(?::?\d\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z

  _exports.matchShortOffset = matchShortOffset;
  var matchTimestamp = /[+-]?\d+(\.\d{1,3})?/; // 123456789 123456789.123
  // any word (or two) characters or numbers including two/three word month in arabic.
  // includes scottish gaelic two word and hyphenated months

  _exports.matchTimestamp = matchTimestamp;
  var matchWord = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i;
  _exports.matchWord = matchWord;
  var regexes = {};

  function addRegexToken(token, regex, strictRegex) {
    regexes[token] = (0, _isFunction.default)(regex) ? regex : function (isStrict, localeData) {
      return isStrict && strictRegex ? strictRegex : regex;
    };
  }

  function getParseRegexForToken(token, config) {
    if (!(0, _hasOwnProp.default)(regexes, token)) {
      return new RegExp(unescapeFormat(token));
    }

    return regexes[token](config._strict, config._locale);
  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript


  function unescapeFormat(s) {
    return regexEscape(s.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function (matched, p1, p2, p3, p4) {
      return p1 || p2 || p3 || p4;
    }));
  }

  function regexEscape(s) {
    return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
  }
});