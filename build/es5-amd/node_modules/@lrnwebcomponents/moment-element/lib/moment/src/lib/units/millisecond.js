define(["exports", "../moment/get-set.js", "../format/format.js", "./aliases.js", "./priorities.js", "../parse/regex.js", "../parse/token.js", "./constants.js", "../utils/to-int.js"], function (_exports, _getSet, _format, _aliases, _priorities, _regex, _token, _constants, _toInt) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.getSetMillisecond = void 0;
  _toInt = babelHelpers.interopRequireDefault(_toInt);
  // FORMATTING
  (0, _format.addFormatToken)("S", 0, 0, function () {
    return ~~(this.millisecond() / 100);
  });
  (0, _format.addFormatToken)(0, ["SS", 2], 0, function () {
    return ~~(this.millisecond() / 10);
  });
  (0, _format.addFormatToken)(0, ["SSS", 3], 0, "millisecond");
  (0, _format.addFormatToken)(0, ["SSSS", 4], 0, function () {
    return this.millisecond() * 10;
  });
  (0, _format.addFormatToken)(0, ["SSSSS", 5], 0, function () {
    return this.millisecond() * 100;
  });
  (0, _format.addFormatToken)(0, ["SSSSSS", 6], 0, function () {
    return this.millisecond() * 1000;
  });
  (0, _format.addFormatToken)(0, ["SSSSSSS", 7], 0, function () {
    return this.millisecond() * 10000;
  });
  (0, _format.addFormatToken)(0, ["SSSSSSSS", 8], 0, function () {
    return this.millisecond() * 100000;
  });
  (0, _format.addFormatToken)(0, ["SSSSSSSSS", 9], 0, function () {
    return this.millisecond() * 1000000;
  }); // ALIASES

  (0, _aliases.addUnitAlias)("millisecond", "ms"); // PRIORITY

  (0, _priorities.addUnitPriority)("millisecond", 16); // PARSING

  (0, _regex.addRegexToken)("S", _regex.match1to3, _regex.match1);
  (0, _regex.addRegexToken)("SS", _regex.match1to3, _regex.match2);
  (0, _regex.addRegexToken)("SSS", _regex.match1to3, _regex.match3);
  var token;

  for (token = "SSSS"; token.length <= 9; token += "S") {
    (0, _regex.addRegexToken)(token, _regex.matchUnsigned);
  }

  function parseMs(input, array) {
    array[_constants.MILLISECOND] = (0, _toInt.default)(("0." + input) * 1000);
  }

  for (token = "S"; token.length <= 9; token += "S") {
    (0, _token.addParseToken)(token, parseMs);
  } // MOMENTS


  var getSetMillisecond = (0, _getSet.makeGetSet)("Milliseconds", false);
  _exports.getSetMillisecond = getSetMillisecond;
});