define(["exports", "./get-set.js", "../units/month.js", "../duration/create.js", "../utils/deprecate.js", "../utils/hooks.js", "../utils/abs-round.js"], function (_exports, _getSet, _month, _create, _deprecate, _hooks, _absRound) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.add = void 0;
  _exports.addSubtract = addSubtract;
  _exports.subtract = void 0;
  _absRound = babelHelpers.interopRequireDefault(_absRound);

  // TODO: remove 'name' arg after deprecation is removed
  function createAdder(direction, name) {
    return function (val, period) {
      var dur, tmp; //invert the arguments, but complain about it

      if (period !== null && !isNaN(+period)) {
        (0, _deprecate.deprecateSimple)(name, "moment()." + name + "(period, number) is deprecated. Please use moment()." + name + "(number, period). " + "See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.");
        tmp = val;
        val = period;
        period = tmp;
      }

      val = typeof val === "string" ? +val : val;
      dur = (0, _create.createDuration)(val, period);
      addSubtract(this, dur, direction);
      return this;
    };
  }

  function addSubtract(mom, duration, isAdding, updateOffset) {
    var milliseconds = duration._milliseconds,
        days = (0, _absRound.default)(duration._days),
        months = (0, _absRound.default)(duration._months);

    if (!mom.isValid()) {
      // No op
      return;
    }

    updateOffset = updateOffset == null ? true : updateOffset;

    if (months) {
      (0, _month.setMonth)(mom, (0, _getSet.get)(mom, "Month") + months * isAdding);
    }

    if (days) {
      (0, _getSet.set)(mom, "Date", (0, _getSet.get)(mom, "Date") + days * isAdding);
    }

    if (milliseconds) {
      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);
    }

    if (updateOffset) {
      _hooks.hooks.updateOffset(mom, days || months);
    }
  }

  var add = createAdder(1, "add");
  _exports.add = add;
  var subtract = createAdder(-1, "subtract");
  _exports.subtract = subtract;
});