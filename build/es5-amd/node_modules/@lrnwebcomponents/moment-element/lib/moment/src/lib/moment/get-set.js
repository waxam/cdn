define(["exports", "../units/aliases.js", "../units/priorities.js", "../utils/hooks.js", "../utils/is-function.js", "../units/month.js", "../units/year.js"], function (_exports, _aliases, _priorities, _hooks, _isFunction, _month, _year) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.get = get;
  _exports.makeGetSet = makeGetSet;
  _exports.set = set;
  _exports.stringGet = stringGet;
  _exports.stringSet = stringSet;
  _isFunction = babelHelpers.interopRequireDefault(_isFunction);

  function makeGetSet(unit, keepTime) {
    return function (value) {
      if (value != null) {
        set(this, unit, value);

        _hooks.hooks.updateOffset(this, keepTime);

        return this;
      } else {
        return get(this, unit);
      }
    };
  }

  function get(mom, unit) {
    return mom.isValid() ? mom._d["get" + (mom._isUTC ? "UTC" : "") + unit]() : NaN;
  }

  function set(mom, unit, value) {
    if (mom.isValid() && !isNaN(value)) {
      if (unit === "FullYear" && (0, _year.isLeapYear)(mom.year()) && mom.month() === 1 && mom.date() === 29) {
        mom._d["set" + (mom._isUTC ? "UTC" : "") + unit](value, mom.month(), (0, _month.daysInMonth)(value, mom.month()));
      } else {
        mom._d["set" + (mom._isUTC ? "UTC" : "") + unit](value);
      }
    }
  } // MOMENTS


  function stringGet(units) {
    units = (0, _aliases.normalizeUnits)(units);

    if ((0, _isFunction.default)(this[units])) {
      return this[units]();
    }

    return this;
  }

  function stringSet(units, value) {
    if (babelHelpers.typeof(units) === "object") {
      units = (0, _aliases.normalizeObjectUnits)(units);
      var prioritized = (0, _priorities.getPrioritizedUnits)(units);

      for (var i = 0; i < prioritized.length; i++) {
        this[prioritized[i].unit](units[prioritized[i].unit]);
      }
    } else {
      units = (0, _aliases.normalizeUnits)(units);

      if ((0, _isFunction.default)(this[units])) {
        return this[units](value);
      }
    }

    return this;
  }
});