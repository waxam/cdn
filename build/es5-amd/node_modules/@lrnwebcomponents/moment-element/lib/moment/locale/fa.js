//! moment.js locale configuration
(function (global, factory) {
  (typeof exports === "undefined" ? "undefined" : babelHelpers.typeof(exports)) === "object" && typeof module !== "undefined" && typeof require === "function" ? factory(require("../moment")) : typeof define === "function" && define.amd ? define(["../moment"], factory) : factory(global.moment);
})(this, function (moment) {
  "use strict";

  var symbolMap = {
    "1": "۱",
    "2": "۲",
    "3": "۳",
    "4": "۴",
    "5": "۵",
    "6": "۶",
    "7": "۷",
    "8": "۸",
    "9": "۹",
    "0": "۰"
  },
      numberMap = {
    "۱": "1",
    "۲": "2",
    "۳": "3",
    "۴": "4",
    "۵": "5",
    "۶": "6",
    "۷": "7",
    "۸": "8",
    "۹": "9",
    "۰": "0"
  };
  var fa = moment.defineLocale("fa", {
    months: "ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر".split("_"),
    monthsShort: "ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر".split("_"),
    weekdays: "\u06CC\u06A9\u200C\u0634\u0646\u0628\u0647_\u062F\u0648\u0634\u0646\u0628\u0647_\u0633\u0647\u200C\u0634\u0646\u0628\u0647_\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647_\u067E\u0646\u062C\u200C\u0634\u0646\u0628\u0647_\u062C\u0645\u0639\u0647_\u0634\u0646\u0628\u0647".split("_"),
    weekdaysShort: "\u06CC\u06A9\u200C\u0634\u0646\u0628\u0647_\u062F\u0648\u0634\u0646\u0628\u0647_\u0633\u0647\u200C\u0634\u0646\u0628\u0647_\u0686\u0647\u0627\u0631\u0634\u0646\u0628\u0647_\u067E\u0646\u062C\u200C\u0634\u0646\u0628\u0647_\u062C\u0645\u0639\u0647_\u0634\u0646\u0628\u0647".split("_"),
    weekdaysMin: "ی_د_س_چ_پ_ج_ش".split("_"),
    weekdaysParseExact: true,
    longDateFormat: {
      LT: "HH:mm",
      LTS: "HH:mm:ss",
      L: "DD/MM/YYYY",
      LL: "D MMMM YYYY",
      LLL: "D MMMM YYYY HH:mm",
      LLLL: "dddd, D MMMM YYYY HH:mm"
    },
    meridiemParse: /قبل از ظهر|بعد از ظهر/,
    isPM: function isPM(input) {
      return /بعد از ظهر/.test(input);
    },
    meridiem: function meridiem(hour, minute, isLower) {
      if (hour < 12) {
        return "قبل از ظهر";
      } else {
        return "بعد از ظهر";
      }
    },
    calendar: {
      sameDay: "[امروز ساعت] LT",
      nextDay: "[فردا ساعت] LT",
      nextWeek: "dddd [ساعت] LT",
      lastDay: "[دیروز ساعت] LT",
      lastWeek: "dddd [پیش] [ساعت] LT",
      sameElse: "L"
    },
    relativeTime: {
      future: "در %s",
      past: "%s پیش",
      s: "چند ثانیه",
      ss: "ثانیه d%",
      m: "یک دقیقه",
      mm: "%d دقیقه",
      h: "یک ساعت",
      hh: "%d ساعت",
      d: "یک روز",
      dd: "%d روز",
      M: "یک ماه",
      MM: "%d ماه",
      y: "یک سال",
      yy: "%d سال"
    },
    preparse: function preparse(string) {
      return string.replace(/[۰-۹]/g, function (match) {
        return numberMap[match];
      }).replace(/،/g, ",");
    },
    postformat: function postformat(string) {
      return string.replace(/\d/g, function (match) {
        return symbolMap[match];
      }).replace(/,/g, "،");
    },
    dayOfMonthOrdinalParse: /\d{1,2}م/,
    ordinal: "%dم",
    week: {
      dow: 6,
      // Saturday is the first day of the week.
      doy: 12 // The week that contains Jan 1st is the first week of the year.

    }
  });
  return fa;
});