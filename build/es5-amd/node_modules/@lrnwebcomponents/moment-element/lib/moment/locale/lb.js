//! moment.js locale configuration
(function(global,factory){"object"===("undefined"===typeof exports?"undefined":babelHelpers.typeof(exports))&&"undefined"!==typeof module&&"function"===typeof require?factory(require("../moment")):"function"===typeof define&&define.amd?define(["../moment"],factory):factory(global.moment)})(this,function(moment){"use strict";function processRelativeTime(number,withoutSuffix,key,isFuture){var format={m:["eng Minutt","enger Minutt"],h:["eng Stonn","enger Stonn"],d:["een Dag","engem Dag"],M:["ee Mount","engem Mount"],y:["ee Joer","engem Joer"]};return withoutSuffix?format[key][0]:format[key][1]}function processFutureTime(string){var number=string.substr(0,string.indexOf(" "));if(eifelerRegelAppliesToNumber(number)){return"a "+string}return"an "+string}function processPastTime(string){var number=string.substr(0,string.indexOf(" "));if(eifelerRegelAppliesToNumber(number)){return"viru "+string}return"virun "+string}/**
   * Returns true if the word before the given number loses the '-n' ending.
   * e.g. 'an 10 Deeg' but 'a 5 Deeg'
   *
   * @param number {integer}
   * @returns {boolean}
   */function eifelerRegelAppliesToNumber(number){number=parseInt(number,10);if(isNaN(number)){return!1}if(0>number){// Negative Number --> always true
return!0}else if(10>number){// Only 1 digit
if(4<=number&&7>=number){return!0}return!1}else if(100>number){// 2 digits
var lastDigit=number%10,firstDigit=number/10;if(0===lastDigit){return eifelerRegelAppliesToNumber(firstDigit)}return eifelerRegelAppliesToNumber(lastDigit)}else if(1e4>number){// 3 or 4 digits --> recursively check first digit
while(10<=number){number=number/10}return eifelerRegelAppliesToNumber(number)}else{// Anything larger than 4 digits: recursively check first n-3 digits
number=number/1e3;return eifelerRegelAppliesToNumber(number)}}var lb=moment.defineLocale("lb",{months:"Januar_Februar_M\xE4erz_Abr\xEBll_Mee_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),monthsShort:"Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),monthsParseExact:!0,weekdays:"Sonndeg_M\xE9indeg_D\xEBnschdeg_M\xEBttwoch_Donneschdeg_Freideg_Samschdeg".split("_"),weekdaysShort:"So._M\xE9._D\xEB._M\xEB._Do._Fr._Sa.".split("_"),weekdaysMin:"So_M\xE9_D\xEB_M\xEB_Do_Fr_Sa".split("_"),weekdaysParseExact:!0,longDateFormat:{LT:"H:mm [Auer]",LTS:"H:mm:ss [Auer]",L:"DD.MM.YYYY",LL:"D. MMMM YYYY",LLL:"D. MMMM YYYY H:mm [Auer]",LLLL:"dddd, D. MMMM YYYY H:mm [Auer]"},calendar:{sameDay:"[Haut um] LT",sameElse:"L",nextDay:"[Muer um] LT",nextWeek:"dddd [um] LT",lastDay:"[G\xEBschter um] LT",lastWeek:function lastWeek(){// Different date string for 'DÃ«nschdeg' (Tuesday) and 'Donneschdeg' (Thursday) due to phonological rule
switch(this.day()){case 2:case 4:return"[Leschten] dddd [um] LT";default:return"[Leschte] dddd [um] LT";}}},relativeTime:{future:processFutureTime,past:processPastTime,s:"e puer Sekonnen",ss:"%d Sekonnen",m:processRelativeTime,mm:"%d Minutten",h:processRelativeTime,hh:"%d Stonnen",d:processRelativeTime,dd:"%d Deeg",M:processRelativeTime,MM:"%d M\xE9int",y:processRelativeTime,yy:"%d Joer"},dayOfMonthOrdinalParse:/\d{1,2}\./,ordinal:"%d.",week:{dow:1,// Monday is the first day of the week.
doy:4// The week that contains Jan 4th is the first week of the year.
}});return lb});