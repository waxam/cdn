define(["exports", "require", "../../lit-element/lit-element.js", "../haxcms-elements/lib/core/HAXCMSLitElementTheme.js", "../simple-colors/simple-colors.js", "../haxcms-elements/lib/core/haxcms-site-store.js", "../../mobx/lib/mobx.module.js", "../../@polymer/polymer/lib/elements/custom-style.js"], function (_exports, _require, _litElement, _HAXCMSLitElementTheme, _simpleColors, _haxcmsSiteStore, _mobxModule, _customStyle) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.OutlinePlayer = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _templateObject2_636e7fb0d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <custom-style>\n        <style>\n          app-drawer {\n            box-shadow: 0 0 6px -3px var(--outline-player-dark);\n            overflow: hidden;\n            --app-drawer-scrim-background: rgba(80, 80, 80, 0.8);\n            --app-drawer-content-container: {\n              overflow: hidden;\n            }\n          }\n          site-menu {\n            height: calc(100vh - 64px);\n            color: #000000;\n            padding: 0;\n            background-color: #ffffff;\n            --site-menu-active-color: rgba(0, 0, 0, 0.1);\n            --site-menu-scrolltrack-bg-color: rgba(0, 0, 0, 0.3);\n            --site-menu-bg-shadow: rgba(0, 0, 0, 0.3);\n            --site-menu-bg-color: #fafafa;\n            --site-menu-padding: 0;\n            --site-menu-background-color: #ffffff;\n            --site-menu-color: #000000;\n\n            --site-menu-container-padding: 0;\n            --site-menu-container-background-color: #ffffff;\n            --site-menu-container-color: #000000;\n\n            --site-menu-item-active-item-color: #000000;\n          }\n          site-menu-button {\n            --site-menu-button-button-hover-background-color: rgba(\n              0,\n              0,\n              0,\n              0.2\n            );\n            --site-menu-button-button: {\n              border-radius: 50%;\n              background-color: rgba(0, 0, 0, 0.1);\n              height: 40px;\n              width: 40px;\n            }\n          }\n        </style>\n      </custom-style>\n      <app-drawer-layout\n        .narrow=\"", "\"\n        @narrow-changed=\"", "\"\n      >\n        <app-drawer\n          id=\"drawer\"\n          swipe-open=\"\"\n          slot=\"drawer\"\n          .opened=\"", "\"\n          @opened-changed=\"", "\"\n        >\n          <div id=\"menubuttoncontainer\">\n            <site-print-button></site-print-button>\n            <site-menu-button\n              type=\"prev\"\n              position=\"bottom\"\n              raised\n            ></site-menu-button>\n            <site-menu-button\n              type=\"next\"\n              position=\"bottom\"\n              raised\n            ></site-menu-button>\n          </div>\n          <site-menu></site-menu>\n        </app-drawer>\n        <div id=\"content\">\n          <site-git-corner></site-git-corner>\n          <paper-icon-button\n            icon=\"menu\"\n            id=\"menutoggle\"\n            @click=\"", "\"\n          ></paper-icon-button>\n          <site-active-title></site-active-title>\n          <div><slot name=\"title\"></slot></div>\n          <div id=\"contentcontainer\">\n            <div id=\"slot\"><slot></slot></div>\n          </div>\n        </div>\n      </app-drawer-layout>\n    "]);

    _templateObject2_636e7fb0d34d11ea880ba1e93364c49c = function _templateObject2_636e7fb0d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  function _templateObject_636e7fb0d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n          font-family: libre baskerville;\n          position: relative;\n          overflow: hidden;\n          --outline-player-min-height: 100vh;\n          --app-drawer-width: 300px;\n          --outline-player-dark: #222222;\n          --outline-player-light: #f8f8f8;\n          background-color: var(--outline-player-light);\n        }\n\n        :host([closed]) {\n          --app-drawer-width: 0px;\n        }\n\n        :host,\n        :host * ::slotted(*) {\n          line-height: 1.8;\n        }\n        :host ul,\n        :host * ::slotted(ul),\n        :host ol,\n        :host * ::slotted(ol) {\n          padding-left: 20px;\n          margin-left: 20px;\n        }\n        :host ul,\n        :host * ::slotted(ul) {\n          list-style-type: disc;\n        }\n        :host li,\n        :host * ::slotted(li) {\n          margin-bottom: 6px;\n        }\n\n        h1 {\n          font-size: 48px;\n          line-height: 16px;\n        }\n\n        h2 {\n          font-size: 32px;\n        }\n\n        h3 {\n          font-size: 28px;\n        }\n\n        p {\n          line-height: 26px;\n          min-height: 26px;\n        }\n\n        a,\n        a:visited,\n        a:active {\n          color: #000;\n        }\n\n        a:hover {\n          color: #2196f3;\n        }\n\n        ul li {\n          padding-bottom: 24px;\n          line-height: 1.5;\n          color: #424242;\n          max-width: 448px;\n        }\n\n        ul li:last-child {\n          padding-bottom: 16px;\n        }\n\n        app-drawer-layout {\n          min-height: 100vh;\n          min-height: -moz-available; /* WebKit-based browsers will ignore this. */\n          min-height: -webkit-fill-available; /* Mozilla-based browsers will ignore this. */\n          min-height: fill-available;\n          /* if the user has set a specific value then override the defaults */\n          min-height: var(--outline-player-min-height);\n        }\n\n        outline-player-navigation {\n          --outline-player-dark: var(--outline-player-dark);\n        }\n\n        div[main-title] {\n          margin-left: 8px;\n          font-size: 16px;\n          line-height: 22px;\n          overflow-wrap: break-word;\n          text-overflow: ellipsis;\n          display: inline-block;\n          word-break: break-word;\n        }\n        app-drawer-layout[narrow] #contentcontainer {\n          padding-top: 64px;\n        }\n        #content {\n          padding: 8px 8px 8px 64px;\n        }\n        #menutoggle {\n          display: block;\n          float: left;\n          margin-right: 16px;\n        }\n\n        /* Required for HAX */\n        :host([edit-mode]) #slot {\n          display: none !important;\n        }\n        :host([edit-mode]) #contentcontainer {\n          padding: 32px 8px 8px 8px;\n        }\n        :host([is-logged-in]) app-drawer,\n        :host([is-logged-in]) app-drawer-layout[narrow] {\n          left: 48px;\n        }\n        #contentcontainer {\n          max-width: 840px;\n          display: block;\n          margin: 0;\n          padding: 0 16px 16px 16px;\n          flex: none;\n          transition: 0.5s opacity ease-in-out;\n        }\n        #contentcontainer h-a-x {\n          margin: 0;\n        }\n        #menubuttoncontainer {\n          display: flex;\n          justify-content: center;\n          padding: 8px 0 0 0;\n        }\n        site-menu-button {\n          display: inline-flex;\n        }\n        site-print-button {\n          display: inline-flex;\n          margin-right: 20px;\n        }\n        site-active-title {\n          --site-active-title-margin: 0px;\n          --site-active-title-padding: 0px;\n          margin: 10px;\n          padding: 10px;\n          display: block;\n        }\n        @media screen and (max-width: 800px) {\n          :host([edit-mode][is-logged-in]) app-drawer,\n          :host([edit-mode][is-logged-in]) app-drawer-layout[narrow] {\n            left: 0;\n          }\n        }\n        @media screen and (max-width: 640px) {\n          #content {\n            padding: 8px 8px 8px 8px;\n          }\n        }\n      "]);

    _templateObject_636e7fb0d34d11ea880ba1e93364c49c = function _templateObject_636e7fb0d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  /**
   * `outline-player`
   * @element outline-player
   * `A basic outline presentation`
   *
   * @demo demo/index.html
   */
  var OutlinePlayer =
  /*#__PURE__*/
  function (_SimpleColorsSuper) {
    babelHelpers.inherits(OutlinePlayer, _SimpleColorsSuper);
    babelHelpers.createClass(OutlinePlayer, null, [{
      key: "styles",

      /**
       * LitElement style render
       */
      get: function get() {
        return [].concat(babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(OutlinePlayer), "styles", this)), [(0, _litElement.css)(_templateObject_636e7fb0d34d11ea880ba1e93364c49c())]);
      }
      /**
       * Store the tag name to make it easier to obtain directly.
       * @notice function name must be here for tooling to operate correctly
       */

    }, {
      key: "tag",
      get: function get() {
        return "outline-player";
      }
      /**
       * HTMLElement
       */

    }]);

    function OutlinePlayer() {
      var _this;

      babelHelpers.classCallCheck(this, OutlinePlayer);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(OutlinePlayer).call(this));
      _this.__disposer = [];
      _this.closed = false;
      new Promise(function (res, rej) {
        return _require.default(["../../@polymer/app-layout/app-drawer/app-drawer.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../../@polymer/app-layout/app-drawer-layout/app-drawer-layout.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../haxcms-elements/lib/ui-components/navigation/site-menu.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../haxcms-elements/lib/ui-components/navigation/site-menu-button.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../haxcms-elements/lib/ui-components/site/site-print-button.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../haxcms-elements/lib/ui-components/site/site-title.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../haxcms-elements/lib/ui-components/active-item/site-active-title.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../haxcms-elements/lib/ui-components/active-item/site-git-corner.js"], res, rej);
      });
      return _this;
    } // render function


    babelHelpers.createClass(OutlinePlayer, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject2_636e7fb0d34d11ea880ba1e93364c49c(), this.narrow, this._narrowChanged, this.opened, this._openedChanged, this._toggleMenu);
      }
    }, {
      key: "_narrowChanged",
      value: function _narrowChanged(e) {
        this.narrow = e.detail.value;
      }
    }, {
      key: "_openedChanged",
      value: function _openedChanged(e) {
        this.opened = e.detail.value;
      }
      /**
       * LitElement / popular convention
       */

    }, {
      key: "updated",

      /**
       * LitElement properties changed
       */
      value: function updated(changedProperties) {
        var _this2 = this;

        if (babelHelpers.get(babelHelpers.getPrototypeOf(OutlinePlayer.prototype), "updated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(OutlinePlayer.prototype), "updated", this).call(this, changedProperties);
        }

        changedProperties.forEach(function (oldValue, propName) {
          if (propName == "activeId") {
            _this2._activeIdChanged(_this2[propName], oldValue);
          }

          if (propName == "closed") {
            _this2.dispatchEvent(new CustomEvent("closed-changed", {
              detail: {
                value: _this2[propName]
              }
            }));
          }
        });
      }
      /**
       * Link menu button to open and closing the side panel.
       */

    }, {
      key: "_toggleMenu",
      value: function _toggleMenu(e) {
        this.shadowRoot.querySelector("#drawer").toggle(); // allow styling to trigger based on open status

        this.closed = !this.shadowRoot.querySelector("#drawer").opened; // kind of silly it doesn't just work this way but
        // app-panel doesn't make any assumptions about how
        // to handle the layout when it closes
        // trick browser into thinking we just reized

        window.dispatchEvent(new Event("resize"));
      }
      /**
       * active id has changed.
       */

    }, {
      key: "_activeIdChanged",
      value: function _activeIdChanged(newValue, oldValue) {
        // close menu if it's narrow and something new is picked
        if (this.opened && this.narrow) {
          this.shadowRoot.querySelector("#drawer").toggle();
        }

        window.scrollTo({
          top: 0,
          left: 0,
          behavior: "smooth"
        });
      }
    }, {
      key: "firstUpdated",
      value: function firstUpdated(changedProperties) {
        var _this3 = this;

        if (babelHelpers.get(babelHelpers.getPrototypeOf(OutlinePlayer.prototype), "firstUpdated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(OutlinePlayer.prototype), "firstUpdated", this).call(this, changedProperties);
        }

        (0, _mobxModule.autorun)(function (reaction) {
          _this3.activeId = (0, _mobxModule.toJS)(_haxcmsSiteStore.store.activeId);

          _this3.__disposer.push(reaction);
        });
      }
      /**
       * HTMLElement
       */

    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        for (var i in this.__disposer) {
          this.__disposer[i].dispose();
        }

        babelHelpers.get(babelHelpers.getPrototypeOf(OutlinePlayer.prototype), "disconnectedCallback", this).call(this);
      }
    }], [{
      key: "properties",
      get: function get() {
        return _objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(OutlinePlayer), "properties", this), {
          opened: {
            type: Boolean,
            reflect: true
          },
          closed: {
            type: Boolean,
            reflect: true
          },
          activeId: {
            type: String
          },
          narrow: {
            type: Boolean,
            reflect: true
          }
        });
      }
    }]);
    return OutlinePlayer;
  }((0, _simpleColors.SimpleColorsSuper)(_HAXCMSLitElementTheme.HAXCMSLitElementTheme));

  _exports.OutlinePlayer = OutlinePlayer;
  window.customElements.define(OutlinePlayer.tag, OutlinePlayer);
});