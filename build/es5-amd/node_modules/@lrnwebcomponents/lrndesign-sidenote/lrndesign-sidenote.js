define(["exports","../../@polymer/polymer/polymer-element.js","../a11y-behaviors/a11y-behaviors.js","../materializecss-styles/materializecss-styles.js"],function(_exports,_polymerElement,_a11yBehaviors,_materializecssStyles){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.LrndesignSidenote=void 0;function _templateObject_72559a70898111e9ba38e33cad2d1624(){var data=babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n          --container-bg-color: lightgray;\n          --container-text-color: black;\n          --container-padding: 16px;\n          --container-outset: 0;\n          @apply --host-styles;\n        }\n\n        #container {\n          display: block;\n          background: var(--container-bg-color);\n          color: var(--container-text-color);\n          padding: var(--container-padding);\n          margin-left: -var(--container-outset);\n          @apply --container-styles;\n        }\n\n        #header {\n          display: flex;\n          align-items: center;\n          @apply --container-header;\n        }\n\n        #icon {\n          margin-right: 8px;\n          @apply --icon-styles;\n        }\n\n        #label {\n          font-size: 20.8px;\n          margin: 12.8px 0;\n          flex: 1 1 auto;\n          @apply --label-styles;\n        }\n      </style>\n      <div id=\"container\">\n        <div id=\"header\">\n          <iron-icon id=\"icon\" icon=\"[[icon]]\" hidden$=\"[[!icon]]\"></iron-icon>\n          <div id=\"label\" hidden$=\"[[!label]]\">[[label]]</div>\n        </div>\n        <slot></slot>\n      </div>\n    "],["\n      <style>\n        :host {\n          display: block;\n          --container-bg-color: lightgray;\n          --container-text-color: black;\n          --container-padding: 16px;\n          --container-outset: 0;\n          @apply --host-styles;\n        }\n\n        #container {\n          display: block;\n          background: var(--container-bg-color);\n          color: var(--container-text-color);\n          padding: var(--container-padding);\n          margin-left: -var(--container-outset);\n          @apply --container-styles;\n        }\n\n        #header {\n          display: flex;\n          align-items: center;\n          @apply --container-header;\n        }\n\n        #icon {\n          margin-right: 8px;\n          @apply --icon-styles;\n        }\n\n        #label {\n          font-size: 20.8px;\n          margin: 12.8px 0;\n          flex: 1 1 auto;\n          @apply --label-styles;\n        }\n      </style>\n      <div id=\"container\">\n        <div id=\"header\">\n          <iron-icon id=\"icon\" icon=\"[[icon]]\" hidden\\$=\"[[!icon]]\"></iron-icon>\n          <div id=\"label\" hidden\\$=\"[[!label]]\">[[label]]</div>\n        </div>\n        <slot></slot>\n      </div>\n    "]);_templateObject_72559a70898111e9ba38e33cad2d1624=function _templateObject_72559a70898111e9ba38e33cad2d1624(){return data};return data}/**
`lrndesign-sidenote`
A basic side note

* @demo demo/index.html
*/var LrndesignSidenote=/*#__PURE__*/function(_A11yBehaviors){babelHelpers.inherits(LrndesignSidenote,_A11yBehaviors);babelHelpers.createClass(LrndesignSidenote,null,[{key:"template",get:function get(){return(0,_polymerElement.html)(_templateObject_72559a70898111e9ba38e33cad2d1624())}},{key:"tag",get:function get(){return"lrndesign-sidenote"}},{key:"properties",get:function get(){return{/**
       * The display label
       */label:{type:String,value:""},/**
       * The display icon for the element
       */icon:{type:String,value:""},/**
       * Background Color
       */bgColor:{type:String,value:"#f7f7f7"},/**
       * Outset will move the entire element left to make it
       * stand out from the content.
       */outset:{type:Number,value:0},/**
       * Define the unit of measure for the outset variable
       * Examples: 'em', 'px', '%', 'vw'
       */outsetMeasurementType:{type:String,value:"em"}}}/**
   * Create global overrides for each property defined in a component
   *
   * Example: this will override the default value for bgColor for all
   *          lrndesign-sidenote elements on the page.
   *
   *  _.set(window, 'lrndesignSidenote.bgColor', 'blue');
   */}]);function LrndesignSidenote(){var _this;babelHelpers.classCallCheck(this,LrndesignSidenote);_this=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(LrndesignSidenote).call(this));for(var prop in _this.properties){var prefix=_this.is;// convert prefix to camel case
prefix=prefix.replace("-"," ").replace(/(?:^\w|[A-Z]|\b\w)/g,function(letter,index){return 0==index?letter.toLowerCase():letter.toUpperCase()}).replace(/\s+/g,"");// find out if a property override is set on the window object
if("undefined"!==typeof window[prefix]){if("undefined"!==typeof window[prefix][prop]){_this.properties[prop].value=window[prefix][prop]}}}return _this}babelHelpers.createClass(LrndesignSidenote,[{key:"__updateStyles",value:function __updateStyles(bgColor,outset,outsetMeasurementType){var bgColorHex=this._colorTransformFromClass(bgColor)||bgColor;this.updateStyles({"--container-text-color":this.getTextContrastColor(bgColorHex),"--container-bg-color":bgColorHex,"--container-outset":"".concat(+outset).concat(outsetMeasurementType)})}}],[{key:"observers",get:function get(){return["__updateStyles(bgColor, outset, outsetMeasurementType)"]}}]);return LrndesignSidenote}((0,_a11yBehaviors.A11yBehaviors)(_polymerElement.PolymerElement));_exports.LrndesignSidenote=LrndesignSidenote;window.customElements.define(LrndesignSidenote.tag,LrndesignSidenote)});