var _templateObject=babelHelpers.taggedTemplateLiteral(["\n    <style include=\"materializecss-styles\">\n      :host {\n        display: block;\n        padding: 16px 16px 54px 16px;\n      }\n      h3 {\n        margin: 8px;\n      }\n      ul {\n        list-style: none;\n        padding: 0;\n        margin: 0;\n      }\n      ul li {\n        padding: 8px;\n      }\n      paper-checkbox {\n        padding: 8px;\n      }\n      iron-icon {\n        display: inline-flex;\n      }\n    </style>\n    <meta property=\"oer:assessing\" content$=\"[[relatedResource]]\" />\n    <h3 hidden$=\"[[hideTitle]]\"><span property=\"oer:name\">[[title]]</span></h3>\n    <div>[[question]]</div>\n    <ul>\n      <template is=\"dom-repeat\" items=\"[[displayedAnswers]]\" as=\"answer\">\n        <li>\n          <paper-checkbox\n            disabled$=\"[[disabled]]\"\n            property=\"oer:answer\"\n            checked=\"{{answer.userGuess}}\"\n            >[[answer.label]]</paper-checkbox\n          >\n        </li>\n      </template>\n    </ul>\n    <div hidden$=\"[[hideButtons]]\">\n      <paper-button disabled$=\"[[disabled]]\" raised=\"\" on-tap=\"_verifyAnswers\"\n        >[[checkLabel]]</paper-button\n      >\n      <paper-button disabled$=\"[[disabled]]\" raised=\"\" on-tap=\"_resetAnswers\"\n        >[[resetLabel]]</paper-button\n      >\n    </div>\n    <paper-toast\n      id=\"toast\"\n      duration=\"6000\"\n      class$=\"fit-bottom [[__toastColor]]\"\n    >\n      [[__toastText]]\n      <iron-icon icon=\"[[__toastIcon]]\" style=\"margin-left:16px;\"></iron-icon>\n    </paper-toast>\n  "],["\n    <style include=\"materializecss-styles\">\n      :host {\n        display: block;\n        padding: 16px 16px 54px 16px;\n      }\n      h3 {\n        margin: 8px;\n      }\n      ul {\n        list-style: none;\n        padding: 0;\n        margin: 0;\n      }\n      ul li {\n        padding: 8px;\n      }\n      paper-checkbox {\n        padding: 8px;\n      }\n      iron-icon {\n        display: inline-flex;\n      }\n    </style>\n    <meta property=\"oer:assessing\" content\\$=\"[[relatedResource]]\" />\n    <h3 hidden\\$=\"[[hideTitle]]\"><span property=\"oer:name\">[[title]]</span></h3>\n    <div>[[question]]</div>\n    <ul>\n      <template is=\"dom-repeat\" items=\"[[displayedAnswers]]\" as=\"answer\">\n        <li>\n          <paper-checkbox\n            disabled\\$=\"[[disabled]]\"\n            property=\"oer:answer\"\n            checked=\"{{answer.userGuess}}\"\n            >[[answer.label]]</paper-checkbox\n          >\n        </li>\n      </template>\n    </ul>\n    <div hidden\\$=\"[[hideButtons]]\">\n      <paper-button disabled\\$=\"[[disabled]]\" raised=\"\" on-tap=\"_verifyAnswers\"\n        >[[checkLabel]]</paper-button\n      >\n      <paper-button disabled\\$=\"[[disabled]]\" raised=\"\" on-tap=\"_resetAnswers\"\n        >[[resetLabel]]</paper-button\n      >\n    </div>\n    <paper-toast\n      id=\"toast\"\n      duration=\"6000\"\n      class\\$=\"fit-bottom [[__toastColor]]\"\n    >\n      [[__toastText]]\n      <iron-icon icon=\"[[__toastIcon]]\" style=\"margin-left:16px;\"></iron-icon>\n    </paper-toast>\n  "]);import{html,Polymer}from"@polymer/polymer/polymer-legacy.js";import"@polymer/paper-checkbox/paper-checkbox.js";import"@polymer/iron-icons/iron-icons.js";import"@polymer/iron-icon/iron-icon.js";import"@polymer/paper-button/paper-button.js";import"@polymer/paper-toast/paper-toast.js";import"@lrnwebcomponents/materializecss-styles/materializecss-styles.js";import"@lrnwebcomponents/hax-body-behaviors/lib/HAXWiring.js";import"@lrnwebcomponents/schema-behaviors/schema-behaviors.js";var MultipleChoice=Polymer({_template:html(_templateObject),is:"multiple-choice",hostAttributes:{typeof:"oer:Assessment"},behaviors:[HAXBehaviors.PropertiesBehaviors,MaterializeCSSBehaviors.ColorBehaviors,SchemaBehaviors.Schema],observers:["_valueChanged(displayedAnswers.*)"],properties:{title:{type:String,value:""},disabled:{type:Boolean,value:!1},checkLabel:{type:String,value:"Check answer"},resetLabel:{type:String,value:"Reset"},relatedResource:{type:String},hideTitle:{type:Boolean,value:!1},question:{type:String,value:""},answers:{type:Array,value:[],notify:!0},displayedAnswers:{type:Array,computed:"_computeDisplayedAnswers(answers, randomize)",notify:!0},correctText:{type:String,value:"Great job!"},incorrectText:{type:String,value:"Better luck next time!"},randomize:{type:Boolean,value:!1,reflectToAttribute:!0},hideButtons:{type:Boolean,value:!1}},_valueChanged:function(b){for(var c in b.base)for(var d in b.base[c])this.notifyPath("displayedAnswers."+c+"."+d)},_resetAnswers:function(){var c=this;for(var d in this.$.toast.hide(),this.displayedAnswers)this.displayedAnswers[d].userGuess&&(this.displayedAnswers[d].userGuess=!1);setTimeout(function(){var f=c.answers;c.set("answers",[]),c.set("answers",f)},100)},checkAnswers:function(){var b=!0;for(var c in this.displayedAnswers)!1!=b&&this.displayedAnswers[c].correct&&this.displayedAnswers[c].userGuess?b=!0:this.displayedAnswers[c].correct&&!this.displayedAnswers[c].userGuess?b=!1:!this.displayedAnswers[c].correct&&this.displayedAnswers[c].userGuess&&(b=!1);return b},_verifyAnswers:function(){var c=this.checkAnswers();c?(this.$.toast.hide(),this.__toastColor="green darken-4",this.__toastIcon="thumb-up",this.__toastText=this.correctText,this.$.toast.show()):(this.$.toast.hide(),this.__toastColor="red darken-4",this.__toastIcon="thumb-down",this.__toastText=this.incorrectText,this.$.toast.show())},_computeDisplayedAnswers:function(b,c){if(("undefined"===typeof b?"undefined":babelHelpers.typeof(b))!=="undefined"&&null!=b&&0<b.length&&c){for(var g,h,d=b,f=d.length;0!==f;)h=Math.floor(Math.random()*f),f-=1,g=d[f],d[f]=d[h],d[h]=g;return d}return b},attached:function(){this.$.toast.fitInto=this;this.setHaxProperties({canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"Multiple choice",description:"Multiple choice self check",icon:"icons:list",color:"purple",groups:["Instructional"],handles:[],meta:{author:"LRNWebComponents"}},settings:{quick:[{property:"title",title:"Title",description:"The title of the element",inputMethod:"textfield",icon:"editor:title"},{property:"question",title:"Question",description:"Question for users to respond to.",inputMethod:"textfield",icon:"icons:help"}],configure:[{property:"title",title:"Title",description:"The title of the element",inputMethod:"textfield"},{property:"hideTitle",title:"Hide title",description:"Whether or not to display the title",inputMethod:"boolean"},{property:"question",title:"Question",description:"Question for users to respond to.",inputMethod:"textfield"},{property:"randomize",title:"Randomize",description:"Randomize the answers dynamically",inputMethod:"boolean"},{property:"answers",title:"Answer set",description:"Answers in a multiple choice",inputMethod:"array",properties:[{property:"correct",title:"Correct",description:"If this is correct or not",inputMethod:"boolean"},{property:"label",title:"Answer",description:"Possible answer to the question",inputMethod:"textfield",required:!0}]},{property:"correctText",title:"Correct feedback",description:"Feedback when they get it right",inputMethod:"textfield"},{property:"incorrectText",title:"Incorrect feedback",description:"Feedback when they get it wrong",inputMethod:"textfield"}],advanced:[{property:"checkLabel",title:"Check answers label",description:"Label for getting solution feedback",inputMethod:"textfield"},{property:"resetLabel",title:"Reset label",description:"label for the reset button",inputMethod:"textfield"}]},saveOptions:{unsetAttributes:["displayed-answers"]}})}});export{MultipleChoice};