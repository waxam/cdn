define(["exports","../../../@polymer/polymer/polymer-element.js","../../../@polymer/polymer/lib/elements/dom-repeat.js"],function(_exports,_polymerElement,_domRepeat){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.SimpleSearchContent=void 0;function _templateObject_d36552807cd211e98efbab36cb9e78ba(){var data=babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host #content {\n          @apply --simple-search-content;\n        }\n        :host #content[match-number] {\n          color: var(--simple-search-match-text-color, #000);\n          background-color: var(--simple-search-match-bg-color, #f0f0f0);\n          border: 1px solid;\n          border-color: var(--simple-search-match-border-color, #ddd);\n          padding: 0.16px 4px;\n          border-radius: 0.16px;\n          font-weight: bold;\n          @apply --simple-search-match;\n        }\n      </style>\n      <span id=\"content\">\n        <span class=\"initialcontent\" hidden$=\"[[inSearchMode]]\"\n          >[[content]]</span\n        >\n        <template is=\"dom-repeat\" items=\"[[__searchedContent]]\">\n          <span\n            match-number$=\"[[item.matchNumber]]\"\n            tabindex$=\"[[_getTabIndex(item.matchNumber)]]\"\n            >[[item.text]]</span\n          >\n        </template>\n      </span>\n    "]);_templateObject_d36552807cd211e98efbab36cb9e78ba=function _templateObject_d36552807cd211e98efbab36cb9e78ba(){return data};return data}/**
 * `simple-search-content`
 * `Content that can be searched with simple-search`
 *
 *
 * @microcopy - the mental model for this element
 * ```
 <simple-search-content
  content="[[content]]"                // inline content to be searched
</simple-search-content>```
 *
 * CSS Variables for matched content:
 * ```color: var(--simple-search-match-text-color, #000);
 * background-color: var(--simple-search-match-background-color, #f0f0f0);
 * border-color: var(--simple-search-match-border-color, #ddd);
 * @apply --simple-search-match;```
 *
 * @polymer
 * @customElement
 * @demo demo/index.html
 */var SimpleSearchContent=/*#__PURE__*/function(_PolymerElement){babelHelpers.inherits(SimpleSearchContent,_PolymerElement);function SimpleSearchContent(){babelHelpers.classCallCheck(this,SimpleSearchContent);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(SimpleSearchContent).apply(this,arguments))}babelHelpers.createClass(SimpleSearchContent,[{key:"enableSearch",/**
   * associates simple-search-content with a simple-search
   *
   * @param {object} the simple-search element
   */value:function enableSearch(searchObject){var _this=this,root=this,content=[{matched:!1,text:root.content}];if(null===content[0].text)content[0].text=root.innerHTML;// set rendered content to default unsearched content
this.setContent(content);// listen for changes to search
searchObject.addEventListener("simple-search",function(){// set rendered content to default unsearched content to clear old results
root.setContent(content);// set rendered content to default search results
root.setContent(searchObject.findMatches(content))});// listen for navigation through results
searchObject.addEventListener("goto-result",function(e){_this.focus(e.detail)})}/**
   * sets array of content to be rendered
   *
   * @param {array} an array of searchable content
   */},{key:"setContent",value:function setContent(newContent){this.inSearchMode=!0;this.__searchedContent=newContent}/**
   * sets focus on a matched result based on match number
   *
   * @param {number} the number of a search result
   */},{key:"focus",value:function focus(matchNumber){var result=this.$.content.querySelector("[match-number=\""+matchNumber+"\"]");if(result!==void 0&&null!==result)result.focus()}/**
   * gets tab index based on whether item is a match that can be focused on
   *
   * @param {number} the number of a search result
   */},{key:"_getTabIndex",value:function _getTabIndex(matchNumber){return matchNumber!==void 0&&null!==matchNumber?"1":""}}],[{key:"is",get:function get(){return"simple-search-content"}},{key:"properties",get:function get(){return{/**
       * Original content. For example: "The quick brown fox jumps over the lazy dog."
       */content:{type:String,value:null,reflectToAttribute:!0},/**
       * Is it currently in search mode?
       */inSearchMode:{type:Boolean,value:!1,reflectToAttribute:!0}}}// render function
},{key:"template",get:function get(){return(0,_polymerElement.html)(_templateObject_d36552807cd211e98efbab36cb9e78ba())}}]);return SimpleSearchContent}(_polymerElement.PolymerElement);_exports.SimpleSearchContent=SimpleSearchContent;customElements.define(SimpleSearchContent.is,SimpleSearchContent)});