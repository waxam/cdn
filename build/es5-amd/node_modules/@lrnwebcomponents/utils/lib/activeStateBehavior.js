define(["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.activeStateBehavior = void 0;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var activeStateBehavior = function activeStateBehavior(SuperClass) {
    return /*#__PURE__*/function (_SuperClass) {
      babelHelpers.inherits(_class, _SuperClass);

      var _super = _createSuper(_class);

      function _class() {
        var _this;

        babelHelpers.classCallCheck(this, _class);
        _this = _super.call(this);
        _this.isUserSelected = false;
        setTimeout(function () {
          _this.addEventListener("mouseover", function (e) {
            _this.isUserSelected = true;
          });

          _this.addEventListener("focusin", function (e) {
            _this.isUserSelected = true;
          });

          _this.addEventListener("mouseout", function (e) {
            _this.isUserSelected = false;
          });

          _this.addEventListener("focusout", function (e) {
            _this.isUserSelected = false;
          });
        }, 0);
        return _this;
      }

      babelHelpers.createClass(_class, null, [{
        key: "properties",
        get: function get() {
          var prop = {};

          if (babelHelpers.get(babelHelpers.getPrototypeOf(_class), "prop", this)) {
            prop = babelHelpers.get(babelHelpers.getPrototypeOf(_class), "prop", this);
          }

          prop.isUserSelected = {
            type: Boolean,
            reflect: true,
            attribute: "is-user-selected"
          };
          return prop;
        }
      }]);
      return _class;
    }(SuperClass);
  };

  _exports.activeStateBehavior = activeStateBehavior;
});