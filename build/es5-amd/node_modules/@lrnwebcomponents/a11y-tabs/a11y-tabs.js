define(["exports", "../../lit-element/lit-element.js", "../responsive-utility/lib/responsive-utility-behaviors.js", "../../@polymer/paper-button/paper-button.js", "../../@polymer/iron-icons/iron-icons.js", "../simple-tooltip/simple-tooltip.js", "./lib/a11y-tab.js"], function (_exports, _litElement, _responsiveUtilityBehaviors, _paperButton, _ironIcons, _simpleTooltip, _a11yTab) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.A11yTabs = void 0;

  function _templateObject8_5c000870d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <simple-tooltip for=\"", "-button\">\n        ", "\n      </simple-tooltip>\n    "]);

    _templateObject8_5c000870d34d11ea880ba1e93364c49c = function _templateObject8_5c000870d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  function _templateObject7_5c000870d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <span class=\"label\">", "</span>\n    "]);

    _templateObject7_5c000870d34d11ea880ba1e93364c49c = function _templateObject7_5c000870d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  function _templateObject6_5c000870d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <iron-icon\n        class=\"icon\"\n        ?hidden=\"", "\"\n        .icon=\"", "\"\n        .title=\"", "\"\n      >\n      </iron-icon>\n    "]);

    _templateObject6_5c000870d34d11ea880ba1e93364c49c = function _templateObject6_5c000870d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  function _templateObject5_5c000870d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <span class=\"flag-type\" ?hidden=\"", "\">\n        ", "\n      </span>\n    "]);

    _templateObject5_5c000870d34d11ea880ba1e93364c49c = function _templateObject5_5c000870d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  function _templateObject4_5c000870d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <paper-button\n        id=\"", "-button\"\n        controls=\"", "\"\n        class=\"", "\"\n        @click=\"", "\"\n        ?disabled=\"", "\"\n        .flag=\"", "\"\n      >\n        ", " ", "\n        ", " ", "\n      </paper-button>\n      ", "\n    "]);

    _templateObject4_5c000870d34d11ea880ba1e93364c49c = function _templateObject4_5c000870d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _templateObject3_5c000870d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n          height: var(--a11y-tabs-height);\n          overflow: var(--a11y-tabs-overflow);\n          font-size: var(--a11y-tabs-font-size, unset);\n          font-family: var(--a11y-tabs-font-family, unset);\n          --a11y-tabs-width: 100%;\n          --a11y-tabs-background: white;\n          --a11y-tabs-border-color: #ddd;\n          --a11y-tabs-color: #000;\n          --a11y-tabs-faded-color: #333;\n          --a11y-tabs-focus-color: var(-a11y-tabs-color);\n          --a11y-tabs-faded-background: #f8f8f8;\n          --a11y-tabs-disabled-color: #999;\n          --a11y-tabs-disabled-background: #eee;\n          --a11y-tabs-border-radius: 2px;\n          --a11y-tabs-horizontal-background: var(--a11y-tabs-background, white);\n          --a11y-tabs-horizontal-border-radius: var(\n            --a11y-tabs-border-radius,\n            2px\n          );\n          --a11y-tabs-vertical-border-radius: var(\n            --a11y-tabs-border-radius,\n            2px\n          );\n          --a11y-tabs-content-background: var(--a11y-tabs-background, white);\n          --a11y-tabs-content-padding: 16px;\n          --a11y-tabs-button-padding: 8px;\n          --a11y-tabs-vertical-button-padding: var(\n            --a11y-tabs-button-padding,\n            8px\n          );\n          --a11y-tabs-horizontal-border-radius: unset;\n          --a11y-tabs-vertical-border-radius: unset;\n          --a11y-tabs-horizontal-button-padding: var(\n            --a11y-tabs-button-padding,\n            8px\n          );\n          --a11y-tabs-width: auto;\n        }\n\n        :host([vertical]) {\n          border: 1px solid var(--a11y-tabs-border-color);\n          border-radius: var(--a11y-tabs-vertical-border-radius);\n          display: flex;\n          justify-content: space-between;\n          align-items: stretch;\n        }\n\n        :host([hidden]) {\n          display: none;\n        }\n\n        :host #tabs {\n          align-items: stretch;\n          flex-wrap: var(--a11y-tabs-wrap, unset);\n          margin: 0;\n          display: flex;\n          list-style: none;\n          padding: 0;\n          overflow: auto;\n          max-width: 100%;\n          overflow-x: auto;\n          z-index: 1;\n          justify-content: var(--a11y-tabs-horizontal-justify-tabs);\n          background-color: var(--a11y-tabs-horizontal-background);\n          font-family: var(\n            --a11y-tabs-tab-font-family,\n            var(--a11y-tabs-font-family, unset)\n          );\n          font-size: var(\n            --a11y-tabs-tab-font-size,\n            var(--a11y-tabs-font-size, unset)\n          );\n        }\n\n        :host([vertical]) #tabs {\n          border-left: none;\n          flex: 0 0 auto;\n          flex-direction: column;\n          overflow-y: auto;\n          max-width: unset;\n          overflow-x: unset;\n          z-index: unset;\n          background-color: var(--a11y-tabs-vertical-background);\n          justify-content: var(--a11y-tabs-vertical-justify-tabs);\n          flex-wrap: var(--a11y-tabs-vertical-wrap);\n        }\n\n        :host([sticky]) #tabs {\n          position: sticky;\n          top: 0;\n        }\n\n        :host #tabs li {\n          display: flex;\n          align-items: stretch;\n        }\n\n        :host([vertical]) #tabs li {\n          flex-direction: column;\n        }\n\n        :host #tabs .flag-type {\n          position: absolute;\n          left: -99999px;\n          height: 0;\n          overflow: hidden;\n        }\n\n        :host #content {\n          padding: var(--a11y-tabs-content-padding);\n          background-color: var(--a11y-tabs-content-background);\n          border: 1px solid var(--a11y-tabs-border-color);\n          flex: 1 1 calc(100% - 2 * var(--a11y-tabs-content-padding));\n          overflow: auto;\n        }\n\n        :host([vertical]) #content {\n          border: none;\n        }\n\n        :host(:not([vertical])) #content {\n          border-radius: var(--a11y-tabs-horizontal-border-radius);\n          margin-top: -1px;\n        }\n\n        :host #tabs paper-button {\n          margin: 0;\n          text-transform: unset;\n          color: var(--a11y-tabs-faded-color);\n          border: 1px solid var(--a11y-tabs-border-color);\n          background-color: var(--a11y-tabs-faded-background);\n          padding: var(--a11y-tabs-horizontal-button-padding);\n          border-radius: var(--a11y-tabs-horizontal-border-radius)\n            var(--a11y-tabs-horizontal-border-radius) 0 0;\n        }\n\n        :host([vertical]) #tabs paper-button {\n          border-top: none;\n          border-left: none;\n          border-radius: 0;\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          padding: var(--a11y-tabs-vertical-button-padding);\n        }\n\n        :host(:not([vertical])) #tabs li:not(:first-of-type) paper-button {\n          border-left: none;\n        }\n\n        :host #tabs paper-button:active,\n        :host #tabs paper-button:focus,\n        :host #tabs paper-button:hover {\n          color: var(--a11y-tabs-focus-color);\n        }\n\n        :host #tabs paper-button.active[disabled] {\n          color: var(--a11y-tabs-focus-color);\n          background-color: var(--a11y-tabs-background);\n        }\n\n        :host(:not([vertical])) #tabs paper-button.active {\n          border-bottom: var(--a11y-tabs-background);\n        }\n\n        :host([vertical]) #tabs paper-button.active {\n          border-right: var(--a11y-tabs-background);\n        }\n\n        :host #tabs paper-button:not(.active)[disabled] {\n          color: var(--a11y-tabs-disabled-color);\n          background-color: var(--a11y-tabs-disabled-background);\n          cursor: not-allowed;\n        }\n\n        :host #tabs span.label,\n        :host #tabs .flag-icon {\n          margin-right: 8px;\n        }\n\n        :host([icons-only]) #tabs paper-button {\n          justify-content: center;\n        }\n\n        :host([icons-only]) #tabs span.label {\n          display: none;\n        }\n\n        :host(:not([icons-only])) #tabs #tabs simple-tooltip {\n          display: none;\n        }\n        iron-icon:not([hidden]) {\n          display: inline-block;\n        }\n      "]);

    _templateObject3_5c000870d34d11ea880ba1e93364c49c = function _templateObject3_5c000870d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  function _templateObject2_5c000870d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n            <li>", "</li>\n          "]);

    _templateObject2_5c000870d34d11ea880ba1e93364c49c = function _templateObject2_5c000870d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  function _templateObject_5c000870d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <ul id=\"tabs\">\n        ", "\n      </ul>\n      <div id=\"content\">\n        <slot></slot>\n      </div>\n    "]);

    _templateObject_5c000870d34d11ea880ba1e93364c49c = function _templateObject_5c000870d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  /**
   * `a11y-tabs`
   * an accessible and responsive tabbed interface
   * 
  ### Styling
  
  `<a11y-tabs>` provides the following custom properties
  for styling:
  
  #### General
  Custom property | Description | Default
  ----------------|-------------|----------
  `--a11y-tabs-font-family` | font-family | unset
  `--a11y-tabs-font-size` | font-size | unset
  `--a11y-tabs-border-color` | border | #ddd
  `--a11y-tabs-color` | text color | #222
  `--a11y-tabs-focus-color` | text color when focused | #000
  `--a11y-tabs-margin` |  | 16px 0
  `--a11y-tabs-width` | total width | 100%
  `--a11y-tabs-height` | total height | unset
  `--a11y-tabs-overflow` | default overflow | auto
  `--a11y-tabs-overflow-x` | overflow of x-axis | `--a11y-tabs-overflow`
  `--a11y-tabs-overflow-y` | overflow of y-axis | `--a11y-tabs-overflow`
  `--a11y-tabs-border-radius` | default border radius | 2px
  `--a11y-tabs-horizontal-border-radius` | border-radius when horizontal | `--a11y-tabs-border-radius`
  `--a11y-tabs-vertical-border-radius` | border-radius when veritcal | `--a11y-tabs-border-radius`
  
  #### Tab Section
  Custom property | Description | Default
  ----------------|-------------|----------
  `--a11y-tabs-tab-font-family` | font-family | `--a11y-tabs-font-family`
  `--a11y-tabs-tab-font-size` | font-size | `--a11y-tabs-font-size`
  `--a11y-tabs-background` | background for active tab and tab content | white
  `--a11y-tabs-faded-background` | background inactive tabs | #eee
  `--a11y-tabs-horizontal-background` | background for tabs container when horizontal | unset
  `--a11y-tabs-vertical-background` | background for tabs container when vertical | `--a11y-tabs-border-color`
  `--a11y-tabs-horizontal-sticky-background` | background for tabs container when sticky and horizontal | `--a11y-tabs-background`
  `--a11y-tabs-justify-tabs` | tab justification | flex-start
  `--a11y-tabs-vertical-justify-tabs` | tab justification when vertical | `--a11y-tabs-justify-tabs`
  `--a11y-tabs-horizontal-justify-tabs` | tab justification when horizontal | `--a11y-tabs-justify-tabs`
  `--a11y-tabs-wrap` | tab wrapping | unset
  `--a11y-tabs-tab-height` | tab height | `--a11y-tabs-height`
  `--a11y-tabs-button-padding` | padding for tabs | 8px
  `--a11y-tabs-vertical-button-padding` | padding for tabs when vertical | `--a11y-tabs-button-padding`
  `--a11y-tabs-horizontal-button-padding` | padding for tabs when horizontal | `--a11y-tabs-button-padding`
  
  #### Content Section
  Custom property | Description | Default
  ----------------|-------------|----------
  `--a11y-tabs-content-padding` | padding for content of tab | 16px
  `--a11y-tabs-content-background` | background color for content of tab | `--a11y-tabs-background`
   *
   * @demo ./demo/index.html
   * @demo ./demo/vertical.html Always Vertical
   * @demo ./demo/breakpoints.html Breakpoints
   * @demo ./demo/sticky.html Sticky Tabs
   * @element a11y-tabs
   */
  var A11yTabs =
  /*#__PURE__*/
  function (_ResponsiveUtilityBeh) {
    babelHelpers.inherits(A11yTabs, _ResponsiveUtilityBeh);
    babelHelpers.createClass(A11yTabs, [{
      key: "render",
      // render function
      value: function render() {
        var _this2 = this;

        return (0, _litElement.html)(_templateObject_5c000870d34d11ea880ba1e93364c49c(), this.tabs.map(function (tab, i) {
          return (0, _litElement.html)(_templateObject2_5c000870d34d11ea880ba1e93364c49c(), _this2._tabButton(tab));
        }));
      } // haxProperty definition

    }], [{
      key: "styles",
      //styles function
      get: function get() {
        return [(0, _litElement.css)(_templateObject3_5c000870d34d11ea880ba1e93364c49c())];
      }
    }, {
      key: "haxProperties",
      get: function get() {
        return {
          canScale: false,
          canPosition: true,
          canEditSource: false,
          gizmo: {
            title: "Tabs",
            description: "A set of tabs.",
            icon: "view-day",
            color: "grey",
            groups: ["Content", "Presentation", "Tabs"]
          },
          settings: {
            quick: [{
              property: "disabled",
              title: "Disabled",
              inputMethod: "boolean"
            }, {
              property: "hidden",
              title: "Hidden",
              inputMethod: "boolean"
            }, {
              property: "sticky",
              title: "Sticky",
              desc: "Horizontal tabs stick to the top of the window when scrolling.",
              inputMethod: "boolean"
            }],
            configure: [{
              property: "disabled",
              title: "Disabled",
              inputMethod: "boolean"
            }, {
              property: "hidden",
              title: "Hidden",
              inputMethod: "boolean"
            }, {
              property: "sticky",
              title: "Sticky.",
              desc: "Horizontal tabs stick to the top of the window when scrolling.",
              inputMethod: "boolean"
            }, {
              property: "layoutBreakpoint",
              title: "Layout Breakpoint",
              inputMethod: "Number",
              descripton: "Optional minimum breakpoint for horizontal layout of tabs. Default is unset (always horizontal). Setting `-1` forces vertical-only mode."
            }, {
              property: "iconBreakpoint",
              title: "Icon Breakpoint",
              inputMethod: "Number",
              descripton: "Optional minimum breakpoint for showing tab text with icons. Default is always text with icons (0). Setting to -1 forces icon-only mode."
            }, {
              slot: "",
              title: "Tabs",
              description: "A series of <a11y-tab/> elements.",
              inputMethod: "code-editor"
            }],
            advanced: [{
              property: "id",
              title: "Unique ID",
              inputMethod: "textfield"
            }]
          }
        };
      } // properties available to the custom element for data binding

    }, {
      key: "properties",
      get: function get() {
        return _objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(A11yTabs), "properties", this), {
          /**
           * the id of the active tab
           */
          activeTab: {
            type: String,
            reflect: true,
            attribute: "active-tab"
          },

          /**
           * whether the tabbed interface is disabled
           */
          disabled: {
            type: Boolean,
            reflect: true,
            attribute: "disabled"
          },

          /**
           * whether the tabbed interface is hidden
           */
          hidden: {
            type: Boolean,
            reflect: true,
            attribute: "hidden"
          },

          /**
           * Optional minimum breakpoint for showing tab text with icons, or
           * Default is always text with icons.
           * `-1` forces icon-only mode.
           */
          iconBreakpoint: {
            type: Number,
            attribute: "icon-breakpoint"
          },

          /**
           * unique identifier/anchor for the tabbed interface
           */
          id: {
            type: String,
            reflect: true
          },

          /**
           * Optional minimum breakpoint for horizontal layout of tabs.
           * Default is unset (always horizontal).
           * `-1` forces vertical-only mode.
           */
          layoutBreakpoint: {
            type: Number,
            attribute: "layout-breakpoint"
          },

          /**
           * the size of the tabs,
           * where `xs` is the smaller breakpoint
           * and `xs` is the larger breakpoint
           */
          responsiveSize: {
            type: String,
            reflect: true,
            attribute: "responsive-size"
          },

          /**
           * whether the tabs are sticky
           */
          sticky: {
            type: Boolean,
            reflect: true,
            attribute: "sticky"
          },

          /**
           * an array of tab data based on slotted `a11y-tab` elements
           */
          __tabs: {
            type: Array
          }
        });
      }
      /**
       * Store the tag name to make it easier to obtain directly.
       * @notice function name must be here for tooling to operate correctly
       */

    }, {
      key: "tag",
      get: function get() {
        return "a11y-tabs";
      }
    }]);

    function A11yTabs() {
      var _this;

      babelHelpers.classCallCheck(this, A11yTabs);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(A11yTabs).call(this));
      _this.disabled = false;
      _this.hidden = false;
      _this.__tabs = [];
      return _this;
    }
    /**
     * determines if tabs should show icons only
     * @readonly
     * @returns {boolean}
     */


    babelHelpers.createClass(A11yTabs, [{
      key: "connectedCallback",

      /**
       * life cycle, element is afixed to the DOM
       */
      value: function connectedCallback() {
        var _this3 = this;

        babelHelpers.get(babelHelpers.getPrototypeOf(A11yTabs.prototype), "connectedCallback", this).call(this);
        this.updateTabs();
        this.observer.observe(this, {
          attributes: false,
          childList: true,
          subtree: false
        });
        this.addEventListener("a11y-tab-changed", function (e) {
          return _this3.updateTabs();
        });
      }
      /**
       * life cycle, element is removed from the DOM
       */

    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        var _this4 = this;

        if (this.observer && this.observer.disconnect) this.observer.disconnect();
        this.removeEventListener("a11y-tab-changed", function (e) {
          return _this4.updateTabs();
        });
        babelHelpers.get(babelHelpers.getPrototypeOf(A11yTabs.prototype), "disconnectedCallback", this).call(this);
      }
    }, {
      key: "firstUpdated",
      value: function firstUpdated() {
        if (babelHelpers.get(babelHelpers.getPrototypeOf(A11yTabs.prototype), "firstUpdated", this).call(this)) babelHelpers.get(babelHelpers.getPrototypeOf(A11yTabs.prototype), "firstUpdated", this).call(this);
        window.ResponsiveUtility.requestAvailability();
        window.dispatchEvent(new CustomEvent("responsive-element", {
          detail: {
            element: this
          }
        }));
      }
      /**
       * handle updates
       */

    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this5 = this;

        changedProperties.forEach(function (oldValue, propName) {
          if (propName === "id") _this5._idChanged(_this5.id, oldValue);
          if (propName === "activeTab" && _this5.activeTab !== oldValue) _this5._activeTabChanged(_this5.activeTab, oldValue);

          if (propName === "responsiveWidth") {
            if (_this5.vertical) {
              _this5.setAttribute("vertical", true);
            } else {
              _this5.removeAttribute("vertical");
            }
          }

          if (["iconsBreakpoint", "responsiveWidth", "__tabs"].includes(propName)) {
            if (_this5.iconsOnly) {
              _this5.setAttribute("icons-only", true);
            } else {
              _this5.removeAttribute("icons-only");
            }
          }
        });
      }
      /**
       * selects a tab
       * @param {string} id the active tab's id
       */

    }, {
      key: "selectTab",
      value: function selectTab(id) {
        var tabs = this.querySelectorAll(this.tabQuery);

        if (tabs && tabs.length > 0) {
          var enabled = Object.keys(tabs || []).filter(function (key) {
            return !tabs[key].disabled;
          }).map(function (key) {
            return tabs[key].id;
          }),
              filtered = enabled.filter(function (tabid) {
            return tabid === id;
          }),
              selected = filtered[0] || enabled[0];
          tabs.forEach(function (tab) {
            tab.hidden = tab.id !== selected;
          });
          this.activeTab = selected;
        }
      }
      /**
       * updates the list of items based on slotted a11y-tab elements
       */

    }, {
      key: "updateTabs",
      value: function updateTabs(e) {
        this.__tabs = this.querySelectorAll(this.tabQuery);
        this.selectTab(this.activeTab);
      }
      /**
       * Observer activeTab for changes
       * @param {string} newValue the new active tab's id
       */

    }, {
      key: "_activeTabChanged",
      value: function _activeTabChanged(newValue, oldValue) {
        if (newValue !== oldValue) this.selectTab(newValue);
        window.dispatchEvent(new CustomEvent("active-tab-changed", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: this
        }));
      }
      /**
       * generates a unique id
       * @returns {string } unique id
       */

    }, {
      key: "_generateUUID",
      value: function _generateUUID() {
        return "ss-s-s-s-sss".replace(/s/g, Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1));
      }
      /**
       * handles a tab being tapped and sets the new active tab
       * @param {event} e the tab tap event
       */

    }, {
      key: "_handleTab",
      value: function _handleTab(tab) {
        if (!tab.disabled) this.activeTab = tab.id;
      }
      /**
       * ensures that there is always an id for this tabbed interface so that we can link back to the top of it
       * @param {string} newValue the new id
       * @param {string} oldValue the old id
       */

    }, {
      key: "_idChanged",
      value: function _idChanged(newValue, oldValue) {
        if (!newValue) this.id = "a11y-tabs" + this._generateUUID();
      }
      /**
       * makes tab button
       *
       * @param {object} tab a11y-tab
       * @returns object
       * @memberof A11yTabs
       */

    }, {
      key: "_tabButton",
      value: function _tabButton(tab) {
        var _this6 = this;

        return (0, _litElement.html)(_templateObject4_5c000870d34d11ea880ba1e93364c49c(), tab.id, tab.id, tab.id === this.activeTab && !this.disabled ? "active" : "", function (e) {
          return _this6._handleTab(tab);
        }, tab.id === this.activeTab || tab.disabled || this.disabled, tab.flag, this._tabIcon(tab, "flagIcon"), this._tabLabel(tab), this._tabFlag(tab), this._tabIcon(tab, "icon"), this._tabTooltip(tab));
      }
      /**
       * makes tab flag
       *
       * @param {string} flag tab's flag
       * @returns object
       * @memberof A11yTabs
       */

    }, {
      key: "_tabFlag",
      value: function _tabFlag(tab) {
        return (0, _litElement.html)(_templateObject5_5c000870d34d11ea880ba1e93364c49c(), !tab.flag, tab.flag);
      }
      /**
       * makes tab icon
       *
       * @param {string} icon tab's icon
       * @returns object
       * @memberof A11yTabs
       */

    }, {
      key: "_tabIcon",
      value: function _tabIcon(tab, icon) {
        return (0, _litElement.html)(_templateObject6_5c000870d34d11ea880ba1e93364c49c(), !tab[icon], tab[icon], tab[flag]);
      }
      /**
       * makes tab label
       *
       * @param {string} flag tab's flag
       * @returns object
       * @memberof A11yTabs
       */

    }, {
      key: "_tabLabel",
      value: function _tabLabel(tab) {
        return (0, _litElement.html)(_templateObject7_5c000870d34d11ea880ba1e93364c49c(), tab.label);
      }
      /**
       * makes tab tooltip
       *
       * @param {string} id tab's unique id
       * @param {label} label tab's label
       * @returns object
       * @memberof A11yTabs
       */

    }, {
      key: "_tabTooltip",
      value: function _tabTooltip(tab) {
        return (0, _litElement.html)(_templateObject8_5c000870d34d11ea880ba1e93364c49c(), tab.id, tab.label);
      }
    }, {
      key: "iconsOnly",
      get: function get() {
        return this.iconBreakpoint && (this.tabs || []).filter(function (tab) {
          return !tab.icon;
        }).length < 1 && this.responsiveWidth < this.iconBreakpoint;
      }
      /**
       * mutation observer for tabs
       * @readonly
       * @returns {object}
       */

    }, {
      key: "observer",
      get: function get() {
        var _this7 = this;

        var callback = function callback() {
          return _this7.updateTabs();
        };

        return new MutationObserver(callback);
      }
      /**
       * query selector for tabs
       * override this for custom elements that extend a11y-tabs
       *
       * @readonly
       * @memberof A11yTabs
       */

    }, {
      key: "tabQuery",
      get: function get() {
        return "a11y-tab";
      }
      /**
       * array of tabs
       * @readonly
       * @returns {object}
       */

    }, {
      key: "tabs",
      get: function get() {
        var _this8 = this;

        return Object.keys(this.__tabs || {}).map(function (i) {
          _this8.__tabs[i].order = i + 1;
          _this8.__tabs[i].total = _this8.__tabs.length;
          return _this8.__tabs[i];
        });
      }
      /**
       * determines whether tabs should be in vertical layout
       * @readonly
       * @returns {boolean}
       */

    }, {
      key: "vertical",
      get: function get() {
        return this.layoutBreakpoint && this.layoutBreakpoint < this.responsiveWidth;
      }
    }]);
    return A11yTabs;
  }((0, _responsiveUtilityBehaviors.ResponsiveUtilityBehaviors)(_litElement.LitElement));

  _exports.A11yTabs = A11yTabs;
  window.customElements.define(A11yTabs.tag, A11yTabs);
});