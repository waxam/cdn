define(["exports","../../@polymer/polymer/polymer-legacy.js","../hax-body-behaviors/lib/HAXWiring.js","../../@polymer/paper-tabs/paper-tabs.js","../../@polymer/paper-tabs/paper-tab.js","../../@polymer/paper-button/paper-button.js"],function(_exports,_polymerLegacy,_HAXWiring,_paperTabs,_paperTab,_paperButton){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.TabList=void 0;function _templateObject_c343cc2068f411e996b0af119cd7f5ea(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        display: block;\n        margin: 0 auto;\n        list-style: none;\n        display: block;\n        padding: 16px;\n        border-bottom: 1px solid black;\n      }\n      paper-tabs {\n        align-items: center;\n        justify-items: center;\n      }\n      paper-tab a {\n        text-decoration: none;\n        flex: unset;\n        height: unset;\n        width: 100%;\n        text-align: center;\n      }\n      paper-button {\n        text-transform: unset;\n        width: 100%;\n        display: block;\n        min-width: unset;\n        margin: 0;\n        text-overflow: ellipsis;\n        overflow: hidden;\n      }\n      @media screen and (max-width: 600px) {\n        paper-tab {\n          display: block;\n        }\n      }\n    </style>\n    <paper-tabs>\n      <template is=\"dom-repeat\" items=\"[[tabs]]\" as=\"tab\">\n        <paper-tab>\n          <a target=\"_blank\" href=\"[[tab.link]]\" tabindex=\"-1\">\n            <paper-button raised>[[tab.label]]</paper-button>\n          </a>\n        </paper-tab>\n      </template>\n    </paper-tabs>\n  "]);_templateObject_c343cc2068f411e996b0af119cd7f5ea=function _templateObject_c343cc2068f411e996b0af119cd7f5ea(){return data};return data}/**
 * `tab-list`
 * `A simple listing of tabed links / items`
 *
 * @demo demo/index.html
 *
 * @microcopy - the mental model for this element
 * -
 */var TabList=(0,_polymerLegacy.Polymer)({_template:(0,_polymerLegacy.html)(_templateObject_c343cc2068f411e996b0af119cd7f5ea()),is:"tab-list",behaviors:[HAXBehaviors.PropertiesBehaviors],observers:["_valueChanged(tabs.*)"],properties:{/**
     * List of tabs
     */tabs:{type:Array,value:[],notify:!0}},/**
   * Notice an array has changed and update the DOM.
   */_valueChanged:function _valueChanged(e){for(var i in e.base){for(var j in e.base[i]){this.notifyPath("tabs."+i+"."+j)}}},/**
   * Attached to the DOM, now fire.
   */attached:function attached(){// Establish hax property binding
var props={canScale:!1,canPosition:!1,canEditSource:!1,gizmo:{title:"Tabs",description:"A list of links as tabs.",icon:"icons:tab",color:"grey",groups:["Presentation","Links"],handles:[],meta:{author:"LRNWebComponents"}},settings:{quick:[],configure:[{property:"tabs",title:"Tabs",description:"Listing of tabs",inputMethod:"array",properties:[{property:"link",title:"Link",description:"link to go to",inputMethod:"textfield",required:!0},{property:"label",title:"Label",description:"text to place on the tab",inputMethod:"textfield",required:!0}]}],advanced:[]}};this.setHaxProperties(props)}});_exports.TabList=TabList});