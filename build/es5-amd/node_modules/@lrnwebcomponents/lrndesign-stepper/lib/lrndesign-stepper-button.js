define(["exports", "../../../@polymer/polymer/polymer-element.js", "../../../@polymer/polymer/lib/utils/render-status.js", "../../../@polymer/paper-button/paper-button.js", "../../../@polymer/iron-icon/iron-icon.js", "../../../@polymer/iron-icons/iron-icons.js", "../../../@polymer/iron-icons/av-icons.js", "../../../@polymer/polymer/lib/elements/dom-if.js", "../../../@polymer/iron-icons/social-icons.js", "../../../@polymer/iron-collapse/iron-collapse.js"], function (_exports, _polymerElement, _renderStatus, _paperButton, _ironIcon, _ironIcons, _avIcons, _domIf, _socialIcons, _ironCollapse) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrndesignStepperButton = void 0;

  function _templateObject_696af060d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n          --lrndesign-icon-button-color: #abacae;\n          --lrndesign-stepper-btn-title-color: #000;\n          --lrndesign-stepper-btn-active: #f6f7f7;\n          --lrndesign-border-color: #abacae;\n        }\n\n        .top-line,\n        .bottom-line {\n          background-color: transparent;\n        }\n\n        :host([location=\"start\"]) .bottom-line {\n          background-color: var(--lrndesign-icon-button-color);\n        }\n\n        :host([location=\"middle\"]) .top-line,\n        :host([location=\"middle\"]) .bottom-line {\n          background-color: var(--lrndesign-icon-button-color);\n        }\n\n        :host([location=\"end\"]) .top-line {\n          background-color: var(--lrndesign-icon-button-color);\n        }\n\n        .top-line {\n          width: 2px;\n          height: 24px;\n          margin: auto;\n        }\n\n        .bottom-line {\n          width: 2px;\n          height: 24px;\n          margin: auto;\n        }\n\n        .stepper-btn {\n          background-color: transparent;\n          display: flex;\n          width: 100%;\n          justify-content: center;\n        }\n\n        .node-title {\n          color: var(--lrndesign-stepper-btn-title-color);\n          text-transform: none;\n          line-height: 32px;\n          font-weight: bold;\n          font-size: 16px;\n        }\n\n        .btn-icon {\n          background-color: transparent;\n          color: var(--lrndesign-icon-button-color);\n          border-radius: 50%;\n          --iron-icon-height: 35px;\n          --iron-icon-width: 35px;\n        }\n\n        .url-style {\n          text-decoration: none;\n        }\n\n        .title-container {\n          padding: 10px;\n          width: 70%;\n          position: relative;\n          right: 19.2px;\n        }\n\n        .title-container:hover {\n          text-decoration: underline;\n        }\n\n        .box-container {\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: flex-start;\n          position: relative;\n          width: 30%;\n        }\n\n        paper-button {\n          width: 100%;\n          position: relative;\n        }\n\n        paper-button:after {\n          content: \"\";\n          display: block;\n          position: absolute;\n          width: 100%;\n          height: 100%;\n          top: 0;\n          left: 0;\n          border-top: 1px solid transparent;\n          border-bottom: 1px solid transparent;\n        }\n\n        paper-button:active,\n        paper-button:focus {\n          background-color: var(--lrndesign-stepper-btn-active);\n        }\n        paper-button:focus iron-icon {\n          color: black;\n        }\n\n        paper-button:active:after,\n        paper-button:focus:after {\n          border-color: var(--lrndesign-border-color);\n        }\n\n        paper-button {\n          --paper-button: {\n            border-radius: 0;\n            padding: 0;\n          }\n        }\n      </style>\n\n      <template is=\"dom-if\" if=\"{{hasCollapse(collapsible, 1)}}\">\n        <paper-button noink=\"\" on-click=\"collapseToggle\">\n          <div class=\"box-container\">\n            <div class=\"top-line\"></div>\n            <div class=\"stepper-btn\">\n              <iron-icon icon=\"[[icon]]\" class=\"btn-icon\"></iron-icon>\n            </div>\n            <div class=\"bottom-line\"></div>\n          </div>\n          <div class=\"title-container\">\n            <div class=\"node-title\">[[title]]</div>\n          </div>\n        </paper-button>\n        <iron-collapse>\n          <div><slot></slot></div>\n        </iron-collapse>\n      </template>\n      <template is=\"dom-if\" if=\"{{hasCollapse(collapsible, 0)}}\">\n        <a tabindex=\"-1\" href=\"[[url]]\" class=\"url-style\">\n          <paper-button class=\"btn\" noink=\"\">\n            <div class=\"box-container\">\n              <div class=\"top-line\"></div>\n              <div class=\"stepper-btn\">\n                <iron-icon icon=\"[[icon]]\" class=\"btn-icon\"></iron-icon>\n              </div>\n              <div class=\"bottom-line\"></div>\n            </div>\n            <div class=\"title-container\">\n              <div class=\"node-title\">[[title]]</div>\n            </div>\n          </paper-button>\n        </a>\n        <slot></slot>\n      </template>\n    "]);

    _templateObject_696af060d34d11ea880ba1e93364c49c = function _templateObject_696af060d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  /**
  `lrndesign-stepper-button`
  visualization of steps
  
  * @demo demo/index.html
  */
  var LrndesignStepperButton =
  /*#__PURE__*/
  function (_PolymerElement) {
    babelHelpers.inherits(LrndesignStepperButton, _PolymerElement);

    function LrndesignStepperButton() {
      babelHelpers.classCallCheck(this, LrndesignStepperButton);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(LrndesignStepperButton).apply(this, arguments));
    }

    babelHelpers.createClass(LrndesignStepperButton, [{
      key: "ready",
      value: function ready() {
        var _this = this;

        babelHelpers.get(babelHelpers.getPrototypeOf(LrndesignStepperButton.prototype), "ready", this).call(this);
        setTimeout(function () {
          var target = _this.shadowRoot.querySelector("iron-collapse");

          if (_this.opened) {
            target.show();
          }
        }, 0);
      }
      /**
       * Toggling collapse on an iron element.
       */

    }, {
      key: "collapseToggle",
      value: function collapseToggle(e) {
        e.target.nextElementSibling.toggle();
      }
      /**
       * If it is in a collapsed state or not.
       */

    }, {
      key: "hasCollapse",
      value: function hasCollapse(bool, test) {
        if (bool == test) {
          return true;
        } else {
          return false;
        }
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_696af060d34d11ea880ba1e93364c49c());
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrndesign-stepper-button";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * The button title.
           */
          title: {
            type: String,
            reflectToAttribute: true,
            notify: true
          },

          /**
           * The button icon.
           */
          icon: {
            type: String,
            reflectToAttribute: true,
            notify: true
          },

          /**
           * The url for button.
           */
          url: {
            type: String,
            reflectToAttribute: true,
            notify: true
          },

          /**
           * The tab location position (start / middle / end).
           */
          location: {
            type: String,
            reflectToAttribute: true,
            notify: true
          },

          /**
           * Allow for collapsible content with the items inside
           */
          collapsible: {
            type: Boolean,
            reflectToAttribute: true,
            notify: true,
            value: false
          },
          opened: {
            type: Boolean,
            value: false
          }
        };
      }
    }]);
    return LrndesignStepperButton;
  }(_polymerElement.PolymerElement);

  _exports.LrndesignStepperButton = LrndesignStepperButton;
  window.customElements.define(LrndesignStepperButton.tag, LrndesignStepperButton);
});