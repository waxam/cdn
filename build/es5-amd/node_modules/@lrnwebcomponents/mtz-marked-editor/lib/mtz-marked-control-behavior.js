define(["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.mtzMarkedControlBehavior = void 0;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  var mtzMarkedControlBehavior = function mtzMarkedControlBehavior(SuperClass) {
    return (
      /*#__PURE__*/
      function (_SuperClass) {
        babelHelpers.inherits(_class, _SuperClass);

        function _class() {
          babelHelpers.classCallCheck(this, _class);
          return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(_class).apply(this, arguments));
        }

        babelHelpers.createClass(_class, [{
          key: "connectedCallback",

          /**
           * Registers the control with the editor to obtain the editor instance
           * @fires register-control
           */
          value: function connectedCallback() {
            babelHelpers.get(babelHelpers.getPrototypeOf(_class.prototype), "connectedCallback", this).call(this);
            this.dispatchEvent(new CustomEvent("register-control", {
              bubbles: true,
              cancelable: true,
              composed: true,
              detail: true
            }));
          }
        }], [{
          key: "properties",
          get: function get() {
            return _objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(_class), "properties", this), {
              /* Reference to the editor. Set programatically */
              __editor: Object
            });
          }
        }]);
        return _class;
      }(SuperClass)
    );
  };

  _exports.mtzMarkedControlBehavior = mtzMarkedControlBehavior;
});