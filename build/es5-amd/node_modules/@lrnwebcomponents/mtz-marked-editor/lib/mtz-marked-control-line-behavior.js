define(["../../../@polymer/polymer/polymer-legacy.js","./mtz-marked-control-behavior.js"],function(_polymerLegacy,_mtzMarkedControlBehavior){"use strict";window.mtz=window.mtz||{};/**
 * Handles inserting a prefix on the lines selected.
 *
 * @polymerBehavior mtz.MarkedControlLineBehavior
 */mtz.MarkedControlLineBehaviorImpl={properties:{syntaxPrefix:String// Must implement
},/**
   * Toggles a syntax prefix at the start of selected lines
   * @param {MouseEvent|KeyboardEvent} event
   * @protected
   */_handleCommand:function _handleCommand(event){var _this=this;event.preventDefault();event.stopPropagation();var editor=this.__editor,selection=editor.getSelection(),lines=editor.getLines(),newlineChar=1<lines.length?lines[1].match(/(\n|\r\n)/)[0]:"",selectedLines=[],accumulator=0;lines.every(function(line){// Accumulate line
accumulator+=line.length;// Check if selection start is not within the line, skip to next line
if(accumulator+1<selection.start){return!0/* transition */ /* transition */}// Line is part of selection or contains selection start, so let's grab it
selectedLines.push({start:accumulator-line.length,end:accumulator,length:line.length,text:line.trimLeft()});// Stop grabbing lines if we reach the end of the selection
return accumulator<selection.end});// Check the first line for syntax
var firstLine=selectedLines[0],removeSyntax=firstLine.text.startsWith(this.syntaxPrefix),offset=0;// Toggle syntax on each line
selectedLines.forEach(function(line){// if the syntax exists remove it from any lines containing it
if(removeSyntax&&line.text.startsWith(_this.syntaxPrefix)){line.text=line.text.slice(_this.syntaxPrefix.length,line.end)}else if(!removeSyntax){line.text="".concat(_this.syntaxPrefix).concat(line.text)}// Accumulate number of characters modified in the textarea
offset+=_this.syntaxPrefix.length});// Selected all the lines affected
var lastLine=selectedLines[selectedLines.length-1];editor.setSelection(firstLine.start,lastLine.end);// If single line, add newline
if(1===selectedLines.length&&0<selectedLines[0].start){firstLine.text="".concat(newlineChar).concat(firstLine.text);firstLine.start+=newlineChar.length}// Replace all selected lines with modified content
editor.replaceSelection(selectedLines.map(function(line){return line.text}).join(newlineChar));// Re-select the new content on the lines
editor.setSelection(firstLine.start,lastLine.end+(!removeSyntax?1:-1)*offset);editor.getTextarea().focus()}};/* @polymerBehavior */mtz.MarkedControlLineBehavior=[mtz.MarkedControlBehavior,mtz.MarkedControlLineBehaviorImpl]});