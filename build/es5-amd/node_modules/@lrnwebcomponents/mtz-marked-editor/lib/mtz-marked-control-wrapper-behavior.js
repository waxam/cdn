define(["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.mtzMarkedControlWrapperBehaviorImpl = void 0;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var mtzMarkedControlWrapperBehaviorImpl = function mtzMarkedControlWrapperBehaviorImpl(SuperClass) {
    return /*#__PURE__*/function (_SuperClass) {
      babelHelpers.inherits(_class, _SuperClass);

      var _super = _createSuper(_class);

      function _class() {
        babelHelpers.classCallCheck(this, _class);
        return _super.apply(this, arguments);
      }

      babelHelpers.createClass(_class, [{
        key: "_handleCommand",
        value:
        /**
         * Toggles a wrapping syntax around selected text
         * @param {MouseEvent|KeyboardEvent} event
         * @protected
         */
        function _handleCommand(event) {
          event.preventDefault();
          event.stopPropagation();
          var cursor = 0;
          var editor = this.__editor;
          var selected = editor.getSelection();
          var content = editor.getContent(); // Toggle syntax

          if (content.substr(selected.start - this.syntaxPrefix.length, this.syntaxPrefix.length) === this.syntaxPrefix && content.substr(selected.end, this.syntaxSuffix.length) === this.syntaxSuffix) {
            editor.setSelection(selected.start - this.syntaxPrefix.length, selected.end + this.syntaxSuffix.length);
            editor.replaceSelection(selected.text);
            cursor = selected.start - this.syntaxPrefix.length;
          } else {
            editor.replaceSelection("".concat(this.syntaxPrefix).concat(selected.text).concat(this.syntaxSuffix));
            cursor = selected.start + this.syntaxSuffix.length;
          } // Set Cursor location


          editor.setSelection(cursor, cursor + selected.text.length);
          editor.getTextarea().focus();
        }
      }], [{
        key: "properties",
        get: function get() {
          return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(_class), "properties", this)), {}, {
            syntaxPrefix: String,
            // Must implement
            syntaxSuffix: {
              // Optionally implement
              type: String,
              value: ""
            }
          });
        }
      }]);
      return _class;
    }(SuperClass);
  };

  _exports.mtzMarkedControlWrapperBehaviorImpl = mtzMarkedControlWrapperBehaviorImpl;
});