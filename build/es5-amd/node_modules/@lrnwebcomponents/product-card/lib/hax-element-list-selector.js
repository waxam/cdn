define(["meta", "require", "../../../lit-element/lit-element.js", "../../hexagon-loader/hexagon-loader.js", "../../../@polymer/iron-icons/av-icons.js", "../../../@polymer/iron-icons/communication-icons.js", "../../../@polymer/iron-icons/device-icons.js", "../../../@polymer/iron-icons/editor-icons.js", "../../../@polymer/iron-icons/hardware-icons.js", "../../../@polymer/iron-icons/image-icons.js", "../../../@polymer/iron-icons/iron-icons.js", "../../../@polymer/iron-icons/maps-icons.js", "../../../@polymer/iron-icons/notification-icons.js", "../../../@polymer/iron-icons/places-icons.js", "../../../@polymer/iron-icons/social-icons.js", "../../lrn-icons/lrn-icons.js", "../../mdi-iconset-svg/mdi-iconset-svg.js", "../../hax-iconset/hax-iconset.js", "../../simple-fields/lib/simple-fields-form.js", "./hax-element-card-list.js"], function (meta, _require, _litElement, _hexagonLoader, _avIcons, _communicationIcons, _deviceIcons, _editorIcons, _hardwareIcons, _imageIcons, _ironIcons, _mapsIcons, _notificationIcons, _placesIcons, _socialIcons, _lrnIcons, _mdiIconsetSvg, _haxIconset, _simpleFieldsForm, _haxElementCardList) {
  "use strict";

  meta = babelHelpers.interopRequireWildcard(meta);
  _require = babelHelpers.interopRequireWildcard(_require);

  function _templateObject2_e65a0d90802811ea85d741fb563956b6() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <simple-fields-form\n        id=\"form\"\n        autoload\n        load-endpoint=\"", "\"\n        method=\"", "\"\n        @response=\"", "\"\n        @value-changed=\"", "\"\n      >\n      </simple-fields-form>\n      <hexagon-loader\n        item-count=\"4\"\n        color=\"blue\"\n        ?loading=\"", "\"\n        size=\"large\"\n      ></hexagon-loader>\n      <hax-element-card-list\n        id=\"productlist\"\n        cols=\"", "\"\n        .list=\"", "\"\n      ></hax-element-card-list>\n    "]);

    _templateObject2_e65a0d90802811ea85d741fb563956b6 = function _templateObject2_e65a0d90802811ea85d741fb563956b6() {
      return data;
    };

    return data;
  }

  function _templateObject_e65a0d90802811ea85d741fb563956b6() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n        :host([loading]) hax-element-card-list {\n          visibility: hidden;\n          opacity: 0;\n          transition: 1s ease-in-out all;\n        }\n        hax-element-card-list {\n          visibility: visible;\n          opacity: 1;\n        }\n        hexagon-loader[loading] {\n          position: absolute;\n          width: 100%;\n        }\n      "]);

    _templateObject_e65a0d90802811ea85d741fb563956b6 = function _templateObject_e65a0d90802811ea85d741fb563956b6() {
      return data;
    };

    return data;
  }

  var HaxElementListSelector =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(HaxElementListSelector, _LitElement);
    babelHelpers.createClass(HaxElementListSelector, null, [{
      key: "tag",
      get: function get() {
        return "hax-element-list-selector";
      }
    }, {
      key: "styles",
      get: function get() {
        return [(0, _litElement.css)(_templateObject_e65a0d90802811ea85d741fb563956b6())];
      }
    }]);

    function HaxElementListSelector() {
      var _this;

      babelHelpers.classCallCheck(this, HaxElementListSelector);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(HaxElementListSelector).call(this));
      _this.loading = false;
      _this.cols = 3;
      _this.imports = [];
      _this.haxData = [];
      _this.noSchema = {};
      _this.method = "GET";
      _this.basePath = _this.pathFromUrl(decodeURIComponent(meta.url)) + "../../../";
      return _this;
    }

    babelHelpers.createClass(HaxElementListSelector, [{
      key: "pathFromUrl",
      // simple path from a url modifier
      value: function pathFromUrl(url) {
        return url.substring(0, url.lastIndexOf("/") + 1);
      }
    }, {
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject2_e65a0d90802811ea85d741fb563956b6(), this.fieldsEndpoint, this.method, this._response, this._valueChanged, this.loading, this.cols, this.filteredHaxData);
      }
    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        changedProperties.forEach(
        /*#__PURE__*/
        function () {
          var _ref = babelHelpers.asyncToGenerator(
          /*#__PURE__*/
          regeneratorRuntime.mark(function _callee2(oldValue, propName) {
            var tag, value, _value;

            return regeneratorRuntime.wrap(function _callee2$(_context3) {
              while (1) {
                switch (_context3.prev = _context3.next) {
                  case 0:
                    if (propName == "wcRegistryEndpoint") {
                      _this2.haxData = [];
                      _this2.imports = [];
                      fetch(_this2[propName]).then(function (response) {
                        _this2.loading = true;
                        return response.json();
                      }).then(function (data) {
                        _this2.imports = data;
                      });
                    } // when imports changes make sure we import everything found


                    if (!(propName == "imports")) {
                      _context3.next = 3;
                      break;
                    }

                    return _context3.delegateYield(
                    /*#__PURE__*/
                    regeneratorRuntime.mark(function _callee() {
                      var list, noSchema, _loop;

                      return regeneratorRuntime.wrap(function _callee$(_context2) {
                        while (1) {
                          switch (_context2.prev = _context2.next) {
                            case 0:
                              list = _this2.haxData;
                              noSchema = _this2.noSchema;
                              _loop =
                              /*#__PURE__*/
                              regeneratorRuntime.mark(function _loop() {
                                var file;
                                return regeneratorRuntime.wrap(function _loop$(_context) {
                                  while (1) {
                                    switch (_context.prev = _context.next) {
                                      case 0:
                                        file = _this2[propName][tag];
                                        _context.prev = 1;
                                        _context.next = 4;
                                        return new Promise(function (res, rej) {
                                          return _require.default(["".concat(_this2.basePath).concat(file)], res, rej);
                                        }).then(function (module) {
                                          if (module && Object.keys(module)[0] && module[Object.keys(module)[0]].haxProperties && module[Object.keys(module)[0]].haxProperties.gizmo && module[Object.keys(module)[0]].haxProperties.gizmo.title) {
                                            var detail = {
                                              tag: tag,
                                              file: file,
                                              status: true,
                                              schema: module[Object.keys(module)[0]].haxProperties
                                            };
                                            list.push(detail);
                                          } else {
                                            noSchema[tag] = file; //console.log(`${tag} doesn't have haxSchema`);
                                          }
                                        });

                                      case 4:
                                        _context.next = 9;
                                        break;

                                      case 6:
                                        _context.prev = 6;
                                        _context.t0 = _context["catch"](1);
                                        console.warn(_context.t0);

                                      case 9:
                                      case "end":
                                        return _context.stop();
                                    }
                                  }
                                }, _loop, null, [[1, 6]]);
                              });
                              _context2.t0 = regeneratorRuntime.keys(_this2[propName]);

                            case 4:
                              if ((_context2.t1 = _context2.t0()).done) {
                                _context2.next = 9;
                                break;
                              }

                              tag = _context2.t1.value;
                              return _context2.delegateYield(_loop(), "t2", 7);

                            case 7:
                              _context2.next = 4;
                              break;

                            case 9:
                              _this2.haxData = babelHelpers.toConsumableArray(list);
                              _this2.noSchema = {};
                              _this2.noSchema = noSchema;
                              _this2.loading = false;

                            case 13:
                            case "end":
                              return _context2.stop();
                          }
                        }
                      }, _callee);
                    })(), "t0", 3);

                  case 3:
                    // this is the local data we don't let change
                    if (propName == "haxData") {
                      _this2.filteredHaxData = babelHelpers.toConsumableArray(_this2.haxData);

                      if (_this2.haxData.length > 0) {
                        value = _this2.shadowRoot.querySelector("#form").submit();
                        value.haxcore.providerdetails["haxcore-providerdetails-haxtags"] = JSON.stringify(_this2.haxData, null, 2);

                        _this2.shadowRoot.querySelector("#form").setValue(value);
                      }
                    }

                    if (propName == "noSchema") {
                      if (Object.keys(_this2.noSchema).length > 0) {
                        _value = _this2.shadowRoot.querySelector("#form").submit();
                        _value.haxcore.providerdetails["haxcore-providerdetails-othertags"] = JSON.stringify(_this2.noSchema, null, 2);

                        _this2.shadowRoot.querySelector("#form").setValue(_value);
                      }
                    }

                  case 5:
                  case "end":
                    return _context3.stop();
                }
              }
            }, _callee2);
          }));

          return function (_x, _x2) {
            return _ref.apply(this, arguments);
          };
        }());
      }
    }, {
      key: "applyFilters",
      value: function applyFilters(filters) {
        var data = babelHelpers.toConsumableArray(this.haxData);
        Object.keys(filters).forEach(function (key) {
          if (filters[key] != "") {
            switch (key) {
              case "haxcore-search-search":
                data = data.filter(function (item) {
                  if (item.schema.gizmo.title.toLowerCase().includes(filters[key].toLowerCase())) {
                    return true;
                  }

                  return false;
                });
                break;

              case "haxcore-search-tags":
                data = data.filter(function (item) {
                  if (item.schema.gizmo.groups.includes(filters[key])) {
                    return true;
                  }

                  return false;
                });
                break;

              case "haxcore-search-hasdemo":
                // only filter if box checked otherwise show all
                if (filters[key]) {
                  data = data.filter(function (item) {
                    if (item.schema.demoSchema) {
                      return true;
                    }

                    return false;
                  });
                }

                break;
            }
          }
        });
        return data;
      }
      /**
       * Listen for response and then apply initial settings
       */

    }, {
      key: "_response",
      value: function _response(e) {
        // tee up defaults
        var value = this.shadowRoot.querySelector("#form").submit();
        value.haxcore.extras["haxcore-extras-columns"] = this.cols;
        this.shadowRoot.querySelector("#form").setValue(value);
      }
      /**
       * notice any value changing and then getting the form fresh
       */

    }, {
      key: "_valueChanged",
      value: function _valueChanged(e) {
        var _this3 = this;

        clearTimeout(this.__valueDebounce);
        this.__valueDebounce = setTimeout(function () {
          var value = _this3.shadowRoot.querySelector("#form").submit();

          if (value && value.haxcore) {
            // look for CDN provider
            if (value.haxcore.providers["haxcore-providers-cdn"] == "other") {
              _this3.wcRegistryEndpoint = value.haxcore.providers["haxcore-providers-other"] + "wc-registry.json";
            } else {
              _this3.wcRegistryEndpoint = value.haxcore.providers["haxcore-providers-cdn"] + "wc-registry.json";
            } // set columns


            _this3.cols = parseInt(value.haxcore.extras["haxcore-extras-columns"]); // apply filters

            _this3.filteredHaxData = babelHelpers.toConsumableArray(_this3.applyFilters(value.haxcore.search));

            if (_this3.shadowRoot.querySelector("#productlist").requestUpdate) {
              _this3.shadowRoot.querySelector("#productlist").requestUpdate();
            }
          }
        }, 50);
      }
    }], [{
      key: "properties",
      get: function get() {
        return {
          /**
           * base path
           */
          basePath: {
            type: String,
            attribute: "base-path"
          },

          /**
           * JS imports
           */
          imports: {
            type: Object
          },

          /**
           * HAXSchema array
           */
          haxData: {
            type: Array
          },

          /**
           * Valid tags on the CDN but that don't have haxSchema.
           */
          noSchema: {
            type: Object
          },

          /**
           * Data filtered by form changes
           */
          filteredHaxData: {
            type: Array
          },

          /**
           * Columns to render
           */
          cols: {
            type: Number
          },

          /**
           * End point to load this data
           */
          fieldsEndpoint: {
            type: String,
            attribute: "fields-endpoint"
          },

          /**
           * End point to load up a list of imports
           */
          wcRegistryEndpoint: {
            type: String,
            attribute: "wc-registry-endpoint"
          },

          /**
           * Request method
           */
          method: {
            type: String
          },
          loading: {
            type: Boolean,
            reflect: true
          }
        };
      }
    }]);
    return HaxElementListSelector;
  }(_litElement.LitElement);

  window.customElements.define(HaxElementListSelector.tag, HaxElementListSelector);
});