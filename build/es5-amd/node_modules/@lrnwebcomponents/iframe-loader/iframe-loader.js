define(["../../lit-element/lit-element.js", "../../@polymer/polymer/lib/utils/flattened-nodes-observer.js"], function (_litElement, _flattenedNodesObserver) {
  "use strict";

  function _templateObject2_e735f5a0544211ebad6c77197a564a47() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <div\n        id=\"container\"\n        class=\"", "\"\n        style=\"height: ", "px;\"\n      >\n        <div id=\"loading-screen\">\n          <loading-indicator></loading-indicator>\n        </div>\n        <div\n          id=\"slot\"\n          style=\"height: ", "px; opacity: ", "\"\n        >\n          <slot></slot>\n        </div>\n      </div>\n    "]);

    _templateObject2_e735f5a0544211ebad6c77197a564a47 = function _templateObject2_e735f5a0544211ebad6c77197a564a47() {
      return data;
    };

    return data;
  }

  function _templateObject_e735f5a0544211ebad6c77197a564a47() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      :host {\n        display: block;\n      }\n      #container {\n        position: relative;\n        overflow: hidden;\n        transition: height 0.4s ease-in-out;\n      }\n      #loading-screen {\n        position: absolute;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        top: 50%;\n      }\n      .loaded#container {\n        height: auto;\n        overflow: visible;\n      }\n      .loaded #loading-screen {\n        display: none;\n      }\n      #slot {\n        transition: opacity 1s ease-in-out;\n      }\n    "]);

    _templateObject_e735f5a0544211ebad6c77197a564a47 = function _templateObject_e735f5a0544211ebad6c77197a564a47() {
      return data;
    };

    return data;
  }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  var IframeLoader = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(IframeLoader, _LitElement);

    var _super = _createSuper(IframeLoader);

    babelHelpers.createClass(IframeLoader, null, [{
      key: "properties",
      get: function get() {
        return {
          loading: {
            type: Boolean
          },
          __iframeHeight: {
            type: Number
          }
        };
      }
    }, {
      key: "styles",
      get: function get() {
        return (0, _litElement.css)(_templateObject_e735f5a0544211ebad6c77197a564a47());
      }
    }]);

    function IframeLoader() {
      var _this;

      babelHelpers.classCallCheck(this, IframeLoader);
      _this = _super.call(this);
      _this.loading = true;
      _this.__iframeHeight = 100;
      _this.__iframe = null;
      _this.__mutationObserver = new MutationObserver(function (mutations) {
        mutations.forEach(function (mutation) {
          if (mutation.target.offsetHeight) {
            // if we are still in the loading state
            if (_this.loading && mutation.target.offsetHeight > 100) {
              _this.loading = false;
              _this.__iframeHeight = mutation.target.offsetHeight + 25;
            }
          }
        });
      });
      return _this;
    }

    babelHelpers.createClass(IframeLoader, [{
      key: "connectedCallback",
      value: function connectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(IframeLoader.prototype), "connectedCallback", this).call(this);
      }
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(IframeLoader.prototype), "disconnectedCallback", this).call(this);
      }
    }, {
      key: "firstUpdated",
      value: function firstUpdated() {
        var _this2 = this;

        this.__observer = new _flattenedNodesObserver.FlattenedNodesObserver(this.shadowRoot.querySelector("slot"), function (info) {
          if (info.addedNodes.length > 0) {
            info.addedNodes.forEach(function (item) {
              var iframe = null;

              if (item.nodeName === "IFRAME") {
                iframe = item;
              } else if (item.querySelector) {
                var selector = item.querySelector("iframe");

                if (selector) {
                  iframe = selector;
                }
              }

              if (iframe) {
                _this2.__iframe = iframe; // add lazy loading
                // Evergreen only right now.

                iframe.loading = "lazy";

                _this2.__mutationObserver.observe(_this2.__iframe, {
                  attributes: true
                });
              }
            });
          }
        });
      }
    }, {
      key: "updated",
      value: function updated(propertiesChanged) {
        var _this3 = this;

        propertiesChanged.forEach(function (oldValue, propName) {
          if (propName === "loading") {
            if (_this3.loading === false) {
              if (_this3.__observer) {
                _this3.__observer.disconnect();
              }
            }
          }
        });
      }
    }, {
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject2_e735f5a0544211ebad6c77197a564a47(), this.loading ? "loading" : "loaded", this.__iframeHeight, this.__iframeHeight, this.loading ? "0" : "1");
      }
    }]);
    return IframeLoader;
  }(_litElement.LitElement);

  customElements.define("iframe-loader", IframeLoader);
});