define(["exports", "../../../lit-element/lit-element.js", "./map-menu-header.js", "../../a11y-collapse/a11y-collapse.js"], function (_exports, _litElement, _mapMenuHeader, _a11yCollapse) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.MapMenuSubmenu = void 0;

  function _templateObject2_c9834f2056b411ebb2c24bb50d8f41ab() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <a11y-collapse id=\"container\" ?expanded=\"", "\">\n        <map-menu-header\n          .avatar-label=\"", "\"\n          id=\"", "\"\n          title=\"", "\"\n          label=\"", "\"\n          ?opened=\"", "\"\n          url=\"", "\"\n          selected=\"", "\"\n          icon=\"", "\"\n          slot=\"heading\"\n        ></map-menu-header>\n        <slot></slot>\n      </a11y-collapse>\n    "]);

    _templateObject2_c9834f2056b411ebb2c24bb50d8f41ab = function _templateObject2_c9834f2056b411ebb2c24bb50d8f41ab() {
      return data;
    };

    return data;
  }

  function _templateObject_c9834f2056b411ebb2c24bb50d8f41ab() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n          overflow: hidden;\n        }\n        :host([collapsable]) > map-menu-builder {\n          cursor: pointer;\n          display: block;\n        }\n        #container {\n          margin: 0;\n        }\n        #container ::slotted(map-menu-builder) {\n          display: block;\n          cursor: pointer;\n          margin-left: 20px;\n        }\n        a11y-collapse {\n          --a11y-collapse-border: 0;\n          --a11y-collapse-horizontal-padding: 0;\n          --a11y-collapse-vertical-padding: 0;\n          color: var(--map-menu-item-a-color, inherit);\n        }\n      "]);

    _templateObject_c9834f2056b411ebb2c24bb50d8f41ab = function _templateObject_c9834f2056b411ebb2c24bb50d8f41ab() {
      return data;
    };

    return data;
  }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  var MapMenuSubmenu = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(MapMenuSubmenu, _LitElement);

    var _super = _createSuper(MapMenuSubmenu);

    babelHelpers.createClass(MapMenuSubmenu, null, [{
      key: "styles",

      /**
       * LitElement constructable styles enhancement
       */
      get: function get() {
        return [(0, _litElement.css)(_templateObject_c9834f2056b411ebb2c24bb50d8f41ab())];
      }
    }]);

    function MapMenuSubmenu() {
      var _this;

      babelHelpers.classCallCheck(this, MapMenuSubmenu);
      _this = _super.call(this);
      _this.opened = false;
      _this.collapsable = true;
      _this.expandChildren = false;
      _this.avatarLabel = "";
      _this.label = "";
      _this.published = true;
      _this.icon = "";
      _this.__icon = "";
      setTimeout(function () {
        _this.addEventListener("active-item", _this.__activeChanged.bind(babelHelpers.assertThisInitialized(_this)));

        _this.addEventListener("toggle-header", _this.__toggleHeader.bind(babelHelpers.assertThisInitialized(_this)));

        _this.addEventListener("link-clicked", _this._headerClickHandler.bind(babelHelpers.assertThisInitialized(_this)));

        _this.addEventListener("map-menu-item-hidden-check", _this._mapMenuItemHiddenCheckHandler.bind(babelHelpers.assertThisInitialized(_this)));
      }, 0);
      return _this;
    }
    /**
     * LitElement life cycle - render
     */


    babelHelpers.createClass(MapMenuSubmenu, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject2_c9834f2056b411ebb2c24bb50d8f41ab(), this.opened, this.avatarLabel, this.id, this.title, this.label, this.opened, this.url, this.selected, this.__icon);
      }
    }, {
      key: "updated",

      /**
       * LitElement life cycle - properties changed callback
       */
      value: function updated(changedProperties) {
        var _this2 = this;

        changedProperties.forEach(function (oldValue, propName) {
          if (propName == "published") {
            if (_this2.published === false) {
              _this2.__icon = "visibility-off";
            } else {
              _this2.__icon = null;
              _this2.__icon = "";
            }
          }
        });
      }
    }, {
      key: "_headerClickHandler",
      value: function _headerClickHandler(e) {
        if (!this.opened) {
          this.opened = !this.opened;
        }
      }
    }, {
      key: "_mapMenuItemHiddenCheckHandler",
      value: function _mapMenuItemHiddenCheckHandler(e) {
        var hiddenChild = e.detail.hiddenChild;
        var detail = Object.assign({}, e.detail);

        if (hiddenChild !== true && this.opened === false) {
          detail = Object.assign({}, detail, {
            hiddenChild: true
          });
        } else {
          detail = Object.assign({}, detail, {
            hiddenChild: false
          });
        }

        this.dispatchEvent(new CustomEvent("map-meu-item-hidden-check", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: detail
        }));
      }
    }, {
      key: "__toggleHeader",
      value: function __toggleHeader(e) {
        // catch the event and end propagation
        e.stopPropagation();
        this.opened = !this.opened;
        this.dispatchEvent(new CustomEvent("toggle-updated", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: {
            opened: this.opened
          }
        }));
      }
    }, {
      key: "__activeChanged",
      value: function __activeChanged(e) {
        this.opened = true;
      }
    }], [{
      key: "tag",
      get: function get() {
        return "map-menu-submenu";
      }
      /**
       * LitElement life cycle - properties definition
       */

    }, {
      key: "properties",
      get: function get() {
        return {
          id: {
            type: String
          },
          title: {
            type: String
          },
          avatarLabel: {
            type: String,
            attribute: "avatar-label"
          },
          label: {
            type: String
          },
          icon: {
            type: String
          },
          __icon: {
            type: String
          },
          url: {
            type: String
          },
          opened: {
            type: Boolean
          },
          collapsable: {
            type: Boolean
          },
          expandChildren: {
            type: Boolean,
            attribute: "expand-children"
          },
          selected: {
            type: String
          },
          published: {
            type: Boolean
          }
        };
      }
    }]);
    return MapMenuSubmenu;
  }(_litElement.LitElement);

  _exports.MapMenuSubmenu = MapMenuSubmenu;
  window.customElements.define(MapMenuSubmenu.tag, MapMenuSubmenu);
});