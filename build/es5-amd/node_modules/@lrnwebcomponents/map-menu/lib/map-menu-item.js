define(["exports", "../../../lit/index.js", "../../simple-icon/lib/simple-icon-lite.js", "../../simple-icon/lib/simple-icons.js"], function (_exports, _index, _simpleIconLite, _simpleIcons) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.MapMenuItem = void 0;

  var _templateObject_f54fbaa0feb911eb8439e3eec9305af7, _templateObject2_f54fbaa0feb911eb8439e3eec9305af7, _templateObject3_f54fbaa0feb911eb8439e3eec9305af7, _templateObject4_f54fbaa0feb911eb8439e3eec9305af7;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var MapMenuItem = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(MapMenuItem, _LitElement);

    var _super = _createSuper(MapMenuItem);

    function MapMenuItem() {
      var _this;

      babelHelpers.classCallCheck(this, MapMenuItem);
      _this = _super.call(this);
      _this.icon = null;
      _this.__icon = null;
      _this.trackIcon = null;
      _this.title = "";
      _this.url = "";
      _this.active = false;
      _this.published = true;
      return _this;
    }
    /**
     * LitElement life cycle - properties definition
     */


    babelHelpers.createClass(MapMenuItem, [{
      key: "render",
      value:
      /**
       * LitElement life cycle - render callback
       */
      function render() {
        return (0, _index.html)(_templateObject_f54fbaa0feb911eb8439e3eec9305af7 || (_templateObject_f54fbaa0feb911eb8439e3eec9305af7 = babelHelpers.taggedTemplateLiteral(["\n      <a tabindex=\"-1\" href=\"", "\">\n        <button id=\"wrapper\" role=\"link\" noink>\n          ", "\n          <span class=\"title\">", "</span>\n          ", "\n        </button>\n      </a>\n    "])), this.url, this.__icon ? (0, _index.html)(_templateObject2_f54fbaa0feb911eb8439e3eec9305af7 || (_templateObject2_f54fbaa0feb911eb8439e3eec9305af7 = babelHelpers.taggedTemplateLiteral(["\n                <simple-icon-lite icon=\"", "\"></simple-icon-lite>\n              "])), this.__icon) : "", this.title, this.trackIcon ? (0, _index.html)(_templateObject3_f54fbaa0feb911eb8439e3eec9305af7 || (_templateObject3_f54fbaa0feb911eb8439e3eec9305af7 = babelHelpers.taggedTemplateLiteral(["\n                <simple-icon-lite\n                  id=\"track\"\n                  icon=\"", "\"\n                ></simple-icon-lite>\n              "])), this.trackIcon) : "");
      }
    }, {
      key: "updated",
      value:
      /**
       * LitElement life cycle - properties changed callback
       */
      function updated(changedProperties) {
        var _this2 = this;

        changedProperties.forEach(function (oldValue, propName) {
          if (propName == "trackIcon") {
            _this2._trackIconChanged(_this2[propName], oldValue);
          }

          if (propName == "icon") {
            _this2.__icon = _this2[propName];
          }

          if (["id", "selected"].includes(propName)) {
            _this2.__selectedChanged(_this2.selected, _this2.id);
          }

          if (propName == "published" && _this2[propName]) {
            if (_this2.published === false) {
              _this2.__icon = "visibility-off";
            }
          }
        });
      }
    }, {
      key: "_trackIconChanged",
      value: function _trackIconChanged(newValue, oldValue) {
        if (this.shadowRoot.querySelector("#track")) {
          if (newValue) {
            this.shadowRoot.querySelector("#track").classList.add("show-icon");
          } else {
            this.shadowRoot.querySelector("#track").classList.remove("show-icon");
          }
        }
      }
    }, {
      key: "__selectedChanged",
      value: function __selectedChanged(selected, id) {
        if (selected === id) {
          this.dispatchEvent(new CustomEvent("active-item", {
            bubbles: true,
            cancelable: true,
            composed: true,
            detail: this
          }));
        }
      }
    }, {
      key: "_click",
      value: function _click() {
        this.dispatchEvent(new CustomEvent("link-clicked", {
          bubbles: true,
          cancelable: true,
          composed: true,
          detail: {
            id: this.id
          }
        }));
      }
    }], [{
      key: "styles",
      get:
      /**
       * LitElement constructable styles enhancement
       */
      function get() {
        return [(0, _index.css)(_templateObject4_f54fbaa0feb911eb8439e3eec9305af7 || (_templateObject4_f54fbaa0feb911eb8439e3eec9305af7 = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n          transition: 0.1s all ease-in-out;\n          font-size: var(--map-menu-item-font-size);\n          --map-menu-item-height: 42px;\n          --map-menu-item-icon-height: 24px;\n          overflow: var(--map-menu-item-overflow, hidden);\n        }\n        :host([active]) {\n          background: var(--map-menu-active-color);\n          color: var(--map-menu-item-active-item-color, #000000);\n        }\n        simple-icon-lite {\n          display: inline-block;\n          --simple-icon-height: var(--map-menu-item-icon-height);\n          --simple-icon-width: var(--map-menu-item-icon-height);\n        }\n        .title {\n          text-transform: none;\n        }\n        a,\n        a:visited {\n          display: block;\n          color: var(--map-menu-item-a-color, inherit);\n          text-decoration: var(--map-menu-item-a-text-decoration, none);\n        }\n        a:hover button,\n        a:active button,\n        a:focus button {\n          color: var(\n            --map-menu-item-a-active-color,\n            var(--map-menu-item-a-color, inherit)\n          );\n          text-decoration: var(\n            --map-menu-item-a-text-decoration-hover,\n            underline\n          );\n        }\n        #track {\n          transition: 0.1s all ease-in-out;\n          position: absolute;\n          right: 0;\n\n          margin-right: 0px;\n          width: 0px;\n          height: 0px;\n          visibility: hidden;\n          opacity: 0;\n        }\n        #track.show-icon {\n          margin-right: 5px;\n          width: 18px;\n          height: 18px;\n          visibility: visible;\n          opacity: 1;\n        }\n        button {\n          cursor: pointer;\n          color: inherit;\n          background-color: transparent;\n          text-transform: none;\n          width: 100%;\n          justify-content: left;\n          margin: 0px;\n          border: 0;\n          height: var(\n            --map-menu-item-button-height,\n            var(--map-menu-item-height)\n          );\n          padding: 4px;\n          text-align: left;\n          border-radius: 0;\n        }\n      "])))];
      }
    }, {
      key: "tag",
      get: function get() {
        return "map-menu-item";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          icon: {
            type: String,
            reflect: true
          },
          __icon: {
            type: String
          },
          trackIcon: {
            type: String,
            attribute: "track-icon"
          },
          title: {
            type: String
          },
          url: {
            type: String
          },
          id: {
            type: String,
            reflect: true
          },
          active: {
            type: Boolean
          },
          selected: {
            type: String
          },
          published: {
            type: Boolean
          }
        };
      }
    }]);
    return MapMenuItem;
  }(_index.LitElement);

  _exports.MapMenuItem = MapMenuItem;
  window.customElements.define(MapMenuItem.tag, MapMenuItem);
});