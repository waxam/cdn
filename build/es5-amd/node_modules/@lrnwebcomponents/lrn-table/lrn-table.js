define(["exports", "require", "../../lit-element/lit-element.js", "../schema-behaviors/schema-behaviors.js"], function (_exports, _require, _litElement, _schemaBehaviors) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnTable = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _templateObject2_86a207a0c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n        .hidden-title {\n          display: none;\n        }\n      "]);

    _templateObject2_86a207a0c96f11ea8be5e1d5fe7ec787 = function _templateObject2_86a207a0c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  function _templateObject_86a207a0c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <div typeof=\"oer:SupportingMaterial\">\n        <div class=\"hidden-title\" property=\"oer:name\">", "</div>\n        <div property=\"oer:description\">\n          <slot></slot>\n          <csv-render\n            data-source=\"", "\"\n            caption=\"", "\"\n            summary=\"", "\"\n          ></csv-render>\n        </div>\n      </div>\n    "]);

    _templateObject_86a207a0c96f11ea8be5e1d5fe7ec787 = function _templateObject_86a207a0c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  /**
   * `lrn-table`
   * `Accessibly render a HTML table from a csv file`
   *
   * @microcopy - language worth noting:
   *  - CSV - Comma separated values
   * @demo demo/index.html
   * @element lrn-table
   */
  var LrnTable =
  /*#__PURE__*/
  function (_SchemaBehaviors) {
    babelHelpers.inherits(LrnTable, _SchemaBehaviors);

    function LrnTable() {
      var _this;

      babelHelpers.classCallCheck(this, LrnTable);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(LrnTable).call(this));
      setTimeout(function () {
        new Promise(function (res, rej) {
          return _require.default(["../csv-render/csv-render.js"], res, rej);
        });
      }, 0);
      return _this;
    }

    babelHelpers.createClass(LrnTable, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject_86a207a0c96f11ea8be5e1d5fe7ec787(), this.title, this.csvFile, this.title, this.description);
      }
    }], [{
      key: "styles",
      get: function get() {
        return [(0, _litElement.css)(_templateObject2_86a207a0c96f11ea8be5e1d5fe7ec787())];
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrn-table";
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(LrnTable), "properties", this), {
          /**
           * Title of this table. This is both for accessibility and presentation.
           */
          title: {
            type: String
          },

          /**
           * The file to load material from.
           */
          csvFile: {
            type: String,
            attribute: "csv-file"
          },

          /**
           * An extended description of the material in the table for improved accessibility.
           */
          description: {
            type: String
          }
        });
      }
      /**
       * Hax properties
       */

    }, {
      key: "haxProperties",
      get: function get() {
        return {
          canScale: true,
          canPosition: true,
          canEditSource: false,
          gizmo: {
            title: "CSV table",
            description: "This can generate a table from a CSV file no matter where it is located.",
            icon: "editor:border-all",
            color: "green",
            groups: ["Presentation", "Table", "Data"],
            handles: [{
              type: "csv",
              source: "csvFile"
            }],
            meta: {
              author: "ELMS:LN"
            }
          },
          settings: {
            quick: [{
              property: "csvFile",
              title: "Source",
              description: "The URL for this csv file.",
              inputMethod: "textfield",
              icon: "link",
              required: true
            }, {
              property: "title",
              title: "Title",
              description: "Title for the table to be generated.",
              inputMethod: "textfield",
              icon: "editor:title"
            }, {
              property: "description",
              title: "Description",
              description: "More detailed description for improved accessibility of the table data.",
              inputMethod: "textfield",
              icon: "editor:short-text"
            }],
            configure: [{
              property: "csvFile",
              title: "Source",
              description: "The URL for this csv file.",
              inputMethod: "haxupload",
              required: true
            }, {
              property: "title",
              title: "Title",
              description: "Title for the table to be generated.",
              inputMethod: "textfield"
            }, {
              property: "description",
              title: "Description",
              description: "More detailed description for improved accessibility of the table data.",
              inputMethod: "textfield"
            }],
            advanced: []
          }
        };
      }
    }]);
    return LrnTable;
  }((0, _schemaBehaviors.SchemaBehaviors)(_litElement.LitElement));

  _exports.LrnTable = LrnTable;
  window.customElements.define(LrnTable.tag, LrnTable);
});