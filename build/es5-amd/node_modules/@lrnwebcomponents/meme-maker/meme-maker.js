define(["exports","../../lit-element/lit-element.js","../hax-body-behaviors/lib/HAXWiring.js"],function(_exports,_litElement,_HAXWiring){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.MemeMaker=void 0;function _templateObject2_679d8630a44b11e98c881fc26e93d8f9(){var data=babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n        * {\n          box-sizing: border-box;\n        }\n        figure {\n          position: relative;\n          width: 100%;\n          margin: 0;\n          padding: 0;\n          font-size: 20px;\n        }\n        img {\n          width: 100%;\n          height: auto;\n        }\n        .top-text,\n        .bottom-text {\n          position: absolute;\n          left: 0;\n          width: 100%;\n          padding: 3% 2%;\n          text-align: center;\n          text-transform: uppercase;\n          font-weight: 900;\n          font-family: \"Impact\", \"Arial Black\", \"sans serif\";\n          line-height: 1.2;\n          font-size: var(--meme-maker-font-size, 36px);\n          color: white;\n          text-shadow: -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000,\n            1px 1px 0 #000;\n          letter-spacing: 2px;\n        }\n        .top-text {\n          top: 0;\n        }\n        .bottom-text {\n          bottom: 0;\n        }\n        @media (max-width: 800px) {\n          .top-text,\n          .bottom-text {\n            font-size: var(--meme-maker-font-size-medium, 20px);\n          }\n        }\n        @media (max-width: 600px) {\n          .top-text,\n          .bottom-text {\n            font-size: var(--meme-maker-font-size-small, 20px);\n          }\n        }\n      "]);_templateObject2_679d8630a44b11e98c881fc26e93d8f9=function _templateObject2_679d8630a44b11e98c881fc26e93d8f9(){return data};return data}function _templateObject_679d8630a44b11e98c881fc26e93d8f9(){var data=babelHelpers.taggedTemplateLiteral(["\n      <figure>\n        <img .src=\"","\" .alt=\"","\" />\n        <figcaption class=\"top-text\">","</figcaption>\n        <figcaption class=\"bottom-text\">","</figcaption>\n      </figure>\n    "]);_templateObject_679d8630a44b11e98c881fc26e93d8f9=function _templateObject_679d8630a44b11e98c881fc26e93d8f9(){return data};return data}/**
 * `meme-maker`
 * Connects lrndesign-gallery to HAX
 * @demo demo/index.html
 * @microcopy - the mental model for this element
 *  - go forth and make dank memes yo
 */var MemeMaker=/*#__PURE__*/function(_LitElement){babelHelpers.inherits(MemeMaker,_LitElement);babelHelpers.createClass(MemeMaker,[{key:"render",value:function render(){return(0,_litElement.html)(_templateObject_679d8630a44b11e98c881fc26e93d8f9(),this.imageUrl,this.alt,this.topText,this.bottomText)}}],[{key:"styles",get:function get(){return[(0,_litElement.css)(_templateObject2_679d8630a44b11e98c881fc26e93d8f9())]}},{key:"tag",get:function get(){return"meme-maker"}}]);function MemeMaker(){var _this;babelHelpers.classCallCheck(this,MemeMaker);_this=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(MemeMaker).call(this));_this.alt="";_this.HAXWiring=new _HAXWiring.HAXWiring;_this.HAXWiring.setup(MemeMaker.haxProperties,MemeMaker.tag,babelHelpers.assertThisInitialized(_this));return _this}babelHelpers.createClass(MemeMaker,null,[{key:"properties",get:function get(){return{/**
       * Alt data passed down to appropriate tag
       */alt:{type:String},/**
       * url to the meme image
       */imageUrl:{type:String,attribute:"image-url",reflect:!0},/**
       * Text on top of the image.
       */topText:{type:String,attribute:"top-text",reflect:!0},/**
       * Bottom text for the image.
       */bottomText:{type:String,attribute:"bottom-text",reflect:!0}}}/**
   * Attached to the DOM, now fire.
   */},{key:"haxProperties",get:function get(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"Meme",description:"Make a meme out of an image",icon:"editor:title",color:"orange",groups:["Content","Text","Meme","Funny"],handles:[{type:"image",source:"imageUrl",title:"topText",author:"bottomText",alt:"alt"}],meta:{author:"LRNWebComponents"}},settings:{quick:[{property:"topText",title:"Top text",description:"Top text of the meme.",inputMethod:"textfield",icon:"editor:title"},{property:"bottomText",title:"Bottom text",description:"The date this was accessed.",inputMethod:"textfield",icon:"editor:title"}],configure:[{property:"imageUrl",title:"Source",description:"The source url for the element this is citing.",inputMethod:"haxupload",icon:"link"},{property:"topText",title:"Top text",description:"Top text of the meme.",inputMethod:"textfield",icon:"editor:title"},{property:"bottomText",title:"Bottom text",description:"The date this was accessed.",inputMethod:"textfield",icon:"editor:title"}],advanced:[]}}}}]);return MemeMaker}(_litElement.LitElement);_exports.MemeMaker=MemeMaker;window.customElements.define(MemeMaker.tag,MemeMaker)});