define(["exports","../utils/utils.js"],function(_exports,_utils){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.SchemaBehaviors=void 0;function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable});keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1,source;i<arguments.length;i++){source=null!=arguments[i]?arguments[i]:{};if(i%2){ownKeys(Object(source),!0).forEach(function(key){babelHelpers.defineProperty(target,key,source[key])})}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}}return target}var SchemaBehaviors=function SchemaBehaviors(SuperClass){return(/*#__PURE__*/function(_SuperClass){babelHelpers.inherits(_class,_SuperClass);/**
     * HTMLElement
     */function _class(){var _this;babelHelpers.classCallCheck(this,_class);_this=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(_class).call(this));_this.schemaResourceID="";_this.schemaMap={prefix:{oer:"http://oerschema.org/",schema:"http://schema.org/",dc:"http://purl.org/dc/terms/",foaf:"http://xmlns.com/foaf/0.1/",cc:"http://creativecommons.org/ns#",bib:"http://bib.schema.org"}};return _this}/**
     * Popular convention across libraries
     */babelHelpers.createClass(_class,[{key:"updated",/**
     * LitElement support
     */value:function updated(changedProperties){var _this2=this;if(babelHelpers.get(babelHelpers.getPrototypeOf(_class.prototype),"updated",this)){babelHelpers.get(babelHelpers.getPrototypeOf(_class.prototype),"updated",this).call(this,changedProperties)}changedProperties.forEach(function(oldValue,propName){if("schemaMap"==propName){_this2._schemaMapChanged(_this2[propName],oldValue)}})}/**
     * Notice the schema map has changed, reprocess attributes.
     */},{key:"_schemaMapChanged",value:function _schemaMapChanged(newValue,oldValue){if(babelHelpers.typeof(newValue)!==("undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))){// use this to tie into schemaResourceID build
this.schemaResourceID=this.getAttribute("resource");// if it still doesn't have one then we have to check
if(""==this.schemaResourceID||null==this.schemaResourceID||"null"==this.schemaResourceID){this.schemaResourceID=(0,_utils.generateResourceID)();this.setAttribute("resource",this.schemaResourceID)}var prefixes=newValue.prefix,prefix="";// build prefix string
for(var property in prefixes){if(prefixes.hasOwnProperty(property)){prefix+=property+":"+prefixes[property]+" "}}// set prefix on the main element itself
if(""!=prefix){this.setAttribute("prefix",prefix)}}}}],[{key:"properties",get:function get(){return _objectSpread({},babelHelpers.get(babelHelpers.getPrototypeOf(_class),"properties",this),{/**
         * Unique Resource ID, generated when schemaMap processes.
         */schemaResourceID:{type:String,attribute:"schema-resource-id"},/**
         * Schema Map for the element, used to generate a valid prefix on the fly
         * Props set for Polymer compatibility
         */schemaMap:{type:Object,readOnly:!0,observer:"_schemaMapChanged"}})}}]);return _class}(SuperClass))};_exports.SchemaBehaviors=SchemaBehaviors});