define(["exports", "require", "../../@polymer/polymer/polymer-element.js", "../../@polymer/polymer/lib/utils/async.js", "../../@polymer/paper-input/paper-textarea.js", "../materializecss-styles/lib/colors.js", "../mtz-marked-editor/mtz-marked-editor.js", "../mtz-marked-editor/lib/mtz-marked-control-generic-line.js", "../mtz-marked-editor/lib/mtz-marked-control-generic-wrap.js", "../mtz-marked-editor/lib/mtz-marked-control-link.js", "../word-count/word-count.js", "../lrnsys-button/lrnsys-button.js", "../lrndesign-avatar/lrndesign-avatar.js"], function (_exports, _require, _polymerElement, async, _paperTextarea, _colors, _mtzMarkedEditor, _mtzMarkedControlGenericLine, _mtzMarkedControlGenericWrap, _mtzMarkedControlLink, _wordCount, _lrnsysButton, _lrndesignAvatar) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnsysComment = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);
  async = babelHelpers.interopRequireWildcard(async);

  function _templateObject_89d5e270c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <style include=\"materializecss-styles-colors\">\n        :host {\n          display: block;\n          padding: 10px 10px 10px 0px;\n        }\n        :host([disabled]) {\n          opacity: 0.5;\n          background-color: #cccccc;\n          pointer-events: none;\n        }\n        :host(:focus),\n        :host(:hover) {\n          z-index: 2;\n        }\n        :host(:focus) .comment-outer,\n        :host(:hover) .comment-outer {\n          border: 1px #0277bd solid;\n        }\n        :host [hidden] {\n          display: none;\n        }\n        .comment-outer {\n          display: table;\n          width: 100%;\n          border: 1px #ddd solid;\n          color: #444;\n        }\n        .comment-outer.new-comment {\n          border: 1px #d81b60 dashed;\n          color: #000;\n        }\n        .comment-inner {\n          display: table-row;\n        }\n        .comment-avatar {\n          padding: 0 7px;\n          width: 40px;\n        }\n        .comment-depth,\n        .comment-avatar,\n        .comment-content {\n          padding-top: 8px;\n          padding-bottom: 8px;\n          display: table-cell;\n          vertical-align: top;\n        }\n        .comment-content {\n          padding-right: 7px;\n          max-width: 300px;\n        }\n        h1,\n        h2,\n        h3,\n        h4 {\n          text-align: left;\n          font-size: 20px;\n          line-height: 20px;\n        }\n        h1.comment-heading,\n        h2.comment-heading,\n        h3.comment-heading,\n        h4.comment-heading {\n          margin-top: 7px;\n        }\n        p {\n          font-size: 14px;\n          line-height: 18px;\n          text-align: left;\n        }\n        #editcomment {\n          background-color: white;\n          padding: 4px;\n        }\n        marked-element {\n          line-height: 16px;\n          font-size: 14.4px;\n        }\n        .nowrap-me marked-element:hover {\n          box-shadow: -1px 0 0 0 black inset;\n          cursor: pointer;\n        }\n        .nowrap-me marked-element ::slotted(#content p.marked-element) {\n          height: 32px;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          margin-bottom: 35px;\n        }\n        .nowrap-me marked-element ::slotted(#content p.marked-element:after) {\n          content: \"see more\";\n          position: absolute;\n          bottom: 65px;\n          right: 17px;\n          color: #1976d2;\n        }\n        .comment-depth-1 {\n          width: 0;\n        }\n        .comment-depth-2 {\n          width: 54px;\n          border-right: 3px solid #ccc;\n        }\n        .comment-depth-3,\n        .comment-depth-4,\n        .comment-depth-5,\n        .comment-depth-6,\n        .comment-depth-7,\n        .comment-depth-8,\n        .comment-depth-9 {\n          width: 108px;\n          border-right: 3px solid #ccc;\n        }\n        .center {\n          padding: 0;\n        }\n        .circle {\n          border-radius: 50% !important;\n        }\n        .comment-actions {\n          margin: 0;\n          padding: 0;\n          display: block;\n          border-top: 1px solid #ddd;\n        }\n        .comment-actions lrnsys-button {\n          display: inline-flex;\n        }\n        .comment-actions .comment-actions-group {\n          margin: 0;\n          padding: 0;\n          display: block;\n        }\n        .comment-actions .comment-actions-group.left-actions {\n          float: left;\n        }\n        .comment-actions .comment-actions-group.right-actions {\n          float: right;\n        }\n        moment-element {\n          float: right;\n          font-size: 90%;\n          font-style: italic;\n          font-weight: normal;\n        }\n        paper-badge {\n          display: flex;\n          float: right;\n        }\n        .like-icon-color {\n          color: #2196f3;\n        }\n        .element-invisible {\n          position: absolute;\n          left: -9999px;\n          top: 0;\n          width: 0;\n          height: 0;\n          overflow: hidden;\n        }\n      </style>\n      <div class$=\"comment-outer [[commentNew]]\">\n        <div class=\"comment-inner\">\n          <div\n            class$=\"comment-depth comment-depth-[[comment.attributes.threadDepth]] grey lighten-3\"\n          ></div>\n          <div class=\"comment-avatar\">\n            <lrndesign-avatar\n              id=\"avatar\"\n              label=\"[[comment.relationships.author.data.name]]\"\n              src=\"[[comment.relationships.author.data.avatar]]\"\n              class=\"float-left ferpa-protect\"\n            ></lrndesign-avatar>\n            <simple-tooltip\n              for=\"avatar\"\n              animation-delay=\"0\"\n              class=\"ferpa-protect\"\n              >[[displayName]]</simple-tooltip\n            >\n            <template\n              is=\"dom-if\"\n              if=\"[[comment.relationships.author.data.visual.icon]]\"\n            >\n              <paper-badge\n                icon=\"[[comment.relationships.author.data.visual.icon]]\"\n                for=\"papercard\"\n                label=\"[[comment.relationships.author.data.visual.label]]\"\n              >\n              </paper-badge>\n            </template>\n          </div>\n          <div class=\"comment-content\">\n            <div class=\"comment-body\">\n              <div id=\"bodyarea\" class=\"nowrap-me\">\n                <h4 class=\"ferpa-protect comment-heading\">\n                  <span class=\"element-invisible\">At </span\n                  ><moment-element\n                    datetime$=\"[[comment.attributes.created]]\"\n                    output-format=\"MMM DD[,] YYYY\"\n                  ></moment-element>\n                  [[comment.relationships.author.data.display_name]]\n                  <span class=\"element-invisible\"\n                    >[[comment.relationships.author.data.visual.label]]</span\n                  >\n                  said:\n                </h4>\n                <marked-element\n                  smartypants\n                  id=\"renderedcomment\"\n                  markdown=\"[[comment.attributes.body]]\"\n                >\n                  <word-count\n                    class=\"markdown-html-slot\"\n                    slot=\"markdown-html\"\n                  ></word-count>\n                </marked-element>\n              </div>\n              <mtz-marked-editor id=\"commenteditor\" hidden>\n                <div slot=\"controls\">\n                  <mtz-marked-control-generic-wrap\n                    icon=\"editor:format-bold\"\n                    title=\"Bold\"\n                    syntax-prefix=\"**\"\n                    syntax-suffix=\"**\"\n                    keys=\"ctrl+b\"\n                  ></mtz-marked-control-generic-wrap>\n                  <mtz-marked-control-generic-wrap\n                    icon=\"editor:format-italic\"\n                    title=\"Italic\"\n                    syntax-prefix=\"_\"\n                    syntax-suffix=\"_\"\n                    keys=\"ctrl+i\"\n                  ></mtz-marked-control-generic-wrap>\n                  <mtz-marked-control-generic-line\n                    icon=\"editor:format-size\"\n                    title=\"Heading 3\"\n                    syntax-prefix=\"### \"\n                  ></mtz-marked-control-generic-line>\n                  <mtz-marked-control-generic-line\n                    icon=\"editor:format-list-numbered\"\n                    title=\"Ordered List\"\n                    syntax-prefix=\"1. \"\n                  ></mtz-marked-control-generic-line>\n                  <mtz-marked-control-generic-line\n                    icon=\"editor:format-list-bulleted\"\n                    title=\"Unordered List\"\n                    syntax-prefix=\"- \"\n                  ></mtz-marked-control-generic-line>\n                  <mtz-marked-control-link\n                    icon=\"editor:insert-link\"\n                    title=\"Link\"\n                  ></mtz-marked-control-link>\n                </div>\n                <paper-textarea\n                  char-counter\n                  autofocus\n                  id=\"editcomment\"\n                  label=\"Comment\"\n                  value=\"{{comment.attributes.body}}\"\n                  slot=\"textarea\"\n                ></paper-textarea>\n              </mtz-marked-editor>\n            </div>\n            <div class=\"comment-actions\">\n              <div class=\"comment-actions-group left-actions\">\n                <lrnsys-button\n                  on-click=\"actionHandler\"\n                  id=\"reply\"\n                  data-commentid=\"[[comment.id]]\"\n                  alt=\"Reply\"\n                  icon=\"reply\"\n                  hover-class=\"[[hoverClass]]\"\n                  icon-class=\"grey-text no-margin\"\n                  hidden$=\"[[!comment.actions.reply]]\"\n                ></lrnsys-button>\n                <lrnsys-button\n                  on-click=\"actionHandler\"\n                  id=\"like\"\n                  data-commentid=\"[[comment.id]]\"\n                  alt=\"Like\"\n                  icon=\"thumb-up\"\n                  hover-class=\"[[hoverClass]]\"\n                  icon-class=\"grey-text no-margin\"\n                  hidden$=\"[[!comment.actions.like]]\"\n                ></lrnsys-button>\n              </div>\n              <div class=\"comment-actions-group right-actions\">\n                <lrnsys-button\n                  on-click=\"actionHandler\"\n                  id=\"edit\"\n                  data-commentid=\"[[comment.id]]\"\n                  icon=\"create\"\n                  alt=\"Edit\"\n                  hover-class=\"[[hoverClass]]\"\n                  icon-class=\"grey-text no-margin\"\n                  hidden$=\"[[!comment.actions.edit]]\"\n                ></lrnsys-button>\n                <lrnsys-button\n                  on-click=\"actionHandler\"\n                  id=\"delete\"\n                  data-commentid=\"[[comment.id]]\"\n                  icon=\"delete-forever\"\n                  alt=\"Delete\"\n                  hover-class=\"[[hoverClass]]\"\n                  icon-class=\"grey-text no-margin\"\n                  hidden$=\"[[!comment.actions.delete]]\"\n                ></lrnsys-button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    "], ["\n      <style include=\"materializecss-styles-colors\">\n        :host {\n          display: block;\n          padding: 10px 10px 10px 0px;\n        }\n        :host([disabled]) {\n          opacity: 0.5;\n          background-color: #cccccc;\n          pointer-events: none;\n        }\n        :host(:focus),\n        :host(:hover) {\n          z-index: 2;\n        }\n        :host(:focus) .comment-outer,\n        :host(:hover) .comment-outer {\n          border: 1px #0277bd solid;\n        }\n        :host [hidden] {\n          display: none;\n        }\n        .comment-outer {\n          display: table;\n          width: 100%;\n          border: 1px #ddd solid;\n          color: #444;\n        }\n        .comment-outer.new-comment {\n          border: 1px #d81b60 dashed;\n          color: #000;\n        }\n        .comment-inner {\n          display: table-row;\n        }\n        .comment-avatar {\n          padding: 0 7px;\n          width: 40px;\n        }\n        .comment-depth,\n        .comment-avatar,\n        .comment-content {\n          padding-top: 8px;\n          padding-bottom: 8px;\n          display: table-cell;\n          vertical-align: top;\n        }\n        .comment-content {\n          padding-right: 7px;\n          max-width: 300px;\n        }\n        h1,\n        h2,\n        h3,\n        h4 {\n          text-align: left;\n          font-size: 20px;\n          line-height: 20px;\n        }\n        h1.comment-heading,\n        h2.comment-heading,\n        h3.comment-heading,\n        h4.comment-heading {\n          margin-top: 7px;\n        }\n        p {\n          font-size: 14px;\n          line-height: 18px;\n          text-align: left;\n        }\n        #editcomment {\n          background-color: white;\n          padding: 4px;\n        }\n        marked-element {\n          line-height: 16px;\n          font-size: 14.4px;\n        }\n        .nowrap-me marked-element:hover {\n          box-shadow: -1px 0 0 0 black inset;\n          cursor: pointer;\n        }\n        .nowrap-me marked-element ::slotted(#content p.marked-element) {\n          height: 32px;\n          overflow: hidden;\n          text-overflow: ellipsis;\n          margin-bottom: 35px;\n        }\n        .nowrap-me marked-element ::slotted(#content p.marked-element:after) {\n          content: \"see more\";\n          position: absolute;\n          bottom: 65px;\n          right: 17px;\n          color: #1976d2;\n        }\n        .comment-depth-1 {\n          width: 0;\n        }\n        .comment-depth-2 {\n          width: 54px;\n          border-right: 3px solid #ccc;\n        }\n        .comment-depth-3,\n        .comment-depth-4,\n        .comment-depth-5,\n        .comment-depth-6,\n        .comment-depth-7,\n        .comment-depth-8,\n        .comment-depth-9 {\n          width: 108px;\n          border-right: 3px solid #ccc;\n        }\n        .center {\n          padding: 0;\n        }\n        .circle {\n          border-radius: 50% !important;\n        }\n        .comment-actions {\n          margin: 0;\n          padding: 0;\n          display: block;\n          border-top: 1px solid #ddd;\n        }\n        .comment-actions lrnsys-button {\n          display: inline-flex;\n        }\n        .comment-actions .comment-actions-group {\n          margin: 0;\n          padding: 0;\n          display: block;\n        }\n        .comment-actions .comment-actions-group.left-actions {\n          float: left;\n        }\n        .comment-actions .comment-actions-group.right-actions {\n          float: right;\n        }\n        moment-element {\n          float: right;\n          font-size: 90%;\n          font-style: italic;\n          font-weight: normal;\n        }\n        paper-badge {\n          display: flex;\n          float: right;\n        }\n        .like-icon-color {\n          color: #2196f3;\n        }\n        .element-invisible {\n          position: absolute;\n          left: -9999px;\n          top: 0;\n          width: 0;\n          height: 0;\n          overflow: hidden;\n        }\n      </style>\n      <div class\\$=\"comment-outer [[commentNew]]\">\n        <div class=\"comment-inner\">\n          <div\n            class\\$=\"comment-depth comment-depth-[[comment.attributes.threadDepth]] grey lighten-3\"\n          ></div>\n          <div class=\"comment-avatar\">\n            <lrndesign-avatar\n              id=\"avatar\"\n              label=\"[[comment.relationships.author.data.name]]\"\n              src=\"[[comment.relationships.author.data.avatar]]\"\n              class=\"float-left ferpa-protect\"\n            ></lrndesign-avatar>\n            <simple-tooltip\n              for=\"avatar\"\n              animation-delay=\"0\"\n              class=\"ferpa-protect\"\n              >[[displayName]]</simple-tooltip\n            >\n            <template\n              is=\"dom-if\"\n              if=\"[[comment.relationships.author.data.visual.icon]]\"\n            >\n              <paper-badge\n                icon=\"[[comment.relationships.author.data.visual.icon]]\"\n                for=\"papercard\"\n                label=\"[[comment.relationships.author.data.visual.label]]\"\n              >\n              </paper-badge>\n            </template>\n          </div>\n          <div class=\"comment-content\">\n            <div class=\"comment-body\">\n              <div id=\"bodyarea\" class=\"nowrap-me\">\n                <h4 class=\"ferpa-protect comment-heading\">\n                  <span class=\"element-invisible\">At </span\n                  ><moment-element\n                    datetime\\$=\"[[comment.attributes.created]]\"\n                    output-format=\"MMM DD[,] YYYY\"\n                  ></moment-element>\n                  [[comment.relationships.author.data.display_name]]\n                  <span class=\"element-invisible\"\n                    >[[comment.relationships.author.data.visual.label]]</span\n                  >\n                  said:\n                </h4>\n                <marked-element\n                  smartypants\n                  id=\"renderedcomment\"\n                  markdown=\"[[comment.attributes.body]]\"\n                >\n                  <word-count\n                    class=\"markdown-html-slot\"\n                    slot=\"markdown-html\"\n                  ></word-count>\n                </marked-element>\n              </div>\n              <mtz-marked-editor id=\"commenteditor\" hidden>\n                <div slot=\"controls\">\n                  <mtz-marked-control-generic-wrap\n                    icon=\"editor:format-bold\"\n                    title=\"Bold\"\n                    syntax-prefix=\"**\"\n                    syntax-suffix=\"**\"\n                    keys=\"ctrl+b\"\n                  ></mtz-marked-control-generic-wrap>\n                  <mtz-marked-control-generic-wrap\n                    icon=\"editor:format-italic\"\n                    title=\"Italic\"\n                    syntax-prefix=\"_\"\n                    syntax-suffix=\"_\"\n                    keys=\"ctrl+i\"\n                  ></mtz-marked-control-generic-wrap>\n                  <mtz-marked-control-generic-line\n                    icon=\"editor:format-size\"\n                    title=\"Heading 3\"\n                    syntax-prefix=\"### \"\n                  ></mtz-marked-control-generic-line>\n                  <mtz-marked-control-generic-line\n                    icon=\"editor:format-list-numbered\"\n                    title=\"Ordered List\"\n                    syntax-prefix=\"1. \"\n                  ></mtz-marked-control-generic-line>\n                  <mtz-marked-control-generic-line\n                    icon=\"editor:format-list-bulleted\"\n                    title=\"Unordered List\"\n                    syntax-prefix=\"- \"\n                  ></mtz-marked-control-generic-line>\n                  <mtz-marked-control-link\n                    icon=\"editor:insert-link\"\n                    title=\"Link\"\n                  ></mtz-marked-control-link>\n                </div>\n                <paper-textarea\n                  char-counter\n                  autofocus\n                  id=\"editcomment\"\n                  label=\"Comment\"\n                  value=\"{{comment.attributes.body}}\"\n                  slot=\"textarea\"\n                ></paper-textarea>\n              </mtz-marked-editor>\n            </div>\n            <div class=\"comment-actions\">\n              <div class=\"comment-actions-group left-actions\">\n                <lrnsys-button\n                  on-click=\"actionHandler\"\n                  id=\"reply\"\n                  data-commentid=\"[[comment.id]]\"\n                  alt=\"Reply\"\n                  icon=\"reply\"\n                  hover-class=\"[[hoverClass]]\"\n                  icon-class=\"grey-text no-margin\"\n                  hidden\\$=\"[[!comment.actions.reply]]\"\n                ></lrnsys-button>\n                <lrnsys-button\n                  on-click=\"actionHandler\"\n                  id=\"like\"\n                  data-commentid=\"[[comment.id]]\"\n                  alt=\"Like\"\n                  icon=\"thumb-up\"\n                  hover-class=\"[[hoverClass]]\"\n                  icon-class=\"grey-text no-margin\"\n                  hidden\\$=\"[[!comment.actions.like]]\"\n                ></lrnsys-button>\n              </div>\n              <div class=\"comment-actions-group right-actions\">\n                <lrnsys-button\n                  on-click=\"actionHandler\"\n                  id=\"edit\"\n                  data-commentid=\"[[comment.id]]\"\n                  icon=\"create\"\n                  alt=\"Edit\"\n                  hover-class=\"[[hoverClass]]\"\n                  icon-class=\"grey-text no-margin\"\n                  hidden\\$=\"[[!comment.actions.edit]]\"\n                ></lrnsys-button>\n                <lrnsys-button\n                  on-click=\"actionHandler\"\n                  id=\"delete\"\n                  data-commentid=\"[[comment.id]]\"\n                  icon=\"delete-forever\"\n                  alt=\"Delete\"\n                  hover-class=\"[[hoverClass]]\"\n                  icon-class=\"grey-text no-margin\"\n                  hidden\\$=\"[[!comment.actions.delete]]\"\n                ></lrnsys-button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    "]);

    _templateObject_89d5e270c96f11ea8be5e1d5fe7ec787 = function _templateObject_89d5e270c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  /**
  `lrnsys-comment`
  A well styled comment for a user with markdown support.
  
  * @demo demo/index.html
  */
  var LrnsysComment =
  /*#__PURE__*/
  function (_PolymerElement) {
    babelHelpers.inherits(LrnsysComment, _PolymerElement);

    function LrnsysComment() {
      var _this;

      babelHelpers.classCallCheck(this, LrnsysComment);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(LrnsysComment).call(this));
      new Promise(function (res, rej) {
        return _require.default(["../../@polymer/iron-icons/editor-icons.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../simple-tooltip/simple-tooltip.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../../@polymer/marked-element/marked-element.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../../@polymer/paper-badge/paper-badge.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../moment-element/moment-element.js"], res, rej);
      });
      return _this;
    }

    babelHelpers.createClass(LrnsysComment, [{
      key: "connectedCallback",

      /**
       * attached lifecycle
       */
      value: function connectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(LrnsysComment.prototype), "connectedCallback", this).call(this);
        this.shadowRoot.querySelector("#bodyarea").addEventListener("click", this.bodyToggle.bind(this));
        this.shadowRoot.querySelector("#bodyarea").addEventListener("dblclick", this.bodyToggleOn.bind(this));
      }
      /**
       * detached lifecycle
       */

    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(LrnsysComment.prototype), "disconnectedCallback", this).call(this);
        this.shadowRoot.querySelector("#bodyarea").removeEventListener("click", this.bodyToggle.bind(this));
        this.shadowRoot.querySelector("#bodyarea").removeEventListener("dblclick", this.bodyToggleOn.bind(this));
      }
    }, {
      key: "_generateName",
      value: function _generateName(name, visual) {
        if (babelHelpers.typeof(visual) !== (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined)) && visual.label !== false) {
          return name + " (" + visual.label + ")";
        }

        return name;
      }
    }, {
      key: "_isCommentNew",
      value: function _isCommentNew(visual) {
        if (babelHelpers.typeof(visual) !== (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined)) && visual.label !== false) {
          return "new-comment";
        }

        return "";
      }
    }, {
      key: "_commentLoaded",
      value: function _commentLoaded(e) {
        this.editform = this.comment.metadata.editing;
        this.disabled = this.comment.metadata.disabled;
        this.blockFirstState = true;
      }
      /**
       * Handle all actions from the button bar.
       */

    }, {
      key: "actionHandler",
      value: function actionHandler(e) {
        // convert click handler into local dom object
        var target = e.target;
        var comment = null; // ensure we have a comment ID to operate against

        if (target.dataCommentid != null && !target.disabled) {
          comment = target.dataCommentid; // handle the type of event requested

          if (target.id == "reply") {
            this.dispatchEvent(new CustomEvent("comment-reply", {
              bubbles: true,
              cancelable: true,
              composed: true,
              detail: {
                comment: this.comment,
                target: target
              }
            }));
          } else if (target.id == "like") {
            this.shadowRoot.querySelector("#like").classList.toggle("like-icon-color");
            this.dispatchEvent(new CustomEvent("comment-like", {
              bubbles: true,
              cancelable: true,
              composed: true,
              detail: {
                comment: this.comment,
                target: target
              }
            }));
          } else if (target.id == "edit") {
            // toggle edit, allow edit state handle itself via observer
            this.editform = !this.editform;
          } else if (target.id == "delete") {
            this.dispatchEvent(new CustomEvent("comment-delete-dialog", {
              bubbles: true,
              cancelable: true,
              composed: true,
              detail: {
                comment: this.comment,
                target: target
              }
            }));
          }
        }
      }
      /**
       * Trigger the edit form.
       */

    }, {
      key: "_editTrigger",
      value: function _editTrigger(e) {
        var _this2 = this;

        // bother checking if they can edit or not first
        if (babelHelpers.typeof(this.comment) !== (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined)) && this.comment.actions.edit) {
          async.microTask.run(function () {
            // show / hide the edit vs display area
            _this2.shadowRoot.querySelector("#renderedcomment").hidden = _this2.editform;
            _this2.shadowRoot.querySelector("#commenteditor").hidden = !_this2.editform; // simple icon toggle

            if (_this2.editform) {
              _this2.shadowRoot.querySelector("#edit").icon = "save";
              _this2.shadowRoot.querySelector("#edit").alt = "Save";
              _this2.shadowRoot.querySelector("#reply").disabled = true;

              _this2.shadowRoot.querySelector("#editcomment").focus();

              _this2.dispatchEvent(new CustomEvent("comment-editing", {
                bubbles: true,
                cancelable: true,
                composed: true,
                detail: {
                  comment: _this2.comment
                }
              }));

              _this2.blockFirstState = false;
            } else {
              if (!_this2.blockFirstState) {
                _this2.dispatchEvent(new CustomEvent("comment-save", {
                  bubbles: true,
                  cancelable: true,
                  composed: true,
                  detail: {
                    comment: _this2.comment
                  }
                }));
              } else {
                _this2.blockFirstState = false;
              }

              _this2.shadowRoot.querySelector("#edit").icon = "create";
              _this2.shadowRoot.querySelector("#edit").alt = "Edit";
              _this2.shadowRoot.querySelector("#reply").disabled = false;
            }
          });
        }
      }
      /**
       * Toggle the body field expanding to show the whole comment
       */

    }, {
      key: "bodyToggle",
      value: function bodyToggle(e) {
        this.shadowRoot.querySelector("#bodyarea").classList.remove("nowrap-me");
      }
      /**
       * Toggle the body field expanding to show the whole comment
       */

    }, {
      key: "bodyToggleOn",
      value: function bodyToggleOn(e) {
        this.shadowRoot.querySelector("#bodyarea").classList.toggle("nowrap-me");
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_89d5e270c96f11ea8be5e1d5fe7ec787());
      }
    }, {
      key: "tag",
      get: function get() {
        return "lrnsys-comment";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          comment: {
            type: Object,
            notify: true,
            observer: "_commentLoaded"
          },
          displayName: {
            type: String,
            notify: true,
            computed: "_generateName(comment.relationships.author.data.display_name, comment.relationships.author.data.visual)"
          },
          commentNew: {
            type: String,
            notify: true,
            computed: "_isCommentNew(comment.relationships.author.data.visual)"
          },
          hoverClass: {
            type: String,
            reflectToAttribute: true
          },
          editform: {
            type: Boolean,
            notify: true,
            observer: "_editTrigger",
            reflectToAttribute: true
          },
          disabled: {
            type: Boolean,
            notify: true,
            reflectToAttribute: true
          }
        };
      }
    }]);
    return LrnsysComment;
  }(_polymerElement.PolymerElement);

  _exports.LrnsysComment = LrnsysComment;
  window.customElements.define(LrnsysComment.tag, LrnsysComment);
});