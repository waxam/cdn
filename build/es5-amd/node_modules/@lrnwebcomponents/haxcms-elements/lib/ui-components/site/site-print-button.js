define(["exports", "require", "../../../../../lit-element/lit-element.js", "../../core/haxcms-site-store.js", "../../core/utils/HAXCMSThemeParts.js"], function (_exports, _require, _litElement, _haxcmsSiteStore, _HAXCMSThemeParts2) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SitePrintButton = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _templateObject2_9b0a7c90c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <paper-icon-button\n        .id=\"btn", "\"\n        icon=\"", "\"\n        @click=\"", "\"\n        .aria-title=\"", "\"\n        ?disabled=\"", "\"\n        .part=\"", "\"\n      ></paper-icon-button>\n      <simple-tooltip\n        .for=\"btn", "\"\n        position=\"", "\"\n        offset=\"14\"\n      >\n        ", "\n      </simple-tooltip>\n    "]);

    _templateObject2_9b0a7c90c96f11ea8be5e1d5fe7ec787 = function _templateObject2_9b0a7c90c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  function _templateObject_9b0a7c90c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: inline-flex;\n          text-rendering: optimizelegibility;\n          position: relative;\n          color: var(--site-print-button-color, black);\n        }\n        paper-icon-button {\n          color: var(--site-print-button-color, black);\n        }\n        simple-tooltip {\n          --simple-tooltip-background: var(\n            --haxcms-tooltip-background-color,\n            #000000\n          );\n          --simple-tooltip-opacity: 1;\n          --simple-tooltip-text-color: var(--haxcms-tooltip-color, #ffffff);\n          --simple-tooltip-delay-in: 0;\n          --simple-tooltip-border-radius: 0;\n        }\n      "]);

    _templateObject_9b0a7c90c96f11ea8be5e1d5fe7ec787 = function _templateObject_9b0a7c90c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  /**
   * `site-print-button`
   * `Dynamic print button to request and generate what to print`
   *
  
   */
  var SitePrintButton =
  /*#__PURE__*/
  function (_HAXCMSThemeParts) {
    babelHelpers.inherits(SitePrintButton, _HAXCMSThemeParts);
    babelHelpers.createClass(SitePrintButton, null, [{
      key: "styles",

      /**
       * LitElement constructable styles enhancement
       */
      get: function get() {
        return [].concat(babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(SitePrintButton), "styles", this)), [(0, _litElement.css)(_templateObject_9b0a7c90c96f11ea8be5e1d5fe7ec787())]);
      }
      /**
       * Store the tag name to make it easier to obtain directly.
       */

    }, {
      key: "tag",
      get: function get() {
        return "site-print-button";
      }
    }]);

    function SitePrintButton() {
      var _this;

      babelHelpers.classCallCheck(this, SitePrintButton);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(SitePrintButton).call(this));
      _this.icon = "icons:print";
      _this.position = "bottom";
      _this.type = "page";
      new Promise(function (res, rej) {
        return _require.default(["../../../../simple-tooltip/simple-tooltip.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../../../../../@polymer/paper-icon-button/paper-icon-button.js"], res, rej);
      });
      return _this;
    } // render function


    babelHelpers.createClass(SitePrintButton, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject2_9b0a7c90c96f11ea8be5e1d5fe7ec787(), this.type, this.icon, this.print, this.label, this.disabled, this.editMode ? "edit-mode-active" : "", this.type, this.position, this.label);
      }
    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        if (babelHelpers.get(babelHelpers.getPrototypeOf(SitePrintButton.prototype), "updated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(SitePrintButton.prototype), "updated", this).call(this, changedProperties);
        }

        changedProperties.forEach(function (oldValue, propName) {
          if (propName == "type") {
            _this2._typeChanged(_this2[propName], oldValue);
          }

          if (propName === "editMode") {
            if (_this2[propName]) {
              _this2.setAttribute("part", "edit-mode-active");
            } else {
              _this2.removeAttribute("part");
            }
          }
        });
      }
      /**
       * Props
       */

    }, {
      key: "_typeChanged",

      /**
       * ensure we have a label set per type if its empty
       */
      value: function _typeChanged(newValue) {
        if (babelHelpers.typeof(this.label) === (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined))) {
          if (newValue === "page" || newValue === "site") {
            this.label = "Print ".concat(newValue);
          } else {
            this.label = "Print outline";
          }
        }
      }
      /**
       * Print the type in question
       */

    }, {
      key: "print",
      value: function () {
        var _print = babelHelpers.asyncToGenerator(
        /*#__PURE__*/
        regeneratorRuntime.mark(function _callee4(e) {
          var type, content, i, currentdate, datetime, element, print, base;
          return regeneratorRuntime.wrap(function _callee4$(_context4) {
            while (1) {
              switch (_context4.prev = _context4.next) {
                case 0:
                  // now dynamic import the footer so we don't bloat all other page loads
                  new Promise(function (res, rej) {
                    return _require.default(["../layout/site-footer.js"], res, rej);
                  });
                  type = this.type;
                  content = "";

                  if (!(type === "page")) {
                    _context4.next = 7;
                    break;
                  }

                  // oh there you are
                  content = "\n      <h1>".concat(_haxcmsSiteStore.store.activeItem.title, "</h1>\n      <div>").concat(_haxcmsSiteStore.store.activeItemContent, "</div>");
                  _context4.next = 17;
                  break;

                case 7:
                  if (!(type === "parent")) {
                    _context4.next = 11;
                    break;
                  }

                  return _context4.delegateYield(
                  /*#__PURE__*/
                  regeneratorRuntime.mark(function _callee() {
                    var result;
                    return regeneratorRuntime.wrap(function _callee$(_context) {
                      while (1) {
                        switch (_context.prev = _context.next) {
                          case 0:
                            // everything from the parent of this page, down
                            result = _haxcmsSiteStore.store.computeItems(1, 100, _haxcmsSiteStore.store.activeId, "parent", _haxcmsSiteStore.store.routerManifest, true);
                            _context.t0 = regeneratorRuntime.keys(result);

                          case 2:
                            if ((_context.t1 = _context.t0()).done) {
                              _context.next = 10;
                              break;
                            }

                            i = _context.t1.value;
                            _context.t2 = content;
                            _context.next = 7;
                            return fetch(result[i].location).then(function (response) {
                              return response.text();
                            }).then(function (response) {
                              var indent = result[i].indent + 1;

                              if (indent > 6) {
                                indent = 6;
                              }

                              return "<h".concat(indent, ">").concat(result[i].title, "</h").concat(indent, ">\n              ").concat(response);
                            });

                          case 7:
                            content = _context.t2 += _context.sent;
                            _context.next = 2;
                            break;

                          case 10:
                          case "end":
                            return _context.stop();
                        }
                      }
                    }, _callee);
                  })(), "t0", 9);

                case 9:
                  _context4.next = 17;
                  break;

                case 11:
                  if (!(type === "ancestor")) {
                    _context4.next = 15;
                    break;
                  }

                  return _context4.delegateYield(
                  /*#__PURE__*/
                  regeneratorRuntime.mark(function _callee2() {
                    var result;
                    return regeneratorRuntime.wrap(function _callee2$(_context2) {
                      while (1) {
                        switch (_context2.prev = _context2.next) {
                          case 0:
                            // everything from highest parent
                            result = _haxcmsSiteStore.store.computeItems(1, 100, _haxcmsSiteStore.store.activeId, "ancestor", _haxcmsSiteStore.store.routerManifest, true);
                            _context2.t0 = regeneratorRuntime.keys(result);

                          case 2:
                            if ((_context2.t1 = _context2.t0()).done) {
                              _context2.next = 10;
                              break;
                            }

                            i = _context2.t1.value;
                            _context2.t2 = content;
                            _context2.next = 7;
                            return fetch(result[i].location).then(function (response) {
                              return response.text();
                            }).then(function (response) {
                              var indent = result[i].indent + 1;

                              if (indent > 6) {
                                indent = 6;
                              }

                              return "<h".concat(indent, ">").concat(result[i].title, "</h").concat(indent, ">\n              ").concat(response);
                            });

                          case 7:
                            content = _context2.t2 += _context2.sent;
                            _context2.next = 2;
                            break;

                          case 10:
                          case "end":
                            return _context2.stop();
                        }
                      }
                    }, _callee2);
                  })(), "t1", 13);

                case 13:
                  _context4.next = 17;
                  break;

                case 15:
                  if (!(type === "site")) {
                    _context4.next = 17;
                    break;
                  }

                  return _context4.delegateYield(
                  /*#__PURE__*/
                  regeneratorRuntime.mark(function _callee3() {
                    var result;
                    return regeneratorRuntime.wrap(function _callee3$(_context3) {
                      while (1) {
                        switch (_context3.prev = _context3.next) {
                          case 0:
                            result = _haxcmsSiteStore.store.routerManifest.items;
                            _context3.t0 = regeneratorRuntime.keys(result);

                          case 2:
                            if ((_context3.t1 = _context3.t0()).done) {
                              _context3.next = 10;
                              break;
                            }

                            i = _context3.t1.value;
                            _context3.t2 = content;
                            _context3.next = 7;
                            return fetch(result[i].location).then(function (response) {
                              return response.text();
                            }).then(function (response) {
                              var indent = result[i].indent + 1;

                              if (indent > 6) {
                                indent = 6;
                              }

                              return "<h".concat(indent, ">").concat(result[i].title, "</h").concat(indent, ">\n              ").concat(response);
                            });

                          case 7:
                            content = _context3.t2 += _context3.sent;
                            _context3.next = 2;
                            break;

                          case 10:
                          case "end":
                            return _context3.stop();
                        }
                      }
                    }, _callee3);
                  })(), "t2", 17);

                case 17:
                  // get current date
                  currentdate = new Date();
                  datetime = "Printed on: " + currentdate.getDate() + "/" + (currentdate.getMonth() + 1) + "/" + currentdate.getFullYear() + " at " + currentdate.getHours() + ":" + currentdate.getMinutes() + ":" + currentdate.getSeconds();
                  element = document.createElement("div");
                  element.innerHTML = "\n<style>\n  @media print {\n    body {\n      padding: 0 15px 5px;\n      color: #000;\n      background-color: #ffffff;\n      border-top: 1px solid #aaa;\n    }\n  }\n</style>\n<h1>".concat(_haxcmsSiteStore.store.siteTitle, "</h1>\n<site-footer></site-footer>\n<p>").concat(datetime, "</p>\n").concat(content); // From https://stackoverflow.com/questions/1071962/how-do-i-print-part-of-a-rendered-html-page-in-javascript#answer-1072151

                  print = window.open("", "", "left=0,top=0,width=800,height=800,toolbar=0,scrollbars=0,status =0"); // ensure base tag moves with it if set

                  if (document.head.getElementsByTagName("base")) {
                    base = document.createElement("base");
                    base.href = document.head.getElementsByTagName("base")[0].getAttribute("href");
                    print.document.head.appendChild(base);
                  }

                  print.document.body.appendChild(element);
                  print.document.close();
                  print.focus();
                  print.print();
                  print.close();

                case 28:
                case "end":
                  return _context4.stop();
              }
            }
          }, _callee4, this);
        }));

        function print(_x) {
          return _print.apply(this, arguments);
        }

        return print;
      }()
    }], [{
      key: "properties",
      get: function get() {
        return _objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(SitePrintButton), "properties", this), {
          /**
           * icon
           */
          icon: {
            type: String
          },
          disabled: {
            type: Boolean,
            reflect: true
          },

          /**
           * label for the button
           */
          label: {
            type: String
          },

          /**
           * label for the button
           */
          position: {
            type: String
          },

          /**
           * How much do you want to print right now
           */
          type: {
            type: String
          }
        });
      }
    }]);
    return SitePrintButton;
  }((0, _HAXCMSThemeParts2.HAXCMSThemeParts)(_litElement.LitElement));

  _exports.SitePrintButton = SitePrintButton;
  window.customElements.define(SitePrintButton.tag, SitePrintButton);
});