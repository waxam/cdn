define(["exports", "../../../../../lit/index.js", "../../core/utils/HAXCMSThemeParts.js", "../../core/utils/HAXCMSI18NMixin.js", "../../../../simple-icon/lib/simple-icons.js", "../../../../simple-icon/lib/simple-icon-button-lite.js", "../../../../simple-tooltip/simple-tooltip.js"], function (_exports, _index, _HAXCMSThemeParts, _HAXCMSI18NMixin2, _simpleIcons, _simpleIconButtonLite, _simpleTooltip) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SitePrintButton = void 0;

  var _templateObject_63b5c720ce4711ecb13bcf602138080f, _templateObject2_63b5c720ce4711ecb13bcf602138080f;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `site-print-button`
   * `Dynamic print button to request and generate what to print`
   *
  
   */
  var SitePrintButton = /*#__PURE__*/function (_HAXCMSI18NMixin) {
    babelHelpers.inherits(SitePrintButton, _HAXCMSI18NMixin);

    var _super = _createSuper(SitePrintButton);

    function SitePrintButton() {
      var _this;

      babelHelpers.classCallCheck(this, SitePrintButton);
      _this = _super.call(this);
      _this.t = {
        printPage: "Print page",
        printSite: "Print site",
        printOutline: "Print outline"
      };
      _this.icon = "icons:print";
      _this.position = "bottom";
      _this.type = "page";
      return _this;
    } // render function


    babelHelpers.createClass(SitePrintButton, [{
      key: "render",
      value: function render() {
        return (0, _index.html)(_templateObject_63b5c720ce4711ecb13bcf602138080f || (_templateObject_63b5c720ce4711ecb13bcf602138080f = babelHelpers.taggedTemplateLiteral(["\n      <simple-icon-button-lite\n        .id=\"btn", "\"\n        icon=\"", "\"\n        @click=\"", "\"\n        label=\"", "\"\n        ?disabled=\"", "\"\n      ></simple-icon-button-lite>\n      <simple-tooltip\n        .for=\"btn", "\"\n        position=\"", "\"\n        offset=\"14\"\n      >\n        ", "\n      </simple-tooltip>\n    "])), this.type, this.icon, this.print, this.makeLabel(this.type, this.t), this.disabled, this.type, this.position, this.makeLabel(this.type, this.t));
      }
    }, {
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        if (babelHelpers.get(babelHelpers.getPrototypeOf(SitePrintButton.prototype), "updated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(SitePrintButton.prototype), "updated", this).call(this, changedProperties);
        }

        changedProperties.forEach(function (oldValue, propName) {
          if (propName === "editMode") {
            if (_this2[propName]) {
              _this2.setAttribute("part", "edit-mode-active");
            } else {
              _this2.removeAttribute("part");
            }
          }
        });
      }
      /**
       * Props
       */

    }, {
      key: "makeLabel",
      value:
      /**
       * ensure we have a label set per type if its empty
       */
      function makeLabel(type, t) {
        switch (type) {
          case "page":
            return "".concat(t.printPage);
            break;

          case "site":
            return "".concat(t.printSite);
            break;

          default:
            return "".concat(t.printOutline);
            break;
        }
      }
      /**
       * Print the type in question
       */

    }, {
      key: "print",
      value: function () {
        var _print = babelHelpers.asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(e) {
          return regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  window.open(window.location.href + "?format=print-" + this.type, "", "left=0,top=0,width=800,height=800,toolbar=0,scrollbars=0,status=0,noopener=1,noreferrer=1");

                case 1:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee, this);
        }));

        function print(_x) {
          return _print.apply(this, arguments);
        }

        return print;
      }()
    }], [{
      key: "styles",
      get:
      /**
       * LitElement constructable styles enhancement
       */
      function get() {
        return [].concat(babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(SitePrintButton), "styles", this)), [(0, _index.css)(_templateObject2_63b5c720ce4711ecb13bcf602138080f || (_templateObject2_63b5c720ce4711ecb13bcf602138080f = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: inline-flex;\n          text-rendering: optimizelegibility;\n          position: relative;\n          color: var(--site-print-button-color, inherit);\n        }\n        simple-icon-button {\n          color: var(--site-print-button-color, inherit);\n        }\n        simple-tooltip {\n          --simple-tooltip-background: var(\n            --haxcms-tooltip-background-color,\n            #000000\n          );\n          --simple-tooltip-opacity: 1;\n          --simple-tooltip-text-color: var(--haxcms-tooltip-color, #ffffff);\n          --simple-tooltip-delay-in: 0;\n          --simple-tooltip-border-radius: 0;\n        }\n      "])))]);
      }
      /**
       * Store the tag name to make it easier to obtain directly.
       */

    }, {
      key: "tag",
      get: function get() {
        return "site-print-button";
      }
    }, {
      key: "properties",
      get: function get() {
        return _objectSpread(_objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(SitePrintButton), "properties", this)), {}, {
          /**
           * icon
           */
          icon: {
            type: String
          },
          disabled: {
            type: Boolean,
            reflect: true
          },

          /**
           * label for the button
           */
          label: {
            type: String
          },

          /**
           * label for the button
           */
          position: {
            type: String
          },

          /**
           * How much do you want to print right now
           */
          type: {
            type: String
          }
        });
      }
    }]);
    return SitePrintButton;
  }((0, _HAXCMSI18NMixin2.HAXCMSI18NMixin)((0, _HAXCMSThemeParts.HAXCMSThemeParts)(_index.LitElement)));

  _exports.SitePrintButton = SitePrintButton;
  window.customElements.define(SitePrintButton.tag, SitePrintButton);
});