define(["exports", "require", "../../../../../lit-element/lit-element.js", "../../../../simple-icon/simple-icon.js", "../../../../simple-icon/lib/simple-icons.js", "../../../../simple-icon/lib/simple-icon-button.js"], function (_exports, _require, _litElement, _simpleIcon, _simpleIcons, _simpleIconButton) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SiteDrawer = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  function _templateObject2_9dcbf1d0552d11ebb4022f4768b4777e() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <simple-icon-button\n        icon=\"", "\"\n        @click=\"", "\"\n      ></simple-icon-button>\n      <app-drawer align=\"", "\">\n        <div class=\"drawer-contents\"><slot></slot></div>\n      </app-drawer>\n    "]);

    _templateObject2_9dcbf1d0552d11ebb4022f4768b4777e = function _templateObject2_9dcbf1d0552d11ebb4022f4768b4777e() {
      return data;
    };

    return data;
  }

  function _templateObject_9dcbf1d0552d11ebb4022f4768b4777e() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        .drawer-contents {\n          height: 100%;\n          overflow-y: auto;\n          padding: 16px;\n        }\n        simple-icon-button {\n          color: var(--site-drawer-button-color, #ffffff);\n        }\n        app-drawer {\n          background-color: #eeeeee;\n          --app-drawer-scrim-background: #eeeeee;\n          --app-drawer-width: var(--site-drawer-width, 300px);\n        }\n      "]);

    _templateObject_9dcbf1d0552d11ebb4022f4768b4777e = function _templateObject_9dcbf1d0552d11ebb4022f4768b4777e() {
      return data;
    };

    return data;
  }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `site-drawer`
   * `Basic off canvas drawer element`
   *
  
   * @demo demo/index.html
   */
  var SiteDrawer = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(SiteDrawer, _LitElement);

    var _super = _createSuper(SiteDrawer);

    babelHelpers.createClass(SiteDrawer, null, [{
      key: "styles",

      /**
       * LitElement constructable styles enhancement
       */
      get: function get() {
        return [(0, _litElement.css)(_templateObject_9dcbf1d0552d11ebb4022f4768b4777e())];
      }
      /**
       * HTMLElement
       */

    }]);

    function SiteDrawer() {
      var _this;

      babelHelpers.classCallCheck(this, SiteDrawer);
      _this = _super.call(this);
      _this.align = "right";
      _this.icon = "menu";
      setTimeout(function () {
        new Promise(function (res, rej) {
          return _require.default(["../../../../../@polymer/app-layout/app-drawer/app-drawer.js"], res, rej);
        });
      }, 0);
      return _this;
    }
    /**
     * LitElement life cycle - render
     */


    babelHelpers.createClass(SiteDrawer, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject2_9dcbf1d0552d11ebb4022f4768b4777e(), this.icon, this.toggle, this.align);
      }
    }, {
      key: "toggle",
      value: function toggle(e) {
        this.shadowRoot.querySelector("app-drawer").toggle();
      }
    }], [{
      key: "tag",
      get: function get() {
        return "site-drawer";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          align: {
            type: String
          },
          icon: {
            type: String
          }
        };
      }
    }]);
    return SiteDrawer;
  }(_litElement.LitElement);

  _exports.SiteDrawer = SiteDrawer;
  window.customElements.define(SiteDrawer.tag, SiteDrawer);
});