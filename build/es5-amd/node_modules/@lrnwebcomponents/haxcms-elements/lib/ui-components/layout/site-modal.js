define(["exports", "require", "../../../../../lit-element/lit-element.js", "../../../../../@polymer/polymer/lib/utils/flattened-nodes-observer.js", "../../../../simple-modal/lib/simple-modal-template.js", "../../../../../@polymer/paper-icon-button/paper-icon-button.js", "../../../../../@polymer/polymer/lib/elements/custom-style.js"], function (_exports, _require, _litElement, _flattenedNodesObserver, _simpleModalTemplate, _paperIconButton, _customStyle) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SiteModal = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  function _templateObject2_fd12b6f02c1c11eaacb4bf54e86db688() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <custom-style>\n        <style>\n          paper-tooltip {\n            @apply --site-modal-tooltip;\n          }\n          simple-modal-template {\n            @apply --site-modal-modal;\n          }\n        </style>\n      </custom-style>\n      <paper-icon-button\n        ?disabled=\"", "\"\n        id=\"btn\"\n        @click=\"", "\"\n        .icon=\"", "\"\n        .title=\"", "\"\n      ></paper-icon-button>\n      <paper-tooltip for=\"btn\" .position=\"", "\" offset=\"14\">\n        ", "\n      </paper-tooltip>\n      <simple-modal-template id=\"smt\" .title=\"", "\">\n        <div id=\"content\" slot=\"content\"></div>\n      </simple-modal-template>\n    "]);

    _templateObject2_fd12b6f02c1c11eaacb4bf54e86db688 = function _templateObject2_fd12b6f02c1c11eaacb4bf54e86db688() {
      return data;
    };

    return data;
  }

  function _templateObject_fd12b6f02c1c11eaacb4bf54e86db688() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n        }\n        paper-icon-button {\n          color: var(--site-modal-icon-color);\n        }\n      "]);

    _templateObject_fd12b6f02c1c11eaacb4bf54e86db688 = function _templateObject_fd12b6f02c1c11eaacb4bf54e86db688() {
      return data;
    };

    return data;
  }

  /**
   * `site-modal`
   * `A basic site dialog`
   *
  
   * @polymer
   * @demo demo/index.html
   */
  var SiteModal =
  /*#__PURE__*/
  function (_LitElement) {
    babelHelpers.inherits(SiteModal, _LitElement);
    babelHelpers.createClass(SiteModal, null, [{
      key: "styles",

      /**
       * LitElement constructable styles enhancement
       */
      get: function get() {
        return [(0, _litElement.css)(_templateObject_fd12b6f02c1c11eaacb4bf54e86db688())];
      }
      /**
       * Store the tag name to make it easier to obtain directly.
       */

    }, {
      key: "tag",
      get: function get() {
        return "site-modal";
      }
    }]);

    function SiteModal() {
      var _this;

      babelHelpers.classCallCheck(this, SiteModal);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(SiteModal).call(this));
      _this.title = "Dialog";
      _this.icon = "icons:menu";
      _this.buttonLabel = "Open dialog";
      _this.position = "bottom";
      new Promise(function (res, rej) {
        return _require.default(["../../../../../@polymer/paper-tooltip/paper-tooltip.js"], res, rej);
      });
      return _this;
    } // render function


    babelHelpers.createClass(SiteModal, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject2_fd12b6f02c1c11eaacb4bf54e86db688(), this.editMode, this.fireEvent, this.icon, this.buttonLabel, this.position, this.buttonLabel, this.title);
      }
      /**
       * Fire an event for things to react to above us; useful for lazy loading
       */

    }, {
      key: "fireEvent",
      value: function fireEvent(e) {
        this.dispatchEvent(new CustomEvent("site-modal-click", {
          detail: {
            value: true
          }
        }));
      }
    }, {
      key: "firstUpdated",
      value: function firstUpdated(changedProperties) {
        this.shadowRoot.querySelector("#smt").associateEvents(this.shadowRoot.querySelector("#btn"));

        var nodes = _flattenedNodesObserver.FlattenedNodesObserver.getFlattenedNodes(this);

        for (var i in nodes) {
          this.shadowRoot.querySelector("#content").appendChild(nodes[i]);
        }
      }
    }], [{
      key: "properties",
      get: function get() {
        return {
          disabled: {
            type: Boolean,
            reflect: true
          },
          title: {
            type: String
          },
          icon: {
            type: String
          },
          buttonLabel: {
            type: String,
            attribute: "button-label"
          },
          position: {
            type: String
          }
        };
      }
    }]);
    return SiteModal;
  }(_litElement.LitElement);

  _exports.SiteModal = SiteModal;
  window.customElements.define(SiteModal.tag, SiteModal);
});