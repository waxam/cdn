define(["exports", "../../../../../@polymer/polymer/polymer-element.js", "../../core/haxcms-site-store.js", "../../../../../mobx/lib/mobx.module.js"], function (_exports, _polymerElement, _haxcmsSiteStore, _mobxModule) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SiteQueryMenuSlice = void 0;

  /**
   * Copyright 2019 The Pennsylvania State University
   * @license Apache-2.0, see License.md for full text.
   */

  /**
   * `site-query-menu-slice`
   * `A slice / 1 level within the hierarchy, via relative parent or deep parent`
   *
   * @customElement
   * @polymer
   * @demo demo/index.html
   */
  var SiteQueryMenuSlice =
  /*#__PURE__*/
  function (_PolymerElement) {
    babelHelpers.inherits(SiteQueryMenuSlice, _PolymerElement);

    function SiteQueryMenuSlice() {
      babelHelpers.classCallCheck(this, SiteQueryMenuSlice);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(SiteQueryMenuSlice).apply(this, arguments));
    }

    babelHelpers.createClass(SiteQueryMenuSlice, [{
      key: "_computeItems",

      /**
       * Compute items leveraging the site query engine
       */
      value: function _computeItems(start, end, parent, dynamicMethodology, _routerManifest, noDynamicLevel) {
        if (_routerManifest) {
          return _haxcmsSiteStore.store.computeItems(start, end, parent, dynamicMethodology, _routerManifest, noDynamicLevel);
        }
      }
    }, {
      key: "connectedCallback",
      value: function connectedCallback() {
        var _this = this;

        babelHelpers.get(babelHelpers.getPrototypeOf(SiteQueryMenuSlice.prototype), "connectedCallback", this).call(this);
        this.__disposer = (0, _mobxModule.autorun)(function () {
          _this._routerManifest = Object.assign({}, (0, _mobxModule.toJS)(_haxcmsSiteStore.store.routerManifest));
        });

        if (!this.fixedId) {
          this.__disposer2 = (0, _mobxModule.autorun)(function () {
            _this.parent = (0, _mobxModule.toJS)(_haxcmsSiteStore.store.activeId);
          });
        }
      }
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        this.__disposer();

        if (!this.fixedId) {
          this.__disposer2();
        }

        babelHelpers.get(babelHelpers.getPrototypeOf(SiteQueryMenuSlice.prototype), "disconnectedCallback", this).call(this);
      }
    }], [{
      key: "tag",

      /**
       * Store the tag name to make it easier to obtain directly.
       * @notice function name must be here for tooling to operate correctly
       */
      get: function get() {
        return "site-query-menu-slice";
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * starting level for the menu items
           */
          start: {
            type: Number,
            value: 1
          },

          /**
           * ending level for the menu items
           */
          end: {
            type: Number,
            value: 1000
          },

          /**
           * parent for the menu id
           */
          parent: {
            type: String
          },

          /**
           * How we should obtain the parent who's children we should show
           * options are active, parent, or ancestor
           */
          dynamicMethodology: {
            type: String,
            value: "active"
          },

          /**
           * Use this boolean to force this to fix to 1 parent
           * Otherwise it will dynamically update (default behavior)
           */
          fixedId: {
            type: Boolean,
            value: false
          },

          /**
           * Allow disabling the dynamic leveling
           */
          noDynamicLevel: {
            type: Boolean,
            value: false
          },

          /**
           * Results which can be binded to something else
           */
          result: {
            type: Array,
            notify: true,
            computed: "_computeItems(start, end, parent, dynamicMethodology, _routerManifest, noDynamicLevel)"
          },
          _routerManifest: {
            type: Object
          }
        };
      }
    }]);
    return SiteQueryMenuSlice;
  }(_polymerElement.PolymerElement);

  _exports.SiteQueryMenuSlice = SiteQueryMenuSlice;
  window.customElements.define(SiteQueryMenuSlice.tag, SiteQueryMenuSlice);
});