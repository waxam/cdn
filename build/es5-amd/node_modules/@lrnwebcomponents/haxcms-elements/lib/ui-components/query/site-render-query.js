define(["exports", "../../../../../@polymer/polymer/polymer-element.js", "../../../../../@polymer/polymer/lib/mixins/mutable-data.js", "../../../../../@polymer/iron-list/iron-list.js", "./site-query.js"], function (_exports, _polymerElement, _mutableData, _ironList, _siteQuery) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SiteRenderQuery = void 0;

  function _templateObject_6b297d40dbdc11e9bcafdb98156fc1d6() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n        }\n        iron-list {\n          @apply --site-query-iron-list;\n        }\n      </style>\n      <site-query\n        result=\"{{result}}\"\n        sort=\"[[sort]]\"\n        conditions=\"[[conditions]]\"\n      ></site-query>\n      <iron-list id=\"list\" items=\"[[__items]]\" grid=\"[[grid]]\" mutable-data>\n        <slot></slot>\n      </iron-list>\n    "]);

    _templateObject_6b297d40dbdc11e9bcafdb98156fc1d6 = function _templateObject_6b297d40dbdc11e9bcafdb98156fc1d6() {
      return data;
    };

    return data;
  }

  /**
   * `site-render-query`
   * `Render a query result as an iron-list`
   *
   * @customElement
   * @polymer
   * @demo demo/index.html
   */
  var SiteRenderQuery =
  /*#__PURE__*/
  function (_MutableData) {
    babelHelpers.inherits(SiteRenderQuery, _MutableData);

    function SiteRenderQuery() {
      babelHelpers.classCallCheck(this, SiteRenderQuery);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(SiteRenderQuery).apply(this, arguments));
    }

    babelHelpers.createClass(SiteRenderQuery, [{
      key: "_resultChanged",
      value: function _resultChanged(newValue) {
        this.set("__items", newValue);
        this.notifyPath("__items");
      }
    }], [{
      key: "tag",

      /**
       * Store the tag name to make it easier to obtain directly.
       * @notice function name must be here for tooling to operate correctly
       */
      get: function get() {
        return "site-render-query";
      } // render function, this is non-visual

    }, {
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_6b297d40dbdc11e9bcafdb98156fc1d6());
      }
      /**
       * Props
       */

    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * Conditions that can be used to slice the data differently in the manifest
           */
          conditions: {
            type: Object,
            value: {}
          },

          /**
           * Establish the order items should be displayed in
           */
          sort: {
            type: Object,
            value: {}
          },

          /**
           * iron-list helper for this 1 flag
           */
          grid: {
            type: Boolean,
            value: false
          },
          result: {
            type: Array,
            notify: true,
            observer: "_resultChanged"
          },
          __items: {
            type: Array,
            value: []
          }
        };
      }
    }]);
    return SiteRenderQuery;
  }((0, _mutableData.MutableData)(_polymerElement.PolymerElement));

  _exports.SiteRenderQuery = SiteRenderQuery;
  window.customElements.define(SiteRenderQuery.tag, SiteRenderQuery);
});