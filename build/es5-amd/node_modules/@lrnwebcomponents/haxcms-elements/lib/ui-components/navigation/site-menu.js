define(["exports", "../../../../../lit-element/lit-element.js", "../../core/haxcms-site-store.js", "../../../../../mobx/lib/mobx.module.js", "../../../../map-menu/map-menu.js", "../../core/utils/HAXCMSThemeParts.js"], function (_exports, _litElement, _haxcmsSiteStore, _mobxModule, _mapMenu, _HAXCMSThemeParts2) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SiteMenu = void 0;

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _templateObject2_745a29f0d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <map-menu\n        .part=\"", "\"\n        .manifest=\"", "\"\n        ?active-indicator=\"", "\"\n        ?auto-scroll=\"", "\"\n        @active-item=\"", "\"\n      ></map-menu>\n    "]);

    _templateObject2_745a29f0d34d11ea880ba1e93364c49c = function _templateObject2_745a29f0d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  function _templateObject_745a29f0d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n          height: 100vh;\n        }\n        map-menu {\n          padding: var(--site-menu-padding);\n          background-color: var(--site-menu-background-color);\n          color: var(--site-menu-color);\n          --map-menu-active-color: var(--site-menu-active-color);\n          --map-menu-container-padding: var(--site-menu-container-padding);\n          --map-menu-container-background-color: var(\n            --site-menu-container-background-color\n          );\n          --map-menu-container-color: var(--site-menu-container-color);\n          --map-menu-item-active-item-color: var(\n            --site-menu-item-active-item-color\n          );\n          --map-menu-font-size: var(--site-menu-font-size);\n        }\n        map-menu:not(:defined) {\n          display: none;\n        }\n\n        map-menu::-webkit-scrollbar-track {\n          border-radius: 0;\n        }\n        map-menu::-webkit-scrollbar {\n          width: 2px;\n        }\n        map-menu::-webkit-scrollbar-thumb {\n          border-radius: 1px;\n        }\n      "]);

    _templateObject_745a29f0d34d11ea880ba1e93364c49c = function _templateObject_745a29f0d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  /**
   * `site-menu`
   * `Menu hierarchy`
   */
  var SiteMenu =
  /*#__PURE__*/
  function (_HAXCMSThemeParts) {
    babelHelpers.inherits(SiteMenu, _HAXCMSThemeParts);
    babelHelpers.createClass(SiteMenu, null, [{
      key: "styles",

      /**
       * LitElement constructable styles enhancement
       */
      get: function get() {
        return [].concat(babelHelpers.toConsumableArray(babelHelpers.get(babelHelpers.getPrototypeOf(SiteMenu), "styles", this)), [(0, _litElement.css)(_templateObject_745a29f0d34d11ea880ba1e93364c49c())]);
      }
      /**
       * Store the tag name to make it easier to obtain directly.
       */

    }, {
      key: "tag",
      get: function get() {
        return "site-menu";
      }
      /**
       * HTMLElement life cycle
       */

    }]);

    function SiteMenu() {
      var _this;

      babelHelpers.classCallCheck(this, SiteMenu);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(SiteMenu).call(this));
      _this.hideActiveIndicator = false;
      _this.preventAutoScroll = false;
      _this.trackIcon = "";
      _this.__disposer = [];
      (0, _mobxModule.autorun)(function (reaction) {
        _this.routerManifest = Object.assign({}, (0, _mobxModule.toJS)(_haxcmsSiteStore.store.routerManifest));

        _this.__disposer.push(reaction);
      });
      return _this;
    }
    /**
     * LitElement life cycle - render callback
     */


    babelHelpers.createClass(SiteMenu, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject2_745a29f0d34d11ea880ba1e93364c49c(), this.editMode ? "edit-mode-active" : "", this.routerManifest, !this.hideActiveIndicator, !this.preventAutoScroll, this.mapMenuActiveChanged);
      }
    }, {
      key: "firstUpdated",
      value: function firstUpdated(changedProperties) {
        var _this2 = this;

        if (babelHelpers.get(babelHelpers.getPrototypeOf(SiteMenu.prototype), "firstUpdated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(SiteMenu.prototype), "firstUpdated", this).call(this, changedProperties);
        } // executing this here ensures that the timing is correct with highlighting the active item in the menu


        (0, _mobxModule.autorun)(function (reaction) {
          _this2.activeId = (0, _mobxModule.toJS)(_haxcmsSiteStore.store.activeId);

          _this2.__disposer.push(reaction);

          setTimeout(function () {
            _this2.shadowRoot.querySelector("map-menu").selected = _this2.activeId;
          }, 100);
        });
      }
      /**
       * LitElement life cycle - properties definition
       */

    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        for (var i in this.__disposer) {
          this.__disposer[i].dispose();
        }

        babelHelpers.get(babelHelpers.getPrototypeOf(SiteMenu.prototype), "disconnectedCallback", this).call(this);
      }
      /**
       * When map menu changes let's set a track icon internal to it.
       */

    }, {
      key: "mapMenuActiveChanged",
      value: function mapMenuActiveChanged(e) {
        // update the UI directly
        e.detail.trackIcon = this.trackIcon; // now work on the user data object in the theme layer

        var userData = JSON.parse(window.localStorage.getItem("HAXCMSSystemData"));

        if (userData.manifests && babelHelpers.typeof(userData.manifests[this.routerManifest.id]) === (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined))) {
          userData.manifests[this.routerManifest.id] = {
            accessData: {}
          };
        } // edge case when switching rapidly


        if (!userData.manifests[this.routerManifest.id].accessData) {
          userData.manifests[this.routerManifest.id].accessData = {};
        }

        userData.manifests[this.routerManifest.id].accessData[e.detail.id] = {
          timestamp: Math.floor(Date.now() / 1000),
          trackIcon: this.trackIcon
        };

        for (var i in this.routerManifest.items) {
          if (this.routerManifest.items[i].id === e.detail.id) {
            this.routerManifest.items[i].metadata.accessData = userData.manifests[this.routerManifest.id].accessData[e.detail.id];
          }
        } // save this back to the system data


        window.localStorage.setItem("HAXCMSSystemData", JSON.stringify(userData));
      }
    }], [{
      key: "properties",
      get: function get() {
        return _objectSpread({}, babelHelpers.get(babelHelpers.getPrototypeOf(SiteMenu), "properties", this), {
          /**
           * Manifest with router / location enhancements
           */
          routerManifest: {
            type: Object
          },

          /**
           * acitvely selected item
           */
          activeId: {
            type: String,
            attribute: "active-id"
          },

          /**
           * Binding for active indicator and auto scrolling
           */
          hideActiveIndicator: {
            type: Boolean,
            attribute: "hide-active-indicator"
          },

          /**
           * prevent the automatic scrolling when items become active
           */
          preventAutoScroll: {
            type: Boolean,
            attribute: "prevent-auto-scroll"
          },

          /**
           * allow for visualizing the tracking of page requests
           */
          trackIcon: {
            type: String,
            attribute: "track-icon"
          }
        });
      }
    }]);
    return SiteMenu;
  }((0, _HAXCMSThemeParts2.HAXCMSThemeParts)(_litElement.LitElement));

  _exports.SiteMenu = SiteMenu;
  window.customElements.define(SiteMenu.tag, SiteMenu);
});