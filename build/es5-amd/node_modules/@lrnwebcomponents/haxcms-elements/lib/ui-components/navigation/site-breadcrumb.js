define(["exports", "require", "../../../../../lit-element/lit-element.js", "../../core/haxcms-site-store.js", "../../../../../mobx/dist/mobx.esm.js"], function (_exports, _require, _litElement, _haxcmsSiteStore, _mobxEsm) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SiteBreadcrumb = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  function _templateObject2_ae46aa5056b811eb8081cb2f2fa80813() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <div\n        id=\"space\"\n        itemscope\n        itemtype=\"http://data-vocabulary.org/Breadcrumb\"\n      ></div>\n    "]);

    _templateObject2_ae46aa5056b811eb8081cb2f2fa80813 = function _templateObject2_ae46aa5056b811eb8081cb2f2fa80813() {
      return data;
    };

    return data;
  }

  function _templateObject_ae46aa5056b811eb8081cb2f2fa80813() {
    var data = babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n          font-size: 16px;\n          color: var(--site-breadcrumb-color, #383f45);\n        }\n        #space {\n          height: 24px;\n          line-height: 24px;\n        }\n        a {\n          height: 24px;\n          color: var(--site-breadcrumb-color, #383f45);\n          display: inline-flex;\n          line-height: 24px;\n          padding: 0 8px 0 0;\n          text-decoration: var(--site-breadcrumb-text-decoration, underline);\n        }\n        button {\n          margin: 0;\n          padding: 0;\n          height: 24px;\n          min-width: unset;\n          display: inline-flex;\n          text-transform: unset;\n          background-color: transparent;\n          border: none;\n        }\n        button:hover,\n        button:focus,\n        button:active {\n          background-color: var(--site-breadcrumb-hover-bg, transparent);\n          color: var(--site-breadcrumb-hover-color, #222222);\n        }\n        span {\n          margin: 0;\n          padding: 0 8px 0 0;\n          height: 24px;\n          display: inline-flex;\n        }\n        simple-icon {\n          display: inline-flex;\n          --simple-icon-height: 24px;\n          --simple-icon-width: 24px;\n          padding: 0 8px 0 0;\n          color: var(--site-breadcrumb-color, #383f45);\n        }\n      "]);

    _templateObject_ae46aa5056b811eb8081cb2f2fa80813 = function _templateObject_ae46aa5056b811eb8081cb2f2fa80813() {
      return data;
    };

    return data;
  }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * `site-breadcrumb`
   * `A basic breadcrumb of links based on the active state in HAXcms on JSON Outline Schema`
   *
   * @demo demo/index.html
   */
  var SiteBreadcrumb = /*#__PURE__*/function (_LitElement) {
    babelHelpers.inherits(SiteBreadcrumb, _LitElement);

    var _super = _createSuper(SiteBreadcrumb);

    babelHelpers.createClass(SiteBreadcrumb, null, [{
      key: "styles",
      get: function get() {
        return [(0, _litElement.css)(_templateObject_ae46aa5056b811eb8081cb2f2fa80813())];
      }
      /**
       * Store the tag name to make it easier to obtain directly.
       */

    }, {
      key: "tag",
      get: function get() {
        return "site-breadcrumb";
      }
    }]);

    function SiteBreadcrumb() {
      var _this;

      babelHelpers.classCallCheck(this, SiteBreadcrumb);
      _this = _super.call(this);
      _this.__disposer = [];
      new Promise(function (res, rej) {
        return _require.default(["../../../../simple-icon/simple-icon.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../../../../simple-icon/lib/simple-icons.js"], res, rej);
      }); // keep editMode in sync globally

      (0, _mobxEsm.autorun)(function (reaction) {
        _this.manifest = (0, _mobxEsm.toJS)(_haxcmsSiteStore.store.routerManifest);

        _this.__disposer.push(reaction);
      });
      (0, _mobxEsm.autorun)(function (reaction) {
        _this.editMode = (0, _mobxEsm.toJS)(_haxcmsSiteStore.store.editMode);

        _this.__disposer.push(reaction);
      });
      (0, _mobxEsm.autorun)(function (reaction) {
        _this._activeItemChanged((0, _mobxEsm.toJS)(_haxcmsSiteStore.store.activeItem));

        _this.__disposer.push(reaction);
      });
      return _this;
    } // render function


    babelHelpers.createClass(SiteBreadcrumb, [{
      key: "render",
      value: function render() {
        return (0, _litElement.html)(_templateObject2_ae46aa5056b811eb8081cb2f2fa80813());
      }
      /**
       * Notice the change and build
       */

    }, {
      key: "_activeItemChanged",
      value: function _activeItemChanged(active) {
        var _this2 = this;

        var activeItem = active;

        if (activeItem && this.shadowRoot.querySelector("#space")) {
          var items;
          var i;

          (function () {
            // wipe out the slot and rebuild it
            while (_this2.shadowRoot.querySelector("#space").firstChild !== null) {
              _this2.shadowRoot.querySelector("#space").removeChild(_this2.shadowRoot.querySelector("#space").firstChild);
            }

            items = [{
              title: activeItem.title,
              slug: null
            }];
            var itemBuilder = activeItem; // walk back through parent tree

            while (itemBuilder && itemBuilder.parent != null) {
              itemBuilder = _this2.manifest.items.find(function (i) {
                return i.id == itemBuilder.parent;
              }); // double check structure is sound

              if (itemBuilder) {
                items.unshift({
                  title: itemBuilder.title,
                  slug: itemBuilder.slug
                });
              }
            }

            for (i in items) {
              var icon = document.createElement("simple-icon");
              icon.icon = "icons:chevron-right";

              if (items[i].slug != null) {
                var button = document.createElement("button");
                button.innerText = items[i].title;
                button.noink = true; // disable buttons if we ware editing

                if (_this2.editMode) {
                  button.setAttribute("disabled", "disabled");

                  _this2.shadowRoot.querySelector("#space").appendChild(button);
                } else {
                  var link = document.createElement("a");
                  link.setAttribute("href", items[i].slug);
                  link.setAttribute("tabindex", "-1");
                  link.setAttribute("itemprop", "url");
                  link.appendChild(button);

                  _this2.shadowRoot.querySelector("#space").appendChild(link);
                }

                _this2.shadowRoot.querySelector("#space").appendChild(icon);
              } else {
                var span = document.createElement("span");
                span.innerText = items[i].title;

                _this2.shadowRoot.querySelector("#space").appendChild(span);
              }
            }
          })();
        }
      }
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        for (var i in this.__disposer) {
          this.__disposer[i].dispose();
        }

        babelHelpers.get(babelHelpers.getPrototypeOf(SiteBreadcrumb.prototype), "disconnectedCallback", this).call(this);
      }
    }]);
    return SiteBreadcrumb;
  }(_litElement.LitElement);

  _exports.SiteBreadcrumb = SiteBreadcrumb;
  window.customElements.define(SiteBreadcrumb.tag, SiteBreadcrumb);
});