define(["exports", "../../../../../@polymer/polymer/polymer-element.js", "../../core/haxcms-site-store.js", "../../../../../mobx/lib/mobx.module.js"], function (_exports, _polymerElement, _haxcmsSiteStore, _mobxModule) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SiteDotIndicator = void 0;

  function _templateObject_895804c0b46e11e9978b67ee5ebb8bc8() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n          --site-dot-indicator-color: white;\n        }\n        :host([sticky=\"left\"]) {\n          position: fixed;\n          left: 8px;\n          z-index: 1000;\n          top: 25vh;\n        }\n        :host([sticky=\"right\"]) {\n          position: fixed;\n          right: 8px;\n          z-index: 1000;\n          top: 25vh;\n        }\n        :host([sticky=\"left\"]) ol,\n        :host([sticky=\"right\"]) ol {\n          display: grid;\n        }\n        ol {\n          padding-left: 0;\n          margin-left: 0;\n        }\n        li {\n          transition: 0.3s all ease-in-out;\n          display: inline-block;\n          width: 10px;\n          height: 10px;\n          margin: 2px;\n          text-indent: -999px;\n          cursor: pointer;\n          background-color: rgba(0, 0, 0, 0.1);\n          border: 1px solid var(--site-dot-indicator-color);\n          border-radius: 10px;\n        }\n        a {\n          width: 12px;\n          height: 12px;\n          display: block;\n          margin: 0;\n          padding: 0;\n        }\n        .active {\n          width: 12px;\n          height: 12px;\n          margin: 1px;\n          background-color: var(--site-dot-indicator-color);\n        }\n      </style>\n      <ol id=\"list\"></ol>\n    "]);

    _templateObject_895804c0b46e11e9978b67ee5ebb8bc8 = function _templateObject_895804c0b46e11e9978b67ee5ebb8bc8() {
      return data;
    };

    return data;
  }

  /**
   * `site-dot-indicator`
   * `list of items based on manifest`
   *
   * @customElement
   * @polymer
   * @demo demo/index.html
   */
  var SiteDotIndicator =
  /*#__PURE__*/
  function (_PolymerElement) {
    babelHelpers.inherits(SiteDotIndicator, _PolymerElement);

    function SiteDotIndicator() {
      babelHelpers.classCallCheck(this, SiteDotIndicator);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(SiteDotIndicator).apply(this, arguments));
    }

    babelHelpers.createClass(SiteDotIndicator, [{
      key: "_activeIdChanged",
      value: function _activeIdChanged(newValue, oldValue) {
        if (newValue) {
          var tmp = this.shadowRoot.querySelector('[data-item="' + newValue + '"');

          if (tmp) {
            tmp.classList.add("active");
          }

          if (oldValue) {
            var _tmp = this.shadowRoot.querySelector('[data-item="' + oldValue + '"');

            if (_tmp) {
              _tmp.classList.remove("active");
            }
          }
        }
      }
    }, {
      key: "_routerManifestChanged",
      value: function _routerManifestChanged(routerManifest) {
        while (this.$.list.firstChild !== null) {
          this.$.list.removeChild(this.$.list.firstChild);
        }

        for (var i in routerManifest.items) {
          var li = document.createElement("li");
          li.setAttribute("data-item", routerManifest.items[i].id);
          li.setAttribute("title", routerManifest.items[i].title);

          if (this.activeId === routerManifest.items[i].id) {
            li.classList.add("active");
          }

          var link = document.createElement("a");
          link.href = routerManifest.items[i].location;
          li.appendChild(link);
          this.$.list.appendChild(li);
        }
      }
    }, {
      key: "connectedCallback",
      value: function connectedCallback() {
        var _this = this;

        babelHelpers.get(babelHelpers.getPrototypeOf(SiteDotIndicator.prototype), "connectedCallback", this).call(this);
        this.__disposer = (0, _mobxModule.autorun)(function () {
          _this.routerManifest = (0, _mobxModule.toJS)(_haxcmsSiteStore.store.routerManifest);
        });
        this.__disposer2 = (0, _mobxModule.autorun)(function () {
          _this.activeId = (0, _mobxModule.toJS)(_haxcmsSiteStore.store.activeId);
        });

        if (this.scrollOnActive) {
          this.$.list.addEventListener("click", function () {
            _this.parentElement.querySelector("#" + _this.activeId).scrollIntoView({
              behavior: "smooth",
              block: "end",
              inline: "nearest"
            });
          });
        }
      }
    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        var _this2 = this;

        this.__disposer();

        this.__disposer2();

        if (this.scrollOnActive) {
          this.$.list.removeEventListener("click", function () {
            _this2.parentElement.querySelector("#" + _this2.activeId).scrollIntoView({
              behavior: "smooth",
              block: "end",
              inline: "nearest"
            });
          });
        }

        babelHelpers.get(babelHelpers.getPrototypeOf(SiteDotIndicator.prototype), "disconnectedCallback", this).call(this);
      }
    }], [{
      key: "tag",

      /**
       * Store the tag name to make it easier to obtain directly.
       * @notice function name must be here for tooling to operate correctly
       */
      get: function get() {
        return "site-dot-indicator";
      } // render function

    }, {
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_895804c0b46e11e9978b67ee5ebb8bc8());
      }
      /**
       * Props
       */

    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * acitvely selected item
           */
          activeId: {
            type: String,
            observer: "_activeIdChanged"
          },
          routerManifest: {
            type: Object,
            observer: "_routerManifestChanged"
          },
          sticky: {
            type: String,
            reflectToAttribute: true
          },
          scrollOnActive: {
            type: Boolean,
            value: false
          }
        };
      }
    }]);
    return SiteDotIndicator;
  }(_polymerElement.PolymerElement);

  _exports.SiteDotIndicator = SiteDotIndicator;
  window.customElements.define(SiteDotIndicator.tag, SiteDotIndicator);
});