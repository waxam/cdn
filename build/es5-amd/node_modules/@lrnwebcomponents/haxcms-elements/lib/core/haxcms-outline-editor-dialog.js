define(["exports","require","../../../../@polymer/polymer/polymer-element.js","../../../../@polymer/polymer/lib/utils/render-status.js","./haxcms-site-store.js","../../../../mobx/lib/mobx.module.js","../../../json-outline-schema/json-outline-schema.js","../../../json-editor/json-editor.js","../../../editable-outline/editable-outline.js"],function(_exports,_require,_polymerElement,_renderStatus,_haxcmsSiteStore,_mobxModule,_jsonOutlineSchema,_jsonEditor,_editableOutline){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.HAXCMSOutlineEditorDialog=void 0;_require=babelHelpers.interopRequireWildcard(_require);function _templateObject_c2ad66b07c0711e98a2471d74bf08c91(){var data=babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n          height: 60vh;\n          min-width: 50vw;\n        }\n        .buttons {\n          position: absolute;\n          bottom: 0;\n          z-index: 1000000;\n          background-color: var(--simple-modal-titlebar-background, #ddd);\n          left: 0;\n          right: 0;\n        }\n        editable-outline:not(:defined),\n        json-editor:not(:defined),\n        paper-button:not(:defined) {\n          display: none;\n        }\n        #toggle {\n          float: right;\n          text-transform: unset;\n        }\n        editable-outline,\n        json-editor {\n          margin-bottom: 32px;\n        }\n      </style>\n      <editable-outline\n        id=\"outline\"\n        edit-mode\n        hidden$=\"[[viewMode]]\"\n        items=\"[[manifestItems]]\"\n      ></editable-outline>\n      <json-editor\n        id=\"editor\"\n        label=\"JSON Outline Schema items\"\n        value=\"[[manifestItemsStatic]]\"\n        hidden$=\"[[!viewMode]]\"\n      ></json-editor>\n      <div class=\"buttons\">\n        <paper-button dialog-confirm on-tap=\"_saveTap\">Save</paper-button>\n        <paper-button dialog-dismiss>Cancel</paper-button>\n        <paper-button id=\"toggle\" on-tap=\"toggleView\"\n          ><iron-icon icon=\"[[_viewIcon]]\"></iron-icon\n          >[[viewLabel]]</paper-button\n        >\n      </div>\n    "]);_templateObject_c2ad66b07c0711e98a2471d74bf08c91=function _templateObject_c2ad66b07c0711e98a2471d74bf08c91(){return data};return data}/**
 * `haxcms-outline-editor-dialog`
 * `Dialog for presenting an editable outline`
 *
 * @demo demo/index.html
 *
 * @microcopy - the mental model for this element
 */var HAXCMSOutlineEditorDialog=/*#__PURE__*/function(_PolymerElement){babelHelpers.inherits(HAXCMSOutlineEditorDialog,_PolymerElement);babelHelpers.createClass(HAXCMSOutlineEditorDialog,null,[{key:"tag",/**
   * Store the tag name to make it easier to obtain directly.
   * @notice function name must be here for tooling to operate correctly
   */get:function get(){return"haxcms-outline-editor-dialog"}}]);function HAXCMSOutlineEditorDialog(){var _this;babelHelpers.classCallCheck(this,HAXCMSOutlineEditorDialog);_this=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(HAXCMSOutlineEditorDialog).call(this));new Promise(function(res,rej){return _require.default(["../../../../@polymer/paper-button/paper-button.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../../../@polymer/iron-icon/iron-icon.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../../../@polymer/iron-icons/iron-icons.js"],res,rej)});return _this}// render function
babelHelpers.createClass(HAXCMSOutlineEditorDialog,[{key:"_manifestItemsChanged",value:function _manifestItemsChanged(newValue){if(newValue){window.JSONOutlineSchema.requestAvailability().items=newValue;this.manifestItemsStatic=JSON.stringify(newValue,null,2)}}},{key:"ready",value:function ready(){babelHelpers.get(babelHelpers.getPrototypeOf(HAXCMSOutlineEditorDialog.prototype),"ready",this).call(this);(0,_renderStatus.afterNextRender)(this,function(){var _this2=this;this.$.editor.addEventListener("current-data-changed",function(e){if(e.detail.value){_this2.set("manifestItems",e.detail.value);_this2.$.outline.importJsonOutlineSchemaItems()}})})}/**
   * attached life cycle
   */},{key:"connectedCallback",value:function connectedCallback(){var _this3=this;babelHelpers.get(babelHelpers.getPrototypeOf(HAXCMSOutlineEditorDialog.prototype),"connectedCallback",this).call(this);this.__disposer=[];(0,_mobxModule.autorun)(function(reaction){setTimeout(function(){_this3.manifestItems=Object.assign([],(0,_mobxModule.toJS)(_haxcmsSiteStore.store.manifest.items));_this3.__disposer.push(reaction)},500)})}/**
   * detached life cycle
   */},{key:"disconnectedCallback",value:function disconnectedCallback(){var _this4=this;for(var i in this.__disposer){this.__disposer[i].dispose()}this.$.editor.removeEventListener("current-data-changed",function(e){if(e.detail.value){_this4.set("manifestItems",e.detail.value);_this4.$.outline.importJsonOutlineSchemaItems()}});babelHelpers.get(babelHelpers.getPrototypeOf(HAXCMSOutlineEditorDialog.prototype),"disconnectedCallback",this).call(this)}/**
   * Switch view
   */},{key:"toggleView",value:function toggleView(e){this.viewMode=!this.viewMode}/**
   * Get the active label
   */},{key:"_getViewLabel",value:function _getViewLabel(mode){if(mode){this._viewIcon="icons:view-list";return"Outline mode"}else{this._viewIcon="icons:code";return"Developer mode"}}/**
   * Ensure that data is correct between the outline and advanced view
   */},{key:"_viewModeChanged",value:function _viewModeChanged(newValue,oldValue){// odd I know, but this is the default outline view
if(!newValue){this.$.outline.importJsonOutlineSchemaItems()}else{var items=this.$.outline.exportJsonOutlineSchemaItems(!0);this.set("manifestItems",items)}}/**
   * Save hit, send the message to push up the outline changes.
   */},{key:"_saveTap",value:function _saveTap(e){this.dispatchEvent(new CustomEvent("haxcms-save-outline",{bubbles:!0,composed:!0,cancelable:!1,detail:this.$.outline.exportJsonOutlineSchemaItems(!0)}))}}],[{key:"template",get:function get(){return(0,_polymerElement.html)(_templateObject_c2ad66b07c0711e98a2471d74bf08c91())}},{key:"properties",get:function get(){return{/**
       * opened state of the dialog inside here
       */opened:{type:Boolean,notify:!0},/**
       * Outline of items in json outline schema format
       */manifestItems:{type:Array,observer:"_manifestItemsChanged"},/**
       * Stringify'ed representation of items
       */manifestItemsStatic:{type:String},/**
       * Display label, switch when hitting the toggle button
       */viewLabel:{type:String,computed:"_getViewLabel(viewMode)"},/**
       * Which edit mode to display
       */viewMode:{type:Boolean,value:!1,observer:"_viewModeChanged"}}}}]);return HAXCMSOutlineEditorDialog}(_polymerElement.PolymerElement);_exports.HAXCMSOutlineEditorDialog=HAXCMSOutlineEditorDialog;window.customElements.define(HAXCMSOutlineEditorDialog.tag,HAXCMSOutlineEditorDialog)});