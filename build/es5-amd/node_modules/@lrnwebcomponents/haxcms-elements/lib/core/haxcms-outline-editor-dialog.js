define(["exports","../../../../lit-element/lit-element.js","./haxcms-site-store.js","../../../../mobx/lib/mobx.module.js","../../../json-outline-schema/json-outline-schema.js","../../../json-editor/json-editor.js","../../../editable-outline/editable-outline.js","../../../../@polymer/paper-button/paper-button.js","../../../../@polymer/iron-icon/iron-icon.js","../../../../@polymer/iron-icons/iron-icons.js"],function(_exports,_litElement,_haxcmsSiteStore,_mobxModule,_jsonOutlineSchema,_jsonEditor,_editableOutline,_paperButton,_ironIcon,_ironIcons){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.HAXCMSOutlineEditorDialog=void 0;function _templateObject2_94e2b0d0696111eaabc5af1640d11e9e(){var data=babelHelpers.taggedTemplateLiteral(["\n        :host {\n          display: block;\n          height: 60vh;\n          min-width: 50vw;\n        }\n        .buttons {\n          position: absolute;\n          bottom: 0;\n          z-index: 1000000;\n          background-color: var(--simple-modal-titlebar-background, #000000);\n          color: var(--simple-modal-titlebar-color, #ffffff);\n          left: 0;\n          right: 0;\n        }\n        .buttons paper-button {\n          color: #ffffff;\n          background-color: var(--simple-modal-button-background, #000000);\n        }\n        editable-outline:not(:defined),\n        json-editor:not(:defined),\n        paper-button:not(:defined) {\n          display: none;\n        }\n        #toggle {\n          float: right;\n          text-transform: unset;\n        }\n        #savebtn {\n          color: white;\n          background-color: var(--haxcms-color, #2196f3);\n        }\n        editable-outline,\n        json-editor {\n          margin-bottom: 32px;\n        }\n      "]);_templateObject2_94e2b0d0696111eaabc5af1640d11e9e=function _templateObject2_94e2b0d0696111eaabc5af1640d11e9e(){return data};return data}function _templateObject_94e2b0d0696111eaabc5af1640d11e9e(){var data=babelHelpers.taggedTemplateLiteral(["\n      <editable-outline\n        id=\"outline\"\n        edit-mode\n        .hidden=\"","\"\n        .items=\"","\"\n      ></editable-outline>\n      <json-editor\n        id=\"editor\"\n        @current-data-changed=\"","\"\n        label=\"JSON Outline Schema items\"\n        value=\"","\"\n        .hidden=\"","\"\n      ></json-editor>\n      <div class=\"buttons\">\n        <paper-button id=\"savebtn\" dialog-confirm @click=\"","\"\n          ><iron-icon icon=\"icons:save\"></iron-icon>Save</paper-button\n        >\n        <paper-button dialog-dismiss\n          ><iron-icon icon=\"icons:cancel\"></iron-icon>Cancel</paper-button\n        >\n        <paper-button id=\"toggle\" @click=\"","\"\n          ><iron-icon icon=\"","\"></iron-icon>","</paper-button\n        >\n      </div>\n    "]);_templateObject_94e2b0d0696111eaabc5af1640d11e9e=function _templateObject_94e2b0d0696111eaabc5af1640d11e9e(){return data};return data}/**
 * `haxcms-outline-editor-dialog`
 * `Dialog for presenting an editable outline`
 *
 * @demo demo/index.html
 *
 * @microcopy - the mental model for this element
 */var HAXCMSOutlineEditorDialog=/*#__PURE__*/function(_LitElement){babelHelpers.inherits(HAXCMSOutlineEditorDialog,_LitElement);babelHelpers.createClass(HAXCMSOutlineEditorDialog,[{key:"render",// render function
value:function render(){return(0,_litElement.html)(_templateObject_94e2b0d0696111eaabc5af1640d11e9e(),this.viewMode,this.manifestItems,this.currentDataChangedEvent,this.manifestItemsStatic,!this.viewMode,this._saveTap,this.toggleView,this._viewIcon,this.viewLabel)}}],[{key:"styles",/**
   * LitElement constructable styles enhancement
   */get:function get(){return[(0,_litElement.css)(_templateObject2_94e2b0d0696111eaabc5af1640d11e9e())]}/**
   * Store the tag name to make it easier to obtain directly.
   */},{key:"tag",get:function get(){return"haxcms-outline-editor-dialog"}}]);function HAXCMSOutlineEditorDialog(){var _this;babelHelpers.classCallCheck(this,HAXCMSOutlineEditorDialog);_this=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(HAXCMSOutlineEditorDialog).call(this));_this.__disposer=[];_this.viewMode=!1;return _this}babelHelpers.createClass(HAXCMSOutlineEditorDialog,[{key:"currentDataChangedEvent",value:function currentDataChangedEvent(e){if(e.detail.value){this.manifestItems=babelHelpers.toConsumableArray(e.detail.value);this.shadowRoot.querySelector("#outline").importJsonOutlineSchemaItems()}}/**
   * LitElement property change life cycle
   */},{key:"updated",value:function updated(changedProperties){var _this2=this;changedProperties.forEach(function(oldValue,propName){if("opened"==propName){// notify
_this2.dispatchEvent(new CustomEvent("opened-changed",{detail:_this2[propName]}))}if("manifestItems"==propName){// observer
_this2._manifestItemsChanged(_this2[propName],oldValue);// notify
_this2.dispatchEvent(new CustomEvent("manifest-edit-mode-changed",{detail:_this2[propName]}))}if("viewMode"==propName){// computed
_this2.viewLabel=_this2._getViewLabel(_this2[propName]);// observer
_this2._viewModeChanged(_this2[propName],oldValue)}})}},{key:"_manifestItemsChanged",value:function _manifestItemsChanged(newValue){if(newValue){window.JSONOutlineSchema.requestAvailability().items=newValue;this.manifestItemsStatic=JSON.stringify(newValue,null,2)}}},{key:"connectedCallback",value:function connectedCallback(){var _this3=this;babelHelpers.get(babelHelpers.getPrototypeOf(HAXCMSOutlineEditorDialog.prototype),"connectedCallback",this).call(this);(0,_mobxModule.autorun)(function(reaction){_this3.manifestItems=babelHelpers.toConsumableArray((0,_mobxModule.toJS)(_haxcmsSiteStore.store.manifest.items));_this3.__disposer.push(reaction)})}/**
   * detached life cycle
   */},{key:"disconnectedCallback",value:function disconnectedCallback(){for(var i in this.__disposer){this.__disposer[i].dispose()}babelHelpers.get(babelHelpers.getPrototypeOf(HAXCMSOutlineEditorDialog.prototype),"disconnectedCallback",this).call(this)}/**
   * Switch view
   */},{key:"toggleView",value:function toggleView(e){this.viewMode=!this.viewMode}/**
   * Get the active label
   */},{key:"_getViewLabel",value:function _getViewLabel(mode){if(mode){this._viewIcon="icons:view-list";return"Outline mode"}else{this._viewIcon="icons:code";return"Developer mode"}}/**
   * Ensure that data is correct between the outline and advanced view
   */},{key:"_viewModeChanged",value:function _viewModeChanged(newValue,oldValue){// odd I know, but this is the default outline view
if(!newValue){this.shadowRoot.querySelector("#outline").importJsonOutlineSchemaItems()}else{var items=this.shadowRoot.querySelector("#outline").exportJsonOutlineSchemaItems(!0);this.manifestItems=items}}/**
   * Save hit, send the message to push up the outline changes.
   */},{key:"_saveTap",value:function _saveTap(e){window.dispatchEvent(new CustomEvent("haxcms-save-outline",{bubbles:!0,composed:!0,detail:this.shadowRoot.querySelector("#outline").exportJsonOutlineSchemaItems(!0)}))}}],[{key:"properties",get:function get(){return{/**
       * opened state of the dialog inside here
       */opened:{type:Boolean},/**
       * Outline of items in json outline schema format
       */manifestItems:{type:Array},/**
       * Stringify'ed representation of items
       */manifestItemsStatic:{type:String,attribute:"manifest-items-static"},/**
       * Display label, switch when hitting the toggle button
       */viewLabel:{type:String,attribute:"view-label"},/**
       * Which edit mode to display
       */viewMode:{type:Boolean,attribute:"view-mode"}}}}]);return HAXCMSOutlineEditorDialog}(_litElement.LitElement);_exports.HAXCMSOutlineEditorDialog=HAXCMSOutlineEditorDialog;window.customElements.define(HAXCMSOutlineEditorDialog.tag,HAXCMSOutlineEditorDialog)});