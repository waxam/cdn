define(["exports", "require", "../../../../../lit/index.js", "../haxcms-site-store.js", "../../../../../mobx/dist/mobx.esm.js"], function (_exports, _require, _index, _haxcmsSiteStore, _mobxEsm) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HAXCMSMobileMenuMixin = void 0;
  _require = _interopRequireWildcard(_require);

  var _templateObject_01d6ab30feba11eb8439e3eec9305af7, _templateObject2_01d6ab30feba11eb8439e3eec9305af7, _templateObject3_01d6ab30feba11eb8439e3eec9305af7;

  function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

  function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || babelHelpers.typeof(obj) !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }

  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { babelHelpers.defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var HAXCMSMobileMenuMixin = function HAXCMSMobileMenuMixin(SuperClass) {
    return /*#__PURE__*/function (_SuperClass) {
      babelHelpers.inherits(_class, _SuperClass);

      var _super = _createSuper(_class);

      function _class() {
        var _this;

        babelHelpers.classCallCheck(this, _class);
        _this = _super.call(this);
        _this.menuOpen = true;
        return _this;
      }

      babelHelpers.createClass(_class, [{
        key: "firstUpdated",
        value: function firstUpdated(changedProperties) {
          var _this2 = this;

          if (babelHelpers.get(babelHelpers.getPrototypeOf(_class.prototype), "firstUpdated", this)) {
            babelHelpers.get(babelHelpers.getPrototypeOf(_class.prototype), "firstUpdated", this).call(this, changedProperties);
          }

          this.__disposer = this.__disposer ? this.__disposer : [];
          (0, _mobxEsm.autorun)(function (reaction) {
            // if menu is open, and the active item changes AND we're on mobile...
            // close the menu
            if (_this2.shadowRoot.querySelector("#haxcmsmobilemenunav") && _this2.menuOpen && (0, _mobxEsm.toJS)(_haxcmsSiteStore.store.activeId) && ["sm", "xs"].includes(_this2.responsiveSize)) {
              _this2.__HAXCMSMobileMenuToggle({});
            }

            _this2.__disposer.push(reaction);
          });
        }
      }, {
        key: "HAXCMSMobileMenuButton",
        value: function HAXCMSMobileMenuButton() {
          new Promise(function (res, rej) {
            return _require.default(["../../../../simple-icon/simple-icon.js"], res, rej);
          });
          new Promise(function (res, rej) {
            return _require.default(["../../../../simple-icon/lib/simple-icons.js"], res, rej);
          });
          new Promise(function (res, rej) {
            return _require.default(["../../../../simple-icon/lib/simple-icon-button-lite.js"], res, rej);
          });
          new Promise(function (res, rej) {
            return _require.default(["../../../../simple-tooltip/simple-tooltip.js"], res, rej);
          });
          return (0, _index.html)(_templateObject_01d6ab30feba11eb8439e3eec9305af7 || (_templateObject_01d6ab30feba11eb8439e3eec9305af7 = babelHelpers.taggedTemplateLiteral(["\n        <simple-icon-button-lite\n          class=\"btn\"\n          icon=\"icons:menu\"\n          label=\"Toggle menu\"\n          id=\"haxcmsmobilemenubutton\"\n          .part=\"", "\"\n          @click=\"", "\"\n        ></simple-icon-button-lite>\n        <simple-tooltip for=\"haxcmsmobilemenubutton\">\n          Toggle menu\n        </simple-tooltip>\n      "])), this.editMode ? "edit-mode-active" : "", this.__HAXCMSMobileMenuToggle);
        }
      }, {
        key: "__HAXCMSMobileMenuToggle",
        value: function __HAXCMSMobileMenuToggle(e) {
          if (this.menuOpen) {
            this.menuOpen = false;

            if (this.shadowRoot.querySelector("#haxcmsmobilemenunav")) {
              this.shadowRoot.querySelector("#haxcmsmobilemenunav").setAttribute("tabindex", "-1");
            }
          } else {
            this.menuOpen = true;

            if (this.shadowRoot.querySelector("#haxcmsmobilemenunav")) {
              this.shadowRoot.querySelector("#haxcmsmobilemenunav").removeAttribute("tabindex");
            }
          }
        }
      }, {
        key: "HAXCMSMobileMenu",
        value: function HAXCMSMobileMenu(e) {
          return (0, _index.html)(_templateObject2_01d6ab30feba11eb8439e3eec9305af7 || (_templateObject2_01d6ab30feba11eb8439e3eec9305af7 = babelHelpers.taggedTemplateLiteral(["\n        <nav\n          id=\"haxcmsmobilemenunav\"\n          role=\"navigation\"\n          aria-labelledby=\"sitemenu\"\n        >\n          <replace-tag\n            with=\"site-menu\"\n            part=\"site-menu\"\n            id=\"sitemenu\"\n            import-method=\"view\"\n          ></replace-tag>\n        </nav>\n      "])));
        }
        /**
         * Notice small size and if menu is open, close it
         */

      }, {
        key: "updated",
        value: function updated(changedProperties) {
          var _this3 = this;

          if (babelHelpers.get(babelHelpers.getPrototypeOf(_class.prototype), "updated", this)) {
            babelHelpers.get(babelHelpers.getPrototypeOf(_class.prototype), "updated", this).call(this, changedProperties);
          }

          changedProperties.forEach(function (oldValue, propName) {
            if (propName == "responsiveSize") {
              switch (_this3[propName]) {
                case "sm":
                  // auto close for small layouts
                  if (_this3.menuOpen && oldValue != "xs") {
                    _this3.__HAXCMSMobileMenuToggle({});
                  }

                  break;

                case "xs":
                  // auto close for small layouts
                  if (_this3.menuOpen && oldValue != "sm") {
                    _this3.__HAXCMSMobileMenuToggle({});
                  }

                  break;

                default:
                  {
                    // auto open for larger layouts
                    if (!_this3.menuOpen) {
                      _this3.__HAXCMSMobileMenuToggle({});
                    }
                  }
              }
            }
          });
        }
      }], [{
        key: "styles",
        get: function get() {
          var styles = [];

          if (babelHelpers.get(babelHelpers.getPrototypeOf(_class), "styles", this)) {
            styles = babelHelpers.get(babelHelpers.getPrototypeOf(_class), "styles", this);
          }

          return [].concat(babelHelpers.toConsumableArray(styles), [(0, _index.css)(_templateObject3_01d6ab30feba11eb8439e3eec9305af7 || (_templateObject3_01d6ab30feba11eb8439e3eec9305af7 = babelHelpers.taggedTemplateLiteral(["\n          site-menu:not(:defined) {\n            display: none;\n          }\n          replace-tag[with=\"site-menu\"] {\n            height: 100vh;\n          }\n          :host([responsive-size=\"xs\"][menu-open]),\n          :host([responsive-size=\"sm\"][menu-open]) {\n            overflow: hidden;\n          }\n          simple-icon-button-lite {\n            color: inherit;\n          }\n        "])))]);
        }
      }, {
        key: "properties",
        get: function get() {
          var props = {};

          if (babelHelpers.get(babelHelpers.getPrototypeOf(_class), "properties", this)) {
            props = babelHelpers.get(babelHelpers.getPrototypeOf(_class), "props", this);
          }

          return _objectSpread(_objectSpread({}, props), {}, {
            menuOpen: {
              type: Boolean,
              reflect: true,
              attribute: "menu-open"
            }
          });
        }
      }]);
      return _class;
    }(SuperClass);
  };

  _exports.HAXCMSMobileMenuMixin = HAXCMSMobileMenuMixin;
});