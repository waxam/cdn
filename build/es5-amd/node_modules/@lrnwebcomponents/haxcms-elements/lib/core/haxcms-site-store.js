define(["exports","../../../../mobx/lib/mobx.module.js"],function(_exports,_mobxModule){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.store=void 0;var Store=/*#__PURE__*/function(){function Store(){babelHelpers.classCallCheck(this,Store);this.location=null;this.editMode=!1;this.manifest=null;this.activeItemContent="";this.activeId=null;this.cmsSiteEditor={instance:null}}babelHelpers.createClass(Store,[{key:"cmsSiteEditorAvailability",value:function cmsSiteEditorAvailability(){var element=0<arguments.length&&arguments[0]!==void 0?arguments[0]:this,location=1<arguments.length&&arguments[1]!==void 0?arguments[1]:document.body;if(!store.cmsSiteEditor.instance){store.cmsSiteEditor.instance=document.createElement(store.cmsSiteEditor.tag);store.cmsSiteEditor.instance.appElement=element;store.cmsSiteEditor.instance.appendTarget=location;// self append the reference to.. well.. us.
document.body.appendChild(store.cmsSiteEditor.instance)}else{if(element){// already exists, just alter some references
store.cmsSiteEditor.instance.appElement=element;store.cmsSiteEditor.instance.appendTarget=location;if(babelHelpers.typeof(store.cmsSiteEditor.instance.haxCmsSiteEditorElement)!==("undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))){store.cmsSiteEditor.instance.appendTarget.appendChild(store.cmsSiteEditor.instance.haxCmsSiteEditorElement)}}}return store.cmsSiteEditor.instance}},{key:"_computeItems",/**
   * Compute items leveraging the site query engine
   */value:function _computeItems(start,end,parent,dynamicMethodology,_routerManifest){var _this=this;if(_routerManifest){var _ret=function(){var items=[],data=[],tmpItem;_routerManifest.items.forEach(function(element){// find top level parents
if(!element.parent){items.push(element)}});switch(dynamicMethodology){case"parent":tmpItem=_routerManifest.items.find(function(d){return parent===d.id});// shift up 1 if we found something
if(tmpItem){parent=tmpItem.parent}break;case"ancestor":tmpItem=_routerManifest.items.find(function(d){return parent===d.id});// walk back up to the root
while(tmpItem&&null!=tmpItem.parent){// take the parent object of this current item
tmpItem=_routerManifest.items.find(function(i){return i.id==tmpItem.parent})}if(tmpItem){parent=tmpItem.id}break;}items.forEach(function(item,i){_this._spiderChildren(item,data,start,end,parent,!1)});return{v:data}}();if("object"===babelHelpers.typeof(_ret))return _ret.v}}/**
   * Recursively search through a data to find children
   * of a specified item.
   */},{key:"_setChildren",value:function _setChildren(item,data){var _this2=this,children=data.filter(function(d){return item.id===d.parent});item.children=children;if(0<item.children.length){item.children.forEach(function(child){// recursively call itself
_this2._setChildren(child,data)})}}/**
   * The manifest but with routing mixed in
   */},{key:"findItem",/**
   * shortcut to find an item in the manifest based on id
   */value:function findItem(id){if(this.manifest&&id){return this.manifest.items.find(function(item){if(item.id!==id){return!1}return!0})}else{return null}}/**
   * Spider children based on criteria and return what we found
   */},{key:"spiderChildren",value:function spiderChildren(item,data,start,end,parent,parentFound,noDynamicLevel){var _this3=this;// see if we have the parent... or keep going
if(item.id===parent||parentFound){// set parent to current so it's gaurenteed to match on next one
if(!parentFound){parentFound=!0;// support sliding scales, meaning that start / end is relative to active
if(!noDynamicLevel&&item.indent>=start){start+=item.indent;end+=item.indent}}// only add on what we're between
if(item.indent>=start&&item.indent<=end){data.push(item)}// we've found it. Now everyone below here should match
if(0<item.children.length){item.children.forEach(function(child){// recursively call itself
_this3.spiderChildren(child,data,start,end,parent,parentFound,noDynamicLevel)})}}else{if(0<item.children.length){item.children.forEach(function(child){// recursively call itself
_this3.spiderChildren(child,data,start,end,parent,parentFound,noDynamicLevel)})}}}/**
   * Compute items leveraging the site query engine
   */},{key:"computeItems",value:function computeItems(start,end,parent,dynamicMethodology,_routerManifest,noDynamicLevel){if(_routerManifest){var _ret2=function(){var items=[],data=[],tmpItem;_routerManifest.items.forEach(function(element){// find top level parents
if(!element.parent){items.push(element)}});switch(dynamicMethodology){case"parent":tmpItem=_routerManifest.items.find(function(d){return parent===d.id});// shift up 1 if we found something
if(tmpItem){parent=tmpItem.parent}break;case"ancestor":tmpItem=_routerManifest.items.find(function(d){return parent===d.id});// walk back up to the root
while(tmpItem&&null!=tmpItem.parent){// take the parent object of this current item
tmpItem=_routerManifest.items.find(function(i){return i.id==tmpItem.parent})}if(tmpItem){parent=tmpItem.id}break;}_routerManifest.items.forEach(function(item,i){store.spiderChildren(item,data,start,end,parent,!1,noDynamicLevel)});return{v:data}}();if("object"===babelHelpers.typeof(_ret2))return _ret2.v}}},{key:"processedItems",get:function get(){}},{key:"routerManifest",get:function get(){var _this4=this,manifest=this.manifest;document.body.dispatchEvent(new CustomEvent("json-outline-schema-changed",{bubbles:!0,composed:!0,cancelable:!1,detail:manifest}));if(manifest&&"undefined"!==typeof manifest.items){var userData=JSON.parse(window.localStorage.getItem("HAXCMSSystemData")),accessData={};// establish on first pass if needed
if(null==userData){userData={manifests:{}};userData.manifests[manifest.id]={accessData:{}};window.localStorage.setItem("HAXCMSSystemData",JSON.stringify(userData))}if(userData&&babelHelpers.typeof(userData.manifests)!==("undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))&&babelHelpers.typeof(userData.manifests[manifest.id])!==("undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))&&userData.manifests[manifest.id].accessData!==("undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))){accessData=userData.manifests[manifest.id].accessData}var manifestItems=manifest.items.map(function(i){var parentLocation=null,parent=manifest.items.find(function(d){return i.parent===d.id});if(parent){parentLocation=parent.location.replace("pages/","").replace("/index.html","")}// get local storage and look for data from this to mesh up
var metadata=i.metadata;if(babelHelpers.typeof(accessData[i.id])!==("undefined"===typeof void 0?"undefined":babelHelpers.typeof(void 0))){metadata.accessData=accessData[i.id]}var location=i.location.replace("pages/","").replace("/index.html","");return Object.assign({},i,{parentLocation:parentLocation,location:location,metadata:metadata})});// build the children into a hierarchy too
manifestItems.forEach(function(item,i){_this4._setChildren(item,manifestItems)});return Object.assign({},manifest,{items:manifestItems,accessData:accessData})}}/**
   * Return the site title
   */},{key:"siteTitle",get:function get(){var manifest=this.manifest;if(manifest.title){return manifest.title}return""}/**
   * Figure out the home page, lazily the 1st thing in the manifest
   */},{key:"homeLink",get:function get(){// if we are on the homepage then load the first item in the manifest and set it active
var firstItem=this.manifest.items.find(function(i){return"undefined"!==typeof i.id});if(firstItem){return firstItem.location.replace("pages/","").replace("/index.html","")}else{return"/"}}/**
   * Get the active Item based on activeId
   */},{key:"activeItem",get:function get(){var item=this.findItem(this.activeId);// ensure we found something, return null for consistency in data
if(item){return item}return null}/**
   * Get the fields from the node
   */},{key:"activeItemFields",get:function get(){// need to have metadata to be valid so..
if(this.activeItem&&this.activeItem.metadata){// core "fields" we'd expect
var fields={title:this.activeItem.title,description:this.activeItem.description,location:this.activeItem.location,created:this.activeItem.metadata.created,updated:this.activeItem.metadata.created};// mix in any custom field definitions
if(this.activeItem.metadata.fields){return Object.assign({},fields,this.activeItem.metadata.fields)}}}/**
   * get theme data from manifest + activeId combo
   */},{key:"themeData",get:function get(){if(this.manifest){var themeData={};// this is required so better be...
if(this.manifest.metadata.theme){themeData=this.manifest.metadata.theme}else{// fallback juuuuust to be safe...
themeData={"haxcms-basic-theme":{element:"haxcms-basic-theme",path:"@lrnwebcomponents/haxcms-elements/lib/core/themes/haxcms-basic-theme.js",name:"Basic theme"}}}// ooo you sneaky devil you...
if(this.activeItem){if(this.activeItem.metadata.theme){return this.activeItem.metadata.theme}}return themeData}}/**
   * Get the active manifest index array position
   * -1 if not found
   */},{key:"activeManifestIndex",get:function get(){if(this.manifest&&this.manifest.items&&this.activeId){for(var index in this.manifest.items){if(this.manifest.items[index].id===this.activeId){return parseInt(index)}}}return-1}/**
   * Better for visualizing the counter
   */},{key:"activeManifestIndexCounter",get:function get(){if(null!==this.activeManifestIndex){return 1+this.activeManifestIndex}return 0}/**
   * shortcut for active page title
   */},{key:"activeTitle",get:function get(){if(this.activeItem){return this.activeItem.title}return""}/**
   * shortcut for active page parent title
   */},{key:"parentTitle",get:function get(){var _this5=this;if(this.manifest&&this.activeItem){var tmpItem=this.manifest.items.find(function(d){return _this5.activeItem.parent===d.id});// shift up 1 if we found something
if(tmpItem){return tmpItem.title}}return""}/**
   * shortcut for active page ancestor title
   */},{key:"ancestorTitle",get:function get(){var _this6=this;if(this.manifest&&this.activeItem){var _ret3=function(){var tmpItem=_this6.manifest.items.find(function(d){return _this6.activeItem.parent===d.id});// walk back up to the root
while(tmpItem&&null!=tmpItem.parent){// take the parent object of this current item
tmpItem=_this6.manifest.items.find(function(i){return i.id==tmpItem.parent})}if(tmpItem){return{v:tmpItem.title}}}();if("object"===babelHelpers.typeof(_ret3))return _ret3.v}return""}}]);return Store}();(0,_mobxModule.decorate)(Store,{location:_mobxModule.observable.ref,// router location in url
editMode:_mobxModule.observable,// global editing state
manifest:_mobxModule.observable,// JOS / manifest
activeItemContent:_mobxModule.observable,// active site content, cleaned up
routerManifest:_mobxModule.computed,// router mixed in manifest w/ routes / paths
siteTitle:_mobxModule.computed,themeData:_mobxModule.computed,// get the active theme from manifest + activeId
homeLink:_mobxModule.computed,activeId:_mobxModule.observable,// this affects all state changes associated to activeItem
activeItem:_mobxModule.computed,// active item object
activeItemFields:_mobxModule.computed,// active item field values
activeManifestIndex:_mobxModule.computed,// active array index, used for pagination
activeManifestIndexCounter:_mobxModule.computed,// active array index counter, used for pagination
activeTitle:_mobxModule.computed,// active page title
parentTitle:_mobxModule.computed,// active page parent title
ancestorTitle:_mobxModule.computed,// active page ancestor title
changeActiveItem:_mobxModule.action.bound});/**
 * Central store
 */var store=new Store;/**
 * When location changes update activeItem
 */_exports.store=store;(0,_mobxModule.autorun)(function(){if(store.location&&store.location.route&&store.location.route.component){// get the id from the router
var id=store.location.route.name,found=store.manifest.items.filter(function(item){if(item.id!==id){return!1}return!0});// make sure that we aren't in edit mode
if(found){store.activeId=id}}});/**
 * When Active Item Changes notify json-outline-schema to have the backend
 * change the page.
 */(0,_mobxModule.autorun)(function(){var foundItem=(0,_mobxModule.toJS)(store.findItem(store.activeId));if(foundItem){document.body.dispatchEvent(new CustomEvent("json-outline-schema-active-item-changed",{bubbles:!0,composed:!0,cancelable:!1,detail:foundItem}))}});/**
 * When editMode changes notify HAXeditor.
 */(0,_mobxModule.autorun)(function(){var editMode=(0,_mobxModule.toJS)(store.editMode);// trap for early setup
if(window.HaxStore&&window.HaxStore.write){window.dispatchEvent(new CustomEvent("haxcms-edit-mode-changed",{bubbles:!0,composed:!0,cancelable:!1,detail:editMode}));window.HaxStore.write("editMode",editMode,window.HaxStore.instance)}})});