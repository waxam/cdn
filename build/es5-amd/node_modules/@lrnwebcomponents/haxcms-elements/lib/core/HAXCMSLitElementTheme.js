define(["exports","../../../../lit-element/lit-element.js","./HAXCMSThemeWiring.js"],function(_exports,_litElement,_HAXCMSThemeWiring){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.HAXCMSLitElementTheme=void 0;function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable});keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1,source;i<arguments.length;i++){source=null!=arguments[i]?arguments[i]:{};if(i%2){ownKeys(Object(source),!0).forEach(function(key){babelHelpers.defineProperty(target,key,source[key])})}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))})}}return target}/**
 * LitElement Version of HAXCMSTheme
 */var HAXCMSLitElementTheme=/*#__PURE__*/function(_HAXCMSTheme){babelHelpers.inherits(HAXCMSLitElementTheme,_HAXCMSTheme);function HAXCMSLitElementTheme(){var _this;babelHelpers.classCallCheck(this,HAXCMSLitElementTheme);_this=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(HAXCMSLitElementTheme).call(this));_this.editMode=!1;_this.isLoggedIn=!1;return _this}babelHelpers.createClass(HAXCMSLitElementTheme,[{key:"firstUpdated",// LitElement life cycle
value:function firstUpdated(changedProperties){if(babelHelpers.get(babelHelpers.getPrototypeOf(HAXCMSLitElementTheme.prototype),"firstUpdated",this)){babelHelpers.get(babelHelpers.getPrototypeOf(HAXCMSLitElementTheme.prototype),"firstUpdated",this).call(this,changedProperties)}if(null==this.contentContainer){this.contentContainer=this.shadowRoot.querySelector("#contentcontainer")}}// LitElement life cycle
},{key:"updated",value:function updated(changedProperties){var _this2=this;if(babelHelpers.get(babelHelpers.getPrototypeOf(HAXCMSLitElementTheme.prototype),"updated",this)){babelHelpers.get(babelHelpers.getPrototypeOf(HAXCMSLitElementTheme.prototype),"updated",this).call(this,changedProperties)}changedProperties.forEach(function(oldValue,propName){if("_location"==propName){_this2._locationChanged(_this2[propName],oldValue)}if("color"==propName){_this2._colorChanged(_this2[propName],oldValue)}if("contentContainer"==propName){// fire an to match notify
_this2.dispatchEvent(new CustomEvent("content-container-changed",{bubbles:!0,cancelable:!0,composed:!0,detail:_this2[propName]}));_this2._contentContainerChanged(_this2[propName],oldValue)}if("isLoggedIn"==propName){// fire an to match notify
_this2.dispatchEvent(new CustomEvent("is-logged-in-changed",{bubbles:!0,cancelable:!0,composed:!0,detail:_this2[propName]}))}if("editMode"==propName){// fire an to match notify
_this2.dispatchEvent(new CustomEvent("edit-mode-changed",{bubbles:!0,cancelable:!0,composed:!0,detail:_this2[propName]}));_this2._editModeChanged(_this2[propName],oldValue)}})}}],[{key:"properties",get:function get(){return _objectSpread({},babelHelpers.get(babelHelpers.getPrototypeOf(HAXCMSLitElementTheme),"properties",this),{/**
       * Class for the color
       */hexColor:{type:String,attribute:"hex-color"},/**
       * Color class work to apply
       */color:{type:String,reflect:!0},/**
       * editting state for the page
       */editMode:{type:Boolean,reflect:!0,attribute:"edit-mode"},/**
       * editting state for the page
       */isLoggedIn:{type:Boolean,reflect:!0,attribute:"is-logged-in"},/**
       * DOM node that wraps the slot
       */contentContainer:{type:Object},/**
       * location as object
       */_location:{type:Object}})}}]);return HAXCMSLitElementTheme}((0,_HAXCMSThemeWiring.HAXCMSTheme)(_litElement.LitElement));_exports.HAXCMSLitElementTheme=HAXCMSLitElementTheme});