define(["exports", "../../../../mobx/dist/mobx.esm.js", "./haxcms-site-store.js", "../../../app-hax/lib/wired-darkmode-toggle/wired-darkmode-toggle.js"], function (_exports, _mobxEsm, _haxcmsSiteStore, _wiredDarkmodeToggle) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HAXCMSDarkmodeToggle = void 0;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

  var HAXCMSDarkmodeToggle = /*#__PURE__*/function (_WiredDarkmodeToggle) {
    babelHelpers.inherits(HAXCMSDarkmodeToggle, _WiredDarkmodeToggle);

    var _super = _createSuper(HAXCMSDarkmodeToggle);

    function HAXCMSDarkmodeToggle() {
      var _this;

      babelHelpers.classCallCheck(this, HAXCMSDarkmodeToggle);
      _this = _super.call(this);
      (0, _mobxEsm.autorun)(function () {
        _this.checked = (0, _mobxEsm.toJS)(_haxcmsSiteStore.store.darkMode);
      });
      return _this;
    }

    babelHelpers.createClass(HAXCMSDarkmodeToggle, [{
      key: "updated",
      value: function updated(changedProperties) {
        var _this2 = this;

        if (babelHelpers.get(babelHelpers.getPrototypeOf(HAXCMSDarkmodeToggle.prototype), "updated", this)) {
          babelHelpers.get(babelHelpers.getPrototypeOf(HAXCMSDarkmodeToggle.prototype), "updated", this).call(this, changedProperties);
        }

        changedProperties.forEach(function (oldValue, propName) {
          if (propName === 'checked' && oldValue !== undefined) {
            _haxcmsSiteStore.store.darkMode = _this2[propName];

            _haxcmsSiteStore.store.playSound('click');

            if (_this2[propName]) {
              _haxcmsSiteStore.store.toast("I'm ascared of the dark", 2000, {
                fire: true
              });
            } else {
              _haxcmsSiteStore.store.toast("Sunny day it is", 2000, {
                hat: 'random'
              });
            }
          }
        });
      }
    }], [{
      key: "tag",
      get: function get() {
        return 'haxcms-darkmode-toggle';
      }
    }]);
    return HAXCMSDarkmodeToggle;
  }(_wiredDarkmodeToggle.WiredDarkmodeToggle);

  _exports.HAXCMSDarkmodeToggle = HAXCMSDarkmodeToggle;
  customElements.define(HAXCMSDarkmodeToggle.tag, HAXCMSDarkmodeToggle);
});