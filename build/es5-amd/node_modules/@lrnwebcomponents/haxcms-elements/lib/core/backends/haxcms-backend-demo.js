define(["exports", "require", "../../../../../@polymer/polymer/polymer-element.js", "../haxcms-site-store.js", "../../../../jwt-login/jwt-login.js"], function (_exports, _require, _polymerElement, _haxcmsSiteStore, _jwtLogin) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HAXCMSBackendDemo = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  function _templateObject_66fb9420e3b511e9b0d5a5c01151ac03() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <jwt-login\n        auto\n        id=\"jwt\"\n        url=\"[[jwtLoginLocation]]\"\n        url-logout=\"[[jwtLogoutLocation]]\"\n        jwt=\"{{jwt}}\"\n      ></jwt-login>\n    "]);

    _templateObject_66fb9420e3b511e9b0d5a5c01151ac03 = function _templateObject_66fb9420e3b511e9b0d5a5c01151ac03() {
      return data;
    };

    return data;
  }

  /**
   * `haxcms-backend-demo`
   * `a simple element to check for and fetch JWTs`
   *
   * @demo demo/index.html
   *
   * @microcopy - the mental model for this element
   * - jwt - a json web token which is an encrypted security token to talk
   */
  var HAXCMSBackendDemo =
  /*#__PURE__*/
  function (_PolymerElement) {
    babelHelpers.inherits(HAXCMSBackendDemo, _PolymerElement);
    babelHelpers.createClass(HAXCMSBackendDemo, null, [{
      key: "tag",

      /**
       * Store the tag name to make it easier to obtain directly.
       * @notice function name must be here for tooling to operate correctly
       */
      get: function get() {
        return "haxcms-backend-demo";
      } // render function

    }, {
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_66fb9420e3b511e9b0d5a5c01151ac03());
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * Location of what endpoint to hit for
           */
          jwtLoginLocation: {
            type: String,
            value: function value() {
              if (window.appSettings) {
                return window.appSettings.login;
              }
            }
          },

          /**
           * Location of what endpoint to hit for logging out
           */
          jwtLogoutLocation: {
            type: String,
            value: function value() {
              if (window.appSettings) {
                return window.appSettings.logout;
              }
            }
          },

          /**
           * JSON Web token, it'll come from a global call if it's available
           */
          jwt: {
            type: String,
            observer: "_jwtChanged"
          }
        };
      }
      /**
       * created life cycle
       */

    }]);

    function HAXCMSBackendDemo() {
      var _this;

      babelHelpers.classCallCheck(this, HAXCMSBackendDemo);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(HAXCMSBackendDemo).call(this));
      document.body.addEventListener("jwt-token", _this._jwtTokenFired.bind(babelHelpers.assertThisInitialized(_this))); // this makes it easier to debug things and directly modify the store for
      // development purposes

      window.HAXcmsStore = _haxcmsSiteStore.store;
      return _this;
    }

    babelHelpers.createClass(HAXCMSBackendDemo, [{
      key: "_jwtChanged",
      value: function _jwtChanged(newValue) {
        console.log(newValue);
      }
      /**
       * detached life cycle
       */

    }, {
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        document.body.removeEventListener("jwt-token", this._jwtTokenFired.bind(this));
        babelHelpers.get(babelHelpers.getPrototypeOf(HAXCMSBackendDemo.prototype), "disconnectedCallback", this).call(this);
      }
      /**
       * JWT token fired, let's capture it
       */

    }, {
      key: "_jwtTokenFired",
      value: function _jwtTokenFired(e) {
        this.jwt = e.detail;
        _haxcmsSiteStore.store.jwt = this.jwt;
      }
      /**
       * Attached life cycle
       */

    }, {
      key: "connectedCallback",
      value: function connectedCallback() {
        var _this2 = this;

        babelHelpers.get(babelHelpers.getPrototypeOf(HAXCMSBackendDemo.prototype), "connectedCallback", this).call(this);

        try {
          new Promise(function (res, rej) {
            return _require.default(["../haxcms-site-editor.js"], res, rej);
          }).then(function (e) {
            // validate availability
            _haxcmsSiteStore.store.cmsSiteEditorAvailability();

            _haxcmsSiteStore.store.cmsSiteEditor.instance.jwt = _this2.jwt;
            _haxcmsSiteStore.store.cmsSiteEditor.instance.method = "GET";
            _haxcmsSiteStore.store.cmsSiteEditor.instance.saveNodePath = window.appSettings.saveNodePath;
            _haxcmsSiteStore.store.cmsSiteEditor.instance.saveManifestPath = window.appSettings.saveManifestPath;
            _haxcmsSiteStore.store.cmsSiteEditor.instance.saveOutlinePath = window.appSettings.saveOutlinePath;
            _haxcmsSiteStore.store.cmsSiteEditor.instance.getNodeFieldsPath = window.appSettings.getNodeFieldsPath;
            _haxcmsSiteStore.store.cmsSiteEditor.instance.getSiteFieldsPath = window.appSettings.getSiteFieldsPath;
            _haxcmsSiteStore.store.cmsSiteEditor.instance.createNodePath = window.appSettings.createNodePath;
            _haxcmsSiteStore.store.cmsSiteEditor.instance.deleteNodePath = window.appSettings.deleteNodePath;
            _haxcmsSiteStore.store.cmsSiteEditor.instance.publishSitePath = window.appSettings.publishSitePath;
            _haxcmsSiteStore.store.cmsSiteEditor.instance.syncSitePath = window.appSettings.syncSitePath;
            _haxcmsSiteStore.store.cmsSiteEditor.instance.revertSitePath = window.appSettings.revertSitePath;
            _haxcmsSiteStore.store.cmsSiteEditor.instance.getUserDataPath = window.appSettings.getUserDataPath;
            _haxcmsSiteStore.store.cmsSiteEditor.instance.appStore = window.appSettings.appStore;
          }, function (e) {
            //import failed
            console.log(e);
          });
        } catch (err) {// error in the event this is a double registration
        }
      }
    }]);
    return HAXCMSBackendDemo;
  }(_polymerElement.PolymerElement);

  _exports.HAXCMSBackendDemo = HAXCMSBackendDemo;
  window.customElements.define(HAXCMSBackendDemo.tag, HAXCMSBackendDemo);
});