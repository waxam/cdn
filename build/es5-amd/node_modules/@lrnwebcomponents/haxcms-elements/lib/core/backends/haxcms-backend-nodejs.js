define(["exports","require","../../../../../lit-element/lit-element.js","../haxcms-site-store.js","../../../../jwt-login/jwt-login.js"],function(_exports,_require,_litElement,_haxcmsSiteStore,_jwtLogin){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.HAXCMSBackendNodeJS=void 0;_require=babelHelpers.interopRequireWildcard(_require);function _templateObject_312924707a0011eab074ed896f61b288(){var data=babelHelpers.taggedTemplateLiteral(["\n      <jwt-login\n        id=\"jwt\"\n        jwt=\"","\"\n        @jwt-changed=\"","\"\n      ></jwt-login>\n    "]);_templateObject_312924707a0011eab074ed896f61b288=function _templateObject_312924707a0011eab074ed896f61b288(){return data};return data}/**
 * `haxcms-backend-nodejs`
 * `a simple element to check for and fetch JWTs`
 *
 * @demo demo/index.html
 *
 * @microcopy - the mental model for this element
 * - jwt - a json web token which is an encrypted security token to talk
 */var HAXCMSBackendNodeJS=/*#__PURE__*/function(_LitElement){babelHelpers.inherits(HAXCMSBackendNodeJS,_LitElement);babelHelpers.createClass(HAXCMSBackendNodeJS,[{key:"render",/**
   * LitElement
   */value:function render(){return(0,_litElement.html)(_templateObject_312924707a0011eab074ed896f61b288(),this.jwt,this.jwtChanged)}},{key:"jwtChanged",value:function jwtChanged(e){this.jwt=e.detail.value;_haxcmsSiteStore.store.jwt=this.jwt;if(_haxcmsSiteStore.store.cmsSiteEditor&&_haxcmsSiteStore.store.cmsSiteEditor.instance){_haxcmsSiteStore.store.cmsSiteEditor.instance.jwt=this.jwt}// support updates after the fact
if(null!=this.jwt&&"null"!=this.jwt&&""!=this.jwt&&"string"==typeof this.jwt){this.dynamicallyImportEditor()}}/**
   * HTMLElement
   */}],[{key:"tag",/**
   * Store the tag name to make it easier to obtain directly.
   */get:function get(){return"haxcms-backend-nodejs"}}]);function HAXCMSBackendNodeJS(){babelHelpers.classCallCheck(this,HAXCMSBackendNodeJS);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(HAXCMSBackendNodeJS).call(this))}/**
   * LitElement life cycle - ready
   */babelHelpers.createClass(HAXCMSBackendNodeJS,[{key:"firstUpdated",value:function firstUpdated(changedProperties){if(window.appSettings){var jwtlogin=this.shadowRoot.querySelector("#jwt");jwtlogin.url=window.appSettings.login;jwtlogin.refreshUrl=window.appSettings.refreshUrl;jwtlogin.logoutUrl=window.appSettings.logout;jwtlogin.redirectUrl=window.appSettings.redirectUrl}if(null!=this.jwt&&"null"!=this.jwt&&""!=this.jwt&&"string"==typeof this.jwt){this.dynamicallyImportEditor()}else{// other things will have to sort out the fact that while we
// DO have a dynamic backend, we didn't get a hit on the JWT
// meaning that we are in a dynamic environment but logged out
// at the moment (or viewing a site we don't have authorization to)
window.dispatchEvent(new CustomEvent("haxcms-not-logged-in",{bubbles:!0,composed:!0,cancelable:!1,detail:this}))}}/**
   * LitElement / popular convention
   */},{key:"dynamicallyImportEditor",/**
   * Import the editor
   */value:function dynamicallyImportEditor(){var _this=this;// attempt to dynamically import the hax cms site editor
// which will appear to be injecting into the page
// but because of this approach it should be non-blocking
try{new Promise(function(res,rej){return _require.default(["../haxcms-site-editor.js"],res,rej)}).then(function(e){// if we don't have appSettings by this point
// it means we don't actually have a backend / directions
// this would be a published state or a state where
// there is no actual backend to bother confiring with
// possibly a user navigated to a site that doesn't
// have JWT credentials but isn't actually published
// we also need this here because PHP is the assumed
// fallback backend
if(window.appSettings){_haxcmsSiteStore.store.cmsSiteEditorAvailability();_haxcmsSiteStore.store.cmsSiteEditor.instance.jwt=_this.jwt;_haxcmsSiteStore.store.cmsSiteEditor.instance.saveNodePath=window.appSettings.saveNodePath;_haxcmsSiteStore.store.cmsSiteEditor.instance.saveManifestPath=window.appSettings.saveManifestPath;_haxcmsSiteStore.store.cmsSiteEditor.instance.saveOutlinePath=window.appSettings.saveOutlinePath;_haxcmsSiteStore.store.cmsSiteEditor.instance.getNodeFieldsPath=window.appSettings.getNodeFieldsPath;_haxcmsSiteStore.store.cmsSiteEditor.instance.getSiteFieldsPath=window.appSettings.getSiteFieldsPath;_haxcmsSiteStore.store.cmsSiteEditor.instance.getFormToken=window.appSettings.getFormToken;_haxcmsSiteStore.store.cmsSiteEditor.instance.publishSitePath=window.appSettings.publishSitePath;_haxcmsSiteStore.store.cmsSiteEditor.instance.syncSitePath=window.appSettings.syncSitePath;_haxcmsSiteStore.store.cmsSiteEditor.instance.revertSitePath=window.appSettings.revertSitePath;_haxcmsSiteStore.store.cmsSiteEditor.instance.createNodePath=window.appSettings.createNodePath;_haxcmsSiteStore.store.cmsSiteEditor.instance.deleteNodePath=window.appSettings.deleteNodePath;_haxcmsSiteStore.store.cmsSiteEditor.instance.getUserDataPath=window.appSettings.getUserDataPath;_haxcmsSiteStore.store.cmsSiteEditor.instance.appStore=window.appSettings.appStore}},function(e){//import failed
})}catch(err){// error in the event this is a double registration
}}}],[{key:"properties",get:function get(){return{/**
       * JSON Web token, it'll come from a global call if it's available
       */jwt:{type:String}}}}]);return HAXCMSBackendNodeJS}(_litElement.LitElement);_exports.HAXCMSBackendNodeJS=HAXCMSBackendNodeJS;window.customElements.define(HAXCMSBackendNodeJS.tag,HAXCMSBackendNodeJS)});