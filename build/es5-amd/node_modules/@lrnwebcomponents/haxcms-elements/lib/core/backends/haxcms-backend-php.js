define(["exports", "require", "../../../../../@polymer/polymer/polymer-element.js", "../../../../jwt-login/jwt-login.js", "../haxcms-site-store.js"], function (_exports, _require, _polymerElement, _jwtLogin, _haxcmsSiteStore) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HAXCMSBackendPHP = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  function _templateObject_e4289510b3b811e9b58d79562a23326c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <jwt-login\n        id=\"jwt\"\n        url=\"[[jwtLoginLocation]]\"\n        url-logout=\"[[jwtLogoutLocation]]\"\n        jwt=\"{{jwt}}\"\n      ></jwt-login>\n    "]);

    _templateObject_e4289510b3b811e9b58d79562a23326c = function _templateObject_e4289510b3b811e9b58d79562a23326c() {
      return data;
    };

    return data;
  }

  /**
   * `haxcms-backend-php`
   * `a simple element to check for and fetch JWTs`
   *
   * @demo demo/index.html
   *
   * @microcopy - the mental model for this element
   * - jwt - a json web token which is an encrypted security token to talk
   */
  var HAXCMSBackendPHP =
  /*#__PURE__*/
  function (_PolymerElement) {
    babelHelpers.inherits(HAXCMSBackendPHP, _PolymerElement);
    babelHelpers.createClass(HAXCMSBackendPHP, null, [{
      key: "tag",

      /**
       * Store the tag name to make it easier to obtain directly.
       * @notice function name must be here for tooling to operate correctly
       */
      get: function get() {
        return "haxcms-backend-php";
      } // render function

    }, {
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_e4289510b3b811e9b58d79562a23326c());
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * Location of what endpoint to hit for
           */
          jwtLoginLocation: {
            type: String,
            value: function value() {
              if (window.appSettings) {
                return window.appSettings.login;
              }
            }
          },

          /**
           * Location of what endpoint to hit for logging out
           */
          jwtLogoutLocation: {
            type: String,
            value: function value() {
              if (window.appSettings) {
                return window.appSettings.logout;
              }
            }
          },

          /**
           * JSON Web token, it'll come from a global call if it's available
           */
          jwt: {
            type: String
          }
        };
      }
      /**
       * created life cycle
       */

    }]);

    function HAXCMSBackendPHP() {
      var _this;

      babelHelpers.classCallCheck(this, HAXCMSBackendPHP);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(HAXCMSBackendPHP).call(this));
      document.body.addEventListener("jwt-token", _this._jwtTokenFired.bind(babelHelpers.assertThisInitialized(_this)));
      return _this;
    }
    /**
     * detached life cycle
     */


    babelHelpers.createClass(HAXCMSBackendPHP, [{
      key: "disconnectedCallback",
      value: function disconnectedCallback() {
        document.body.removeEventListener("jwt-token", this._jwtTokenFired.bind(this));
        babelHelpers.get(babelHelpers.getPrototypeOf(HAXCMSBackendPHP.prototype), "disconnectedCallback", this).call(this);
      }
      /**
       * JWT token fired, let's capture it
       */

    }, {
      key: "_jwtTokenFired",
      value: function _jwtTokenFired(e) {
        this.jwt = e.detail;
      }
      /**
       * Attached life cycle
       */

    }, {
      key: "connectedCallback",
      value: function connectedCallback() {
        var _this2 = this;

        babelHelpers.get(babelHelpers.getPrototypeOf(HAXCMSBackendPHP.prototype), "connectedCallback", this).call(this);

        if (this.jwt != null && typeof this.jwt == "string") {
          // attempt to dynamically import the hax cms site editor
          // which will appear to be injecting into the page
          // but because of this approach it should be non-blocking
          try {
            new Promise(function (res, rej) {
              return _require.default(["../haxcms-site-editor.js"], res, rej);
            }).then(function (e) {
              var haxCmsSiteEditorElement = document.createElement("haxcms-site-editor");
              haxCmsSiteEditorElement.jwt = _this2.jwt;
              haxCmsSiteEditorElement.saveNodePath = window.appSettings.saveNodePath;
              haxCmsSiteEditorElement.saveManifestPath = window.appSettings.saveManifestPath;
              haxCmsSiteEditorElement.saveOutlinePath = window.appSettings.saveOutlinePath;
              haxCmsSiteEditorElement.getNodeFieldsPath = window.appSettings.getNodeFieldsPath;
              haxCmsSiteEditorElement.getSiteFieldsPath = window.appSettings.getSiteFieldsPath;
              haxCmsSiteEditorElement.getFieldsToken = window.appSettings.getFieldsToken;
              haxCmsSiteEditorElement.publishSitePath = window.appSettings.publishSitePath;
              haxCmsSiteEditorElement.revertSitePath = window.appSettings.revertSitePath;
              haxCmsSiteEditorElement.createNodePath = window.appSettings.createNodePath;
              haxCmsSiteEditorElement.deleteNodePath = window.appSettings.deleteNodePath;
              haxCmsSiteEditorElement.appStore = window.appSettings.appStore;
              _haxcmsSiteStore.store.cmsSiteEditor.instance.haxCmsSiteEditorElement = haxCmsSiteEditorElement;

              _haxcmsSiteStore.store.cmsSiteEditor.instance.appendTarget.appendChild(haxCmsSiteEditorElement);
            }, function (e) {//import failed
            });
          } catch (err) {// error in the event this is a double registration
          }
        }
      }
    }]);
    return HAXCMSBackendPHP;
  }(_polymerElement.PolymerElement);

  _exports.HAXCMSBackendPHP = HAXCMSBackendPHP;
  window.customElements.define(HAXCMSBackendPHP.tag, HAXCMSBackendPHP);
});