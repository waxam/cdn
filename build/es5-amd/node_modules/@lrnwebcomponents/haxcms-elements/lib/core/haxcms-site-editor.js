define(["exports","../../../../lit-element/lit-element.js","./haxcms-site-store.js","../../../../mobx/lib/mobx.module.js","../../../hax-body-behaviors/lib/HAXWiring.js","../../../simple-colors/lib/simple-colors-polymer.js","../../../../@polymer/iron-ajax/iron-ajax.js","../../../jwt-login/jwt-login.js","../../../h-a-x/h-a-x.js","../../../simple-toast/simple-toast.js","../../../simple-modal/simple-modal.js","../../../../@polymer/paper-button/paper-button.js","../../../hax-body/lib/hax-schema-form.js","./haxcms-site-dashboard.js"],function(_exports,_litElement,_haxcmsSiteStore,_mobxModule,_HAXWiring,_simpleColorsPolymer,_ironAjax,_jwtLogin,_hAX,_simpleToast,_simpleModal,_paperButton,_haxSchemaForm,_haxcmsSiteDashboard){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.HAXCMSSiteEditor=void 0;function _templateObject_8272ff307ae711ea9f6d454984daed83(){var data=babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n        }\n        #editbutton {\n          position: fixed;\n          bottom: 0;\n          right: 0;\n          margin: 16px;\n          padding: 2px;\n          width: 40px;\n          height: 40px;\n          visibility: visible;\n          opacity: 1;\n          transition: all 0.4s ease;\n          z-index: 1000;\n        }\n        #outlinebutton {\n          position: fixed;\n          bottom: 0;\n          right: 46px;\n          margin: 16px;\n          padding: 2px;\n          width: 40px;\n          height: 40px;\n          visibility: visible;\n          opacity: 1;\n          transition: all 0.4s ease;\n          z-index: 1000;\n        }\n        :host([edit-mode]) #editbutton {\n          width: 100%;\n          z-index: 100;\n          right: 0;\n          bottom: 0;\n          border-radius: 0;\n          height: 80px;\n          margin: 0;\n          padding: 8px;\n          background-color: var(--paper-blue-500) !important;\n        }\n        h-a-x {\n          margin: auto;\n          display: none;\n        }\n        :host([edit-mode]) h-a-x {\n          display: block;\n        }\n      </style>\n      <iron-ajax\n        reject-with-request\n        .headers='{\"Authorization\": \"Bearer ","\"}'\n        id=\"nodeupdateajax\"\n        .url=\"","\"\n        .method=\"","\"\n        content-type=\"application/json\"\n        handle-as=\"json\"\n        @response=\"","\"\n        @last-error-changed=\"","\"\n      ></iron-ajax>\n      <iron-ajax\n        reject-with-request\n        .headers='{\"Authorization\": \"Bearer ","\"}'\n        id=\"outlineupdateajax\"\n        .url=\"","\"\n        .method=\"","\"\n        content-type=\"application/json\"\n        handle-as=\"json\"\n        @response=\"","\"\n        @last-error-changed=\"","\"\n      ></iron-ajax>\n      <iron-ajax\n        reject-with-request\n        .headers='{\"Authorization\": \"Bearer ","\"}'\n        id=\"manifestupdateajax\"\n        .url=\"","\"\n        .method=\"","\"\n        content-type=\"application/json\"\n        handle-as=\"json\"\n        @response=\"","\"\n        @last-error-changed=\"","\"\n      ></iron-ajax>\n      <iron-ajax\n        reject-with-request\n        .headers='{\"Authorization\": \"Bearer ","\"}'\n        id=\"publishajax\"\n        .loading=\"","\"\n        @loading-changed=\"","\"\n        .url=\"","\"\n        .method=\"","\"\n        content-type=\"application/json\"\n        handle-as=\"json\"\n        @response=\"","\"\n        @last-error-changed=\"","\"\n      ></iron-ajax>\n      <iron-ajax\n        reject-with-request\n        .headers='{\"Authorization\": \"Bearer ","\"}'\n        id=\"revertajax\"\n        .url=\"","\"\n        .method=\"","\"\n        content-type=\"application/json\"\n        handle-as=\"json\"\n        @response=\"","\"\n        @last-error-changed=\"","\"\n      ></iron-ajax>\n      <iron-ajax\n        reject-with-request\n        .headers='{\"Authorization\": \"Bearer ","\"}'\n        id=\"syncajax\"\n        .url=\"","\"\n        .method=\"","\"\n        content-type=\"application/json\"\n        handle-as=\"json\"\n        @response=\"","\"\n        @last-error-changed=\"","\"\n      ></iron-ajax>\n      <iron-ajax\n        reject-with-request\n        .headers='{\"Authorization\": \"Bearer ","\"}'\n        id=\"createajax\"\n        .url=\"","\"\n        .method=\"","\"\n        content-type=\"application/json\"\n        handle-as=\"json\"\n        @response=\"","\"\n        @last-error-changed=\"","\"\n        @last-response-changed=\"","\"\n      ></iron-ajax>\n      <iron-ajax\n        reject-with-request\n        .headers='{\"Authorization\": \"Bearer ","\"}'\n        id=\"deleteajax\"\n        .url=\"","\"\n        .method=\"","\"\n        content-type=\"application/json\"\n        handle-as=\"json\"\n        @response=\"","\"\n        @last-error-changed=\"","\"\n        @last-response-changed=\"","\"\n      ></iron-ajax>\n      <iron-ajax\n        reject-with-request\n        .headers='{\"Authorization\": \"Bearer ","\"}'\n        id=\"getnodefieldsajax\"\n        .url=\"","\"\n        .method=\"","\"\n        content-type=\"application/json\"\n        handle-as=\"json\"\n        @response=\"","\"\n        @last-error-changed=\"","\"\n      ></iron-ajax>\n      <iron-ajax\n        reject-with-request\n        headers='{\"Authorization\": \"Bearer ","\"}'\n        id=\"getuserdata\"\n        url=\"","\"\n        method=\"","\"\n        content-type=\"application/json\"\n        handle-as=\"json\"\n        @response=\"","\"\n        @last-error-changed=\"","\"\n      ></iron-ajax>\n      <h-a-x\n        id=\"hax\"\n        element-align=\"left\"\n        offset-margin=\"0 0 0 48px\"\n        hide-panel-ops=\"hide-panel-ops\"\n      ></h-a-x>\n    "]);_templateObject_8272ff307ae711ea9f6d454984daed83=function _templateObject_8272ff307ae711ea9f6d454984daed83(){return data};return data}/**
 * `haxcms-site-editor`
 * `haxcms editor element that provides all editing capabilities`
 *
 * @demo demo/index.html
 */var HAXCMSSiteEditor=/*#__PURE__*/function(_LitElement){babelHelpers.inherits(HAXCMSSiteEditor,_LitElement);babelHelpers.createClass(HAXCMSSiteEditor,null,[{key:"tag",/**
   * Store the tag name to make it easier to obtain directly.
   */get:function get(){return"haxcms-site-editor"}}]);function HAXCMSSiteEditor(){var _this;babelHelpers.classCallCheck(this,HAXCMSSiteEditor);_this=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(HAXCMSSiteEditor).call(this));_this.__disposer=[];_this.method="POST";_this.editMode=!1;return _this}// render function
babelHelpers.createClass(HAXCMSSiteEditor,[{key:"render",value:function render(){return(0,_litElement.html)(_templateObject_8272ff307ae711ea9f6d454984daed83(),this.jwt,this.saveNodePath,this.method,this._handleNodeResponse,this.lastErrorChanged,this.jwt,this.saveOutlinePath,this.method,this._handleOutlineResponse,this.lastErrorChanged,this.jwt,this.saveManifestPath,this.method,this._handleManifestResponse,this.lastErrorChanged,this.jwt,this.publishing,this.loadingChanged,this.publishSitePath,this.method,this._handlePublishResponse,this.lastErrorChanged,this.jwt,this.revertSitePath,this.method,this._handleRevertResponse,this.lastErrorChanged,this.jwt,this.syncSitePath,this.method,this._handleSyncResponse,this.lastErrorChanged,this.jwt,this.createNodePath,this.method,this._handleCreateResponse,this.lastErrorChanged,this.__createNodeResponseChanged,this.jwt,this.deleteNodePath,this.method,this._handleDeleteResponse,this.lastErrorChanged,this.__deleteNodeResponseChanged,this.jwt,this.getNodeFieldsPath,this.method,this._handleGetNodeFieldsResponse,this.lastErrorChanged,this.jwt,this.getUserDataPath,this.method,this._handleUserDataResponse,this.lastErrorChanged)}},{key:"__deleteNodeResponseChanged",value:function __deleteNodeResponseChanged(e){this.__deleteNodeResponse=e.detail.value}},{key:"__createNodeResponseChanged",value:function __createNodeResponseChanged(e){this.__createNodeResponse=e.detail.value}},{key:"_handleUserDataResponse",value:function _handleUserDataResponse(e){if(e.detail.response&&e.detail.response.data){_haxcmsSiteStore.store.userData=e.detail.response.data}}/**
   * Handle the last error rolling in
   */},{key:"lastErrorChanged",value:function lastErrorChanged(e){if(e.detail.value){console.error(e);// check for JWT needing refreshed vs busted but must be 403
switch(parseInt(e.detail.value.status)){// cookie data not found, need to go get it
// @notice this currently isn't possible but we could modify
// the backend in the future to support throwing 401s dynamically
// if we KNOW an event must expire the timing token
case 401:this.dispatchEvent(new CustomEvent("jwt-login-logout",{composed:!0,bubbles:!0,cancelable:!1,detail:{redirect:!0}}));break;case 403:// if this was a 403 it should be because of a bad jwt
// or out of date one. This hopefully gets a new one if not
// other listeners will ensure we redirect appropriately
this.dispatchEvent(new CustomEvent("jwt-login-refresh-token",{composed:!0,bubbles:!0,cancelable:!1,detail:{element:{obj:this,callback:"refreshRequest",params:[e.path[0]]}}}));break;default:var evt=new CustomEvent("simple-toast-show",{bubbles:!0,composed:!0,cancelable:!0,detail:{text:e.detail.value.status+" "+e.detail.value.statusText}});window.dispatchEvent(evt);break;}}}/**
   * Attempt to salvage the request that was kicked off
   * when our JWT needed refreshed
   */},{key:"refreshRequest",value:function refreshRequest(jwt,element){// force the jwt to be the updated jwt
// this helps avoid any possible event timing issue
this.jwt=jwt;element.body.jwt=jwt;element.headers={Authorization:"Bearer ".concat(this.jwt)};// again, sanity check on delay
setTimeout(function(){element.generateRequest()},0)}},{key:"loadingChanged",value:function loadingChanged(e){this.loading=e.detail.value}/**
   * Break the shadow root for this element (by design)
   */},{key:"createRenderRoot",value:function createRenderRoot(){return this}/**
   * ready life cycle
   */},{key:"firstUpdated",value:function firstUpdated(changedProperties){var _this2=this;(0,_mobxModule.autorun)(function(reaction){_this2.editMode=(0,_mobxModule.toJS)(_haxcmsSiteStore.store.editMode);_this2.__disposer.push(reaction)});(0,_mobxModule.autorun)(function(reaction){_this2.manifest=(0,_mobxModule.toJS)(_haxcmsSiteStore.store.manifest);_this2.__disposer.push(reaction)});(0,_mobxModule.autorun)(function(reaction){_this2.activeItem=(0,_mobxModule.toJS)(_haxcmsSiteStore.store.activeItem);_this2.__disposer.push(reaction)});window.SimpleToast.requestAvailability();window.SimpleModal.requestAvailability();window.addEventListener("jwt-login-refresh-error",this._tokenRefreshFailed.bind(this));window.addEventListener("hax-store-ready",this._storeReadyToGo.bind(this));window.addEventListener("json-outline-schema-active-item-changed",this._newActiveItem.bind(this));window.addEventListener("json-outline-schema-active-body-changed",this._bodyChanged.bind(this));window.addEventListener("haxcms-save-outline",this.saveOutline.bind(this));window.addEventListener("haxcms-save-node",this.saveNode.bind(this));window.addEventListener("haxcms-save-node-details",this.saveNodeDetails.bind(this));window.addEventListener("haxcms-save-site-data",this.saveManifest.bind(this));window.addEventListener("haxcms-load-node-fields",this.loadNodeFields.bind(this));window.addEventListener("haxcms-load-site-dashboard",this.loadSiteDashboard.bind(this));window.addEventListener("haxcms-load-user-data",this.loadUserData.bind(this));window.addEventListener("haxcms-publish-site",this.publishSite.bind(this));window.addEventListener("haxcms-sync-site",this.syncSite.bind(this));window.addEventListener("haxcms-git-revert-last-commit",this.revertCommit.bind(this));window.addEventListener("haxcms-create-node",this.createNode.bind(this));window.addEventListener("haxcms-delete-node",this.deleteNode.bind(this));if(window.HaxStore.ready){var detail={detail:!0};this._storeReadyToGo(detail)}var evt=new CustomEvent("simple-toast-show",{bubbles:!0,composed:!0,cancelable:!0,detail:{text:"You are logged in, edit tools shown."}});window.dispatchEvent(evt);// fire event suggesting that we were authorized to have a site editor
// so the UI and other pieces can react to this news
// this tag is going to be added by a backend if it has determined we have a valid one
window.dispatchEvent(new CustomEvent("haxcms-site-editor-loaded",{bubbles:!0,composed:!0,cancelable:!1,detail:!0}));this.dispatchEvent(new CustomEvent("haxcms-trigger-update",{bubbles:!0,composed:!0,cancelable:!1,detail:!0}))}},{key:"updated",value:function updated(changedProperties){var _this3=this;changedProperties.forEach(function(oldValue,propName){if("appStore"==propName){_this3.querySelector("#hax").setAttribute("app-store",JSON.stringify(_this3[propName]))}if("publishing"==propName){_this3._publishingChanged(_this3[propName],oldValue)}else if("activeItem"==propName){_this3.dispatchEvent(new CustomEvent("manifest-changed",{detail:_this3[propName]}));_this3._activeItemChanged(_this3[propName],oldValue)}else if("manifest"==propName){_this3.dispatchEvent(new CustomEvent("manifest-changed",{detail:_this3[propName]}));_this3._manifestChanged(_this3[propName],oldValue)}})}/**
   * Respond to a failed request to refresh the token by killing the logout process
   */},{key:"_tokenRefreshFailed",value:function _tokenRefreshFailed(e){if(401==e.detail.value.status)this.dispatchEvent(new CustomEvent("jwt-login-logout",{composed:!0,bubbles:!0,cancelable:!1,detail:{redirect:!0}}))}/**
   * Detatched life cycle
   */},{key:"disconnectedCallback",value:function disconnectedCallback(){if(this.siteDashboard){this.siteDashboard.remove();delete this.siteDashboard}for(var i in this.__disposer){this.__disposer[i].dispose()}window.removeEventListener("jwt-login-refresh-error",this._tokenRefreshFailed.bind(this));window.removeEventListener("hax-store-ready",this._storeReadyToGo.bind(this));window.removeEventListener("haxcms-save-outline",this.saveOutline.bind(this));window.removeEventListener("haxcms-save-node",this.saveNode.bind(this));window.removeEventListener("haxcms-save-node-details",this.saveNodeDetails.bind(this));window.removeEventListener("haxcms-save-site-data",this.saveManifest.bind(this));window.removeEventListener("haxcms-publish-site",this.publishSite.bind(this));window.removeEventListener("haxcms-sync-site",this.syncSite.bind(this));window.removeEventListener("haxcms-git-revert-last-commit",this.revertCommit.bind(this));window.removeEventListener("json-outline-schema-active-item-changed",this._newActiveItem.bind(this));window.removeEventListener("json-outline-schema-active-body-changed",this._bodyChanged.bind(this));window.removeEventListener("haxcms-load-node-fields",this.loadNodeFields.bind(this));window.removeEventListener("haxcms-load-site-dashboard",this.loadSiteDashboard.bind(this));window.removeEventListener("haxcms-load-user-data",this.loadUserData.bind(this));window.removeEventListener("haxcms-create-node",this.createNode.bind(this));window.removeEventListener("haxcms-delete-node",this.deleteNode.bind(this));babelHelpers.get(babelHelpers.getPrototypeOf(HAXCMSSiteEditor.prototype),"disconnectedCallback",this).call(this)}/**
   * Load user data from backend
   */},{key:"loadUserData",value:function loadUserData(e){this.querySelector("#getuserdata").body={jwt:this.jwt};this.querySelector("#getuserdata").generateRequest()}/**
   * Load and display node fields
   */},{key:"loadNodeFields",value:function loadNodeFields(e){this.__nodeFieldsInvoked=e.detail;this.querySelector("#getnodefieldsajax").body={jwt:this.jwt,token:this.getFormToken,site:{name:this.manifest.metadata.site.name},node:{id:this.activeItem.id}};this.querySelector("#getnodefieldsajax").generateRequest()}/**
   * Load site fields
   */},{key:"loadSiteDashboard",value:function loadSiteDashboard(e){this.__siteFieldsInvoked=e.detail;// ensure it exists as we do this on the fly and clean up constantly
if(!this.siteDashboard){var builder=document.getElementsByTagName("haxcms-site-builder")[0];this.siteDashboard=document.createElement("haxcms-site-dashboard");this.siteDashboard.headers={Authorization:"Bearer ".concat(this.jwt)};this.siteDashboard.loadEndpoint=this.getSiteFieldsPath;this.siteDashboard.method=this.method;// insert right before the builder, you sneaky thing you
builder.parentNode.insertBefore(this.siteDashboard,builder)}this.siteDashboard.body={jwt:this.jwt,token:this.getFormToken,site:{name:this.manifest.metadata.site.name}};this.siteDashboard.headers={Authorization:"Bearer ".concat(this.jwt)};setTimeout(function(){_haxcmsSiteStore.store.dashboardOpened=!_haxcmsSiteStore.store.dashboardOpened},300)}/**
   * Handle getting fields response
   */},{key:"_handleGetNodeFieldsResponse",value:function _handleGetNodeFieldsResponse(e){var wiring=new _HAXWiring.HAXWiring;this._haxSchema=wiring.prototypeHaxProperties();this._haxSchema.settings=e.detail.response.haxSchema;var values=e.detail.response.values,c=document.createElement("hax-schema-form");// set a min width of 50 viewable
c.style.minWidth="50vw";for(var key in this._haxSchema.settings){var schema=wiring.getHaxJSONSchema(key,this._haxSchema);for(var i in schema.properties){if(values[i]){schema.properties[i].value=values[i]}}c.set(key+"Schema",schema)}this.__fieldsForm=c;// we get back HAXSchema from the server
var b1=document.createElement("paper-button"),icon=document.createElement("iron-icon");icon.icon="icons:save";b1.appendChild(icon);b1.appendChild(document.createTextNode("Save fields"));b1.style.color="white";b1.style.backgroundColor="#2196f3";b1.setAttribute("dialog-confirm","dialog-confirm");b1.addEventListener("click",this._saveNodeFieldsTap.bind(this));var b2=document.createElement("paper-button");b2.appendChild(document.createTextNode("cancel"));b2.setAttribute("dialog-dismiss","dialog-dismiss");var b=document.createElement("div");b.style.position="absolute";b.style.bottom=0;b.style.left=0;b.style.right=0;b.style.zIndex=1e6;b.appendChild(b1);b.appendChild(b2);var evt=new CustomEvent("simple-modal-show",{bubbles:!0,composed:!0,cancelable:!1,detail:{title:"Edit "+_haxcmsSiteStore.store.activeTitle+" fields",styles:{"--simple-modal-width":"75vw","--simple-modal-max-width":"75vw"},elements:{content:c,buttons:b},invokedBy:this.__nodeFieldsInvoked,clone:!1,modal:!0}});window.dispatchEvent(evt)}},{key:"_schemaFormValueChanged",value:function _schemaFormValueChanged(e){var customTag={property:"custom-theme-tag",title:"Custom theme tag",description:"Tag that supplies the custom theme",inputMethod:"textfield",required:!0,validationType:"text"};// @todo figure out why this isn't adding a field in on the fly
/*if (e.target.value.theme === "haxcms-custom-theme") {
      e.target.addField(customTag.property, customTag);
      e.target.value[customTag.property] = customTag.property;
    } else {
      e.target.removeField(customTag.property);
      delete e.target.value[customTag.property];
    }*/}/**
   * Save the fields as we get tapped
   */},{key:"_saveNodeFieldsTap",value:function _saveNodeFieldsTap(e){var values=this.__fieldsForm.value;values.id=this.activeItem.id;// fire event with details for saving
window.dispatchEvent(new CustomEvent("haxcms-save-node-details",{bubbles:!0,composed:!0,cancelable:!0,detail:values}));// fire event to close the modal
window.dispatchEvent(new CustomEvent("simple-modal-hide",{bubbles:!0,composed:!0,cancelable:!0,detail:{}}))}/**
   * Save the fields as we get tapped
   */},{key:"_saveSiteFieldsTap",value:function _saveSiteFieldsTap(e){// fire event with details for saving
window.dispatchEvent(new CustomEvent("haxcms-save-site-data",{bubbles:!0,composed:!0,cancelable:!0,detail:this.querySelector("#siteform").submit()}));// fire event to close the modal
window.dispatchEvent(new CustomEvent("simple-modal-hide",{bubbles:!0,composed:!0,cancelable:!0,detail:{}}))}/**
   * create node event
   */},{key:"createNode",value:function createNode(e){if(e.detail.values){this.querySelector("#createajax").body={jwt:this.jwt,site:{name:this.manifest.metadata.site.name},node:e.detail.values};this.querySelector("#createajax").generateRequest();var evt=new CustomEvent("simple-modal-hide",{bubbles:!0,composed:!0,cancelable:!0,detail:{}});window.dispatchEvent(evt)}}},{key:"_handleCreateResponse",value:function _handleCreateResponse(response){var evt=new CustomEvent("simple-toast-show",{bubbles:!0,composed:!0,cancelable:!0,detail:{text:"Created ".concat(this.__createNodeResponse.title,"!"),duration:3e3}});window.dispatchEvent(evt);this.dispatchEvent(new CustomEvent("haxcms-trigger-update",{bubbles:!0,composed:!0,cancelable:!1,detail:!0}))}/**
   * delete the node we just got
   */},{key:"deleteNode",value:function deleteNode(e){this.querySelector("#deleteajax").body={jwt:this.jwt,site:{name:this.manifest.metadata.site.name},node:{id:e.detail.item.id}};this.querySelector("#deleteajax").generateRequest();var evt=new CustomEvent("simple-modal-hide",{bubbles:!0,composed:!0,cancelable:!0,detail:{}});window.dispatchEvent(evt)}/**
   * node deleted response
   */},{key:"_handleDeleteResponse",value:function _handleDeleteResponse(response){var evt=new CustomEvent("simple-toast-show",{bubbles:!0,composed:!0,cancelable:!0,detail:{text:"Deleted ".concat(this.__deleteNodeResponse.title),duration:3e3}});this.dispatchEvent(evt);this.dispatchEvent(new CustomEvent("haxcms-trigger-update",{bubbles:!0,composed:!0,cancelable:!1,detail:!0}))}/**
   * Establish certain global settings in HAX once it claims to be ready to go
   */},{key:"_storeReadyToGo",value:function _storeReadyToGo(event){if(event.detail){window.HaxStore.instance.connectionRewrites.appendJwt="jwt"}}/**
   * notice publishing callback changing state
   */},{key:"_publishingChanged",value:function _publishingChanged(newValue,oldValue){if(newValue){var evt=new CustomEvent("simple-toast-show",{bubbles:!0,composed:!0,cancelable:!0,detail:{text:"Publishing...",duration:0}});window.dispatchEvent(evt)}else if(!newValue&&oldValue){var _evt=new CustomEvent("simple-toast-show",{bubbles:!0,composed:!0,cancelable:!0,detail:{text:"Publishing...",duration:3e3}});window.dispatchEvent(_evt)}}/**
   * react to manifest being changed
   */},{key:"_manifestChanged",value:function _manifestChanged(newValue){if(this.activeItem&&newValue.metadata){// set upload manager to point to this location in a more dynamic fashion
window.HaxStore.instance.connectionRewrites.appendUploadEndPoint="siteName="+newValue.metadata.site.name+"&nodeId="+this.activeItem.id}}/**
   * update the internal active item
   */},{key:"_newActiveItem",value:function _newActiveItem(e){this.activeItem=e.detail}/**
   * active item changed
   */},{key:"_activeItemChanged",value:function _activeItemChanged(newValue,oldValue){if(newValue&&this.manifest){// set upload manager to point to this location in a more dynamic fashion
window.HaxStore.instance.connectionRewrites.appendUploadEndPoint="siteName="+this.manifest.metadata.site.name+"&nodeId="+newValue.id}}/**
   * handle update responses for nodes and outlines
   */},{key:"_handleNodeResponse",value:function _handleNodeResponse(e){// node response may include the item that got updated
// it also may be a new path so let's ensure that's reflected
if("undefined"!==typeof e.detail.location&&this.activeItem.location!==e.detail.location){window.location(e.detail.location);window.history.pushState({},null,e.detail.location);window.dispatchEvent(new PopStateEvent("popstate"));var active=this.manifest.items.find(function(i){return i.id===e.detail.id});this.activeItem=active;this.dispatchEvent(new CustomEvent("json-outline-schema-active-item-changed",{bubbles:!0,composed:!0,cancelable:!0,detail:active}))}var evt=new CustomEvent("simple-toast-show",{bubbles:!0,composed:!0,cancelable:!0,detail:{text:"Page saved!",duration:4e3}});window.dispatchEvent(evt);// updates the manifest
this.dispatchEvent(new CustomEvent("haxcms-trigger-update",{bubbles:!0,composed:!0,cancelable:!1,detail:!0}));// updates the node contents itself
this.dispatchEvent(new CustomEvent("haxcms-trigger-update-node",{bubbles:!0,composed:!0,cancelable:!1,detail:!0}))}},{key:"_handleOutlineResponse",value:function _handleOutlineResponse(e){var _this4=this,evt=new CustomEvent("simple-toast-show",{bubbles:!0,composed:!0,cancelable:!0,detail:{text:"Outline saved!",duration:3e3}});window.dispatchEvent(evt);this.dispatchEvent(new CustomEvent("haxcms-trigger-update",{bubbles:!0,composed:!0,cancelable:!1,detail:!0}));setTimeout(function(){window.dispatchEvent(evt);_this4.dispatchEvent(new CustomEvent("haxcms-trigger-update",{bubbles:!0,composed:!0,cancelable:!1,detail:!0}))},100)}},{key:"_handleManifestResponse",value:function _handleManifestResponse(e){// trigger a refresh of the data in node
var evt=new CustomEvent("simple-toast-show",{bubbles:!0,composed:!0,cancelable:!0,detail:{text:"Site details saved!",duration:3e3}});_haxcmsSiteStore.store.dashboardOpened=!1;this.dispatchEvent(evt);this.dispatchEvent(new CustomEvent("haxcms-trigger-update",{bubbles:!0,composed:!0,cancelable:!1,detail:!0}))}/**
   * Tell the user we undid their last state of the site and trigger
   * everything to update to reflect this
   */},{key:"_handleRevertResponse",value:function _handleRevertResponse(e){// trigger a refresh of the data in node
var evt=new CustomEvent("simple-toast-show",{bubbles:!0,composed:!0,cancelable:!0,detail:{text:"Last save undone",duration:3e3}});this.dispatchEvent(evt);this.dispatchEvent(new CustomEvent("haxcms-trigger-update",{bubbles:!0,composed:!0,cancelable:!1,detail:!0}))}/**
   * Handle sync response that site may have changed or been updated
   */},{key:"_handleSyncResponse",value:function _handleSyncResponse(e){// trigger a refresh of the data in node
var evt=new CustomEvent("simple-toast-show",{bubbles:!0,composed:!0,cancelable:!0,detail:{text:"Site synced",duration:3e3}});this.dispatchEvent(evt);this.dispatchEvent(new CustomEvent("haxcms-trigger-update",{bubbles:!0,composed:!0,cancelable:!1,detail:!0}));_haxcmsSiteStore.store.dashboardOpened=!1}/**
   * Publish response
   */},{key:"_handlePublishResponse",value:function _handlePublishResponse(e){var data=e.detail.response,content=document.createElement("span");// show the published response
content.innerHTML="\n    <a href=\"".concat(data.url,"\" target=\"_blank\">\n      <paper-button raised style=\"color:yellow;text-transform: none;font-weight: bold;\">\n      ").concat(data.label,"\n      </paper-button>\n    </a>");var evt=new CustomEvent("simple-toast-show",{bubbles:!0,composed:!0,cancelable:!0,detail:{text:data.response,duration:1e4,slot:content.cloneNode(!0)}});window.dispatchEvent(evt);_haxcmsSiteStore.store.dashboardOpened=!1}/**
   * Save node event
   */},{key:"saveNode",value:function saveNode(e){// send the request
if(this.saveNodePath){var body=window.HaxStore.instance.activeHaxBody.haxToContent();this.querySelector("#nodeupdateajax").body={jwt:this.jwt,site:{name:this.manifest.metadata.site.name},node:{id:this.activeItem.id,body:body,schema:window.HaxStore.htmlToHaxElements(body)}};this.querySelector("#nodeupdateajax").generateRequest()}}/**
   * Save node event
   */},{key:"saveNodeDetails",value:function saveNodeDetails(e){// send the request
if(this.saveNodePath){this.querySelector("#nodeupdateajax").body={jwt:this.jwt,site:{name:this.manifest.metadata.site.name},node:{id:e.detail.id,details:e.detail}};this.querySelector("#nodeupdateajax").generateRequest()}}/**
   * Save the outline based on an event firing.
   */},{key:"saveOutline",value:function saveOutline(e){if(this.saveOutlinePath){this.querySelector("#outlineupdateajax").body={jwt:this.jwt,site:{name:this.manifest.metadata.site.name},items:e.detail};this.querySelector("#outlineupdateajax").generateRequest()}}/**
   * Save the outline based on an event firing.
   */},{key:"saveManifest",value:function saveManifest(e){// now let's work on the outline
var values=e.detail;// if we have a cssVariable selected then generate a hexCode off of it
if(values.cssVariable){values.hexCode=window.SimpleColorsStyles.colors[values.cssVariable.replace("--simple-colors-default-theme-","").replace("-7","")][6]}// add in our standard pieces
values.jwt=this.jwt;if(values.site){values.site.name=this.manifest.metadata.site.name}else{values.site={name:this.manifest.metadata.site.name}}if(this.saveManifestPath){this.querySelector("#manifestupdateajax").body=values;this.querySelector("#manifestupdateajax").generateRequest()}}/**
   * Notice body of content has changed and import into HAX
   */},{key:"_bodyChanged",value:function _bodyChanged(e){if(window.HaxStore.instance.activeHaxBody){window.HaxStore.instance.activeHaxBody.importContent(e.detail)}}/**
   * Save the outline based on an event firing.
   */},{key:"publishSite",value:function publishSite(e){if(this.publishSitePath){this.querySelector("#publishajax").body={jwt:this.jwt,site:{name:this.manifest.metadata.site.name}};this.querySelector("#publishajax").generateRequest()}}/**
   * Revert last commit
   */},{key:"syncSite",value:function syncSite(e){if(this.syncSitePath){this.querySelector("#syncajax").body={jwt:this.jwt,site:{name:_haxcmsSiteStore.store.manifest.metadata.site.name}};this.querySelector("#syncajax").generateRequest()}}/**
   * Revert last commit
   */},{key:"revertCommit",value:function revertCommit(e){if(this.revertSitePath){this.querySelector("#revertajax").body={jwt:this.jwt,site:{name:_haxcmsSiteStore.store.manifest.metadata.site.name}};this.querySelector("#revertajax").generateRequest()}}}],[{key:"properties",get:function get(){return{getUserDataPath:{type:String,attribute:"get-user-data-path"},/**
       * Allow method to be overridden, useful in local testing
       */method:{type:String},/**
       * JSON Web token, it'll come from a global call if it's available
       */jwt:{type:String},/**
       * end point for saving nodes
       */saveNodePath:{type:String,attribute:"save-node-path"},/**
       * end point for create new nodes
       */createNodePath:{type:String,attribute:"create-node-path"},/**
       * end point for delete nodes
       */deleteNodePath:{type:String,attribute:"delete-node-path"},/**
       * end point for saving manifest
       */saveManifestPath:{type:String,attribute:"save-manifest-path"},/**
       * end point for publishing
       */publishSitePath:{type:String,attribute:"publish-site-path"},/**
       * end point for revert
       */revertSitePath:{type:String,attribute:"revert-site-path"},appendTarget:{type:Object},appElement:{type:Object},/**
       * end point for sync
       */syncSitePath:{type:String,attribute:"sync-site-path"},/**
       * Publishing end point, this has CDN implications so show message
       */publishing:{type:Boolean},/**
       * end point for saving outline
       */saveOutlinePath:{type:String,attribute:"save-outline-path"},/**
       * appStore object from backend
       */appStore:{type:Object},/**
       * if the node is in an edit state or not
       */editMode:{type:Boolean,reflect:!0,attribute:"edit-mode"},/**
       * Active item of the node being worked on, JSON outline schema item format
       */activeItem:{type:Object},/**
       * Outline of items in json outline schema format
       */manifest:{type:Object},getNodeFieldsPath:{type:String,attribute:"get-node-fields-path"},getSiteFieldsPath:{type:String,attribute:"save-site-fields-path"},getFormToken:{type:String,attribute:"get-form-token"},/**
       * Site dashboard element reference
       */siteDashboard:{type:Object}}}}]);return HAXCMSSiteEditor}(_litElement.LitElement);_exports.HAXCMSSiteEditor=HAXCMSSiteEditor;window.customElements.define(HAXCMSSiteEditor.tag,HAXCMSSiteEditor)});