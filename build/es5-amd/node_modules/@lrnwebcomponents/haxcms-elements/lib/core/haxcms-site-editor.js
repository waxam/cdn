define(["exports","require","../../../../@polymer/polymer/polymer-element.js","../../../../@polymer/polymer/lib/utils/async.js","./haxcms-site-store.js","../../../../mobx/lib/mobx.module.js","../../../../@polymer/polymer/lib/utils/render-status.js","../../../hax-body-behaviors/lib/HAXWiring.js","../../../simple-colors/simple-colors.js","../../../../@polymer/iron-ajax/iron-ajax.js","../../../jwt-login/jwt-login.js","../../../h-a-x/h-a-x.js","../../../simple-toast/simple-toast.js","../../../simple-modal/simple-modal.js"],function(_exports,_require,_polymerElement,_async,_haxcmsSiteStore,_mobxModule,_renderStatus,_HAXWiring,_simpleColors,_ironAjax,_jwtLogin,_hAX,_simpleToast,_simpleModal){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.HAXCMSSiteEditor=void 0;_require=babelHelpers.interopRequireWildcard(_require);function _templateObject_24cb6440984711e9810e6d9eee9273ff(){var data=babelHelpers.taggedTemplateLiteral(["\n      <style>\n        :host {\n          display: block;\n        }\n        #editbutton {\n          position: fixed;\n          bottom: 0;\n          right: 0;\n          margin: 16px;\n          padding: 2px;\n          width: 40px;\n          height: 40px;\n          visibility: visible;\n          opacity: 1;\n          transition: all 0.4s ease;\n          z-index: 1000;\n        }\n        #outlinebutton {\n          position: fixed;\n          bottom: 0;\n          right: 46px;\n          margin: 16px;\n          padding: 2px;\n          width: 40px;\n          height: 40px;\n          visibility: visible;\n          opacity: 1;\n          transition: all 0.4s ease;\n          z-index: 1000;\n        }\n        :host([edit-mode]) #editbutton {\n          width: 100%;\n          z-index: 100;\n          right: 0;\n          bottom: 0;\n          border-radius: 0;\n          height: 80px;\n          margin: 0;\n          padding: 8px;\n          background-color: var(--paper-blue-500) !important;\n        }\n        h-a-x {\n          padding: 80px 40px;\n          margin: auto;\n          display: none;\n        }\n        :host([edit-mode]) h-a-x {\n          display: block;\n        }\n      </style>\n      <iron-ajax\n        headers='{\"Authorization\": \"Bearer [[jwt]]\"}'\n        id=\"nodeupdateajax\"\n        url=\"[[saveNodePath]]\"\n        method=\"[[method]]\"\n        body=\"[[updateNodeData]]\"\n        content-type=\"application/json\"\n        handle-as=\"json\"\n        on-response=\"_handleNodeResponse\"\n        last-error=\"{{lastError}}\"\n      ></iron-ajax>\n      <iron-ajax\n        headers='{\"Authorization\": \"Bearer [[jwt]]\"}'\n        id=\"outlineupdateajax\"\n        url=\"[[saveOutlinePath]]\"\n        method=\"[[method]]\"\n        body=\"[[updateOutlineData]]\"\n        content-type=\"application/json\"\n        handle-as=\"json\"\n        on-response=\"_handleOutlineResponse\"\n        last-error=\"{{lastError}}\"\n      ></iron-ajax>\n      <iron-ajax\n        headers='{\"Authorization\": \"Bearer [[jwt]]\"}'\n        id=\"getfieldsajax\"\n        url=\"[[getNodeFieldsPath]]\"\n        method=\"[[method]]\"\n        body=\"[[getFieldsData]]\"\n        content-type=\"application/json\"\n        handle-as=\"json\"\n        on-response=\"_handleGetFieldsResponse\"\n        last-error=\"{{lastError}}\"\n      ></iron-ajax>\n      <iron-ajax\n        headers='{\"Authorization\": \"Bearer [[jwt]]\"}'\n        id=\"getsitefieldsajax\"\n        url=\"[[getSiteFieldsPath]]\"\n        method=\"[[method]]\"\n        body=\"[[getSiteFieldsData]]\"\n        content-type=\"application/json\"\n        handle-as=\"json\"\n        on-response=\"_handleGetSiteFieldsResponse\"\n        last-error=\"{{lastError}}\"\n      ></iron-ajax>\n      <iron-ajax\n        headers='{\"Authorization\": \"Bearer [[jwt]]\"}'\n        id=\"manifestupdateajax\"\n        url=\"[[saveManifestPath]]\"\n        method=\"[[method]]\"\n        body=\"[[updateManifestData]]\"\n        content-type=\"application/json\"\n        handle-as=\"json\"\n        on-response=\"_handleManifestResponse\"\n        last-error=\"{{lastError}}\"\n      ></iron-ajax>\n      <iron-ajax\n        headers='{\"Authorization\": \"Bearer [[jwt]]\"}'\n        id=\"publishajax\"\n        loading=\"{{publishing}}\"\n        url=\"[[publishSitePath]]\"\n        method=\"[[method]]\"\n        body=\"[[publishSiteData]]\"\n        content-type=\"application/json\"\n        handle-as=\"json\"\n        on-response=\"_handlePublishResponse\"\n        last-error=\"{{lastError}}\"\n      ></iron-ajax>\n      <iron-ajax\n        headers='{\"Authorization\": \"Bearer [[jwt]]\"}'\n        id=\"revertajax\"\n        url=\"[[revertSitePath]]\"\n        method=\"[[method]]\"\n        body=\"[[revertSiteData]]\"\n        content-type=\"application/json\"\n        handle-as=\"json\"\n        on-response=\"_handleRevertResponse\"\n        last-error=\"{{lastError}}\"\n      ></iron-ajax>\n      <iron-ajax\n        headers='{\"Authorization\": \"Bearer [[jwt]]\"}'\n        id=\"createajax\"\n        url=\"[[createNodePath]]\"\n        method=\"[[method]]\"\n        body=\"[[createData]]\"\n        content-type=\"application/json\"\n        handle-as=\"json\"\n        on-response=\"_handleCreateResponse\"\n        last-response=\"{{__createNodeResponse}}\"\n        last-error=\"{{lastError}}\"\n      ></iron-ajax>\n      <iron-ajax\n        headers='{\"Authorization\": \"Bearer [[jwt]]\"}'\n        id=\"deleteajax\"\n        url=\"[[deleteNodePath]]\"\n        method=\"[[method]]\"\n        body=\"[[deleteData]]\"\n        content-type=\"application/json\"\n        handle-as=\"json\"\n        on-response=\"_handleDeleteResponse\"\n        last-response=\"{{__deleteNodeResponse}}\"\n        last-error=\"{{lastError}}\"\n      ></iron-ajax>\n      <h-a-x app-store$=\"[[appStore]]\" hide-panel-ops></h-a-x>\n    "]);_templateObject_24cb6440984711e9810e6d9eee9273ff=function _templateObject_24cb6440984711e9810e6d9eee9273ff(){return data};return data}/**
 * `haxcms-site-editor`
 * `haxcms editor element that provides all editing capabilities`
 *
 * @demo demo/index.html
 */var HAXCMSSiteEditor=/*#__PURE__*/function(_PolymerElement){babelHelpers.inherits(HAXCMSSiteEditor,_PolymerElement);babelHelpers.createClass(HAXCMSSiteEditor,null,[{key:"tag",/**
   * Store the tag name to make it easier to obtain directly.
   * @notice function name must be here for tooling to operate correctly
   */get:function get(){return"haxcms-site-editor"}}]);function HAXCMSSiteEditor(){var _this;babelHelpers.classCallCheck(this,HAXCMSSiteEditor);_this=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(HAXCMSSiteEditor).call(this));_this.__disposer=[];return _this}// render function
babelHelpers.createClass(HAXCMSSiteEditor,[{key:"_lastErrorChanged",value:function _lastErrorChanged(newValue){if(newValue){console.error(newValue);var evt=new CustomEvent("simple-toast-show",{bubbles:!0,composed:!0,cancelable:!0,detail:{text:newValue.error}});window.dispatchEvent(evt)}}/**
   * Break the shadow root for this element (by design)
   */},{key:"_attachDom",value:function _attachDom(dom){this.appendChild(dom)}/**
   * ready life cycle
   */},{key:"ready",value:function ready(){babelHelpers.get(babelHelpers.getPrototypeOf(HAXCMSSiteEditor.prototype),"ready",this).call(this);(0,_renderStatus.afterNextRender)(this,function(){var _this2=this;new Promise(function(res,rej){return _require.default(["../../../../@polymer/paper-button/paper-button.js"],res,rej)});new Promise(function(res,rej){return _require.default(["../../../hax-body/lib/hax-schema-form.js"],res,rej)});(0,_mobxModule.autorun)(function(reaction){_this2.editMode=(0,_mobxModule.toJS)(_haxcmsSiteStore.store.editMode);_this2.__disposer.push(reaction)});(0,_mobxModule.autorun)(function(reaction){_this2.manifest=(0,_mobxModule.toJS)(_haxcmsSiteStore.store.manifest);_this2.__disposer.push(reaction)});(0,_mobxModule.autorun)(function(reaction){_this2.activeItem=(0,_mobxModule.toJS)(_haxcmsSiteStore.store.activeItem);_this2.__disposer.push(reaction)});window.SimpleToast.requestAvailability();window.SimpleModal.requestAvailability();window.addEventListener("hax-store-ready",this._storeReadyToGo.bind(this));window.addEventListener("json-outline-schema-active-item-changed",this._newActiveItem.bind(this));window.addEventListener("json-outline-schema-active-body-changed",this._bodyChanged.bind(this));window.addEventListener("haxcms-save-outline",this.saveOutline.bind(this));window.addEventListener("haxcms-save-node",this.saveNode.bind(this));window.addEventListener("haxcms-save-node-details",this.saveNodeDetails.bind(this));window.addEventListener("haxcms-save-site-data",this.saveManifest.bind(this));window.addEventListener("haxcms-load-node-fields",this.loadNodeFields.bind(this));window.addEventListener("haxcms-load-site-fields",this.loadSiteFields.bind(this));window.addEventListener("haxcms-create-node",this.createNode.bind(this));window.addEventListener("haxcms-delete-node",this.deleteNode.bind(this));window.addEventListener("haxcms-publish-site",this.publishSite.bind(this));window.addEventListener("haxcms-git-revert-last-commit",this.revertCommit.bind(this));_async.microTask.run(function(){_this2.updateStyles();if(window.HaxStore.ready){var detail={detail:!0};_this2._storeReadyToGo(detail)}});var evt=new CustomEvent("simple-toast-show",{bubbles:!0,composed:!0,cancelable:!0,detail:{text:"You are logged in, edit tools shown."}});window.dispatchEvent(evt)})}},{key:"connectedCallback",value:function connectedCallback(){babelHelpers.get(babelHelpers.getPrototypeOf(HAXCMSSiteEditor.prototype),"connectedCallback",this).call(this);// fire event suggesting that we were authorized to have a site editor
// so the UI and other pieces can react to this news
// this tag is going to be added by a backend if it has determined we have a valid one
window.dispatchEvent(new CustomEvent("haxcms-site-editor-loaded",{bubbles:!0,composed:!0,cancelable:!1,detail:!0}))}/**
   * Detatched life cycle
   */},{key:"disconnectedCallback",value:function disconnectedCallback(){for(var i in this.__disposer){this.__disposer[i].dispose()}window.removeEventListener("hax-store-ready",this._storeReadyToGo.bind(this));window.removeEventListener("haxcms-save-outline",this.saveOutline.bind(this));window.removeEventListener("haxcms-save-node",this.saveNode.bind(this));window.removeEventListener("haxcms-save-node-details",this.saveNodeDetails.bind(this));window.removeEventListener("haxcms-save-site-data",this.saveManifest.bind(this));window.removeEventListener("haxcms-publish-site",this.publishSite.bind(this));window.removeEventListener("haxcms-git-revert-last-commit",this.revertCommit.bind(this));window.removeEventListener("json-outline-schema-active-item-changed",this._newActiveItem.bind(this));window.removeEventListener("json-outline-schema-active-body-changed",this._bodyChanged.bind(this));window.removeEventListener("haxcms-load-node-fields",this.loadNodeFields.bind(this));window.removeEventListener("haxcms-load-site-fields",this.loadSiteFields.bind(this));window.removeEventListener("haxcms-create-node",this.createNode.bind(this));window.removeEventListener("haxcms-delete-node",this.deleteNode.bind(this));babelHelpers.get(babelHelpers.getPrototypeOf(HAXCMSSiteEditor.prototype),"disconnectedCallback",this).call(this)}/**
   * Load and display node fields
   */},{key:"loadNodeFields",value:function loadNodeFields(e){this.__nodeFieldsInvoked=e.detail;// pass along the jwt for user "session" purposes
this.set("getFieldsData.jwt",this.jwt);this.notifyPath("getFieldsData.jwt");this.set("getFieldsData.token",this.getFieldsToken);this.notifyPath("getFieldsData.token");this.set("getFieldsData.siteName",this.manifest.metadata.siteName);this.notifyPath("getFieldsData.siteName");this.set("getFieldsData.nodeId",this.activeItem.id);this.notifyPath("getFieldsData.nodeId");this.$.getfieldsajax.generateRequest()}/**
   * Load site fields
   */},{key:"loadSiteFields",value:function loadSiteFields(e){this.__siteFieldsInvoked=e.detail;// pass along the jwt for user "session" purposes
this.set("getSiteFieldsData.jwt",this.jwt);this.notifyPath("getSiteFieldsData.jwt");this.set("getSiteFieldsData.token",this.getFieldsToken);this.notifyPath("getSiteFieldsData.token");this.set("getSiteFieldsData.siteName",this.manifest.metadata.siteName);this.notifyPath("getSiteFieldsData.siteName");this.$.getsitefieldsajax.generateRequest()}/**
   * Handle getting fields response
   */},{key:"_handleGetFieldsResponse",value:function _handleGetFieldsResponse(e){// we get back HAXSchema from the server
var wiring=new _HAXWiring.HAXWiring;this._haxSchema=wiring.prototypeHaxProperties();this._haxSchema.settings=e.detail.response.haxSchema;var values=e.detail.response.values,c=document.createElement("hax-schema-form");// set a min width of 50 viewable
c.style.minWidth="50vw";for(var key in this._haxSchema.settings){var schema=wiring.getHaxJSONSchema(key,this._haxSchema);for(var i in schema.properties){if(values[i]){schema.properties[i].value=values[i]}}c.set(key+"Schema",schema)}this.__fieldsForm=c;var b1=document.createElement("paper-button");b1.raised=!0;var icon=document.createElement("iron-icon");icon.icon="icons:save";b1.appendChild(icon);b1.appendChild(document.createTextNode("Save fields"));b1.setAttribute("dialog-confirm","dialog-confirm");b1.addEventListener("click",this._saveFieldsTap.bind(this));var b2=document.createElement("paper-button");b2.appendChild(document.createTextNode("cancel"));b2.setAttribute("dialog-dismiss","dialog-dismiss");var b=document.createElement("div");b.style.position="absolute";b.style.bottom=0;b.style.left=0;b.style.right=0;b.style.zIndex=1e6;b.style.backgroundColor="#ddd";b.appendChild(b1);b.appendChild(b2);var evt=new CustomEvent("simple-modal-show",{bubbles:!0,composed:!0,cancelable:!1,styles:{"--simple-modal-width":"70vw","--simple-modal-height":"70vh","--simple-modal-max-width":"70vw","--simple-modal-max-height":"70vh"},detail:{title:"Edit "+_haxcmsSiteStore.store.activeTitle+" fields",elements:{content:c,buttons:b},invokedBy:this.__nodeFieldsInvoked,clone:!1,modal:!0}});window.dispatchEvent(evt)}/**
   * Handle getting fields response
   */},{key:"_handleGetSiteFieldsResponse",value:function _handleGetSiteFieldsResponse(e){// we get back HAXSchema from the server
var wiring=new _HAXWiring.HAXWiring;this._haxSchema=wiring.prototypeHaxProperties();this._haxSchema.settings=e.detail.response.haxSchema;var values=e.detail.response.values,h="";if(this.manifest.metadata.publishedLocation){h=document.createElement("a");h.setAttribute("tabindex","-1");h.setAttribute("href",this.manifest.metadata.publishedLocation);h.setAttribute("target","_blank");h.innerHTML="<paper-button raised style=\"text-transform:none;\">Access published version</paper-button>"}var c=document.createElement("hax-schema-form");c.addEventListener("value-changed",this._schemaFormValueChanged.bind(this));// set a min width of 50 viewable
c.style.minWidth="50vw";for(var key in this._haxSchema.settings){var schema=wiring.getHaxJSONSchema(key,this._haxSchema);for(var i in schema.properties){if(values[i]){schema.properties[i].value=values[i]}}c.set(key+"Schema",schema)}this.__siteFieldsForm=c;// build a save button
var b1=document.createElement("paper-button");b1.raised=!0;var icon=document.createElement("iron-icon");icon.icon="icons:save";b1.appendChild(icon);b1.appendChild(document.createTextNode("Save fields"));b1.setAttribute("dialog-confirm","dialog-confirm");b1.addEventListener("click",this._saveSiteFieldsTap.bind(this));// cancel
var b2=document.createElement("paper-button");b2.appendChild(document.createTextNode("cancel"));b2.setAttribute("dialog-dismiss","dialog-dismiss");// publish button
var icon2=document.createElement("iron-icon");icon2.icon="icons:cloud-upload";var b3=document.createElement("paper-button");b3.raised=!0;b3.appendChild(icon2);b3.appendChild(document.createTextNode("Publish"));b3.setAttribute("dialog-confirm","dialog-confirm");b3.addEventListener("click",this._publishTap.bind(this));b3.style.minWidth="100px";b3.style.backgroundColor="var(--haxcms-color)";var b4=document.createElement("paper-button");b4.raised=!0;b4.appendChild(document.createTextNode("Roll site back"));b4.setAttribute("dialog-confirm","dialog-confirm");b4.addEventListener("click",this._revertCommit.bind(this));b4.style.minWidth="100px";b4.style.marginLeft="50px";b4.style.backgroundColor="var(--simple-colors-default-theme-red-8)";b4.style.color="white";var b=document.createElement("div");b.style.position="absolute";b.style.bottom=0;b.style.left=0;b.style.right=0;b.style.zIndex=1e6;b.style.backgroundColor="#ddd";b.appendChild(b1);b.appendChild(b2);b.appendChild(b3);b.appendChild(b4);window.dispatchEvent(new CustomEvent("simple-modal-show",{bubbles:!0,composed:!0,cancelable:!1,detail:{title:"Edit site fields",elements:{header:h,content:c,buttons:b},invokedBy:this.__siteFieldsInvoked,clone:!1,modal:!0}}))}},{key:"_schemaFormValueChanged",value:function _schemaFormValueChanged(e){var customTag={property:"custom-theme-tag",title:"Custom theme tag",description:"Tag that supplies the custom theme",inputMethod:"textfield",required:!0,validationType:"text"};// @todo figure out why this isn't adding a field in on the fly
/*if (e.target.value.theme === "haxcms-custom-theme") {
      e.target.addField(customTag.property, customTag);
      e.target.value[customTag.property] = customTag.property;
    } else {
      e.target.removeField(customTag.property);
      delete e.target.value[customTag.property];
    }*/}/**
   * Publish request send to backend from button
   */},{key:"_publishTap",value:function _publishTap(e){this.dispatchEvent(new CustomEvent("haxcms-publish-site",{bubbles:!0,composed:!0,cancelable:!1,detail:!0}))}/**
   * Revert Commit pressed
   */},{key:"_revertCommit",value:function _revertCommit(e){this.dispatchEvent(new CustomEvent("haxcms-git-revert-last-commit",{bubbles:!0,composed:!0,cancelable:!1,detail:!0}))}/**
   * Save the fields as we get tapped
   */},{key:"_saveFieldsTap",value:function _saveFieldsTap(e){var values=this.__fieldsForm.value;values.id=this.activeItem.id;// fire event with details for saving
window.dispatchEvent(new CustomEvent("haxcms-save-node-details",{bubbles:!0,composed:!0,cancelable:!0,detail:values}));// fire event to close the modal
window.dispatchEvent(new CustomEvent("simple-modal-hide",{bubbles:!0,composed:!0,cancelable:!0,detail:{}}))}/**
   * Save the fields as we get tapped
   */},{key:"_saveSiteFieldsTap",value:function _saveSiteFieldsTap(e){var values=this.__siteFieldsForm.value;// fire event with details for saving
window.dispatchEvent(new CustomEvent("haxcms-save-site-data",{bubbles:!0,composed:!0,cancelable:!0,detail:values}));// fire event to close the modal
window.dispatchEvent(new CustomEvent("simple-modal-hide",{bubbles:!0,composed:!0,cancelable:!0,detail:{}}))}/**
   * create node event
   */},{key:"createNode",value:function createNode(e){if(e.detail.values){this.set("createData",{});this.set("createData",e.detail.values);this.notifyPath("createData.*");this.set("createData.siteName",this.manifest.metadata.siteName);this.notifyPath("createData.siteName");this.set("createData.jwt",this.jwt);this.notifyPath("createData.jwt");this.$.createajax.generateRequest();var evt=new CustomEvent("simple-modal-hide",{bubbles:!0,composed:!0,cancelable:!0,detail:{}});window.dispatchEvent(evt)}}},{key:"_handleCreateResponse",value:function _handleCreateResponse(response){var evt=new CustomEvent("simple-toast-show",{bubbles:!0,composed:!0,cancelable:!0,detail:{text:"Created ".concat(this.__createNodeResponse.title,"!"),duration:3e3}});window.dispatchEvent(evt);this.dispatchEvent(new CustomEvent("haxcms-trigger-update",{bubbles:!0,composed:!0,cancelable:!1,detail:!0}))}/**
   * delete the node we just got
   */},{key:"deleteNode",value:function deleteNode(e){this.set("deleteData",{});this.set("deleteData.nodeId",e.detail.item.id);this.notifyPath("deleteData.nodeId");this.set("deleteData.siteName",this.manifest.metadata.siteName);this.notifyPath("deleteData.siteName");this.set("deleteData.jwt",this.jwt);this.notifyPath("deleteData.jwt");this.$.deleteajax.generateRequest();var evt=new CustomEvent("simple-modal-hide",{bubbles:!0,composed:!0,cancelable:!0,detail:{}});window.dispatchEvent(evt)}/**
   * node deleted response
   */},{key:"_handleDeleteResponse",value:function _handleDeleteResponse(response){var evt=new CustomEvent("simple-toast-show",{bubbles:!0,composed:!0,cancelable:!0,detail:{text:"Deleted ".concat(this.__deleteNodeResponse.title),duration:3e3}});this.dispatchEvent(evt);this.dispatchEvent(new CustomEvent("haxcms-trigger-update",{bubbles:!0,composed:!0,cancelable:!1,detail:!0}))}/**
   * Establish certain global settings in HAX once it claims to be ready to go
   */},{key:"_storeReadyToGo",value:function _storeReadyToGo(event){if(event.detail){window.HaxStore.instance.connectionRewrites.appendJwt="jwt";window.HaxStore.instance.haxPanel.align="left";window.HaxStore.instance.haxPanel.hidePanelOps=!0}}/**
   * notice publishing callback changing state
   */},{key:"_publishingChanged",value:function _publishingChanged(newValue,oldValue){if(newValue){var evt=new CustomEvent("simple-toast-show",{bubbles:!0,composed:!0,cancelable:!0,detail:{text:"Publishing...",duration:0}});window.dispatchEvent(evt)}else if(!newValue&&oldValue){var _evt=new CustomEvent("simple-toast-show",{bubbles:!0,composed:!0,cancelable:!0,detail:{text:"Publishing...",duration:3e3}});window.dispatchEvent(_evt)}}/**
   * react to manifest being changed
   */},{key:"_manifestChanged",value:function _manifestChanged(newValue){if(this.activeItem&&newValue.metadata){// set upload manager to point to this location in a more dynamic fashion
window.HaxStore.instance.connectionRewrites.appendUploadEndPoint="siteName="+newValue.metadata.siteName+"&nodeId="+this.activeItem.id}}/**
   * update the internal active item
   */},{key:"_newActiveItem",value:function _newActiveItem(e){this.set("activeItem",e.detail);this.notifyPath("activeItem.*")}/**
   * active item changed
   */},{key:"_activeItemChanged",value:function _activeItemChanged(newValue,oldValue){if(newValue&&this.manifest){// set upload manager to point to this location in a more dynamic fashion
window.HaxStore.instance.connectionRewrites.appendUploadEndPoint="siteName="+this.manifest.metadata.siteName+"&nodeId="+newValue.id}}/**
   * handle update responses for nodes and outlines
   */},{key:"_handleNodeResponse",value:function _handleNodeResponse(e){// node response may include the item that got updated
// it also may be a new path so let's ensure that's reflected
if("undefined"!==typeof e.detail.location&&this.activeItem.location!==e.detail.location){window.location(e.detail.location);window.history.pushState({},null,e.detail.location);window.dispatchEvent(new PopStateEvent("popstate"));var active=this.manifest.items.find(function(i){return i.id===e.detail.id});this.activeItem=active;this.dispatchEvent(new CustomEvent("json-outline-schema-active-item-changed",{bubbles:!0,composed:!0,cancelable:!0,detail:active}))}var evt=new CustomEvent("simple-toast-show",{bubbles:!0,composed:!0,cancelable:!0,detail:{text:"Page saved!",duration:4e3}});window.dispatchEvent(evt);// updates the manifest
this.dispatchEvent(new CustomEvent("haxcms-trigger-update",{bubbles:!0,composed:!0,cancelable:!1,detail:!0}));// updates the node contents itself
this.dispatchEvent(new CustomEvent("haxcms-trigger-update-node",{bubbles:!0,composed:!0,cancelable:!1,detail:!0}))}},{key:"_handleOutlineResponse",value:function _handleOutlineResponse(e){// trigger a refresh of the data in node
var evt=new CustomEvent("simple-toast-show",{bubbles:!0,composed:!0,cancelable:!0,detail:{text:"Outline saved!",duration:3e3}});window.dispatchEvent(evt);this.dispatchEvent(new CustomEvent("haxcms-trigger-update",{bubbles:!0,composed:!0,cancelable:!1,detail:!0}))}},{key:"_handleManifestResponse",value:function _handleManifestResponse(e){// trigger a refresh of the data in node
var evt=new CustomEvent("simple-toast-show",{bubbles:!0,composed:!0,cancelable:!0,detail:{text:"Site details saved!",duration:3e3}});this.dispatchEvent(evt);this.dispatchEvent(new CustomEvent("haxcms-trigger-update",{bubbles:!0,composed:!0,cancelable:!1,detail:!0}))}/**
   * Tell the user we undid their last state of the site and trigger
   * everything to update to reflect this
   */},{key:"_handleRevertResponse",value:function _handleRevertResponse(e){// trigger a refresh of the data in node
var evt=new CustomEvent("simple-toast-show",{bubbles:!0,composed:!0,cancelable:!0,detail:{text:"Last save undone",duration:3e3}});this.dispatchEvent(evt);this.dispatchEvent(new CustomEvent("haxcms-trigger-update",{bubbles:!0,composed:!0,cancelable:!1,detail:!0}))}},{key:"_handlePublishResponse",value:function _handlePublishResponse(e){var data=e.detail.response,content=document.createElement("span");// show the published response
content.innerHTML="\n    <a href=\"".concat(data.url,"\" target=\"_blank\">\n      <paper-button raised style=\"color:yellow;text-transform: none;font-weight: bold;\">\n      ").concat(data.label,"\n      </paper-button>\n    </a>");var evt=new CustomEvent("simple-toast-show",{bubbles:!0,composed:!0,cancelable:!0,detail:{text:data.response,duration:1e4,slot:content.cloneNode(!0)}});window.dispatchEvent(evt)}/**
   * Save node event
   */},{key:"saveNode",value:function saveNode(e){this.set("updateNodeData",{});this.set("updateNodeData.siteName",this.manifest.metadata.siteName);this.notifyPath("updateNodeData.siteName");// get the body from what's there currently
var body=window.HaxStore.instance.activeHaxBody.haxToContent();this.set("updateNodeData.body",body);this.notifyPath("updateNodeData.body");// convert to schema so we can ship that too if we want to process
this.set("updateNodeData.schema",window.HaxStore.htmlToHaxElements(body));this.notifyPath("updateNodeData.schema");this.set("updateNodeData.nodeId",this.activeItem.id);this.notifyPath("updateNodeData.nodeId");this.set("updateNodeData.jwt",this.jwt);this.notifyPath("updateNodeData.jwt");// send the request
if(this.saveNodePath){this.$.nodeupdateajax.generateRequest()}}/**
   * Save node event
   */},{key:"saveNodeDetails",value:function saveNodeDetails(e){this.set("updateNodeData",{});this.set("updateNodeData.siteName",this.manifest.metadata.siteName);this.notifyPath("updateNodeData.siteName");this.set("updateNodeData.nodeId",e.detail.id);this.notifyPath("updateNodeData.nodeId");this.set("updateNodeData.details",e.detail);this.notifyPath("updateNodeData.details");this.set("updateNodeData.jwt",this.jwt);this.notifyPath("updateNodeData.jwt");// send the request
if(this.saveNodePath){this.$.nodeupdateajax.generateRequest()}}/**
   * Save the outline based on an event firing.
   */},{key:"saveOutline",value:function saveOutline(e){// now let's work on the outline
this.set("updateOutlineData.siteName",this.manifest.metadata.siteName);this.notifyPath("updateOutlineData.siteName");this.set("updateOutlineData.items",e.detail);this.notifyPath("updateOutlineData.items");this.set("updateOutlineData.jwt",this.jwt);this.notifyPath("updateOutlineData.jwt");if(this.saveOutlinePath){this.$.outlineupdateajax.generateRequest()}}/**
   * Save the outline based on an event firing.
   */},{key:"saveManifest",value:function saveManifest(e){// now let's work on the outline
var values=e.detail;// if we have a cssVariable selected then generate a hexCode off of it
if(values.cssVariable){values.hexCode=window.SimpleColorsStyles.colors[values.cssVariable.replace("--simple-colors-default-theme-","").replace("-7","")][6]}this.set("updateManifestData.siteName",this.manifest.metadata.siteName);this.notifyPath("updateManifestData.siteName");this.set("updateManifestData.manifest",values);this.notifyPath("updateManifestData.manifest");this.set("updateManifestData.jwt",this.jwt);this.notifyPath("updateManifestData.jwt");if(this.saveManifestPath){this.$.manifestupdateajax.generateRequest()}}/**
   * Save the outline based on an event firing.
   */},{key:"publishSite",value:function publishSite(e){this.set("publishSiteData.siteName",this.manifest.metadata.siteName);this.notifyPath("publishSiteData.siteName");this.set("publishSiteData.jwt",this.jwt);this.notifyPath("publishSiteData.jwt");if(this.publishSitePath){this.$.publishajax.generateRequest()}}/**
   * Revert last commit
   */},{key:"revertCommit",value:function revertCommit(e){this.set("revertSiteData.siteName",this.manifest.metadata.siteName);this.notifyPath("revertSiteData.siteName");this.set("revertSiteData.jwt",this.jwt);this.notifyPath("revertSiteData.jwt");if(this.revertSitePath){this.$.revertajax.generateRequest()}}/**
   * Notice body of content has changed and import into HAX
   */},{key:"_bodyChanged",value:function _bodyChanged(e){if(window.HaxStore.instance.activeHaxBody){window.HaxStore.instance.activeHaxBody.importContent(e.detail)}}}],[{key:"template",get:function get(){return(0,_polymerElement.html)(_templateObject_24cb6440984711e9810e6d9eee9273ff())}},{key:"properties",get:function get(){var _ref;return _ref={/**
       * Singular error reporter / visual based on requests erroring
       */lastError:{type:Object,observer:"_lastErrorChanged"},/**
       * Allow method to be overridden, useful in local testing
       */method:{type:String,value:"POST"},/**
       * JSON Web token, it'll come from a global call if it's available
       */jwt:{type:String},/**
       * end point for saving nodes
       */saveNodePath:{type:String},/**
       * end point for create new nodes
       */createNodePath:{type:String},/**
       * end point for delete nodes
       */deleteNodePath:{type:String},/**
       * end point for saving manifest
       */saveManifestPath:{type:String},/**
       * end point for publishing
       */publishSitePath:{type:String},/**
       * end point for revert
       */revertSitePath:{type:String},/**
       * Publishing end point, this has CDN implications so show message
       */publishing:{type:Boolean,observer:"_publishingChanged"},/**
       * end point for saving outline
       */saveOutlinePath:{type:String},/**
       * appStore object from backend
       */appStore:{type:Object},/**
       * if the node is in an edit state or not
       */editMode:{type:Boolean,reflectToAttribute:!0,value:!1},/**
       * data as part of the POST to the backend
       */updateNodeData:{type:Object,value:{}},/**
       * delete node data
       */deleteData:{type:Object,value:{}},/**
       * create new node data
       */createData:{type:Object,value:{}},/**
       * create new node data
       */publishSiteData:{type:Object,value:{}},/**
       * revert site data
       */revertSiteData:{type:Object,value:{}},/**
       * data as part of the POST to the backend
       */updateManifestData:{type:Object,value:{}},/**
       * data as part of the POST to the backend
       */updateOutlineData:{type:Object,value:{}}},babelHelpers.defineProperty(_ref,"updateManifestData",{type:Object,value:{}}),babelHelpers.defineProperty(_ref,"getFieldsData",{type:Object,value:{}}),babelHelpers.defineProperty(_ref,"getSiteFieldsData",{type:Object,value:{}}),babelHelpers.defineProperty(_ref,"activeItem",{type:Object,notify:!0,observer:"_activeItemChanged"}),babelHelpers.defineProperty(_ref,"manifest",{type:Object,notify:!0,observer:"_manifestChanged"}),babelHelpers.defineProperty(_ref,"getNodeFieldsPath",{type:String}),babelHelpers.defineProperty(_ref,"getSiteFieldsPath",{type:String}),babelHelpers.defineProperty(_ref,"getFieldsToken",{type:String}),_ref}}]);return HAXCMSSiteEditor}(_polymerElement.PolymerElement);_exports.HAXCMSSiteEditor=HAXCMSSiteEditor;window.customElements.define(HAXCMSSiteEditor.tag,HAXCMSSiteEditor)});