define(["exports", "../../../../../@polymer/polymer/polymer-element.js", "../HAXCMSPolymerElementTheme.js", "../../../../../@polymer/polymer/lib/utils/style-gather.js", "../../ui-components/templates/basic-template.js", "../../../../simple-colors/lib/simple-colors-polymer.js"], function (_exports, _polymerElement, _HAXCMSPolymerElementTheme, _styleGather, _basicTemplate, _simpleColorsPolymer) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HAXCMSUserTheme = void 0;

  function _templateObject_73ba6780d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <style include=\"simple-colors-shared-styles-polymer\"></style>\n      <div id=\"contentcontainer\">\n        <div id=\"slot\">\n          <slot></slot>\n        </div>\n      </div>\n    "]);

    _templateObject_73ba6780d34d11ea880ba1e93364c49c = function _templateObject_73ba6780d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  /**
   * `haxcms-custom-theme`
   * `This is a custom theme. Don't edit this file, edit yoursite/theme/theme.css and yoursite/theme/theme.html`
   *
  
   * @polymer
   * @demo demo/index.html
   */
  var HAXCMSUserTheme =
  /*#__PURE__*/
  function (_HAXCMSPolymerElement) {
    babelHelpers.inherits(HAXCMSUserTheme, _HAXCMSPolymerElement);
    babelHelpers.createClass(HAXCMSUserTheme, [{
      key: "getCSS",

      /**
       * Get css
       */
      value: function () {
        var _getCSS = babelHelpers.asyncToGenerator(
        /*#__PURE__*/
        regeneratorRuntime.mark(function _callee() {
          var _this2 = this;

          return regeneratorRuntime.wrap(function _callee$(_context) {
            while (1) {
              switch (_context.prev = _context.next) {
                case 0:
                  _context.next = 2;
                  return fetch("theme/theme.css").then(function (response) {
                    return response.text();
                  }).then(function (response) {
                    var evt = new CustomEvent("haxcms-custom-theme-template-ready", {
                      bubbles: true,
                      composed: true,
                      cancelable: false,
                      detail: {
                        css: response
                      }
                    });

                    _this2.dispatchEvent(evt);

                    return response;
                  });

                case 2:
                  return _context.abrupt("return", _context.sent);

                case 3:
                case "end":
                  return _context.stop();
              }
            }
          }, _callee);
        }));

        function getCSS() {
          return _getCSS.apply(this, arguments);
        }

        return getCSS;
      }()
      /**
       * Get css
       */

    }, {
      key: "getHTML",
      value: function () {
        var _getHTML = babelHelpers.asyncToGenerator(
        /*#__PURE__*/
        regeneratorRuntime.mark(function _callee2() {
          var _this3 = this;

          return regeneratorRuntime.wrap(function _callee2$(_context2) {
            while (1) {
              switch (_context2.prev = _context2.next) {
                case 0:
                  _context2.next = 2;
                  return fetch("theme/theme.html").then(function (response) {
                    return response.text();
                  }).then(function (response) {
                    var evt = new CustomEvent("haxcms-custom-theme-template-ready", {
                      bubbles: true,
                      composed: true,
                      cancelable: false,
                      detail: {
                        html: response
                      }
                    });

                    _this3.dispatchEvent(evt);

                    return response;
                  });

                case 2:
                  return _context2.abrupt("return", _context2.sent);

                case 3:
                case "end":
                  return _context2.stop();
              }
            }
          }, _callee2);
        }));

        function getHTML() {
          return _getHTML.apply(this, arguments);
        }

        return getHTML;
      }()
    }]);

    function HAXCMSUserTheme() {
      var _this;

      babelHelpers.classCallCheck(this, HAXCMSUserTheme);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(HAXCMSUserTheme).call(this));
      _this.__counter = 0;

      _this.getCSS();

      _this.getHTML();

      window.addEventListener("haxcms-custom-theme-template-ready", _this.templateReady.bind(babelHelpers.assertThisInitialized(_this)));
      return _this;
    }

    babelHelpers.createClass(HAXCMSUserTheme, [{
      key: "connectedCallback",
      value: function connectedCallback() {
        babelHelpers.get(babelHelpers.getPrototypeOf(HAXCMSUserTheme.prototype), "connectedCallback", this).call(this);
        this.contentContainer = this.shadowRoot.querySelector("#contentcontainer");
      } // render function

    }, {
      key: "templateReady",
      value: function templateReady(e) {
        this.__counter++;

        if (e.detail.css) {
          this._css = e.detail.css;
        }

        if (e.detail.html) {
          this._html = e.detail.html;
        }

        if (this.__counter === 2) {
          var t = document.createElement("template");
          t.innerHTML = "\n      <style>\n        /**\n         * Hide the slotted content during edit mode. This must be here to work.\n         */\n        :host([edit-mode]) #slot {\n          display: none;\n        }\n        ".concat(this._css, "\n      </style>\n      ").concat(this._html);
          var styles = (0, _styleGather.stylesFromTemplate)(t);

          while (this.shadowRoot.firstChild) {
            this.shadowRoot.removeChild(this.shadowRoot.firstChild);
          } // add in all styles found


          for (var i in styles) {
            t.innerHTML = styles[i].outerHTML + t.innerHTML;
          }

          this.__instance = this._stampTemplate(t); // now the template

          this.shadowRoot.appendChild(this.__instance);
        }
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_73ba6780d34d11ea880ba1e93364c49c());
      }
    }]);
    return HAXCMSUserTheme;
  }(_HAXCMSPolymerElementTheme.HAXCMSPolymerElementTheme);

  _exports.HAXCMSUserTheme = HAXCMSUserTheme;
  window.customElements.define("haxcms-user-theme", HAXCMSUserTheme);
});