var _templateObject=babelHelpers.taggedTemplateLiteral(["\n    <style is=\"custom-style\" include=\"simple-colors\">\n      :host {\n        display: block;\n        /* theme color which is dictated by the manifest */\n        background-color: var(--haxcms-color, black);\n      }\n      iron-list {\n        padding: 16px;\n        margin: 0 auto;\n        -webkit-box-sizing: border-box;\n        -moz-box-sizing: border-box;\n        box-sizing: border-box;\n      }\n      paper-card {\n        width: 200px;\n        color: black;\n        background-color: white;\n        padding: 8px;\n        font-size: 10px;\n      }\n      /**\n       * Hide the slotted content during edit mode. This must be here to work.\n       */\n      :host([edit-mode]) #slot {\n        display: none;\n      }\n      .manifest,\n      .activeitem {\n        width: 48%;\n        margin: 0;\n        padding: 0;\n        display: inline-block;\n        vertical-align: text-top;\n      }\n    </style>\n    <h1 style=\"margin:0;\">HAXCMS DEVELOPMENT THEME</h1>\n    <iron-list id=\"list\" items=\"[[manifest.items]]\" grid>\n      <template>\n        <div style=\"padding:16px;\">\n          <paper-card\n            heading=\"[[item.title]]\"\n            image=\"[[item.metadata.image]]\"\n            elevation=\"1\"\n            animated-shadow=\"false\"\n          >\n            <div class=\"card-content\">\n              <div>description: [[item.description]]</div>\n              <div>location: [[item.location]]</div>\n              <div>changed: [[item.metadata.updated]]</div>\n            </div>\n            <div class=\"card-actions\">\n              <paper-button data-id$=\"[[item.id]]\"\n                >Click to set activeItem</paper-button\n              >\n            </div>\n          </paper-card>\n        </div>\n      </template>\n    </iron-list>\n    <div class=\"manifest\">\n      <h2>title: [[manifest.title]]</h2>\n      <div>description: [[manifest.description]]</div>\n      <div>icon: <iron-icon icon=\"[[manifest.metadata.icon]]\"></iron-icon></div>\n      <div>\n        image:\n        <img src$=\"[[manifest.metadata.image]]\" height=\"200px\" width=\"200px\" />\n      </div>\n    </div>\n    <div class=\"activeitem\">\n      <paper-button id=\"unset\">Unset activeItem</paper-button>\n      <h2>ACTIVE ITEM</h2>\n      <div>[[activeItem.title]]</div>\n      <div id=\"contentcontainer\">\n        <div id=\"slot\"><slot></slot></div>\n      </div>\n    </div>\n  "],["\n    <style is=\"custom-style\" include=\"simple-colors\">\n      :host {\n        display: block;\n        /* theme color which is dictated by the manifest */\n        background-color: var(--haxcms-color, black);\n      }\n      iron-list {\n        padding: 16px;\n        margin: 0 auto;\n        -webkit-box-sizing: border-box;\n        -moz-box-sizing: border-box;\n        box-sizing: border-box;\n      }\n      paper-card {\n        width: 200px;\n        color: black;\n        background-color: white;\n        padding: 8px;\n        font-size: 10px;\n      }\n      /**\n       * Hide the slotted content during edit mode. This must be here to work.\n       */\n      :host([edit-mode]) #slot {\n        display: none;\n      }\n      .manifest,\n      .activeitem {\n        width: 48%;\n        margin: 0;\n        padding: 0;\n        display: inline-block;\n        vertical-align: text-top;\n      }\n    </style>\n    <h1 style=\"margin:0;\">HAXCMS DEVELOPMENT THEME</h1>\n    <iron-list id=\"list\" items=\"[[manifest.items]]\" grid>\n      <template>\n        <div style=\"padding:16px;\">\n          <paper-card\n            heading=\"[[item.title]]\"\n            image=\"[[item.metadata.image]]\"\n            elevation=\"1\"\n            animated-shadow=\"false\"\n          >\n            <div class=\"card-content\">\n              <div>description: [[item.description]]</div>\n              <div>location: [[item.location]]</div>\n              <div>changed: [[item.metadata.updated]]</div>\n            </div>\n            <div class=\"card-actions\">\n              <paper-button data-id$=\"[[item.id]]\"\n                >Click to set activeItem</paper-button\n              >\n            </div>\n          </paper-card>\n        </div>\n      </template>\n    </iron-list>\n    <div class=\"manifest\">\n      <h2>title: [[manifest.title]]</h2>\n      <div>description: [[manifest.description]]</div>\n      <div>icon: <iron-icon icon=\"[[manifest.metadata.icon]]\"></iron-icon></div>\n      <div>\n        image:\n        <img src$=\"[[manifest.metadata.image]]\" height=\"200px\" width=\"200px\" />\n      </div>\n    </div>\n    <div class=\"activeitem\">\n      <paper-button id=\"unset\">Unset activeItem</paper-button>\n      <h2>ACTIVE ITEM</h2>\n      <div>[[activeItem.title]]</div>\n      <div id=\"contentcontainer\">\n        <div id=\"slot\"><slot></slot></div>\n      </div>\n    </div>\n  "]);import{html,Polymer}from"@polymer/polymer/polymer-legacy.js";import{dom}from"@polymer/polymer/lib/legacy/polymer.dom.js";import"@polymer/paper-card/paper-card.js";import"@polymer/paper-button/paper-button.js";import"@polymer/iron-icons/iron-icons.js";import"@polymer/iron-list/iron-list.js";import"@lrnwebcomponents/schema-behaviors/schema-behaviors.js";import"@lrnwebcomponents/simple-colors/simple-colors.js";import"./haxcms-theme-behavior.js";Polymer({is:"haxcms-dev-theme",_template:html(_templateObject),behaviors:[SchemaBehaviors.Schema,HAXCMSBehaviors.Theme],properties:{},ready:function(){this.setupHAXTheme()},attached:function(){this.$.list.addEventListener("tap",this._itemTapped.bind(this)),this.$.unset.addEventListener("tap",this._unsetTapped.bind(this))},detached:function(){this.setupHAXTheme(!1),this.$.list.removeEventListener("tap",this._itemTapped.bind(this)),this.$.unset.removeEventListener("tap",this._unsetTapped.bind(this))},_itemTapped:function(b){var c=dom(b),f=c.localTarget,g=f.getAttribute("data-id");if("PAPER-BUTTON"===f.tagName&&("undefined"===typeof g?"undefined":babelHelpers.typeof(g))!=="undefined"){var h=this.manifest.items.filter(function(j){if(g===j.id)return j}).pop();this.fire("json-outline-schema-active-item-changed",h),console.log(this.manifest),console.log(h)}},_unsetTapped:function(){this.fire("json-outline-schema-active-item-changed",{})}});