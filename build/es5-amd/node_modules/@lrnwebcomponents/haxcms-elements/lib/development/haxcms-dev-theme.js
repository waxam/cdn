define(["exports", "require", "../../../../@polymer/polymer/polymer-element.js", "../core/HAXCMSPolymerElementTheme.js", "../../../../@polymer/paper-button/paper-button.js", "../../../simple-colors/lib/simple-colors-polymer.js", "../../../../@polymer/iron-list/iron-list.js"], function (_exports, _require, _polymerElement, _HAXCMSPolymerElementTheme, _paperButton, _simpleColorsPolymer, _ironList) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HAXCMSDevTheme = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  function _templateObject_6efe6610d34d11ea880ba1e93364c49c() {
    var data = babelHelpers.taggedTemplateLiteral(["\n      <style include=\"simple-colors-shared-styles-polymer\">\n        :host {\n          display: block;\n          /* theme color which is dictated by the manifest */\n          background-color: var(--haxcms-color, black);\n        }\n        paper-card {\n          width: 200px;\n          color: black;\n          background-color: blue;\n          padding: 8px;\n          font-size: 10px;\n        }\n        /**\n         * Hide the slotted content during edit mode. This must be here to work.\n         */\n        :host([edit-mode]) #slot {\n          display: none;\n        }\n        .manifest,\n        .activeitem {\n          width: 49%;\n          min-height: 300px;\n          height: 300px;\n          overflow: scroll;\n          border: 4px solid black;\n          margin: 0;\n          padding: 0;\n          display: inline-block;\n          vertical-align: text-top;\n        }\n        .buttons {\n          display: flex;\n        }\n        site-top-menu {\n          --site-top-menu-bg: var(\n            --simple-colors-default-theme-blue-grey-7,\n            #37474f\n          );\n          --site-top-menu-link-color: #ffffff;\n          --site-top-menu-indicator-color: var(--haxcms-color, #ffffff);\n          --site-top-menu-link-active-color: yellow;\n          --site-top-menu-indicator-arrow: 8px;\n        }\n        .spacing paper-button {\n          min-width: unset;\n          text-transform: unset;\n          background-color: var(--haxcms-color, #000000);\n          color: #ffffff;\n          margin: 0;\n          border-radius: 0;\n        }\n        site-children-block {\n          --site-children-block-button-active: {\n            background-color: var(\n              --simple-colors-default-theme-blue-grey-7,\n              #37474f\n            );\n            color: #ffffff;\n          }\n        }\n      </style>\n      <site-top-menu noink indicator=\"arrow\" arrow-size=\"8\">\n        <div slot=\"suffix\" class=\"spacing\">\n          <a\n            rel=\"noopener noreferrer\"\n            target=\"_blank\"\n            tabindex=\"-1\"\n            href=\"https://github.com/elmsln/HAXcms\"\n            data-title=\"Get it. Got it? Good.\"\n          >\n            <paper-button noink>Get HAXcms</paper-button>\n          </a>\n          <site-print-button></site-print-button>\n          <site-print-button type=\"parent\"></site-print-button>\n          <site-print-button type=\"ancestor\"></site-print-button>\n          <site-print-button type=\"site\"></site-print-button>\n        </div>\n      </site-top-menu>\n      <site-children-block\n        fixed-id\n        parent=\"item-14e9e811-8d92-41ee-b2f1-8248eacc3138\"\n      >\n      </site-children-block>\n      <h1 style=\"margin:0;\">HAXCMS DEVELOPMENT THEME</h1>\n      <site-title></site-title>\n      <div class=\"buttons\">\n        <site-menu-button type=\"prev\"></site-menu-button>\n        <site-menu-button type=\"next\"></site-menu-button>\n        <paper-button id=\"unset\" on-click=\"resetActive\"\n          >Unset activeItem</paper-button\n        >\n        <site-rss-button type=\"atom\"></site-rss-button>\n        <site-rss-button type=\"rss\"></site-rss-button>\n      </div>\n      <div class=\"manifest\">\n        <h2>title: [[manifest.title]]</h2>\n        <div>description: [[manifest.description]]</div>\n        <div>\n          icon:\n          <iron-icon\n            icon=\"[[manifest.metadata.theme.variables.icon]]\"\n          ></iron-icon>\n        </div>\n        <div>\n          image:\n          <img\n            src$=\"[[manifest.metadata.theme.variables.image]]\"\n            height=\"200px\"\n            width=\"200px\"\n          />\n        </div>\n      </div>\n      <div class=\"activeitem\">\n        <site-breadcrumb></site-breadcrumb>\n        <h2>ACTIVE ITEM</h2>\n        <site-active-title></site-active-title>\n        <div id=\"contentcontainer\">\n          <div id=\"slot\"><slot></slot></div>\n        </div>\n      </div>\n      <site-render-query class=\"cardlist\" grid on-click=\"_itemTapped\">\n        <template>\n          <div style=\"padding:8px;\">\n            <paper-card\n              heading=\"[[item.title]]\"\n              image=\"[[item.metadata.fields.image]]\"\n              elevation=\"1\"\n              animated-shadow=\"false\"\n            >\n              <div class=\"card-content\">\n                <div>description: [[item.description]]</div>\n                <div>slug: [[item.slug]]</div>\n                <div>location: [[item.location]]</div>\n                <div>changed: [[item.metadata.updated]]</div>\n              </div>\n              <div class=\"card-actions\">\n                <a tabindex=\"-1\" href$=\"[[item.slug]]\"\n                  ><paper-button data-id$=\"[[item.id]]\"\n                    >Set as active</paper-button\n                  ></a\n                >\n              </div>\n            </paper-card>\n          </div>\n        </template>\n      </site-render-query>\n      <site-menu></site-menu>\n    "]);

    _templateObject_6efe6610d34d11ea880ba1e93364c49c = function _templateObject_6efe6610d34d11ea880ba1e93364c49c() {
      return data;
    };

    return data;
  }

  /**
   * `haxcms-dev-theme`
   * `A theme intended as the starting point to fork from and build new themes for HAXCMS
   *  which allows you to build things that just work using JSON Outline Schema as it's "backend"
   * and then IF hax is around it'll show up :)`
   *
  
   * @demo demo/index.html
   */
  var HAXCMSDevTheme =
  /*#__PURE__*/
  function (_HAXCMSPolymerElement) {
    babelHelpers.inherits(HAXCMSDevTheme, _HAXCMSPolymerElement);
    babelHelpers.createClass(HAXCMSDevTheme, null, [{
      key: "tag",

      /**
       * Store the tag name to make it easier to obtain directly.
       */
      get: function get() {
        return "haxcms-dev-theme";
      }
    }]);

    function HAXCMSDevTheme() {
      var _this;

      babelHelpers.classCallCheck(this, HAXCMSDevTheme);
      _this = babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(HAXCMSDevTheme).call(this));
      new Promise(function (res, rej) {
        return _require.default(["../../../../@polymer/paper-card/paper-card.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../../../../@polymer/iron-icons/iron-icons.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../../../simple-tooltip/simple-tooltip.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../ui-components/active-item/site-active-title.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../ui-components/blocks/site-children-block.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../ui-components/navigation/site-breadcrumb.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../ui-components/navigation/site-menu.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../ui-components/navigation/site-menu-button.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../ui-components/navigation/site-top-menu.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../ui-components/query/site-query.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../ui-components/query/site-render-query.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../ui-components/query/site-query-menu-slice.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../ui-components/site/site-rss-button.js"], res, rej);
      });
      new Promise(function (res, rej) {
        return _require.default(["../ui-components/site/site-title.js"], res, rej);
      });
      return _this;
    } // render function


    babelHelpers.createClass(HAXCMSDevTheme, [{
      key: "_itemTapped",

      /**
       * Item tapped, let's set it as active by searching the manifest array
       * Your theme is in charge of ensuring that when activeItem needs changed
       * that it ensures that happens
       */
      value: function _itemTapped(e) {
        var local = e.target;
        var activeId = local.getAttribute("data-id");

        if (local.tagName === "PAPER-BUTTON" && babelHelpers.typeof(activeId) !== (typeof undefined === "undefined" ? "undefined" : babelHelpers.typeof(undefined))) {
          // console log these so you can debug easily as you build out
          console.log(this.manifest);
        }
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _polymerElement.html)(_templateObject_6efe6610d34d11ea880ba1e93364c49c());
      }
    }]);
    return HAXCMSDevTheme;
  }(_HAXCMSPolymerElementTheme.HAXCMSPolymerElementTheme);

  _exports.HAXCMSDevTheme = HAXCMSDevTheme;
  window.customElements.define(HAXCMSDevTheme.tag, HAXCMSDevTheme);
});