var _require = require("apollo-server"),
    ApolloServer = _require.ApolloServer;

var _require2 = require("../prisma/generated/prisma-client"),
    prisma = _require2.prisma;

var datamodelInfo = require("../prisma/generated/nexus-prisma");

var _require3 = require("nexus-prisma"),
    prismaObjectType = _require3.prismaObjectType,
    makePrismaSchema = _require3.makePrismaSchema;

var path = require("path"); // Expose the full "Query" building block


var Query = prismaObjectType({
  name: "Query",
  // Expose all generated `Todo`-queries
  definition: function definition(t) {
    return t.prismaFields(["*"]);
  }
}); // Customize the "Mutation" building block

var Mutation = prismaObjectType({
  name: "Mutation",
  definition: function definition(t) {
    return t.prismaFields(["*"]);
  }
});
var schema = makePrismaSchema({
  types: [Query, Mutation],
  prisma: {
    datamodelInfo: datamodelInfo,
    client: prisma
  },
  outputs: {
    schema: path.join(__dirname, "./generated/schema.graphql")
  },
  nonNullDefaults: {
    input: true,
    output: true
  }
});
var server = new ApolloServer({
  cors: true,
  schema: schema,
  context: {
    prisma: prisma
  }
});
server.listen().then(function (_ref) {
  var url = _ref.url,
      subscriptionsUrl = _ref.subscriptionsUrl;
  console.log("\uD83D\uDE80  Server ready at ".concat(url, " & ").concat(subscriptionsUrl));
});