define(["exports", "../polymer/polymer-legacy.js", "./iron-menu-behavior.js"], function (_exports, _polymerLegacy, _ironMenuBehavior) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.IronMenubarBehaviorImpl = _exports.IronMenubarBehavior = void 0;

  /**
  @license
  Copyright (c) 2015 The Polymer Project Authors. All rights reserved.
  This code may only be used under the BSD style license found at
  http://polymer.github.io/LICENSE.txt The complete set of authors may be found at
  http://polymer.github.io/AUTHORS.txt The complete set of contributors may be
  found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as
  part of the polymer project is also subject to an additional IP rights grant
  found at http://polymer.github.io/PATENTS.txt
  */

  /**
   * `IronMenubarBehavior` implements accessible menubar behavior.
   *
   * @polymerBehavior IronMenubarBehavior
   */
  var IronMenubarBehaviorImpl = {
    hostAttributes: {
      'role': 'menubar'
    },

    /**
     * @type {!Object}
     */
    keyBindings: {
      'left': '_onLeftKey',
      'right': '_onRightKey'
    },
    _onUpKey: function _onUpKey(event) {
      this.focusedItem.click();
      event.detail.keyboardEvent.preventDefault();
    },
    _onDownKey: function _onDownKey(event) {
      this.focusedItem.click();
      event.detail.keyboardEvent.preventDefault();
    },

    get _isRTL() {
      return window.getComputedStyle(this)['direction'] === 'rtl';
    },

    _onLeftKey: function _onLeftKey(event) {
      if (this._isRTL) {
        this._focusNext();
      } else {
        this._focusPrevious();
      }

      event.detail.keyboardEvent.preventDefault();
    },
    _onRightKey: function _onRightKey(event) {
      if (this._isRTL) {
        this._focusPrevious();
      } else {
        this._focusNext();
      }

      event.detail.keyboardEvent.preventDefault();
    },
    _onKeydown: function _onKeydown(event) {
      if (this.keyboardEventMatchesKeys(event, 'up down left right esc')) {
        return;
      } // all other keys focus the menu item starting with that character


      this._focusWithKeyboardEvent(event);
    }
  };
  /** @polymerBehavior */

  _exports.IronMenubarBehaviorImpl = IronMenubarBehaviorImpl;
  var IronMenubarBehavior = [_ironMenuBehavior.IronMenuBehavior, IronMenubarBehaviorImpl];
  _exports.IronMenubarBehavior = IronMenubarBehavior;
});