define(["../polymer/polymer-legacy.js","../iron-resizable-behavior/iron-resizable-behavior.js","../iron-selector/iron-selectable.js","../polymer/lib/legacy/polymer-fn.js","../polymer/lib/legacy/polymer.dom.js","../polymer/lib/utils/html-tag.js","./neon-animation-runner-behavior.js"],function(_polymerLegacy,_ironResizableBehavior,_ironSelectable,_polymerFn,_polymerDom,_htmlTag,_neonAnimationRunnerBehavior){"use strict";function _templateObject_d3fcd3307a9c11ea8ed6ed8c9eef0ab1(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        display: block;\n        position: relative;\n      }\n\n      :host > ::slotted(*) {\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n      }\n\n      :host > ::slotted(:not(.iron-selected):not(.neon-animating))\n       {\n        display: none !important;\n      }\n\n      :host > ::slotted(.neon-animating) {\n        pointer-events: none;\n      }\n    </style>\n\n    <slot id=\"content\"></slot>\n  "]);_templateObject_d3fcd3307a9c11ea8ed6ed8c9eef0ab1=function _templateObject_d3fcd3307a9c11ea8ed6ed8c9eef0ab1(){return data};return data}/**
Material design: [Meaningful
transitions](https://www.google.com/design/spec/animation/meaningful-transitions.html)

`neon-animated-pages` manages a set of pages and runs an animation when
switching between them. Its children pages should implement
`NeonAnimatableBehavior` and define `entry` and `exit` animations to be
run when switching to or switching out of the page.

@group Neon Elements
@element neon-animated-pages
*/(0,_polymerFn.Polymer)({_template:(0,_htmlTag.html)(_templateObject_d3fcd3307a9c11ea8ed6ed8c9eef0ab1()),is:"neon-animated-pages",behaviors:[_ironResizableBehavior.IronResizableBehavior,_ironSelectable.IronSelectableBehavior,_neonAnimationRunnerBehavior.NeonAnimationRunnerBehavior],properties:{activateEvent:{type:String,value:""},// if true, the initial page selection will also be animated according to
// its animation config.
animateInitialSelection:{type:Boolean,value:!1}},listeners:{"iron-select":"_onIronSelect","neon-animation-finish":"_onNeonAnimationFinish"},_onIronSelect:function _onIronSelect(event){var selectedPage=event.detail.item;// Only consider child elements.
if(0>this.items.indexOf(selectedPage)){return}var oldPage=this._valueToItem(this._prevSelected)||!1;this._prevSelected=this.selected;// on initial load and if animateInitialSelection is negated, simply display
// selectedPage.
if(!oldPage&&!this.animateInitialSelection){this._completeSelectedChanged();return}this.animationConfig=[];// configure selectedPage animations.
if(this.entryAnimation){this.animationConfig.push({name:this.entryAnimation,node:selectedPage})}else{if(selectedPage.getAnimationConfig){this.animationConfig.push({animatable:selectedPage,type:"entry"})}}// configure oldPage animations iff exists.
if(oldPage){// cancel the currently running animation if one is ongoing.
if(oldPage.classList.contains("neon-animating")){this._squelchNextFinishEvent=!0;this.cancelAnimation();this._completeSelectedChanged();this._squelchNextFinishEvent=!1}// configure the animation.
if(this.exitAnimation){this.animationConfig.push({name:this.exitAnimation,node:oldPage})}else{if(oldPage.getAnimationConfig){this.animationConfig.push({animatable:oldPage,type:"exit"})}}// display the oldPage during the transition.
oldPage.classList.add("neon-animating")}// display the selectedPage during the transition.
selectedPage.classList.add("neon-animating");// actually run the animations.
if(1<=this.animationConfig.length){// on first load, ensure we run animations only after element is attached.
if(!this.isAttached){this.async(function(){this.playAnimation(void 0,{fromPage:null,toPage:selectedPage})})}else{this.playAnimation(void 0,{fromPage:oldPage,toPage:selectedPage})}}else{this._completeSelectedChanged(oldPage,selectedPage)}},/**
   * @param {Object=} oldPage
   * @param {Object=} selectedPage
   */_completeSelectedChanged:function _completeSelectedChanged(oldPage,selectedPage){if(selectedPage){selectedPage.classList.remove("neon-animating")}if(oldPage){oldPage.classList.remove("neon-animating")}if(!selectedPage||!oldPage){for(var nodes=(0,_polymerDom.dom)(this.$.content).getDistributedNodes(),node,index=0;node=nodes[index];index++){node.classList&&node.classList.remove("neon-animating")}}this.async(this._notifyPageResize)},_onNeonAnimationFinish:function _onNeonAnimationFinish(event){if(this._squelchNextFinishEvent){this._squelchNextFinishEvent=!1;return}this._completeSelectedChanged(event.detail.fromPage,event.detail.toPage)},_notifyPageResize:function _notifyPageResize(){var selectedPage=this.selectedItem||this._valueToItem(this.selected);this.resizerShouldNotify=function(element){return element==selectedPage};this.notifyResize()}})});