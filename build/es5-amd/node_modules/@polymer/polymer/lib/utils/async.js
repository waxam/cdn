define(["exports","./boot.js"],function(_exports){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.microTask=_exports.idlePeriod=_exports.animationFrame=_exports.timeOut=void 0;var microtaskCurrHandle=0,microtaskLastHandle=0,microtaskCallbacks=[],microtaskNodeContent=0,microtaskNode=document.createTextNode("");new window.MutationObserver(function(){for(var len=microtaskCallbacks.length,i=0,cb;i<len;i++){cb=microtaskCallbacks[i];if(cb){try{cb()}catch(e){setTimeout(function(){throw e})}}}microtaskCallbacks.splice(0,len);microtaskLastHandle+=len}).observe(microtaskNode,{characterData:!0});_exports.timeOut={after:function after(delay){return{run:function run(fn){return window.setTimeout(fn,delay)},cancel:function cancel(handle){window.clearTimeout(handle)}}},run:function run(fn,delay){return window.setTimeout(fn,delay)},cancel:function cancel(handle){window.clearTimeout(handle)}};_exports.animationFrame={run:function run(fn){return window.requestAnimationFrame(fn)},cancel:function cancel(handle){window.cancelAnimationFrame(handle)}};_exports.idlePeriod={run:function run(fn){return window.requestIdleCallback?window.requestIdleCallback(fn):window.setTimeout(fn,16)},cancel:function cancel(handle){window.cancelIdleCallback?window.cancelIdleCallback(handle):window.clearTimeout(handle)}};_exports.microTask={run:function run(callback){microtaskNode.textContent=microtaskNodeContent++;microtaskCallbacks.push(callback);return microtaskCurrHandle++},cancel:function cancel(handle){var idx=handle-microtaskLastHandle;if(0<=idx){if(!microtaskCallbacks[idx]){throw new Error("invalid async handle: "+handle)}microtaskCallbacks[idx]=null}}}});