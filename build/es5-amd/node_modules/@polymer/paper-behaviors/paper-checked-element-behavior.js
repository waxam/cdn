define(["exports", "../polymer/polymer-legacy.js", "../iron-checked-element-behavior/iron-checked-element-behavior.js", "./paper-inky-focus-behavior.js", "./paper-ripple-behavior.js"], function (_exports, _polymerLegacy, _ironCheckedElementBehavior, _paperInkyFocusBehavior, _paperRippleBehavior) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.PaperCheckedElementBehaviorImpl = _exports.PaperCheckedElementBehavior = void 0;

  /**
  @license
  Copyright (c) 2015 The Polymer Project Authors. All rights reserved.
  This code may only be used under the BSD style license found at
  http://polymer.github.io/LICENSE.txt The complete set of authors may be found at
  http://polymer.github.io/AUTHORS.txt The complete set of contributors may be
  found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as
  part of the polymer project is also subject to an additional IP rights grant
  found at http://polymer.github.io/PATENTS.txt
  */

  /**
   * Use `PaperCheckedElementBehavior` to implement a custom element that has a
   * `checked` property similar to `IronCheckedElementBehavior` and is compatible
   * with having a ripple effect.
   * @polymerBehavior PaperCheckedElementBehavior
   */
  var PaperCheckedElementBehaviorImpl = {
    /**
     * Synchronizes the element's checked state with its ripple effect.
     */
    _checkedChanged: function _checkedChanged() {
      _ironCheckedElementBehavior.IronCheckedElementBehaviorImpl._checkedChanged.call(this);

      if (this.hasRipple()) {
        if (this.checked) {
          this._ripple.setAttribute('checked', '');
        } else {
          this._ripple.removeAttribute('checked');
        }
      }
    },

    /**
     * Synchronizes the element's `active` and `checked` state.
     */
    _buttonStateChanged: function _buttonStateChanged() {
      _paperRippleBehavior.PaperRippleBehavior._buttonStateChanged.call(this);

      if (this.disabled) {
        return;
      }

      if (this.isAttached) {
        this.checked = this.active;
      }
    }
  };
  /** @polymerBehavior */

  _exports.PaperCheckedElementBehaviorImpl = PaperCheckedElementBehaviorImpl;
  var PaperCheckedElementBehavior = [_paperInkyFocusBehavior.PaperInkyFocusBehavior, _ironCheckedElementBehavior.IronCheckedElementBehavior, PaperCheckedElementBehaviorImpl];
  _exports.PaperCheckedElementBehavior = PaperCheckedElementBehavior;
});