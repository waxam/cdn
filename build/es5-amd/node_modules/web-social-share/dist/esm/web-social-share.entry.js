define(["exports", "./index-61bbd0a6.js"], function (_exports, _index61bbd0a) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.web_social_share = void 0;

  // Same implementation as in class @deckdeckgo/utils
  var isMobile = function isMobile() {
    return window === null || window === void 0 ? void 0 : window.matchMedia('(any-pointer:coarse)').matches;
  };

  var staticOpenNewWindow = function staticOpenNewWindow(urlString) {
    if (window.self !== window.top) {
      window.open(urlString, '_blank');
    } else {
      window.open(urlString, '_self');
    }
  };

  var shareEncodedUrl = function shareEncodedUrl(socialShareUrl) {
    return encodeURIComponent(socialShareUrl || window.location.href);
  };
  /**
   * Source: https://github.com/720kb/angular-socialshare/blob/master/dist/angular-socialshare.js
   */


  var shareFacebook = /*#__PURE__*/function () {
    var _ref = babelHelpers.asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(attrs) {
      var urlString;
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (attrs.socialShareType && attrs.socialShareType === 'feed') {
                // if user specifies that they want to use the Facebook feed dialog
                //(https://developers.facebook.com/docs/sharing/reference/feed-dialog/v2.4)
                urlString = 'https://www.facebook.com/dialog/feed?';

                if (attrs.socialShareVia) {
                  urlString += '&app_id=' + encodeURIComponent(attrs.socialShareVia);
                }

                if (attrs.socialShareRedirectUri) {
                  urlString += '&redirect_uri=' + encodeURIComponent(attrs.socialShareRedirectUri);
                }

                if (attrs.socialShareUrl) {
                  urlString += '&link=' + shareEncodedUrl(attrs.socialShareUrl);
                }

                if (attrs.socialShareTo) {
                  urlString += '&to=' + encodeURIComponent(attrs.socialShareTo);
                }

                if (attrs.socialShareDisplay) {
                  urlString += '&display=' + encodeURIComponent(attrs.socialShareDisplay);
                }

                if (attrs.socialShareRef) {
                  urlString += '&ref=' + encodeURIComponent(attrs.socialShareRef);
                }

                if (attrs.socialShareFrom) {
                  urlString += '&from=' + encodeURIComponent(attrs.socialShareFrom);
                }

                if (attrs.socialShareSource) {
                  urlString += '&source=' + encodeURIComponent(attrs.socialShareSource);
                }

                window.open(urlString, 'Facebook', 'toolbar=0,status=0,resizable=yes,width=' + attrs.socialSharePopupWidth + ',height=' + attrs.socialSharePopupHeight + ',top=' + (window.innerHeight - attrs.socialSharePopupHeight) / 2 + ',left=' + (window.innerWidth - attrs.socialSharePopupWidth) / 2);
              } else if (attrs.socialShareType && attrs.socialShareType === 'share') {
                // if user specifies that they want to use the Facebook share dialog
                //(https://developers.facebook.com/docs/sharing/reference/share-dialog)
                urlString = 'https://www.facebook.com/dialog/share?';

                if (attrs.socialShareVia) {
                  urlString += '&app_id=' + encodeURIComponent(attrs.socialShareVia);
                }

                if (attrs.socialShareRedirectUri) {
                  urlString += '&redirect_uri=' + encodeURIComponent(attrs.socialShareRedirectUri);
                }

                if (attrs.socialShareUrl) {
                  urlString += '&href=' + shareEncodedUrl(attrs.socialShareUrl);
                }

                if (attrs.socialShareQuote) {
                  urlString += '&quote=' + encodeURIComponent(attrs.socialShareQuote);
                }

                if (attrs.socialShareDisplay) {
                  urlString += '&display=' + encodeURIComponent(attrs.socialShareDisplay);
                }

                if (attrs.socialShareMobileiframe) {
                  urlString += '&mobile_iframe=' + encodeURIComponent(attrs.socialShareMobileiframe);
                }

                if (attrs.socialShareHashtags) {
                  urlString += '&hashtag=' + encodeURIComponent(attrs.socialShareHashtags);
                }

                window.open(urlString, 'Facebook', 'toolbar=0,status=0,resizable=yes,width=' + attrs.socialSharePopupWidth + ',height=' + attrs.socialSharePopupHeight + ',top=' + (window.innerHeight - attrs.socialSharePopupHeight) / 2 + ',left=' + (window.innerWidth - attrs.socialSharePopupWidth) / 2);
              } else if (attrs.socialShareType && attrs.socialShareType === 'send') {
                // if user specifies that they want to use the Facebook send dialog
                //(https://developers.facebook.com/docs/sharing/reference/send-dialog)
                urlString = 'https://www.facebook.com/dialog/send?';

                if (attrs.socialShareVia) {
                  urlString += '&app_id=' + encodeURIComponent(attrs.socialShareVia);
                }

                if (attrs.socialShareRedirectUri) {
                  urlString += '&redirect_uri=' + encodeURIComponent(attrs.socialShareRedirectUri);
                }

                if (attrs.socialShareUrl) {
                  urlString += '&link=' + shareEncodedUrl(attrs.socialShareUrl);
                }

                if (attrs.socialShareTo) {
                  urlString += '&to=' + encodeURIComponent(attrs.socialShareTo);
                }

                if (attrs.socialShareDisplay) {
                  urlString += '&display=' + encodeURIComponent(attrs.socialShareDisplay);
                }

                window.open(urlString, 'Facebook', 'toolbar=0,status=0,resizable=yes,width=' + attrs.socialSharePopupWidth + ',height=' + attrs.socialSharePopupHeight + ',top=' + (window.innerHeight - attrs.socialSharePopupHeight) / 2 + ',left=' + (window.innerWidth - attrs.socialSharePopupWidth) / 2);
              } else {
                //otherwise default to using sharer.php
                window.open('https://www.facebook.com/sharer/sharer.php?u=' + shareEncodedUrl(attrs.socialShareUrl), 'Facebook', 'toolbar=0,status=0,resizable=yes,width=' + attrs.socialSharePopupWidth + ',height=' + attrs.socialSharePopupHeight + ',top=' + (window.innerHeight - attrs.socialSharePopupHeight) / 2 + ',left=' + (window.innerWidth - attrs.socialSharePopupWidth) / 2);
              }

            case 1:
            case "end":
              return _context.stop();
          }
        }
      }, _callee);
    }));

    return function shareFacebook(_x) {
      return _ref.apply(this, arguments);
    };
  }();

  var shareTwitter = /*#__PURE__*/function () {
    var _ref2 = babelHelpers.asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(attrs) {
      var urlString;
      return regeneratorRuntime.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              urlString = 'https://www.twitter.com/intent/tweet?';

              if (attrs.socialShareText) {
                urlString += 'text=' + encodeURIComponent(attrs.socialShareText);
              }

              if (attrs.socialShareVia) {
                urlString += '&via=' + encodeURIComponent(attrs.socialShareVia);
              }

              if (attrs.socialShareHashtags) {
                urlString += '&hashtags=' + encodeURIComponent(attrs.socialShareHashtags);
              } //default to the current page if a URL isn't specified


              urlString += '&url=' + shareEncodedUrl(attrs.socialShareUrl);

              if (isMobile()) {
                staticOpenNewWindow(urlString);
              } else {
                window.open(urlString, 'Twitter', 'toolbar=0,status=0,resizable=yes,width=' + attrs.socialSharePopupWidth + ',height=' + attrs.socialSharePopupHeight + ',top=' + (window.innerHeight - attrs.socialSharePopupHeight) / 2 + ',left=' + (window.innerWidth - attrs.socialSharePopupWidth) / 2);
              }

            case 6:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2);
    }));

    return function shareTwitter(_x2) {
      return _ref2.apply(this, arguments);
    };
  }();

  var email = /*#__PURE__*/function () {
    var _ref3 = babelHelpers.asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(attrs) {
      var urlString;
      return regeneratorRuntime.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              urlString = 'mailto:';

              if (attrs.socialShareTo) {
                urlString += encodeURIComponent(attrs.socialShareTo);
              }

              urlString += '?';

              if (attrs.socialShareBody) {
                urlString += 'body=' + encodeURIComponent(attrs.socialShareBody);
              }

              if (attrs.socialShareSubject) {
                urlString += '&subject=' + encodeURIComponent(attrs.socialShareSubject);
              }

              if (attrs.socialShareCc) {
                urlString += '&cc=' + encodeURIComponent(attrs.socialShareCc);
              }

              if (attrs.socialShareBcc) {
                urlString += '&bcc=' + encodeURIComponent(attrs.socialShareBcc);
              }

              staticOpenNewWindow(urlString);

            case 8:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3);
    }));

    return function email(_x3) {
      return _ref3.apply(this, arguments);
    };
  }();

  var linkedin = /*#__PURE__*/function () {
    var _ref4 = babelHelpers.asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(attrs) {
      var urlString;
      return regeneratorRuntime.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              urlString = 'https://www.linkedin.com/shareArticle?mini=true';
              urlString += '&url=' + shareEncodedUrl(attrs.socialShareUrl);

              if (attrs.socialShareText) {
                urlString += '&title=' + encodeURIComponent(attrs.socialShareText);
              }

              if (attrs.socialShareDescription) {
                urlString += '&summary=' + encodeURIComponent(attrs.socialShareDescription);
              }

              if (attrs.socialShareSource) {
                urlString += '&source=' + encodeURIComponent(attrs.socialShareSource);
              }

              window.open(urlString, 'Linkedin', 'toolbar=0,status=0,resizable=yes,width=' + attrs.socialSharePopupWidth + ',height=' + attrs.socialSharePopupHeight + ',top=' + (window.innerHeight - attrs.socialSharePopupHeight) / 2 + ',left=' + (window.innerWidth - attrs.socialSharePopupWidth) / 2);

            case 6:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4);
    }));

    return function linkedin(_x4) {
      return _ref4.apply(this, arguments);
    };
  }();

  var pinterest = /*#__PURE__*/function () {
    var _ref5 = babelHelpers.asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(attrs) {
      return regeneratorRuntime.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              window.open('https://www.pinterest.com/pin/create/button/?url=' + shareEncodedUrl(attrs.socialShareUrl) + '&media=' + encodeURIComponent(attrs.socialShareMedia) + '&description=' + encodeURIComponent(attrs.socialShareText), 'Pinterest', 'toolbar=0,status=0,resizable=yes,width=' + attrs.socialSharePopupWidth + ',height=' + attrs.socialSharePopupHeight + ',top=' + (window.innerHeight - attrs.socialSharePopupHeight) / 2 + ',left=' + (window.innerWidth - attrs.socialSharePopupWidth) / 2);

            case 1:
            case "end":
              return _context5.stop();
          }
        }
      }, _callee5);
    }));

    return function pinterest(_x5) {
      return _ref5.apply(this, arguments);
    };
  }();

  var reddit = /*#__PURE__*/function () {
    var _ref6 = babelHelpers.asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(attrs) {
      var urlString, url;
      return regeneratorRuntime.wrap(function _callee6$(_context6) {
        while (1) {
          switch (_context6.prev = _context6.next) {
            case 0:
              urlString = 'https://www.reddit.com/';

              if (attrs.socialShareSubreddit) {
                urlString += 'r/' + attrs.socialShareSubreddit + '/submit?url=';
              } else {
                urlString += 'submit?url=';
              }
              /*-
               * Reddit isn't responsive and at default width for our popups (500 x 500), everything is messed up.
               * So, overriding the width if it is less than 900 (played around to settle on this) and height if
               * it is less than 650px.
               */


              if (attrs.socialSharePopupWidth < 900) {
                attrs.socialSharePopupWidth = 900;
              }

              if (attrs.socialSharePopupHeight < 650) {
                attrs.socialSharePopupHeight = 650;
              }

              url = urlString + shareEncodedUrl(attrs.socialShareUrl);

              if (attrs.socialShareText) {
                url += "&title=".concat(encodeURIComponent(attrs.socialShareText));
              }

              window.open(url, 'Reddit', 'toolbar=0,status=0,resizable=yes,width=' + attrs.socialSharePopupWidth + ',height=' + attrs.socialSharePopupHeight + ',top=' + (window.innerHeight - attrs.socialSharePopupHeight) / 2 + ',left=' + (window.innerWidth - attrs.socialSharePopupWidth) / 2);

            case 7:
            case "end":
              return _context6.stop();
          }
        }
      }, _callee6);
    }));

    return function reddit(_x6) {
      return _ref6.apply(this, arguments);
    };
  }();

  var whatsapp = /*#__PURE__*/function () {
    var _ref7 = babelHelpers.asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(attrs) {
      var mobile, urlString;
      return regeneratorRuntime.wrap(function _callee7$(_context7) {
        while (1) {
          switch (_context7.prev = _context7.next) {
            case 0:
              mobile = isMobile();
              urlString = mobile ? 'https://api.whatsapp.com/send?text=' : 'https://web.whatsapp.com/send?text=';

              if (attrs.socialShareText) {
                urlString += encodeURIComponent(attrs.socialShareText) + '%0A';
              } //default to the current page if a URL isn't specified


              urlString += shareEncodedUrl(attrs.socialShareUrl);

              if (mobile) {
                staticOpenNewWindow(urlString);
              } else {
                window.open(urlString, 'WhatsApp', 'toolbar=0,status=0,resizable=yes,width=' + attrs.socialSharePopupWidth + ',height=' + attrs.socialSharePopupHeight + ',top=' + (window.innerHeight - attrs.socialSharePopupHeight) / 2 + ',left=' + (window.innerWidth - attrs.socialSharePopupWidth) / 2);
              }

            case 5:
            case "end":
              return _context7.stop();
          }
        }
      }, _callee7);
    }));

    return function whatsapp(_x7) {
      return _ref7.apply(this, arguments);
    };
  }();

  var copy = /*#__PURE__*/function () {
    var _ref8 = babelHelpers.asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8(attrs) {
      return regeneratorRuntime.wrap(function _callee8$(_context8) {
        while (1) {
          switch (_context8.prev = _context8.next) {
            case 0:
              _context8.prev = 0;
              _context8.next = 3;
              return navigator.clipboard.writeText(attrs.socialShareUrl || window.location.href);

            case 3:
              _context8.next = 8;
              break;

            case 5:
              _context8.prev = 5;
              _context8.t0 = _context8["catch"](0);
              console.error('Well it seems that copy is not supported by this browser');

            case 8:
            case "end":
              return _context8.stop();
          }
        }
      }, _callee8, null, [[0, 5]]);
    }));

    return function copy(_x8) {
      return _ref8.apply(this, arguments);
    };
  }();

  var hackernews = /*#__PURE__*/function () {
    var _ref9 = babelHelpers.asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9(attrs) {
      var urlString;
      return regeneratorRuntime.wrap(function _callee9$(_context9) {
        while (1) {
          switch (_context9.prev = _context9.next) {
            case 0:
              urlString = 'https://news.ycombinator.com/submitlink?u='; //default to the current page if a URL isn't specified

              urlString += shareEncodedUrl(attrs.socialShareUrl);

              if (attrs.socialShareText) {
                urlString += '&t=' + encodeURIComponent(attrs.socialShareText);
              }

              staticOpenNewWindow(urlString);

            case 4:
            case "end":
              return _context9.stop();
          }
        }
      }, _callee9);
    }));

    return function hackernews(_x9) {
      return _ref9.apply(this, arguments);
    };
  }();

  var telegram = /*#__PURE__*/function () {
    var _ref10 = babelHelpers.asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(attrs) {
      var urlString;
      return regeneratorRuntime.wrap(function _callee10$(_context10) {
        while (1) {
          switch (_context10.prev = _context10.next) {
            case 0:
              urlString = "https://t.me/share/url?url=".concat(shareEncodedUrl(attrs.socialShareUrl));

              if (attrs.socialShareText) {
                urlString += "&text=".concat(encodeURIComponent(attrs.socialShareText));
              }

              staticOpenNewWindow(urlString);

            case 3:
            case "end":
              return _context10.stop();
          }
        }
      }, _callee10);
    }));

    return function telegram(_x10) {
      return _ref10.apply(this, arguments);
    };
  }();

  var webSocialShareCss = "div.web-social-share{visibility:hidden;opacity:0;cursor:pointer;touch-action:manipulation}div.web-social-share.web-social-share-open{visibility:visible;opacity:1}div.web-social-share.web-social-share-open div.web-social-share-backdrop{opacity:var(--web-social-share-backdrop-opacity, 0.25)}div.web-social-share.web-social-share-open div.web-social-share-action-sheet{opacity:1}div.web-social-share.web-social-share-open div.web-social-share-action-sheet div.web-social-share-action-sheet-container div.web-social-share-action-sheet-group{height:var(--web-social-share-height, 80px)}@media (max-width: 540px){div.web-social-share.web-social-share-open div.web-social-share-action-sheet div.web-social-share-action-sheet-container div.web-social-share-action-sheet-group{height:var(--web-social-share-height-small-device, 140px)}}div.web-social-share.web-social-share-open.web-social-share-transition-close div.web-social-share-backdrop{opacity:0}div.web-social-share.web-social-share-open.web-social-share-transition-close div.web-social-share-action-sheet div.web-social-share-action-sheet-container div.web-social-share-action-sheet-group{height:0}div.web-social-share div.web-social-share-backdrop{opacity:0;transition:opacity 0.1s linear;background-color:var(--web-social-share-backdrop-background, black);z-index:var(--web-social-share-zindex, 1000);transform:translate3d(0, 0, 2px);left:0;top:0;position:fixed;height:100%;width:100%}div.web-social-share div.web-social-share-action-sheet{left:0;right:0;top:0;bottom:0;margin:auto;position:fixed;z-index:calc(var(--web-social-share-zindex, 1000) + 1);transform:translate3d(0, 0, 3px);width:100%;max-width:540px}@media (min-width: 540px){div.web-social-share div.web-social-share-action-sheet div.web-social-share-action-sheet-container div.web-social-share-action-sheet-group{border-radius:var(--web-social-share-action-sheet-group-border-radius, 8px 8px 0 0)}}div.web-social-share div.web-social-share-action-sheet div.web-social-share-action-sheet-container{display:flex;flex-flow:column;justify-content:flex-end;height:100%;max-height:100%}div.web-social-share div.web-social-share-action-sheet div.web-social-share-action-sheet-container div.web-social-share-action-sheet-group{box-shadow:var(--web-social-share-action-sheet-group-box-shadow, 0 0 8px 4px rgba(0, 0, 0, 0.1));z-index:calc(var(--web-social-share-zindex, 1000) + 10);transform:translate3d(0, 0, 10px);--background:var(--web-social-share-action-sheet-group-background, #fafafa);background:var(--background);display:flex;justify-content:center;flex-wrap:wrap;height:0;transition-timing-function:cubic-bezier(0.36, 0.66, 0.04, 1);transition:height 0.2s ease-in}@media (max-width: 540px){div.web-social-share div.web-social-share-action-sheet div.web-social-share-action-sheet-container div.web-social-share-action-sheet-group{justify-content:flex-start}}div.web-social-share div.web-social-share-target{margin:auto;width:var(--web-social-share-target-width, 4rem);height:var(--web-social-share-target-height, 3rem);display:flex;flex-direction:column;align-items:center;justify-content:center}div.web-social-share div.web-social-share-target button{position:relative;overflow:hidden;background-position:center;background-color:var(--background);transition:background 0.8s;border-radius:var(--web-social-share-button-border-radius, 8px);cursor:pointer;border:0;width:var(--web-social-share-button-width, 100%);height:var(--web-social-share-button-height, 100%);font-size:var(--web-social-share-button-font-size)}div.web-social-share div.web-social-share-target button:hover{background:var(--background) radial-gradient(circle, transparent 1%, var(--background) 1%) center/15000%}div.web-social-share div.web-social-share-target button:active{background-color:var(--web-social-share-button-ripple-effect-color, #cecece);background-size:100%;transition:background 0s}div.web-social-share div.web-social-share-target p{margin:var(--web-social-share-brand-margin, 2px 0);color:var(--web-social-share-brand-color, inherit);font-size:var(--web-social-share-brand-font-size, 0.6rem)}div.web-social-share div.web-social-share-target div.web-social-share-button-icon{margin:0;display:flex;flex-direction:column;justify-content:center;align-items:center}::slotted([slot=facebook]),::slotted([slot=twitter]),::slotted([slot=email]),::slotted([slot=linkedin]),::slotted([slot=pinterest]),::slotted([slot=reddit]),::slotted([slot=whatsapp]),::slotted([slot=copy]),::slotted([slot=hackernews]){display:none}";

  var WebSocialShare = /*#__PURE__*/function () {
    function WebSocialShare(hostRef) {
      babelHelpers.classCallCheck(this, WebSocialShare);
      (0, _index61bbd0a.r)(this, hostRef);
      this.closed = (0, _index61bbd0a.c)(this, "closed", 7);
    }

    babelHelpers.createClass(WebSocialShare, [{
      key: "hide",
      value: function hide() {
        var _this = this;

        if (this.refContainer) {
          this.refContainer.classList.add('web-social-share-transition-close');
          setTimeout(function () {
            // Reflect css animation speed 400ms, see css
            _this.show = false;

            _this.refContainer.classList.remove('web-social-share-transition-close');

            _this.closed.emit();
          }, 200);
        } else {
          // Well we don't find the action sheet, we could mark it as not displayed
          this.show = false;
          this.closed.emit();
        }
      }
    }, {
      key: "handleShare",
      value: function () {
        var _handleShare = babelHelpers.asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11($event, attributes, action) {
          var _this2 = this;

          return regeneratorRuntime.wrap(function _callee11$(_context11) {
            while (1) {
              switch (_context11.prev = _context11.next) {
                case 0:
                  $event.stopPropagation();
                  _context11.next = 3;
                  return action(attributes);

                case 3:
                  setTimeout(function () {
                    return _this2.hide();
                  }, 250);

                case 4:
                case "end":
                  return _context11.stop();
              }
            }
          }, _callee11);
        }));

        function handleShare(_x11, _x12, _x13) {
          return _handleShare.apply(this, arguments);
        }

        return handleShare;
      }()
    }, {
      key: "render",
      value: function render() {
        var _this3 = this;

        return (0, _index61bbd0a.h)("div", {
          class: this.show ? 'web-social-share web-social-share-open' : 'web-social-share web-social-share-close',
          ref: function ref(el) {
            return _this3.refContainer = el;
          }
        }, (0, _index61bbd0a.h)("div", {
          class: "web-social-share-backdrop",
          onClick: function onClick() {
            return _this3.hide();
          }
        }), (0, _index61bbd0a.h)("div", {
          class: "web-social-share-action-sheet",
          onClick: function onClick() {
            return _this3.hide();
          }
        }, (0, _index61bbd0a.h)("div", {
          class: "web-social-share-action-sheet-container"
        }, (0, _index61bbd0a.h)("div", {
          class: "web-social-share-action-sheet-group"
        }, this.renderTargets()))));
      }
    }, {
      key: "renderTargets",
      value: function renderTargets() {
        var _this4 = this;

        var _a;

        if (!((_a = this.share) === null || _a === void 0 ? void 0 : _a.config)) {
          return undefined;
        }

        return this.share.config.map(function (config) {
          return (0, _index61bbd0a.h)("div", {
            class: "web-social-share-target"
          }, _this4.renderButtons(config));
        });
      }
    }, {
      key: "renderButtons",
      value: function renderButtons(share) {
        if (share.facebook) {
          return this.renderButton(share.facebook, 'facebook', shareFacebook, 'Facebook');
        } else if (share.twitter) {
          return this.renderButton(share.twitter, 'twitter', shareTwitter, 'Twitter');
        } else if (share.email) {
          return this.renderButton(share.email, 'email', email, 'Email');
        } else if (share.linkedin) {
          return this.renderButton(share.linkedin, 'linkedin', linkedin, 'Linkedin');
        } else if (share.pinterest) {
          return this.renderButton(share.pinterest, 'pinterest', pinterest, 'Pinterest');
        } else if (share.reddit) {
          return this.renderButton(share.reddit, 'reddit', reddit, 'Reddit');
        } else if (share.whatsapp) {
          return this.renderButton(share.whatsapp, 'whatsapp', whatsapp, 'WhatsApp');
        } else if (share.copy) {
          return this.renderButton(share.copy, 'copy', copy, 'Copy');
        } else if (share.hackernews) {
          return this.renderButton(share.hackernews, 'hackernews', hackernews, 'Hacker News');
        } else if (share.telegram) {
          return this.renderButton(share.telegram, 'telegram', telegram, 'Telegram');
        }

        return undefined;
      }
    }, {
      key: "renderButton",
      value: function renderButton(attributes, slotName, action, defaultBrandName) {
        var _this5 = this;

        return (0, _index61bbd0a.h)("button", {
          onClick: function onClick($event) {
            return _this5.handleShare($event, attributes, action);
          },
          class: "web-social-share-button"
        }, (0, _index61bbd0a.h)("div", {
          class: "web-social-share-button-icon"
        }, (0, _index61bbd0a.h)("slot", {
          name: slotName
        })), this.renderName(attributes, defaultBrandName));
      }
    }, {
      key: "renderName",
      value: function renderName(displayAttributes, defaultBrandName) {
        if (this.share.displayNames) {
          return (0, _index61bbd0a.h)("p", null, displayAttributes && displayAttributes.brandName && displayAttributes.brandName !== '' ? displayAttributes.brandName : defaultBrandName);
        }

        return undefined;
      }
    }, {
      key: "el",
      get: function get() {
        return (0, _index61bbd0a.g)(this);
      }
    }]);
    return WebSocialShare;
  }();

  _exports.web_social_share = WebSocialShare;
  WebSocialShare.style = webSocialShareCss;
});