function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

/*!-----------------------------------------------------------------------------
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Version: 0.32.1(29a273516805a852aa8edc5e05059f119b13eff0)
 * Released under the MIT license
 * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt
 *-----------------------------------------------------------------------------*/
define("vs/basic-languages/bat/bat", ["require", "require"], function (require) {
  var moduleExports = function () {
    var n = Object.defineProperty;
    var r = Object.getOwnPropertyDescriptor;
    var l = Object.getOwnPropertyNames;
    var i = Object.prototype.hasOwnProperty;

    var g = function g(o) {
      return n(o, "__esModule", {
        value: !0
      });
    };

    var c = function c(o, e) {
      for (var s in e) {
        n(o, s, {
          get: e[s],
          enumerable: !0
        });
      }
    },
        p = function p(o, e, s, a) {
      if (e && babelHelpers.typeof(e) == "object" || typeof e == "function") {
        var _iterator = _createForOfIteratorHelper(l(e)),
            _step;

        try {
          var _loop = function _loop() {
            var t = _step.value;
            !i.call(o, t) && (s || t !== "default") && n(o, t, {
              get: function get() {
                return e[t];
              },
              enumerable: !(a = r(e, t)) || a.enumerable
            });
          };

          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            _loop();
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }

      return o;
    };

    var d = function (o) {
      return function (e, s) {
        return o && o.get(e) || (s = p(g({}), e, 1), o && o.set(e, s), s);
      };
    }(typeof WeakMap != "undefined" ? new WeakMap() : 0);

    var u = {};
    c(u, {
      conf: function conf() {
        return m;
      },
      language: function language() {
        return k;
      }
    });
    var m = {
      comments: {
        lineComment: "REM"
      },
      brackets: [["{", "}"], ["[", "]"], ["(", ")"]],
      autoClosingPairs: [{
        open: "{",
        close: "}"
      }, {
        open: "[",
        close: "]"
      }, {
        open: "(",
        close: ")"
      }, {
        open: '"',
        close: '"'
      }],
      surroundingPairs: [{
        open: "[",
        close: "]"
      }, {
        open: "(",
        close: ")"
      }, {
        open: '"',
        close: '"'
      }],
      folding: {
        markers: {
          start: new RegExp("^\\s*(::\\s*|REM\\s+)#region"),
          end: new RegExp("^\\s*(::\\s*|REM\\s+)#endregion")
        }
      }
    },
        k = {
      defaultToken: "",
      ignoreCase: !0,
      tokenPostfix: ".bat",
      brackets: [{
        token: "delimiter.bracket",
        open: "{",
        close: "}"
      }, {
        token: "delimiter.parenthesis",
        open: "(",
        close: ")"
      }, {
        token: "delimiter.square",
        open: "[",
        close: "]"
      }],
      keywords: /call|defined|echo|errorlevel|exist|for|goto|if|pause|set|shift|start|title|not|pushd|popd/,
      symbols: /[=><!~?&|+\-*\/\^;\.,]+/,
      escapes: /\\(?:[abfnrtv\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,
      tokenizer: {
        root: [[/^(\s*)(rem(?:\s.*|))$/, ["", "comment"]], [/(\@?)(@keywords)(?!\w)/, [{
          token: "keyword"
        }, {
          token: "keyword.$2"
        }]], [/[ \t\r\n]+/, ""], [/setlocal(?!\w)/, "keyword.tag-setlocal"], [/endlocal(?!\w)/, "keyword.tag-setlocal"], [/[a-zA-Z_]\w*/, ""], [/:\w*/, "metatag"], [/%[^%]+%/, "variable"], [/%%[\w]+(?!\w)/, "variable"], [/[{}()\[\]]/, "@brackets"], [/@symbols/, "delimiter"], [/\d*\.\d+([eE][\-+]?\d+)?/, "number.float"], [/0[xX][0-9a-fA-F_]*[0-9a-fA-F]/, "number.hex"], [/\d+/, "number"], [/[;,.]/, "delimiter"], [/"/, "string", '@string."'], [/'/, "string", "@string.'"]],
        string: [[/[^\\"'%]+/, {
          cases: {
            "@eos": {
              token: "string",
              next: "@popall"
            },
            "@default": "string"
          }
        }], [/@escapes/, "string.escape"], [/\\./, "string.escape.invalid"], [/%[\w ]+%/, "variable"], [/%%[\w]+(?!\w)/, "variable"], [/["']/, {
          cases: {
            "$#==$S2": {
              token: "string",
              next: "@pop"
            },
            "@default": "string"
          }
        }], [/$/, "string", "@popall"]]
      }
    };
    return d(u);
  }();

  return moduleExports;
});