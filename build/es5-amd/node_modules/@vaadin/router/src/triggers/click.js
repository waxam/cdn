define(["exports","../utils.js"],function(_exports,_utils){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.default=void 0;/* istanbul ignore next: coverage is calculated in Chrome, this code is for IE */function getAnchorOrigin(anchor){// IE11: on HTTP and HTTPS the default port is not included into
// window.location.origin, so won't include it here either.
var port=anchor.port,protocol=anchor.protocol,defaultHttp="http:"===protocol&&"80"===port,defaultHttps="https:"===protocol&&"443"===port,host=defaultHttp||defaultHttps?anchor.hostname// does not include the port number (e.g. www.example.org)
:anchor.host;// does include the port number (e.g. www.example.org:80)
return"".concat(protocol,"//").concat(host)}// The list of checks is not complete:
//  - SVG support is missing
//  - the 'rel' attribute is not considered
function vaadinRouterGlobalClickHandler(event){// ignore the click if the default action is prevented
if(event.defaultPrevented){return}// ignore the click if not with the primary mouse button
if(0!==event.button){return}// ignore the click if a modifier key is pressed
if(event.shiftKey||event.ctrlKey||event.altKey||event.metaKey){return}// find the <a> element that the click is at (or within)
// FIXME(web-padawan): `Symbol.iterator` used by webcomponentsjs is broken for arrays
// example to check: `for...of` loop here throws the "Not yet implemented" error
for(var anchor=event.target,path=event.composedPath?event.composedPath():event.path||[],i=0,target;i<path.length;i++){target=path[i];if(target.nodeName&&"a"===target.nodeName.toLowerCase()){anchor=target;break}}while(anchor&&"a"!==anchor.nodeName.toLowerCase()){anchor=anchor.parentNode}// ignore the click if not at an <a> element
if(!anchor||"a"!==anchor.nodeName.toLowerCase()){return}// ignore the click if the <a> element has a non-default target
if(anchor.target&&"_self"!==anchor.target.toLowerCase()){return}// ignore the click if the <a> element has the 'download' attribute
if(anchor.hasAttribute("download")){return}// ignore the click if the target URL is a fragment on the current page
if(anchor.pathname===window.location.pathname&&""!==anchor.hash){return}// ignore the click if the target is external to the app
// In IE11 HTMLAnchorElement does not have the `origin` property
var origin=anchor.origin||getAnchorOrigin(anchor);if(origin!==window.location.origin){return}// if none of the above, convert the click into a navigation event
if((0,_utils.fireRouterEvent)("go",{pathname:anchor.pathname})){event.preventDefault()}}/**
 * A navigation trigger for Vaadin Router that translated clicks on `<a>` links
 * into Vaadin Router navigation events.
 *
 * Only regular clicks on in-app links are translated (primary mouse button, no
 * modifier keys, the target href is within the app's URL space).
 *
 * @memberOf Vaadin.Router.Triggers
 * @type {NavigationTrigger}
 */var CLICK={activate:function activate(){window.document.addEventListener("click",vaadinRouterGlobalClickHandler)},inactivate:function inactivate(){window.document.removeEventListener("click",vaadinRouterGlobalClickHandler)}},_default=CLICK;_exports.default=_default});