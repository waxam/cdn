define(["exports","../../../@polymer/polymer/polymer-element.js","./vaadin-text-field-mixin.js","../../vaadin-element-mixin/vaadin-element-mixin.js","../../../@polymer/polymer/lib/utils/html-tag.js","../../vaadin-themable-mixin/vaadin-themable-mixin.js"],function(_exports,_polymerElement,_vaadinTextFieldMixin,_vaadinElementMixin,_htmlTag,_vaadinThemableMixin){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.TextFieldElement=void 0;function _templateObject_7ca3aad0518211e992dc9bc9db8655de(){var data=babelHelpers.taggedTemplateLiteral(["\n    <style include=\"vaadin-text-field-shared-styles\">\n      /* polymer-cli linter breaks with empty line */\n    </style>\n\n    <div class=\"vaadin-text-field-container\">\n\n      <label part=\"label\" on-click=\"focus\" id=\"[[_labelId]]\">[[label]]</label>\n\n      <div part=\"input-field\">\n\n        <slot name=\"prefix\"></slot>\n\n        <input part=\"value\" autocomplete$=\"[[autocomplete]]\" autocorrect$=\"[[autocorrect]]\" autocapitalize$=\"[[autocapitalize]]\" autofocus$=\"[[autofocus]]\" disabled$=\"[[disabled]]\" list=\"[[list]]\" maxlength$=\"[[maxlength]]\" minlength$=\"[[minlength]]\" pattern=\"[[pattern]]\" placeholder$=\"[[placeholder]]\" readonly$=\"[[readonly]]\" aria-readonly$=\"[[readonly]]\" required$=\"[[required]]\" aria-required$=\"[[required]]\" value=\"{{value::input}}\" title=\"[[title]]\" on-blur=\"validate\" on-input=\"_onInput\" on-change=\"_onChange\" aria-describedby$=\"[[_getActiveErrorId(invalid, errorMessage, _errorId)]]\" aria-labelledby$=\"[[_getActiveLabelId(label, _labelId)]]\" aria-invalid$=\"[[invalid]]\">\n\n        <slot name=\"suffix\"></slot>\n\n      </div>\n\n      <div part=\"error-message\" id=\"[[_errorId]]\" aria-live=\"assertive\" aria-hidden$=\"[[_getErrorMessageAriaHidden(invalid, errorMessage, _errorId)]]\">[[errorMessage]]</div>\n\n    </div>\n"],["\n    <style include=\"vaadin-text-field-shared-styles\">\n      /* polymer-cli linter breaks with empty line */\n    </style>\n\n    <div class=\"vaadin-text-field-container\">\n\n      <label part=\"label\" on-click=\"focus\" id=\"[[_labelId]]\">[[label]]</label>\n\n      <div part=\"input-field\">\n\n        <slot name=\"prefix\"></slot>\n\n        <input part=\"value\" autocomplete\\$=\"[[autocomplete]]\" autocorrect\\$=\"[[autocorrect]]\" autocapitalize\\$=\"[[autocapitalize]]\" autofocus\\$=\"[[autofocus]]\" disabled\\$=\"[[disabled]]\" list=\"[[list]]\" maxlength\\$=\"[[maxlength]]\" minlength\\$=\"[[minlength]]\" pattern=\"[[pattern]]\" placeholder\\$=\"[[placeholder]]\" readonly\\$=\"[[readonly]]\" aria-readonly\\$=\"[[readonly]]\" required\\$=\"[[required]]\" aria-required\\$=\"[[required]]\" value=\"{{value::input}}\" title=\"[[title]]\" on-blur=\"validate\" on-input=\"_onInput\" on-change=\"_onChange\" aria-describedby\\$=\"[[_getActiveErrorId(invalid, errorMessage, _errorId)]]\" aria-labelledby\\$=\"[[_getActiveLabelId(label, _labelId)]]\" aria-invalid\\$=\"[[invalid]]\">\n\n        <slot name=\"suffix\"></slot>\n\n      </div>\n\n      <div part=\"error-message\" id=\"[[_errorId]]\" aria-live=\"assertive\" aria-hidden\\$=\"[[_getErrorMessageAriaHidden(invalid, errorMessage, _errorId)]]\">[[errorMessage]]</div>\n\n    </div>\n"]);_templateObject_7ca3aad0518211e992dc9bc9db8655de=function(){return data};return data}var TextFieldElement=function(_ElementMixin){babelHelpers.inherits(TextFieldElement,_ElementMixin);function TextFieldElement(){babelHelpers.classCallCheck(this,TextFieldElement);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(TextFieldElement).apply(this,arguments))}babelHelpers.createClass(TextFieldElement,null,[{key:"template",get:function get(){return(0,_htmlTag.html)(_templateObject_7ca3aad0518211e992dc9bc9db8655de())}},{key:"is",get:function get(){return"vaadin-text-field"}},{key:"version",get:function get(){return"2.1.5"}},{key:"properties",get:function get(){return{list:{type:String},pattern:{type:String},title:{type:String}}}}]);return TextFieldElement}((0,_vaadinElementMixin.ElementMixin)((0,_vaadinTextFieldMixin.TextFieldMixin)((0,_vaadinThemableMixin.ThemableMixin)(_polymerElement.PolymerElement))));_exports.TextFieldElement=TextFieldElement;customElements.define(TextFieldElement.is,TextFieldElement)});