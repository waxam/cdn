define(["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.FilterMixin = void 0;

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  /**
  @license
  Copyright (c) 2017 Vaadin Ltd.
  This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
  */

  /**
   * @polymerMixin
   */
  var FilterMixin = function FilterMixin(superClass) {
    return /*#__PURE__*/function (_superClass) {
      babelHelpers.inherits(FilterMixin, _superClass);

      var _super = _createSuper(FilterMixin);

      function FilterMixin() {
        babelHelpers.classCallCheck(this, FilterMixin);
        return _super.apply(this, arguments);
      }

      babelHelpers.createClass(FilterMixin, [{
        key: "ready",

        /** @protected */
        value: function ready() {
          babelHelpers.get(babelHelpers.getPrototypeOf(FilterMixin.prototype), "ready", this).call(this);
          this.addEventListener('filter-changed', this._filterChanged.bind(this));
        }
        /** @private */

      }, {
        key: "_filterChanged",
        value: function _filterChanged(e) {
          if (this._filters.indexOf(e.target) === -1) {
            this._filters.push(e.target);
          }

          e.stopPropagation();

          if (this.dataProvider) {
            this.clearCache();
          }
        }
        /**
         * @return {!Array<!GridFilter>}
         * @protected
         */

      }, {
        key: "_mapFilters",
        value: function _mapFilters() {
          return this._filters.map(function (filter) {
            return {
              path: filter.path,
              value: filter.value
            };
          });
        }
      }], [{
        key: "properties",
        get: function get() {
          return {
            /** @private */
            _filters: {
              type: Array,
              value: function value() {
                return [];
              }
            }
          };
        }
      }]);
      return FilterMixin;
    }(superClass);
  };

  _exports.FilterMixin = FilterMixin;
});