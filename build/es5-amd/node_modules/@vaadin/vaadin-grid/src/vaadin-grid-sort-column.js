define(["exports", "./vaadin-grid-column.js", "./vaadin-grid-sorter.js", "../../../@polymer/polymer/lib/utils/html-tag.js"], function (_exports, _vaadinGridColumn, _vaadinGridSorter, _htmlTag) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.GridSortColumnElement = void 0;

  function _templateObject_a4f9ab40c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n    <template class=\"header\" id=\"headerTemplate\">\n      <vaadin-grid-sorter path=\"[[path]]\" direction=\"{{direction}}\">[[_getHeader(header, path)]]</vaadin-grid-sorter>\n    </template>\n"]);

    _templateObject_a4f9ab40c96f11ea8be5e1d5fe7ec787 = function _templateObject_a4f9ab40c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  /**
   * `<vaadin-grid-sort-column>` is a helper element for the `<vaadin-grid>`
   * that provides default header template and functionality for sorting.
   *
   * #### Example:
   * ```html
   * <vaadin-grid items="[[items]]">
   *  <vaadin-grid-sort-column path="name.first" direction="asc"></vaadin-grid-sort-column>
   *
   *  <vaadin-grid-column>
   *    ...
   * ```
   *
   * @memberof Vaadin
   */
  var GridSortColumnElement =
  /*#__PURE__*/
  function (_GridColumnElement) {
    babelHelpers.inherits(GridSortColumnElement, _GridColumnElement);

    function GridSortColumnElement() {
      babelHelpers.classCallCheck(this, GridSortColumnElement);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(GridSortColumnElement).apply(this, arguments));
    }

    babelHelpers.createClass(GridSortColumnElement, [{
      key: "_prepareHeaderTemplate",
      value: function _prepareHeaderTemplate() {
        var headerTemplate = this._prepareTemplatizer(this.$.headerTemplate); // needed to override the dataHost correctly in case internal template is used.


        headerTemplate.templatizer.dataHost = this;
        return headerTemplate;
      }
    }, {
      key: "_getHeader",
      value: function _getHeader(header, path) {
        return header || this._generateHeader(path);
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _htmlTag.html)(_templateObject_a4f9ab40c96f11ea8be5e1d5fe7ec787());
      }
    }, {
      key: "is",
      get: function get() {
        return 'vaadin-grid-sort-column';
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          /**
           * JS Path of the property in the item used for sorting the data.
           */
          path: String,

          /**
           * How to sort the data.
           * Possible values are `asc` to use an ascending algorithm, `desc` to sort the data in
           * descending direction, or `null` for not sorting the data.
           */
          direction: {
            type: String,
            notify: true
          }
        };
      }
    }]);
    return GridSortColumnElement;
  }(_vaadinGridColumn.GridColumnElement);

  _exports.GridSortColumnElement = GridSortColumnElement;
  customElements.define(GridSortColumnElement.is, GridSortColumnElement);
});