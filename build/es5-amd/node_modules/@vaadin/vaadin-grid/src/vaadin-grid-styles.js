define(["../../../@polymer/polymer/lib/elements/dom-module.js", "../../../@polymer/polymer/lib/utils/html-tag.js"], function (_domModule, _htmlTag) {
  "use strict";

  function _templateObject_a4ff77a0c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n  <style>\n    @keyframes vaadin-grid-appear {\n      to {\n        opacity: 1;\n      }\n    }\n\n    :host {\n      display: block;\n      animation: 1ms vaadin-grid-appear;\n      height: 400px;\n      flex: 1 1 auto;\n      align-self: stretch;\n      position: relative;\n    }\n\n    :host([hidden]) {\n      display: none !important;\n    }\n\n    #scroller {\n      display: block;\n      transform: translateY(0);\n      width: auto;\n      height: auto;\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n    }\n\n    :host([height-by-rows]) {\n      height: auto;\n      align-self: flex-start;\n      flex-grow: 0;\n      width: 100%;\n    }\n\n    :host([height-by-rows]) #scroller {\n      width: 100%;\n      height: 100%;\n      position: relative;\n    }\n\n    #table {\n      display: block;\n      width: 100%;\n      height: 100%;\n      overflow: auto;\n      z-index: -2;\n      position: relative;\n      outline: none;\n    }\n\n    #header {\n      display: block;\n      position: absolute;\n      top: 0;\n      width: 100%;\n    }\n\n    th {\n      text-align: inherit;\n    }\n\n    /* Safari doesn't work with \"inherit\" */\n    [safari] th {\n      text-align: initial;\n    }\n\n    #footer {\n      display: block;\n      position: absolute;\n      bottom: 0;\n      width: 100%;\n    }\n\n    #items {\n      display: block;\n      width: 100%;\n      position: relative;\n      z-index: -1;\n    }\n\n    #items,\n    #outersizer,\n    #fixedsizer {\n      border-top: 0 solid transparent;\n      border-bottom: 0 solid transparent;\n    }\n\n    [part~=\"row\"] {\n      display: flex;\n      width: 100%;\n      box-sizing: border-box;\n      margin: 0;\n    }\n\n    [part~=\"row\"][loading] [part~=\"body-cell\"] ::slotted(vaadin-grid-cell-content) {\n      opacity: 0;\n    }\n\n    #items [part~=\"row\"] {\n      position: absolute;\n    }\n\n    #items [part~=\"row\"]:empty {\n      height: 1em;\n    }\n\n    [part~=\"cell\"]:not([part~=\"details-cell\"]) {\n      flex-shrink: 0;\n      flex-grow: 1;\n      box-sizing: border-box;\n      display: flex;\n      width: 100%;\n      position: relative;\n      align-items: center;\n      padding: 0;\n      white-space: nowrap;\n    }\n\n    [part~=\"details-cell\"] {\n      position: absolute;\n      bottom: 0;\n      width: 100%;\n      box-sizing: border-box;\n      padding: 0;\n    }\n\n    [part~=\"cell\"] ::slotted(vaadin-grid-cell-content) {\n      display: block;\n      width: 100%;\n      box-sizing: border-box;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    [hidden] {\n      display: none !important;\n    }\n\n    [frozen] {\n      z-index: 2;\n      will-change: transform;\n    }\n\n    #outerscroller {\n      /* Needed (at least) for Android Chrome */\n      z-index: 0;\n    }\n\n    #scroller:not([safari]) #outerscroller {\n      /* Needed for Android Chrome (#1020). Can't be applied to Safari\n      since it would re-introduce the sub-pixel overflow bug (#853) */\n      will-change: transform;\n    }\n\n    [no-scrollbars]:not([safari]):not([firefox]) #outerscroller,\n    [no-scrollbars][safari] #table,\n    [no-scrollbars][firefox] #table {\n      overflow: hidden;\n    }\n\n    [no-scrollbars]:not([safari]):not([firefox]) #outerscroller {\n      pointer-events: none;\n    }\n\n    /* Reordering styles */\n    :host([reordering]) [part~=\"cell\"] ::slotted(vaadin-grid-cell-content),\n    :host([reordering]) [part~=\"resize-handle\"],\n    #scroller[no-content-pointer-events] [part~=\"cell\"] ::slotted(vaadin-grid-cell-content) {\n      pointer-events: none;\n    }\n\n    [part~=\"reorder-ghost\"] {\n      visibility: hidden;\n      position: fixed;\n      pointer-events: none;\n      opacity: 0.5;\n\n      /* Prevent overflowing the grid in Firefox */\n      top: 0;\n      left: 0;\n    }\n\n    :host([reordering]) {\n      -moz-user-select: none;\n      -webkit-user-select: none;\n      user-select: none;\n    }\n\n    #scroller[ie][column-reordering-allowed] [part~=\"header-cell\"] {\n      -ms-user-select: none;\n    }\n\n    :host([reordering]) #outerscroller {\n      -webkit-overflow-scrolling: auto !important;\n    }\n\n    /* Resizing styles */\n    [part~=\"resize-handle\"] {\n      position: absolute;\n      top: 0;\n      right: 0;\n      height: 100%;\n      cursor: col-resize;\n      z-index: 1;\n    }\n\n    [part~=\"resize-handle\"]::before {\n      position: absolute;\n      content: \"\";\n      height: 100%;\n      width: 35px;\n      transform: translateX(-50%);\n    }\n\n    [last-column] [part~=\"resize-handle\"]::before,\n    [last-frozen] [part~=\"resize-handle\"]::before {\n      width: 18px;\n      transform: none;\n      right: 0;\n    }\n\n    #scroller[column-resizing] {\n      -ms-user-select: none;\n      -moz-user-select: none;\n      -webkit-user-select: none;\n      user-select: none;\n    }\n\n    /* Sizer styles */\n    .sizer {\n      display: flex;\n      position: relative;\n      width: 100%;\n      visibility: hidden;\n    }\n\n    .sizer [part~=\"details-cell\"] {\n      display: none !important;\n    }\n\n    .sizer [part~=\"cell\"][hidden] {\n      display: none !important;\n    }\n\n    .sizer [part~=\"cell\"] {\n      display: block;\n      flex-shrink: 0;\n      line-height: 0;\n      margin-top: -1em;\n      height: 0 !important;\n      min-height: 0 !important;\n      max-height: 0 !important;\n      padding: 0 !important;\n    }\n\n    .sizer [part~=\"cell\"]::before {\n      content: \"-\";\n    }\n\n    .sizer [part~=\"cell\"] ::slotted(vaadin-grid-cell-content) {\n      display: none !important;\n    }\n\n    /* Fixed mode (Tablet Edge) */\n    #fixedsizer {\n      position: absolute;\n    }\n\n    :not([edge][no-scrollbars]) #fixedsizer {\n      display: none;\n    }\n\n    [edge][no-scrollbars] {\n      /* Any value other than \u2018none\u2019 for the transform results in the creation of both a stacking context and\n      a containing block. The object acts as a containing block for fixed positioned descendants. */\n      transform: translateZ(0);\n      overflow: hidden;\n    }\n\n    [edge][no-scrollbars] #header,\n    [edge][no-scrollbars] #footer {\n      position: fixed;\n    }\n\n    [edge][no-scrollbars] #items {\n      position: fixed;\n      width: 100%;\n      will-change: transform;\n    }\n  </style>\n"]);

    _templateObject_a4ff77a0c96f11ea8be5e1d5fe7ec787 = function _templateObject_a4ff77a0c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  var VaadinGridStyles = document.createElement('dom-module'); // NOTE(web-padawan): https://github.com/vaadin/vaadin-grid/issues/1514

  VaadinGridStyles.appendChild((0, _htmlTag.html)(_templateObject_a4ff77a0c96f11ea8be5e1d5fe7ec787()));
  var safari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
  var firefox = navigator.userAgent.toLowerCase().indexOf('firefox') > -1;

  if (safari || firefox) {
    var scrollingStyles = document.createElement('style');
    scrollingStyles.textContent = "\n    [scrolling][safari] #outerscroller,\n    [scrolling][firefox] #outerscroller {\n      pointer-events: auto;\n    }\n\n    [ios] #outerscroller {\n      pointer-events: auto;\n      z-index: -3;\n    }\n\n    [ios][scrolling] #outerscroller {\n      z-index: 0;\n    }\n\n    [ios] [frozen] {\n      will-change: auto;\n    }\n  ";
    VaadinGridStyles.querySelector('template').content.appendChild(scrollingStyles);
  }

  VaadinGridStyles.register('vaadin-grid-styles');
});