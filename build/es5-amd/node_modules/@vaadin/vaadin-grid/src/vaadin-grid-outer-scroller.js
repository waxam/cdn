define(["../../../@polymer/polymer/polymer-element.js", "../../../@polymer/polymer/lib/utils/html-tag.js"], function (_polymerElement, _htmlTag) {
  "use strict";

  function _templateObject_0a25b180512e11eba3cb872b69c5cbbb() {
    var data = babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        display: block;\n        height: 100%;\n        width: 100%;\n        position: absolute;\n        top: 0;\n        box-sizing: border-box;\n        overflow: auto;\n      }\n\n      :host([passthrough]) {\n        pointer-events: none;\n      }\n    </style>\n\n    <slot></slot>\n"]);

    _templateObject_0a25b180512e11eba3cb872b69c5cbbb = function _templateObject_0a25b180512e11eba3cb872b69c5cbbb() {
      return data;
    };

    return data;
  }

  function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = babelHelpers.getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = babelHelpers.getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return babelHelpers.possibleConstructorReturn(this, result); }; }

  function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

  /**
   * This Element is used internally by vaadin-grid.
   *
   * @private
   */
  var GridOuterScrollerElement = /*#__PURE__*/function (_ref) {
    babelHelpers.inherits(GridOuterScrollerElement, _ref);

    var _super = _createSuper(GridOuterScrollerElement);

    function GridOuterScrollerElement() {
      babelHelpers.classCallCheck(this, GridOuterScrollerElement);
      return _super.apply(this, arguments);
    }

    babelHelpers.createClass(GridOuterScrollerElement, [{
      key: "ready",

      /** @protected */
      value: function ready() {
        var _this = this;

        babelHelpers.get(babelHelpers.getPrototypeOf(GridOuterScrollerElement.prototype), "ready", this).call(this);
        this.addEventListener('scroll', function () {
          return _this._syncScrollTarget();
        });
        this.parentElement.addEventListener('mousemove', this._onMouseMove.bind(this)); // for some reason scroll bars are hidden in iOS if this style is
        // added in stylesheets or before attaching.

        this.style.webkitOverflowScrolling = 'touch';
        this.addEventListener('mousedown', function (_) {
          return _this.outerScrolling = true;
        });
        this.addEventListener('mouseup', function (_) {
          _this.outerScrolling = false;

          _this.scrollHandler._scrollHandler();
        });
      }
    }, {
      key: "_onMouseMove",
      value: function _onMouseMove(e) {
        // Ignore mousemove events on touch devices
        if (!this._touchDevice) {
          if (this.noScrollbars && this.parentElement.hasAttribute('scroll-period')) {
            this.passthrough = e.offsetY <= this.clientHeight - 20 && e.offsetX <= this.clientWidth - 20;
          } else {
            this.passthrough = e.offsetY <= this.clientHeight && e.offsetX <= this.clientWidth;
          }
        }
      }
    }, {
      key: "syncOuterScroller",
      value: function syncOuterScroller() {
        this.scrollTop = this.scrollTarget.scrollTop;
        this.scrollLeft = this.scrollTarget.scrollLeft;
      }
    }, {
      key: "_syncScrollTarget",
      value: function _syncScrollTarget() {
        var _this2 = this;

        requestAnimationFrame(function () {
          _this2.scrollTarget.scrollTop = _this2.scrollTop;
          _this2.scrollTarget.scrollLeft = _this2.scrollLeft;

          _this2.scrollHandler._scrollHandler();
        });
      }
    }], [{
      key: "template",
      get: function get() {
        return (0, _htmlTag.html)(_templateObject_0a25b180512e11eba3cb872b69c5cbbb());
      }
    }, {
      key: "is",
      get: function get() {
        return 'vaadin-grid-outer-scroller';
      }
    }, {
      key: "properties",
      get: function get() {
        return {
          scrollTarget: {
            type: Object
          },
          scrollHandler: {
            type: Object
          },
          passthrough: {
            type: Boolean,
            reflectToAttribute: true,
            value: true
          },
          outerScrolling: Boolean,
          noScrollbars: Boolean,
          _touchDevice: Boolean
        };
      }
    }]);
    return GridOuterScrollerElement;
  }( /*#__PURE__*/function (_PolymerElement) {
    babelHelpers.inherits(_class, _PolymerElement);

    var _super2 = _createSuper(_class);

    function _class() {
      babelHelpers.classCallCheck(this, _class);
      return _super2.apply(this, arguments);
    }

    return _class;
  }(_polymerElement.PolymerElement));

  customElements.define(GridOuterScrollerElement.is, GridOuterScrollerElement);
});