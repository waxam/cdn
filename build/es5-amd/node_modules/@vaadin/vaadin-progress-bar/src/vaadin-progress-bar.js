define(["exports", "../../../@polymer/polymer/polymer-element.js", "./vaadin-progress-mixin.js", "../../vaadin-themable-mixin/vaadin-themable-mixin.js", "../../vaadin-element-mixin/vaadin-element-mixin.js", "../../../@polymer/polymer/lib/utils/html-tag.js"], function (_exports, _polymerElement, _vaadinProgressMixin, _vaadinThemableMixin, _vaadinElementMixin, _htmlTag) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.ProgressBarElement = void 0;

  function _templateObject_a55f23d0c96f11ea8be5e1d5fe7ec787() {
    var data = babelHelpers.taggedTemplateLiteral(["\n    <style>\n      :host {\n        display: block;\n        width: 100%; /* prevent collapsing inside non-stretching column flex */\n        height: 8px;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      [part=\"bar\"] {\n        height: 100%;\n      }\n\n      [part=\"value\"] {\n        height: 100%;\n        transform-origin: 0 50%;\n        transform: scaleX(var(--vaadin-progress-value));\n      }\n\n    </style>\n\n    <div part=\"bar\">\n      <div part=\"value\"></div>\n    </div>\n"]);

    _templateObject_a55f23d0c96f11ea8be5e1d5fe7ec787 = function _templateObject_a55f23d0c96f11ea8be5e1d5fe7ec787() {
      return data;
    };

    return data;
  }

  /**
   * `<vaadin-progress-bar>` is a Web Component for progress bars.
   *
   * ```html
   * <vaadin-progress-bar min="0" max="1" value="0.5">
   * </vaadin-progress-bar>
   * ```
   *
   * ### Styling
   *
   * The following shadow DOM parts are available for styling:
   *
   * Part name | Description
   * ----------------|----------------
   * `bar` | Progress-bar's background
   * `value` | Progress-bar's foreground
   *
   * See [ThemableMixin â€“ how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)
   *
   * The following custom properties are available:
   *
   * Custom property | Description | Default
   * ----------------|-------------|-------------
   * `--vaadin-progress-value` | current progress value (between 0 and 1) | 0
   *
   * The following state attributes are available for styling:
   *
   * Attribute       | Description | Part name
   * ----------------|-------------|------------
   * `indeterminate` | Set to an indeterminate progress bar | :host
   *
   * @memberof Vaadin
   * @mixes Vaadin.ProgressMixin
   * @mixes Vaadin.ThemableMixin
   * @demo demo/index.html
   */
  var ProgressBarElement =
  /*#__PURE__*/
  function (_ElementMixin) {
    babelHelpers.inherits(ProgressBarElement, _ElementMixin);

    function ProgressBarElement() {
      babelHelpers.classCallCheck(this, ProgressBarElement);
      return babelHelpers.possibleConstructorReturn(this, babelHelpers.getPrototypeOf(ProgressBarElement).apply(this, arguments));
    }

    babelHelpers.createClass(ProgressBarElement, null, [{
      key: "template",
      get: function get() {
        return (0, _htmlTag.html)(_templateObject_a55f23d0c96f11ea8be5e1d5fe7ec787());
      }
    }, {
      key: "is",
      get: function get() {
        return 'vaadin-progress-bar';
      }
    }, {
      key: "version",
      get: function get() {
        return '1.1.2';
      }
    }]);
    return ProgressBarElement;
  }((0, _vaadinElementMixin.ElementMixin)((0, _vaadinThemableMixin.ThemableMixin)((0, _vaadinProgressMixin.ProgressMixin)(_polymerElement.PolymerElement))));

  _exports.ProgressBarElement = ProgressBarElement;
  customElements.define(ProgressBarElement.is, ProgressBarElement);
});