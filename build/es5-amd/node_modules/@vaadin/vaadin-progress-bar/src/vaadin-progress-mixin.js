define(["exports"],function(_exports){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.ProgressMixin=void 0;/**
@license
Copyright (c) 2017 Vaadin Ltd.
This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
*/ /**
 * @polymerMixin
 */var ProgressMixin=function ProgressMixin(superClass){return(/*#__PURE__*/function(_superClass){babelHelpers.inherits(VaadinProgressMixin,_superClass);function VaadinProgressMixin(){babelHelpers.classCallCheck(this,VaadinProgressMixin);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(VaadinProgressMixin).apply(this,arguments))}babelHelpers.createClass(VaadinProgressMixin,[{key:"ready",value:function ready(){babelHelpers.get(babelHelpers.getPrototypeOf(VaadinProgressMixin.prototype),"ready",this).call(this);this.setAttribute("role","progressbar")}},{key:"_normalizedValueChanged",value:function _normalizedValueChanged(value,min,max){var newNormalizedValue=this._normalizeValue(value,min,max);this.style.setProperty("--vaadin-progress-value",newNormalizedValue);this.updateStyles({"--vaadin-progress-value":newNormalizedValue+""})}},{key:"_valueChanged",value:function _valueChanged(newV,oldV){this.setAttribute("aria-valuenow",newV)}},{key:"_minChanged",value:function _minChanged(newV,oldV){this.setAttribute("aria-valuemin",newV)}},{key:"_maxChanged",value:function _maxChanged(newV,oldV){this.setAttribute("aria-valuemax",newV)}/**
     * Percent of current progress relative to whole progress bar (max - min)
     */},{key:"_normalizeValue",value:function _normalizeValue(value,min,max){var nV;if(!value&&0!=value){nV=0}else if(min>=max){nV=1}else{nV=(value-min)/(max-min);nV=Math.min(Math.max(nV,0),1)}return nV}}],[{key:"properties",get:function get(){return{/**
         * Current progress value.
         */value:{type:Number,observer:"_valueChanged"},/**
         * Minimum bound of the progress bar.
         */min:{type:Number,value:0,observer:"_minChanged"},/**
         * Maximum bound of the progress bar.
         */max:{type:Number,value:1,observer:"_maxChanged"},/**
         * Indeterminate state of the progress bar.
         * This property takes precedence over other state properties (min, max, value).
         */indeterminate:{type:Boolean,value:!1,reflectToAttribute:!0}}}},{key:"observers",get:function get(){return["_normalizedValueChanged(value, min, max)"]}}]);return VaadinProgressMixin}(superClass))};_exports.ProgressMixin=ProgressMixin});