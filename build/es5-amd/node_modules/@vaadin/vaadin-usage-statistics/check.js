var fs = require('fs');

var disabledForMachine = process.env.npm_package_config_disabled;
var disabledForProject = false;

if (fs.existsSync("../../../package.json")) {
  var projectPackageJson = JSON.parse(fs.readFileSync("../../../package.json"));

  if (projectPackageJson.vaadin && projectPackageJson.vaadin.disableUsageStatistics) {
    disabledForProject = true;
  }
}

if (disabledForMachine || disabledForProject) {
  if (disabledForMachine) {
    console.log("\n    You have disabled Vaadin development time usage statistics collection. To re-enable, run:\n    npm explore @vaadin/vaadin-usage-statistics -- npm run enable\n    For more details, see https://github.com/vaadin/vaadin-usage-statistics\n  ");
  }

  try {
    fs.copyFileSync('vaadin-usage-statistics-optout.js', 'vaadin-usage-statistics.js');
  } catch (err) {
    console.log('Error while copying file!');
    throw err;
  }
} else {
  console.log("\n    Vaadin collects development time usage statistics to improve this product. To opt-out, either run:\n    npm explore @vaadin/vaadin-usage-statistics -- npm run disable\n    to store disable statistics for the machine, or add\n    \"vaadin\": { \"disableUsageStatistics\": true }\n    to the project package.json and re-run npm install to disable statistics for the project.\n\n    For more details, see https://github.com/vaadin/vaadin-usage-statistics\n  ");
  var stats = fs.readFileSync('vaadin-usage-statistics.js').toString();

  if (stats.startsWith("export * from './vaadin-usage-statistics-collect.js';") === false) {
    try {
      fs.copyFileSync('vaadin-usage-statistics-collect.js', 'vaadin-usage-statistics.js');
    } catch (err) {
      console.log('Error while copying file!');
      throw err;
    }
  }
}