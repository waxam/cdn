define(["exports","./util/canReportError.js","./util/toSubscriber.js","./symbol/observable.js","./util/pipe.js","./config.js"],function(_exports,_canReportError,_toSubscriber,_observable,_pipe,_config){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.Observable=void 0;var Observable=function(){function Observable(subscribe){this._isScalar=!1;if(subscribe){this._subscribe=subscribe}}Observable.prototype.lift=function(operator){var observable=new Observable;observable.source=this;observable.operator=operator;return observable};Observable.prototype.subscribe=function(observerOrNext,error,complete){var operator=this.operator,sink=(0,_toSubscriber.toSubscriber)(observerOrNext,error,complete);if(operator){operator.call(sink,this.source)}else{sink.add(this.source||_config.config.useDeprecatedSynchronousErrorHandling&&!sink.syncErrorThrowable?this._subscribe(sink):this._trySubscribe(sink))}if(_config.config.useDeprecatedSynchronousErrorHandling){if(sink.syncErrorThrowable){sink.syncErrorThrowable=!1;if(sink.syncErrorThrown){throw sink.syncErrorValue}}}return sink};Observable.prototype._trySubscribe=function(sink){try{return this._subscribe(sink)}catch(err){if(_config.config.useDeprecatedSynchronousErrorHandling){sink.syncErrorThrown=!0;sink.syncErrorValue=err}if((0,_canReportError.canReportError)(sink)){sink.error(err)}else{console.warn(err)}}};Observable.prototype.forEach=function(next,promiseCtor){var _this=this;promiseCtor=getPromiseCtor(promiseCtor);return new promiseCtor(function(resolve,reject){var subscription=_this.subscribe(function(value){try{next(value)}catch(err){reject(err);if(subscription){subscription.unsubscribe()}}},reject,resolve)})};Observable.prototype._subscribe=function(subscriber){var source=this.source;return source&&source.subscribe(subscriber)};Observable.prototype[_observable.observable]=function(){return this};Observable.prototype.pipe=function(){for(var operations=[],_i=0;_i<arguments.length;_i++){operations[_i]=arguments[_i]}if(0===operations.length){return this}return(0,_pipe.pipeFromArray)(operations)(this)};Observable.prototype.toPromise=function(promiseCtor){var _this=this;promiseCtor=getPromiseCtor(promiseCtor);return new promiseCtor(function(resolve,reject){var value;_this.subscribe(function(x){return value=x},function(err){return reject(err)},function(){return resolve(value)})})};Observable.create=function(subscribe){return new Observable(subscribe)};return Observable}();_exports.Observable=Observable;function getPromiseCtor(promiseCtor){if(!promiseCtor){promiseCtor=_config.config.Promise||Promise}if(!promiseCtor){throw new Error("no Promise impl found")}return promiseCtor}});