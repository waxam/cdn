define(["exports","../Observable.js","../util/isScheduler.js","../operators/mergeAll.js","./fromArray.js"],function(_exports,_Observable,_isScheduler,_mergeAll,_fromArray){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.merge=function(){for(var observables=[],_i=0;_i<arguments.length;_i++){observables[_i]=arguments[_i]}var concurrent=Number.POSITIVE_INFINITY,scheduler=null,last=observables[observables.length-1];if((0,_isScheduler.isScheduler)(last)){scheduler=observables.pop();if(1<observables.length&&"number"===typeof observables[observables.length-1]){concurrent=observables.pop()}}else if("number"===typeof last){concurrent=observables.pop()}if(null===scheduler&&1===observables.length&&babelHelpers.instanceof(observables[0],_Observable.Observable)){return observables[0]}return(0,_mergeAll.mergeAll)(concurrent)((0,_fromArray.fromArray)(observables,scheduler))}});