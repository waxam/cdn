import{parseParams as t,parseQuery as e,testRoute as a}from"./utility/router-utility.js";export function router(o){return class extends o{static get properties(){return{route:{type:String,reflect:!0,attribute:"route"},canceled:{type:Boolean}}}constructor(...t){super(...t),this.route="",this.canceled=!1}connectedCallback(...t){super.connectedCallback(...t),this.routing(this.constructor.routes,(...t)=>this.router(...t)),window.addEventListener("route",()=>{this.routing(this.constructor.routes,(...t)=>this.router(...t))}),window.onpopstate=()=>{window.dispatchEvent(new CustomEvent("route"))}}routed(t,e,a,o,i,r){r&&r(t,e,a,o),i(t,e,a,o)}routing(o,i){this.canceled=!0;const r=decodeURI(window.location.pathname),n=decodeURI(window.location.search);let u=o.filter(t=>"*"===t.pattern)[0],c=o.filter(t=>"*"!==t.pattern&&a(r,t.pattern))[0],s=e(n);c?(c.params=t(c.pattern,r),c.data=c.data||{},c.authentication&&c.authentication.authenticate&&"function"==typeof c.authentication.authenticate?(this.canceled=!1,Promise.resolve(c.authentication.authenticate.bind(this).call()).then(t=>{this.canceled||(t?c.authorization&&c.authorization.authorize&&"function"==typeof c.authorization.authorize?(this.canceled=!1,Promise.resolve(c.authorization.authorize.bind(this).call()).then(t=>{this.canceled||(t?this.routed(c.name,c.params,s,c.data,i,c.callback):this.routed(c.authorization.unauthorized.name,c.params,s,c.data,i,c.callback))})):this.routed(c.name,c.params,s,c.data,i,c.callback):this.routed(c.authentication.unauthenticated.name,c.params,s,c.data,i,c.callback))})):c.authorization&&c.authorization.authorize&&"function"==typeof c.authorization.authorize?(this.canceled=!1,Promise.resolve(c.authorization.authorize.bind(this).call()).then(t=>{this.canceled||(t?this.routed(c.name,c.params,s,c.data,i,c.callback):this.routed(c.authorization.unauthorized.name,c.params,s,c.data,i,c.callback))})):this.routed(c.name,c.params,s,c.data,i,c.callback)):u&&(u.data=u.data||{},this.routed(u.name,{},s,u.data,i,u.callback))}}}export function navigator(t){return class extends t{navigate(t){window.history.pushState({},null,t),window.dispatchEvent(new CustomEvent("route"))}}}export function outlet(t){return class extends t{static get properties(){return{activeRoute:{type:String,reflect:!0,attribute:"active-route"}}}attributeChangedCallback(...t){super.attributeChangedCallback(...t),t.some(t=>"active-route"===t)&&this.outlet()}connectedCallback(...t){super.connectedCallback(...t),setTimeout(()=>{this.outlet()})}outlet(){Array.from(this.querySelectorAll("[route]")).map(t=>{t.style.display="none"}),Array.from(this.shadowRoot.querySelectorAll("[route]")).map(t=>{t.style.display="none"}),this.activeRoute&&(Array.from(this.querySelectorAll(`[route~=${this.activeRoute}]`)).map(t=>{t.style.display=""}),Array.from(this.shadowRoot.querySelectorAll(`[route~=${this.activeRoute}]`)).map(t=>{t.style.display=""}))}}}