import{parseParams as t,parseQuery as e,testRoute as a}from"./utility/router-utility.js";export function router(o){return class extends o{static get properties(){return{route:{type:String,reflect:!0,attribute:"route"},canceled:{type:Boolean},basePath:{type:String,attribute:"base-path"}}}constructor(...t){super(...t),this.basePath=document.baseURI.substring(0,document.baseURI.lastIndexOf("/"))+"/",this.route="",this.canceled=!1}connectedCallback(...t){super.connectedCallback(...t),this.routing(this.constructor.routes,((...t)=>this.router(...t))),window.addEventListener("route",(()=>{this.routing(this.constructor.routes,((...t)=>this.router(...t)))})),window.onpopstate=()=>{window.dispatchEvent(new CustomEvent("route"))}}routed(t,e,a,o,i,r){r&&r(t,e,a,o),i(t,e,a,o)}routing(o,i){this.canceled=!0;const r=decodeURI((window.location.origin+window.location.pathname).replace(this.basePath,"")),n=decodeURI(window.location.search);let s=o.filter((t=>"*"===t.pattern))[0],u=o.filter((t=>"*"!==t.pattern&&a(r,t.pattern)))[0],c=e(n);u?(u.params=t(u.pattern,r),u.data=u.data||{},u.authentication&&u.authentication.authenticate&&"function"==typeof u.authentication.authenticate?(this.canceled=!1,Promise.resolve(u.authentication.authenticate.bind(this).call()).then((t=>{this.canceled||(t?u.authorization&&u.authorization.authorize&&"function"==typeof u.authorization.authorize?(this.canceled=!1,Promise.resolve(u.authorization.authorize.bind(this).call()).then((t=>{this.canceled||(t?this.routed(u.name,u.params,c,u.data,i,u.callback):this.routed(u.authorization.unauthorized.name,u.params,c,u.data,i,u.callback))}))):this.routed(u.name,u.params,c,u.data,i,u.callback):this.routed(u.authentication.unauthenticated.name,u.params,c,u.data,i,u.callback))}))):u.authorization&&u.authorization.authorize&&"function"==typeof u.authorization.authorize?(this.canceled=!1,Promise.resolve(u.authorization.authorize.bind(this).call()).then((t=>{this.canceled||(t?this.routed(u.name,u.params,c,u.data,i,u.callback):this.routed(u.authorization.unauthorized.name,u.params,c,u.data,i,u.callback))}))):this.routed(u.name,u.params,c,u.data,i,u.callback)):s&&(s.data=s.data||{},this.routed(s.name,{},c,s.data,i,s.callback))}}}export function navigator(t){return class extends t{navigate(t){window.history.pushState({},null,t),window.dispatchEvent(new CustomEvent("route"))}}}export function outlet(t){return class extends t{static get properties(){return{activeRoute:{type:String,reflect:!0,attribute:"active-route"}}}attributeChangedCallback(...t){super.attributeChangedCallback(...t),t.some((t=>"active-route"===t))&&this.outlet()}connectedCallback(...t){super.connectedCallback(...t),setTimeout((()=>{this.outlet()}))}outlet(){Array.from(this.querySelectorAll("[route]")).map((t=>{t.style.display="none"})),Array.from(this.shadowRoot.querySelectorAll("[route]")).map((t=>{t.style.display="none"})),this.activeRoute&&(Array.from(this.querySelectorAll(`[route~=${this.activeRoute}]`)).map((t=>{t.style.display=""})),Array.from(this.shadowRoot.querySelectorAll(`[route~=${this.activeRoute}]`)).map((t=>{t.style.display=""})))}}}