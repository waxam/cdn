import{Observable}from"../Observable.js";import{subscribeToArray}from"./subscribeToArray.js";import{subscribeToPromise}from"./subscribeToPromise.js";import{subscribeToIterable}from"./subscribeToIterable.js";import{subscribeToObservable}from"./subscribeToObservable.js";import{isArrayLike}from"./isArrayLike.js";import{isPromise}from"./isPromise.js";import{isObject}from"./isObject.js";import{iterator as Symbol_iterator}from"../symbol/iterator.js";import{observable as Symbol_observable}from"../symbol/observable.js";export var subscribeTo=function(result){if(result instanceof Observable){return function(subscriber){if(result._isScalar){subscriber.next(result.value);subscriber.complete()}else{return result.subscribe(subscriber)}}}else if(result&&"function"===typeof result[Symbol_observable]){return subscribeToObservable(result)}else if(isArrayLike(result)){return subscribeToArray(result)}else if(isPromise(result)){return subscribeToPromise(result)}else if(result&&"function"===typeof result[Symbol_iterator]){return subscribeToIterable(result)}else{var value=isObject(result)?"an invalid object":"'"+result+"'";throw new TypeError("You provided "+value+" where a stream was expected."+" You can provide an Observable, Promise, Array, or Iterable.")}};