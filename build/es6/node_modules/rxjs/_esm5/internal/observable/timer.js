import{Observable}from"../Observable.js";import{async}from"../scheduler/async.js";import{isNumeric}from"../util/isNumeric.js";import{isScheduler}from"../util/isScheduler.js";export function timer(dueTime,periodOrScheduler,scheduler){if(void 0===dueTime){dueTime=0}var period=-1;if(isNumeric(periodOrScheduler)){period=1>+periodOrScheduler&&1||+periodOrScheduler}else if(isScheduler(periodOrScheduler)){scheduler=periodOrScheduler}if(!isScheduler(scheduler)){scheduler=async}return new Observable(function(subscriber){var due=isNumeric(dueTime)?dueTime:+dueTime-scheduler.now();return scheduler.schedule(dispatch,due,{index:0,period:period,subscriber:subscriber})})}function dispatch(state){var index=state.index,period=state.period,subscriber=state.subscriber;subscriber.next(index);if(subscriber.closed){return}else if(-1===period){return subscriber.complete()}state.index=index+1;this.schedule(state,period)}