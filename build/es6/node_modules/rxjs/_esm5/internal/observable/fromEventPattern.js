import{Observable}from"../Observable.js";import{isArray}from"../util/isArray.js";import{isFunction}from"../util/isFunction.js";import{map}from"../operators/map.js";export function fromEventPattern(addHandler,removeHandler,resultSelector){if(resultSelector){return fromEventPattern(addHandler,removeHandler).pipe(map(function(args){return isArray(args)?resultSelector.apply(void 0,args):resultSelector(args)}))}return new Observable(function(subscriber){var handler=function(){for(var e=[],_i=0;_i<arguments.length;_i++){e[_i]=arguments[_i]}return subscriber.next(1===e.length?e[0]:e)},retValue;try{retValue=addHandler(handler)}catch(err){subscriber.error(err);return}if(!isFunction(removeHandler)){return}return function(){return removeHandler(handler,retValue)}})}