import{Observable}from"../Observable.js";import{from}from"./from.js";import{isArray}from"../util/isArray.js";import{EMPTY}from"./empty.js";export function onErrorResumeNext(){for(var sources=[],_i=0;_i<arguments.length;_i++){sources[_i]=arguments[_i]}if(0===sources.length){return EMPTY}var first=sources[0],remainder=sources.slice(1);if(1===sources.length&&isArray(first)){return onErrorResumeNext.apply(void 0,first)}return new Observable(function(subscriber){var subNext=function(){return subscriber.add(onErrorResumeNext.apply(void 0,remainder).subscribe(subscriber))};return from(first).subscribe({next:function(value){subscriber.next(value)},error:subNext,complete:subNext})})}