import{Observable}from"../Observable.js";import{Subscription}from"../Subscription.js";export function pairs(obj,scheduler){if(!scheduler){return new Observable(function(subscriber){for(var keys=Object.keys(obj),i=0,key;i<keys.length&&!subscriber.closed;i++){key=keys[i];if(obj.hasOwnProperty(key)){subscriber.next([key,obj[key]])}}subscriber.complete()})}else{return new Observable(function(subscriber){var keys=Object.keys(obj),subscription=new Subscription;subscription.add(scheduler.schedule(dispatch,0,{keys:keys,index:0,subscriber:subscriber,subscription:subscription,obj:obj}));return subscription})}}export function dispatch(state){var keys=state.keys,index=state.index,subscriber=state.subscriber,subscription=state.subscription,obj=state.obj;if(!subscriber.closed){if(index<keys.length){var key=keys[index];subscriber.next([key,obj[key]]);subscription.add(this.schedule({keys:keys,index:index+1,subscriber:subscriber,subscription:subscription,obj:obj}))}else{subscriber.complete()}}}