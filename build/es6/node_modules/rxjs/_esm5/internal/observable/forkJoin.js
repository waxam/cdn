import*as tslib_1 from"../../../../tslib/tslib.es6.js";import{Observable}from"../Observable.js";import{isArray}from"../util/isArray.js";import{EMPTY}from"./empty.js";import{subscribeToResult}from"../util/subscribeToResult.js";import{OuterSubscriber}from"../OuterSubscriber.js";import{map}from"../operators/map.js";export function forkJoin(){for(var sources=[],_i=0;_i<arguments.length;_i++){sources[_i]=arguments[_i]}var resultSelector;if("function"===typeof sources[sources.length-1]){resultSelector=sources.pop()}if(1===sources.length&&isArray(sources[0])){sources=sources[0]}if(0===sources.length){return EMPTY}if(resultSelector){return forkJoin(sources).pipe(map(function(args){return resultSelector.apply(void 0,args)}))}return new Observable(function(subscriber){return new ForkJoinSubscriber(subscriber,sources)})}var ForkJoinSubscriber=function(_super){tslib_1.__extends(ForkJoinSubscriber,_super);function ForkJoinSubscriber(destination,sources){var _this=_super.call(this,destination)||this;_this.sources=sources;_this.completed=0;_this.haveValues=0;var len=sources.length;_this.values=Array(len);for(var i=0;i<len;i++){var source=sources[i],innerSubscription=subscribeToResult(_this,source,null,i);if(innerSubscription){_this.add(innerSubscription)}}return _this}ForkJoinSubscriber.prototype.notifyNext=function(outerValue,innerValue,outerIndex,innerIndex,innerSub){this.values[outerIndex]=innerValue;if(!innerSub._hasValue){innerSub._hasValue=!0;this.haveValues++}};ForkJoinSubscriber.prototype.notifyComplete=function(innerSub){var _a=this,destination=_a.destination,haveValues=_a.haveValues,values=_a.values,len=values.length;if(!innerSub._hasValue){destination.complete();return}this.completed++;if(this.completed!==len){return}if(haveValues===len){destination.next(values)}destination.complete()};return ForkJoinSubscriber}(OuterSubscriber);