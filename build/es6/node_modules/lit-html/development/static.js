/**
 * @license
 * Copyright 2020 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */
import{html as t,svg as i}from"./lit-html.js";const o=Symbol.for(""),unwrapStaticValue=t=>{var i,e;if((null===(i=t)||void 0===i?void 0:i.r)===o)return null===(e=t)||void 0===e?void 0:e._$litStatic$};export const unsafeStatic=t=>({_$litStatic$:t,r:o});export const literal=(t,...i)=>({_$litStatic$:i.reduce(((i,o,e)=>i+(t=>{if(void 0!==t._$litStatic$)return t._$litStatic$;throw new Error(`Value passed to 'literal' function must be a 'literal' result: ${t}. Use 'unsafeStatic' to pass non-literal values, but\n            take care to ensure page security.`)})(o)+t[e+1]),t[0]),r:o});const e=new Map;export const withStatic=t=>(i,...o)=>{const r=o.length;let s,a;const l=[],n=[];let c,u=0,$=!1;for(;u<r;){for(c=i[u];u<r&&void 0!==(a=o[u],s=unwrapStaticValue(a));)c+=s+i[++u],$=!0;n.push(a),l.push(c),u++}if(u===r&&l.push(i[r]),$){const t=l.join("$$lit$$");void 0===(i=e.get(t))&&(l.raw=l,e.set(t,i=l)),o=n}return t(i,...o)};export const html=withStatic(t);export const svg=withStatic(i);