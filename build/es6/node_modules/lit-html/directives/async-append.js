import{noChange as t}from"../lit-html.js";import{directive as s,PartType as e}from"../directive.js";import{clearPart as i,insertPart as r,setChildPartValue as a}from"../directive-helpers.js";import{AsyncDirective as n}from"../async-directive.js";
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */const o=s(class extends n{constructor(t){if(super(t),t.type!==e.CHILD)throw Error("asyncAppend can only be used in child expressions")}render(s,e){return t}update(s,[e,i]){if(e!==this.vt)return this.vt=e,this.Σft(s,i),t}async Σft(t,s){let e=0;const{vt:n}=this;for await(let o of n){if(this.vt!==n)break;this.wt&&await this.wt,0===e&&i(t),void 0!==s&&(o=s(o,e));const c=r(t);a(c,o),e++}}disconnected(){this.wt=new Promise((t=>this.yt=t))}reconnected(){this.wt=void 0,this.yt()}});export{o as asyncAppend};