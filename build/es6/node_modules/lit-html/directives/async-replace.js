import{noChange as e}from"../lit-html.js";import{directive as t}from"../directive.js";import{AsyncDirective as s}from"../async-directive.js";import{PseudoWeakRef as i,Pauser as r,forAwaitOf as n}from"./private-async-helpers.js";
/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */class o extends s{constructor(){super(...arguments),this._$CG=new i(this),this._$CK=new r}render(t,s){return e}update(t,[s,i]){if(this.isConnected||this.disconnected(),s===this._$CX)return;this._$CX=s;let r=0;const{_$CG:c,_$CK:a}=this;return n(s,(async e=>{for(;a.get();)await a.get();const t=c.deref();if(void 0!==t){if(t._$CX!==s)return!1;void 0!==i&&(e=i(e,r)),t.commitValue(e,r),r++}return!0})),e}commitValue(e,t){this.setValue(e)}disconnected(){this._$CG.disconnect(),this._$CK.pause()}reconnected(){this._$CG.reconnect(this),this._$CK.resume()}}const c=t(o);export{o as AsyncReplaceDirective,c as asyncReplace};