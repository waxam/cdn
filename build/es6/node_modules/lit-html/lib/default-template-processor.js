/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
import{AttributeCommitter,BooleanAttributePart,EventPart,NodePart,PropertyCommitter}from"./parts.js";export class DefaultTemplateProcessor{handleAttributeExpressions(element,name,strings,options){const prefix=name[0];if("."===prefix){return new PropertyCommitter(element,name.slice(1),strings).parts}return"@"===prefix?[new EventPart(element,name.slice(1),options.eventContext)]:"?"===prefix?[new BooleanAttributePart(element,name.slice(1),strings)]:new AttributeCommitter(element,name,strings).parts}handleTextExpression(options){return new NodePart(options)}}export const defaultTemplateProcessor=new DefaultTemplateProcessor;