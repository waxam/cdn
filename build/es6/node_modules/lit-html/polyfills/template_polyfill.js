/**
 * @license
 * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
import{removeNodes as e,reparentNodes as t}from"../lib/dom.js";export const initTemplatePolyfill=(n=!1)=>{if(!n&&"content"in document.createElement("template"))return;const c=document.implementation.createHTMLDocument("template"),o=c.body,i={enumerable:!0,configurable:!0},r=Document.prototype.createElement;Document.prototype.createElement=function createElement(n,m){const a=r.call(this,n,m);return"TEMPLATE"===a.tagName&&(n=>{const r=c.createDocumentFragment();Object.defineProperties(n,{content:Object.assign(Object.assign({},i),{get:()=>r}),innerHTML:Object.assign(Object.assign({},i),{set:function(n){o.innerHTML=n,e(r,r.firstChild),t(r,o.firstChild)}})})})(a),a}};