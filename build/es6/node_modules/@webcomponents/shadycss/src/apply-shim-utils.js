/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import t from"./template-map.js";import{StyleNode as i}from"./css-parse.js";const e="_applyShimCurrentVersion",a="_applyShimNextVersion",n=Promise.resolve();export function invalidate(i){let e=t[i];e&&invalidateTemplate(e)}export function invalidateTemplate(t){t[e]=t[e]||0,t._applyShimValidatingVersion=t._applyShimValidatingVersion||0,t[a]=(t[a]||0)+1}export function isValid(i){let e=t[i];return!e||templateIsValid(e)}export function templateIsValid(t){return t[e]===t[a]}export function isValidating(i){let e=t[i];return!!e&&templateIsValidating(e)}export function templateIsValidating(t){return!templateIsValid(t)&&t._applyShimValidatingVersion===t[a]}export function startValidating(i){startValidatingTemplate(t[i])}export function startValidatingTemplate(t){t._applyShimValidatingVersion=t[a],t._validating||(t._validating=!0,n.then((function(){t[e]=t[a],t._validating=!1})))}export function elementsAreInvalid(){for(let i in t){if(!templateIsValid(t[i]))return!0}return!1}