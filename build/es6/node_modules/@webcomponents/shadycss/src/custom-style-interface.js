/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import documentWait from"./document-wait.js";export let CustomStyleProvider;const CACHED_STYLE="__shadyCSSCachedStyle";let transformFn=null,validateFn=null;export default class CustomStyleInterface{constructor(){this.customStyles=[],this.enqueued=!1,documentWait(()=>{window.ShadyCSS.flushCustomStyles&&window.ShadyCSS.flushCustomStyles()})}enqueueDocumentValidation(){!this.enqueued&&validateFn&&(this.enqueued=!0,documentWait(validateFn))}addCustomStyle(style){style.__seenByShadyCSS||(style.__seenByShadyCSS=!0,this.customStyles.push(style),this.enqueueDocumentValidation())}getStyleForCustomStyle(customStyle){if(customStyle[CACHED_STYLE])return customStyle[CACHED_STYLE];let style;return style=customStyle.getStyle?customStyle.getStyle():customStyle,style}processStyles(){const cs=this.customStyles;for(let i=0;i<cs.length;i++){const customStyle=cs[i];if(customStyle[CACHED_STYLE])continue;const style=this.getStyleForCustomStyle(customStyle);if(style){const styleToTransform=style.__appliedElement||style;transformFn&&transformFn(styleToTransform),customStyle[CACHED_STYLE]=styleToTransform}}return cs}}CustomStyleInterface.prototype.addCustomStyle=CustomStyleInterface.prototype.addCustomStyle,CustomStyleInterface.prototype.getStyleForCustomStyle=CustomStyleInterface.prototype.getStyleForCustomStyle,CustomStyleInterface.prototype.processStyles=CustomStyleInterface.prototype.processStyles,Object.defineProperties(CustomStyleInterface.prototype,{transformCallback:{get:()=>transformFn,set(fn){transformFn=fn}},validateCallback:{get:()=>validateFn,set(fn){let needsEnqueue=!1;validateFn||(needsEnqueue=!0),validateFn=fn,needsEnqueue&&this.enqueueDocumentValidation()}}});export const CustomStyleInterfaceInterface={};