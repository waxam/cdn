/**
 * @license
 * Copyright (c) 2020 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
import{AttributePart as e,BooleanAttributePart as t,directive as n,EventPart as i,NodePart as r,PropertyPart as o}from"../lit-html.js";export const live=n(n=>s=>{let l;if(s instanceof i||s instanceof r)throw new Error("The `live` directive is not allowed on text or event bindings");if(s instanceof t)checkStrings(s.strings),l=s.element.hasAttribute(s.name),s.value=l;else{const{element:t,name:i,strings:r}=s.committer;if(checkStrings(r),s instanceof o){if(l=t[i],l===n)return}else s instanceof e&&(l=t.getAttribute(i));if(l===String(n))return}s.setValue(n)});const checkStrings=e=>{if(2!==e.length||""!==e[0]||""!==e[1])throw new Error("`live` bindings can only contain a single expression")};