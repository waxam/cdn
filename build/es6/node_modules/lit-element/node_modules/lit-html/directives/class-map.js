/**
 * @license
 * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
import{AttributePart as t,directive as s,PropertyPart as e}from"../lit-html.js";class ClassList{constructor(t){this.classes=new Set,this.changed=!1,this.element=t;const s=(t.getAttribute("class")||"").split(/\s+/);for(const t of s)this.classes.add(t)}add(t){this.classes.add(t),this.changed=!0}remove(t){this.classes.delete(t),this.changed=!0}commit(){if(this.changed){let t="";this.classes.forEach(s=>t+=s+" "),this.element.setAttribute("class",t)}}}const i=new WeakMap;export const classMap=s(s=>a=>{if(!(a instanceof t)||a instanceof e||"class"!==a.committer.name||a.committer.parts.length>1)throw new Error("The `classMap` directive must be used in the `class` attribute and must be the only part in the attribute.");const{committer:c}=a,{element:n}=c;let o=i.get(a);void 0===o&&(n.setAttribute("class",c.strings.join(" ")),i.set(a,o=new Set));const l=n.classList||new ClassList(n);o.forEach(t=>{t in s||(l.remove(t),o.delete(t))});for(const t in s){const e=s[t];e!=o.has(t)&&(e?(l.add(t),o.add(t)):(l.remove(t),o.delete(t)))}"function"==typeof l.commit&&l.commit()});