import{createMarker as e}from"./template.js";const t=/{{(.*?)}}/;export class HTMLTemplate{constructor(o){this.parts=[],this.element=o;let r=-1,n=0;const s=[],i=document.createTreeWalker(o.content,NodeFilter.SHOW_ELEMENT|NodeFilter.SHOW_TEXT);for(;i.nextNode();){r++;const o=i.currentNode;if(1===o.nodeType){if(o.hasAttributes()){const e=Array.from(o.attributes);for(let s=0;s<e.length;s++){const i=e[s],l=i.value.split(t);console.log("result",l);const a=l.filter((e,t)=>t%2==0);console.log("attributeStrings",a),a.length>0&&(this.parts.push({type:"attribute",index:r,name,strings:a}),o.removeAttribute(i.name),n+=a.length-1)}}}else if(3===o.nodeType){const i=o.data,l=o.parentNode,a=i.split(t).filter((e,t)=>t%2==0);if(a.length>0){const t=a.length-1;for(let n=0;n<t;n++)l.insertBefore(""===a[n]?e():document.createTextNode(a[n]),o),this.parts.push({type:"node",index:++r});""===a[t]?(l.insertBefore(e(),o),s.push(o)):o.data=a[t],n+=t}}}}}