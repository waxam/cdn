import{TemplateResult}from"./node_modules/lit-html/lit-html.js";import{render}from"./node_modules/lit-html/lib/shady-render.js";import{UpdatingElement}from"./lib/updating-element.js";export*from"./lib/updating-element.js";export*from"./lib/decorators.js";export{html,svg,TemplateResult,SVGTemplateResult}from"./node_modules/lit-html/lit-html.js";import{supportsAdoptingStyleSheets}from"./lib/css-tag.js";export*from"./lib/css-tag.js";(window.litElementVersions||(window.litElementVersions=[])).push("2.2.1");const flattenStyles=styles=>styles.flat?styles.flat(1/0):function arrayFlat(styles,result=[]){for(let i=0,length=styles.length;i<length;i++){const value=styles[i];Array.isArray(value)?arrayFlat(value,result):result.push(value)}return result}(styles);export class LitElement extends UpdatingElement{static finalize(){super.finalize.call(this),this._styles=this.hasOwnProperty(JSCompiler_renameProperty("styles",this))?this._getUniqueStyles():this._styles||[]}static _getUniqueStyles(){const userStyles=this.styles,styles=[];if(Array.isArray(userStyles)){flattenStyles(userStyles).reduceRight((set,s)=>(set.add(s),set),new Set).forEach(v=>styles.unshift(v))}else userStyles&&styles.push(userStyles);return styles}initialize(){super.initialize(),this.renderRoot=this.createRenderRoot(),window.ShadowRoot&&this.renderRoot instanceof window.ShadowRoot&&this.adoptStyles()}createRenderRoot(){return this.attachShadow({mode:"open"})}adoptStyles(){const styles=this.constructor._styles;0!==styles.length&&(void 0===window.ShadyCSS||window.ShadyCSS.nativeShadow?supportsAdoptingStyleSheets?this.renderRoot.adoptedStyleSheets=styles.map(s=>s.styleSheet):this._needsShimAdoptedStyleSheets=!0:window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map(s=>s.cssText),this.localName))}connectedCallback(){super.connectedCallback(),this.hasUpdated&&void 0!==window.ShadyCSS&&window.ShadyCSS.styleElement(this)}update(changedProperties){super.update(changedProperties);const templateResult=this.render();templateResult instanceof TemplateResult&&this.constructor.render(templateResult,this.renderRoot,{scopeName:this.localName,eventContext:this}),this._needsShimAdoptedStyleSheets&&(this._needsShimAdoptedStyleSheets=!1,this.constructor._styles.forEach(s=>{const style=document.createElement("style");style.textContent=s.cssText,this.renderRoot.appendChild(style)}))}render(){}}LitElement.finalized=!0,LitElement.render=render;