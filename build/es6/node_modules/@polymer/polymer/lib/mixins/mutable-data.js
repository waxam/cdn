import{dedupingMixin}from"../utils/mixin.js";function mutablePropertyChange(inst,property,value,old,mutableData){let isObject;mutableData&&(isObject="object"==typeof value&&null!==value)&&(old=inst.__dataTemp[property]);let shouldChange=old!==value&&(old==old||value==value);return isObject&&shouldChange&&(inst.__dataTemp[property]=value),shouldChange}export const MutableData=dedupingMixin(superClass=>{return class MutableData extends superClass{_shouldPropertyChange(property,value,old){return mutablePropertyChange(this,property,value,old,!0)}}});export const OptionalMutableData=dedupingMixin(superClass=>{return class OptionalMutableData extends superClass{static get properties(){return{mutableData:Boolean}}_shouldPropertyChange(property,value,old){return mutablePropertyChange(this,property,value,old,this.mutableData)}}});MutableData._mutablePropertyChange=mutablePropertyChange;