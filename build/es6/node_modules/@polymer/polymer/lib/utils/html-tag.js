/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import"./boot.js";class LiteralString{constructor(t){this.value=t.toString()}toString(){return this.value}}function literalValue(t){if(t instanceof LiteralString)return t.value;throw new Error(`non-literal value passed to Polymer's htmlLiteral function: ${t}`)}export const html=function html(t,...e){const n=document.createElement("template");return n.innerHTML=e.reduce(((e,n,r)=>e+function htmlValue(t){if(t instanceof HTMLTemplateElement)return t.innerHTML;if(t instanceof LiteralString)return literalValue(t);throw new Error(`non-template value passed to Polymer's html function: ${t}`)}(n)+t[r+1]),t[0]),n};export const htmlLiteral=function(t,...e){return new LiteralString(e.reduce(((e,n,r)=>e+literalValue(n)+t[r+1]),t[0]))};