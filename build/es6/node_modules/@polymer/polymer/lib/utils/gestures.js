/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import"./boot.js";import{timeOut,microTask}from"./async.js";import{Debouncer}from"./debounce.js";import{passiveTouchGestures,cancelSyntheticClickEvents}from"./settings.js";import{wrap}from"./wrap.js";let HAS_NATIVE_TA="string"==typeof document.head.style.touchAction,HANDLED_OBJ="__polymerGesturesHandled",TOUCH_ACTION="__polymerGesturesTouchAction",MOUSE_EVENTS=["mousedown","mousemove","mouseup","click"],MOUSE_WHICH_TO_BUTTONS=[0,1,4,2],MOUSE_HAS_BUTTONS=function(){try{return 1===new MouseEvent("test",{buttons:1}).buttons}catch(e){return!1}}();function isMouseEvent(name){return MOUSE_EVENTS.indexOf(name)>-1}let supportsPassive=!1;function PASSIVE_TOUCH(eventName){if(!isMouseEvent(eventName)&&"touchend"!==eventName)return HAS_NATIVE_TA&&supportsPassive&&passiveTouchGestures?{passive:!0}:void 0}!function(){try{let opts=Object.defineProperty({},"passive",{get(){supportsPassive=!0}});window.addEventListener("test",null,opts),window.removeEventListener("test",null,opts)}catch(e){}}();let IS_TOUCH_ONLY=navigator.userAgent.match(/iP(?:[oa]d|hone)|Android/);const clickedLabels=[],labellable={button:!0,input:!0,keygen:!0,meter:!0,output:!0,textarea:!0,progress:!0,select:!0},canBeDisabled={button:!0,command:!0,fieldset:!0,input:!0,keygen:!0,optgroup:!0,option:!0,select:!0,textarea:!0};function matchingLabels(el){let labels=Array.prototype.slice.call(el.labels||[]);if(!labels.length){labels=[];let root=el.getRootNode();if(el.id){let matching=root.querySelectorAll(`label[for = ${el.id}]`);for(let i=0;i<matching.length;i++)labels.push(matching[i])}}return labels}let mouseCanceller=function(mouseEvent){let sc=mouseEvent.sourceCapabilities;var el;if((!sc||sc.firesTouchEvents)&&(mouseEvent[HANDLED_OBJ]={skip:!0},"click"===mouseEvent.type)){let clickFromLabel=!1,path=getComposedPath(mouseEvent);for(let i=0;i<path.length;i++){if(path[i].nodeType===Node.ELEMENT_NODE)if("label"===path[i].localName)clickedLabels.push(path[i]);else if(el=path[i],labellable[el.localName]){let ownerLabels=matchingLabels(path[i]);for(let j=0;j<ownerLabels.length;j++)clickFromLabel=clickFromLabel||clickedLabels.indexOf(ownerLabels[j])>-1}if(path[i]===POINTERSTATE.mouse.target)return}if(clickFromLabel)return;mouseEvent.preventDefault(),mouseEvent.stopPropagation()}};function setupTeardownMouseCanceller(setup){let events=IS_TOUCH_ONLY?["click"]:MOUSE_EVENTS;for(let en,i=0;i<events.length;i++)en=events[i],setup?(clickedLabels.length=0,document.addEventListener(en,mouseCanceller,!0)):document.removeEventListener(en,mouseCanceller,!0)}function hasLeftMouseButton(ev){let type=ev.type;if(!isMouseEvent(type))return!1;if("mousemove"===type){let buttons=void 0===ev.buttons?1:ev.buttons;return ev instanceof window.MouseEvent&&!MOUSE_HAS_BUTTONS&&(buttons=MOUSE_WHICH_TO_BUTTONS[ev.which]||0),Boolean(1&buttons)}return 0===(void 0===ev.button?0:ev.button)}let POINTERSTATE={mouse:{target:null,mouseIgnoreJob:null},touch:{x:0,y:0,id:-1,scrollDecided:!1}};function trackDocument(stateObj,movefn,upfn){stateObj.movefn=movefn,stateObj.upfn=upfn,document.addEventListener("mousemove",movefn),document.addEventListener("mouseup",upfn)}function untrackDocument(stateObj){document.removeEventListener("mousemove",stateObj.movefn),document.removeEventListener("mouseup",stateObj.upfn),stateObj.movefn=null,stateObj.upfn=null}cancelSyntheticClickEvents&&document.addEventListener("touchend",(function ignoreMouse(e){if(!cancelSyntheticClickEvents)return;POINTERSTATE.mouse.mouseIgnoreJob||setupTeardownMouseCanceller(!0),POINTERSTATE.mouse.target=getComposedPath(e)[0],POINTERSTATE.mouse.mouseIgnoreJob=Debouncer.debounce(POINTERSTATE.mouse.mouseIgnoreJob,timeOut.after(2500),(function(){setupTeardownMouseCanceller(),POINTERSTATE.mouse.target=null,POINTERSTATE.mouse.mouseIgnoreJob=null}))}),!!supportsPassive&&{passive:!0});const getComposedPath=window.ShadyDOM&&window.ShadyDOM.noPatch?window.ShadyDOM.composedPath:event=>event.composedPath&&event.composedPath()||[];export const gestures={};export const recognizers=[];export function deepTargetFind(x,y){let node=document.elementFromPoint(x,y),next=node;for(;next&&next.shadowRoot&&!window.ShadyDOM;){let oldNext=next;if(next=next.shadowRoot.elementFromPoint(x,y),oldNext===next)break;next&&(node=next)}return node}function _findOriginalTarget(ev){const path=getComposedPath(ev);return path.length>0?path[0]:ev.target}function _handleNative(ev){let handled,type=ev.type,gobj=ev.currentTarget.__polymerGestures;if(!gobj)return;let gs=gobj[type];if(gs){if(!ev[HANDLED_OBJ]&&(ev[HANDLED_OBJ]={},"touch"===type.slice(0,5))){let t=(ev=ev).changedTouches[0];if("touchstart"===type&&1===ev.touches.length&&(POINTERSTATE.touch.id=t.identifier),POINTERSTATE.touch.id!==t.identifier)return;HAS_NATIVE_TA||"touchstart"!==type&&"touchmove"!==type||function _handleTouchAction(ev){let t=ev.changedTouches[0],type=ev.type;if("touchstart"===type)POINTERSTATE.touch.x=t.clientX,POINTERSTATE.touch.y=t.clientY,POINTERSTATE.touch.scrollDecided=!1;else if("touchmove"===type){if(POINTERSTATE.touch.scrollDecided)return;POINTERSTATE.touch.scrollDecided=!0;let ta=function firstTouchAction(ev){let ta="auto",path=getComposedPath(ev);for(let n,i=0;i<path.length;i++)if(n=path[i],n[TOUCH_ACTION]){ta=n[TOUCH_ACTION];break}return ta}(ev),shouldPrevent=!1,dx=Math.abs(POINTERSTATE.touch.x-t.clientX),dy=Math.abs(POINTERSTATE.touch.y-t.clientY);ev.cancelable&&("none"===ta?shouldPrevent=!0:"pan-x"===ta?shouldPrevent=dy>dx:"pan-y"===ta&&(shouldPrevent=dx>dy)),shouldPrevent?ev.preventDefault():prevent("track")}}(ev)}if(handled=ev[HANDLED_OBJ],!handled.skip){for(let r,i=0;i<recognizers.length;i++)r=recognizers[i],gs[r.name]&&!handled[r.name]&&r.flow&&r.flow.start.indexOf(ev.type)>-1&&r.reset&&r.reset();for(let r,i=0;i<recognizers.length;i++)r=recognizers[i],gs[r.name]&&!handled[r.name]&&(handled[r.name]=!0,r[type](ev))}}}export function addListener(node,evType,handler){return!!gestures[evType]&&(function _add(node,evType,handler){let recognizer=gestures[evType],deps=recognizer.deps,name=recognizer.name,gobj=node.__polymerGestures;gobj||(node.__polymerGestures=gobj={});for(let dep,gd,i=0;i<deps.length;i++)dep=deps[i],IS_TOUCH_ONLY&&isMouseEvent(dep)&&"click"!==dep||(gd=gobj[dep],gd||(gobj[dep]=gd={_count:0}),0===gd._count&&node.addEventListener(dep,_handleNative,PASSIVE_TOUCH(dep)),gd[name]=(gd[name]||0)+1,gd._count=(gd._count||0)+1);node.addEventListener(evType,handler),recognizer.touchAction&&setTouchAction(node,recognizer.touchAction)}(node,evType,handler),!0)}export function removeListener(node,evType,handler){return!!gestures[evType]&&(function _remove(node,evType,handler){let recognizer=gestures[evType],deps=recognizer.deps,name=recognizer.name,gobj=node.__polymerGestures;if(gobj)for(let dep,gd,i=0;i<deps.length;i++)dep=deps[i],gd=gobj[dep],gd&&gd[name]&&(gd[name]=(gd[name]||1)-1,gd._count=(gd._count||1)-1,0===gd._count&&node.removeEventListener(dep,_handleNative,PASSIVE_TOUCH(dep)));node.removeEventListener(evType,handler)}(node,evType,handler),!0)}export function register(recog){recognizers.push(recog);for(let i=0;i<recog.emits.length;i++)gestures[recog.emits[i]]=recog}export function setTouchAction(node,value){HAS_NATIVE_TA&&node instanceof HTMLElement&&microTask.run(()=>{node.style.touchAction=value}),node[TOUCH_ACTION]=value}function _fire(target,type,detail){let ev=new Event(type,{bubbles:!0,cancelable:!0,composed:!0});if(ev.detail=detail,wrap(target).dispatchEvent(ev),ev.defaultPrevented){let preventer=detail.preventer||detail.sourceEvent;preventer&&preventer.preventDefault&&preventer.preventDefault()}}export function prevent(evName){let recognizer=function _findRecognizerByEvent(evName){for(let r,i=0;i<recognizers.length;i++){r=recognizers[i];for(let n,j=0;j<r.emits.length;j++)if(n=r.emits[j],n===evName)return r}return null}(evName);recognizer.info&&(recognizer.info.prevent=!0)}export function resetMouseCanceller(){POINTERSTATE.mouse.mouseIgnoreJob&&POINTERSTATE.mouse.mouseIgnoreJob.flush()}function downupFire(type,target,event,preventer){target&&_fire(target,type,{x:event.clientX,y:event.clientY,sourceEvent:event,preventer,prevent:function(e){return prevent(e)}})}function trackHasMovedEnough(info,x,y){if(info.prevent)return!1;if(info.started)return!0;let dx=Math.abs(info.x-x),dy=Math.abs(info.y-y);return dx>=5||dy>=5}function trackFire(info,target,touch){if(!target)return;let ddx,secondlast=info.moves[info.moves.length-2],lastmove=info.moves[info.moves.length-1],dx=lastmove.x-info.x,dy=lastmove.y-info.y,ddy=0;secondlast&&(ddx=lastmove.x-secondlast.x,ddy=lastmove.y-secondlast.y),_fire(target,"track",{state:info.state,x:touch.clientX,y:touch.clientY,dx,dy,ddx,ddy,sourceEvent:touch,hover:function(){return deepTargetFind(touch.clientX,touch.clientY)}})}function trackForward(info,e,preventer){let dx=Math.abs(e.clientX-info.x),dy=Math.abs(e.clientY-info.y),t=_findOriginalTarget(preventer||e);!t||canBeDisabled[t.localName]&&t.hasAttribute("disabled")||(isNaN(dx)||isNaN(dy)||dx<=25&&dy<=25||function isSyntheticClick(ev){if("click"===ev.type){if(0===ev.detail)return!0;let t=_findOriginalTarget(ev);if(!t.nodeType||t.nodeType!==Node.ELEMENT_NODE)return!0;let bcr=t.getBoundingClientRect(),x=ev.pageX,y=ev.pageY;return!(x>=bcr.left&&x<=bcr.right&&y>=bcr.top&&y<=bcr.bottom)}return!1}(e))&&(info.prevent||_fire(t,"tap",{x:e.clientX,y:e.clientY,sourceEvent:e,preventer}))}register({name:"downup",deps:["mousedown","touchstart","touchend"],flow:{start:["mousedown","touchstart"],end:["mouseup","touchend"]},emits:["down","up"],info:{movefn:null,upfn:null},reset:function(){untrackDocument(this.info)},mousedown:function(e){if(!hasLeftMouseButton(e))return;let t=_findOriginalTarget(e),self=this;trackDocument(this.info,(function movefn(e){hasLeftMouseButton(e)||(downupFire("up",t,e),untrackDocument(self.info))}),(function upfn(e){hasLeftMouseButton(e)&&downupFire("up",t,e),untrackDocument(self.info)})),downupFire("down",t,e)},touchstart:function(e){downupFire("down",_findOriginalTarget(e),e.changedTouches[0],e)},touchend:function(e){downupFire("up",_findOriginalTarget(e),e.changedTouches[0],e)}}),register({name:"track",touchAction:"none",deps:["mousedown","touchstart","touchmove","touchend"],flow:{start:["mousedown","touchstart"],end:["mouseup","touchend"]},emits:["track"],info:{x:0,y:0,state:"start",started:!1,moves:[],addMove:function(move){this.moves.length>2&&this.moves.shift(),this.moves.push(move)},movefn:null,upfn:null,prevent:!1},reset:function(){this.info.state="start",this.info.started=!1,this.info.moves=[],this.info.x=0,this.info.y=0,this.info.prevent=!1,untrackDocument(this.info)},mousedown:function(e){if(!hasLeftMouseButton(e))return;let t=_findOriginalTarget(e),self=this,movefn=function movefn(e){let x=e.clientX,y=e.clientY;trackHasMovedEnough(self.info,x,y)&&(self.info.state=self.info.started?"mouseup"===e.type?"end":"track":"start","start"===self.info.state&&prevent("tap"),self.info.addMove({x,y}),hasLeftMouseButton(e)||(self.info.state="end",untrackDocument(self.info)),t&&trackFire(self.info,t,e),self.info.started=!0)};trackDocument(this.info,movefn,(function upfn(e){self.info.started&&movefn(e),untrackDocument(self.info)})),this.info.x=e.clientX,this.info.y=e.clientY},touchstart:function(e){let ct=e.changedTouches[0];this.info.x=ct.clientX,this.info.y=ct.clientY},touchmove:function(e){let t=_findOriginalTarget(e),ct=e.changedTouches[0],x=ct.clientX,y=ct.clientY;trackHasMovedEnough(this.info,x,y)&&("start"===this.info.state&&prevent("tap"),this.info.addMove({x,y}),trackFire(this.info,t,ct),this.info.state="track",this.info.started=!0)},touchend:function(e){let t=_findOriginalTarget(e),ct=e.changedTouches[0];this.info.started&&(this.info.state="end",this.info.addMove({x:ct.clientX,y:ct.clientY}),trackFire(this.info,t,ct))}}),register({name:"tap",deps:["mousedown","click","touchstart","touchend"],flow:{start:["mousedown","touchstart"],end:["click","touchend"]},emits:["tap"],info:{x:NaN,y:NaN,prevent:!1},reset:function(){this.info.x=NaN,this.info.y=NaN,this.info.prevent=!1},mousedown:function(e){hasLeftMouseButton(e)&&(this.info.x=e.clientX,this.info.y=e.clientY)},click:function(e){hasLeftMouseButton(e)&&trackForward(this.info,e)},touchstart:function(e){const touch=e.changedTouches[0];this.info.x=touch.clientX,this.info.y=touch.clientY},touchend:function(e){trackForward(this.info,e.changedTouches[0],e)}});export const findOriginalTarget=_findOriginalTarget;export const add=addListener;export const remove=removeListener;