/**
@license
Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
import{Class as e}from"./class.js";import{Polymer as t}from"../../polymer-legacy.js";import{dedupingMixin as a}from"../utils/mixin.js";import{templatize as n}from"../utils/templatize.js";const r=class extends Error{constructor(e,t){super(e),this.arg=t,this.name=this.constructor.name,this.constructor=r,this.__proto__=r.prototype}};function wrapEffect(e,t){if(e&&e.fn){const a=e.fn;e.fn=function(){try{a.apply(this,arguments)}catch(e){if(!(e instanceof r))throw e;console.warn(`Argument '${e.arg}'${t?` for method '${t}'`:""} was undefined. Ensure it has a default value, or else ensure the method handles the argument being undefined.`)}}}return e}export const LegacyDataMixin=a((e=>class LegacyDataMixin extends e{_marshalArgs(e,t,a){const n=super._marshalArgs(e,t,a);if(this._legacyUndefinedCheck&&n.length>1)for(let t=0;t<n.length;t++)if(void 0===n[t]||e[t].wildcard&&void 0===n[t].base){const a=e[t].name;throw new r(`Argument '${a}' is undefined.`,a)}return n}_addPropertyEffect(e,t,a){return super._addPropertyEffect(e,t,wrapEffect(a,a&&a.info&&a.info.methodName))}static _addTemplatePropertyEffect(t,a,n){return e._addTemplatePropertyEffect.call(this,t,a,wrapEffect(n))}}));t.Class=(t,a)=>e(t,(e=>a?a(LegacyDataMixin(e)):LegacyDataMixin(e)));const s=a((e=>{const t=LegacyDataMixin(e);class TemplateLegacy extends t{get _legacyUndefinedCheck(){return this._methodHost&&this._methodHost._legacyUndefinedCheck}}return TemplateLegacy.prototype._methodHost,TemplateLegacy}));n.mixin=s,console.info("LegacyDataMixin will be applied to all legacy elements.\nSet `_legacyUndefinedCheck: true` on element class to enable.");