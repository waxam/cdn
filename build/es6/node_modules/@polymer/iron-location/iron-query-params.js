/**
@license
Copyright (c) 2015 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
http://polymer.github.io/LICENSE.txt The complete set of authors may be found at
http://polymer.github.io/AUTHORS.txt The complete set of contributors may be
found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as
part of the polymer project is also subject to an additional IP rights grant
found at http://polymer.github.io/PATENTS.txt
*/
import"../polymer/polymer-legacy.js";import{Polymer}from"../polymer/lib/legacy/polymer-fn.js";Polymer({is:"iron-query-params",_template:null,properties:{paramsString:{type:String,notify:!0,observer:"paramsStringChanged"},paramsObject:{type:Object,notify:!0},_dontReact:{type:Boolean,value:!1}},hostAttributes:{hidden:!0},observers:["paramsObjectChanged(paramsObject.*)"],paramsStringChanged:function(){this._dontReact=!0,this.paramsObject=this._decodeParams(this.paramsString),this._dontReact=!1},paramsObjectChanged:function(){this._dontReact||(this.paramsString=this._encodeParams(this.paramsObject).replace(/%3F/g,"?").replace(/%2F/g,"/").replace(/'/g,"%27"))},_encodeParams:function(params){var encodedParams=[];for(var key in params){var value=params[key];""===value?encodedParams.push(encodeURIComponent(key)):value&&encodedParams.push(encodeURIComponent(key)+"="+encodeURIComponent(value.toString()))}return encodedParams.join("&")},_decodeParams:function(paramString){for(var params={},paramList=(paramString=(paramString||"").replace(/\+/g,"%20")).split("&"),i=0;i<paramList.length;i++){var param=paramList[i].split("=");param[0]&&(params[decodeURIComponent(param[0])]=decodeURIComponent(param[1]||""))}return params}});