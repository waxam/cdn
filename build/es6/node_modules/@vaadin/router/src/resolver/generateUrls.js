import e from"./resolver.js";import{isString as t}from"../utils.js";const{pathToRegexp:r}=e,o=new Map;function getRouteByName(e,t){const r=e.get(t);if(r&&r.length>1)throw new Error(`Duplicate route with name "${t}".`+" Try seting unique 'name' route properties.");return r&&r[0]}function getRoutePath(e){let t=e.path;return t=Array.isArray(t)?t[0]:t,void 0!==t?t:""}export default function generateUrls(n,a={}){if(!(n instanceof e))throw new TypeError("An instance of Resolver is expected");const s=new Map;return(e,c)=>{let i=getRouteByName(s,e);if(!i&&(s.clear(),function cacheRoutes(e,t,r){const o=t.name||t.component;if(o&&(e.has(o)?e.get(o).push(t):e.set(o,[t])),Array.isArray(r))for(let o=0;o<r.length;o++){const n=r[o];n.parent=t,cacheRoutes(e,n,n.__children||n.children)}}(s,n.root,n.root.__children),i=getRouteByName(s,e),!i))throw new Error(`Route "${e}" not found`);let u=o.get(i.fullPath);if(!u){let e=getRoutePath(i),n=i.parent;for(;n;){const t=getRoutePath(n);t&&(e=t.replace(/\/$/,"")+"/"+e.replace(/^\//,"")),n=n.parent}const a=r.parse(e),s=r.tokensToFunction(a),c=Object.create(null);for(let e=0;e<a.length;e++)t(a[e])||(c[a[e].name]=!0);u={toPath:s,keys:c},o.set(e,u),i.fullPath=e}let l=u.toPath(c,a)||"/";if(a.stringifyQueryParams&&c){const e={},t=Object.keys(c);for(let r=0;r<t.length;r++){const o=t[r];u.keys[o]||(e[o]=c[o])}const r=a.stringifyQueryParams(e);r&&(l+="?"===r.charAt(0)?r:`?${r}`)}return l}}