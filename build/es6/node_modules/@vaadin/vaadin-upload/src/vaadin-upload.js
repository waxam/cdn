import{PolymerElement}from"../../../@polymer/polymer/polymer-element.js";import{resetMouseCanceller}from"../../../@polymer/polymer/lib/utils/gestures.js";import"../../../@polymer/polymer/lib/elements/dom-repeat.js";import{ThemableMixin}from"../../vaadin-themable-mixin/vaadin-themable-mixin.js";import"../../vaadin-button/src/vaadin-button.js";import"./vaadin-upload-icons.js";import"./vaadin-upload-file.js";import{ElementMixin}from"../../vaadin-element-mixin/vaadin-element-mixin.js";import{html}from"../../../@polymer/polymer/lib/utils/html-tag.js";class UploadElement extends(ElementMixin(ThemableMixin(PolymerElement))){static get template(){return html`
    <style>
      :host {
        display: block;
        position: relative;
      }

      :host([hidden]) {
        display: none !important;
      }

      [hidden] {
        display: none !important;
      }
    </style>

    <div part="primary-buttons">
      <div id="addFiles" on-touchend="_onAddFilesTouchEnd" on-click="_onAddFilesClick">
        <slot name="add-button">
          <vaadin-button part="upload-button" id="addButton" disabled="[[maxFilesReached]]">
            [[_i18nPlural(maxFiles, i18n.addFiles, i18n.addFiles.*)]]
          </vaadin-button>
        </slot>
      </div>
      <div part="drop-label" hidden\$="[[nodrop]]" id="dropLabelContainer">
        <slot name="drop-label-icon">
          <div part="drop-label-icon"></div>
        </slot>
        <slot name="drop-label" id="dropLabel">
          [[_i18nPlural(maxFiles, i18n.dropFiles, i18n.dropFiles.*)]]
        </slot>
      </div>
    </div>
    <slot name="file-list">
      <div id="fileList" part="file-list">
        <template is="dom-repeat" items="[[files]]" as="file">
          <vaadin-upload-file file="[[file]]"></vaadin-upload-file>
        </template>
      </div>
    </slot>
    <slot></slot>
    <input type="file" id="fileInput" on-change="_onFileInputChange" hidden="" accept\$="{{accept}}" multiple\$="[[_isMultiple(maxFiles)]]" capture\$="[[capture]]">
`}static get is(){return"vaadin-upload"}static get version(){return"4.2.1"}static get properties(){return{nodrop:{type:Boolean,reflectToAttribute:!0,value:function(){try{return!!document.createEvent("TouchEvent")}catch(e){return!1}}},target:{type:String,value:""},method:{type:String,value:"POST"},headers:{type:Object,value:{}},timeout:{type:Number,value:0},_dragover:{type:Boolean,value:!1,observer:"_dragoverChanged"},files:{type:Array,notify:!0,value:function(){return[]}},maxFiles:{type:Number,value:1/0},maxFilesReached:{type:Boolean,value:!1,notify:!0,readOnly:!0,computed:"_maxFilesAdded(maxFiles, files.length)"},accept:{type:String,value:""},maxFileSize:{type:Number,value:1/0},_dragoverValid:{type:Boolean,value:!1,observer:"_dragoverValidChanged"},formDataName:{type:String,value:"file"},noAuto:{type:Boolean,value:!1},withCredentials:{type:Boolean,value:!1},capture:String,i18n:{type:Object,value:function(){return{dropFiles:{one:"Drop file here",many:"Drop files here"},addFiles:{one:"Upload File...",many:"Upload Files..."},cancel:"Cancel",error:{tooManyFiles:"Too Many Files.",fileIsTooBig:"File is Too Big.",incorrectFileType:"Incorrect File Type."},uploading:{status:{connecting:"Connecting...",stalled:"Stalled.",processing:"Processing File...",held:"Queued"},remainingTime:{prefix:"remaining time: ",unknown:"unknown remaining time"},error:{serverUnavailable:"Server Unavailable",unexpectedServerError:"Unexpected Server Error",forbidden:"Forbidden"}},units:{size:["B","kB","MB","GB","TB","PB","EB","ZB","YB"]}}}}}}ready(){super.ready(),this.addEventListener("dragover",this._onDragover.bind(this)),this.addEventListener("dragleave",this._onDragleave.bind(this)),this.addEventListener("drop",this._onDrop.bind(this)),this.addEventListener("file-retry",this._onFileRetry.bind(this)),this.addEventListener("file-abort",this._onFileAbort.bind(this)),this.addEventListener("file-remove",this._onFileRemove.bind(this)),this.addEventListener("file-start",this._onFileStart.bind(this))}_formatSize(bytes){if("function"==typeof this.i18n.formatSize)return this.i18n.formatSize(bytes);const base=this.i18n.units.sizeBase||1e3,unit=~~(Math.log(bytes)/Math.log(base)),dec=Math.max(0,Math.min(3,unit-1));return parseFloat((bytes/Math.pow(base,unit)).toFixed(dec))+" "+this.i18n.units.size[unit]}_splitTimeByUnits(time){const unitSizes=[60,60,24,1/0],timeValues=[0];for(var i=0;i<unitSizes.length&&time>0;i++)timeValues[i]=time%unitSizes[i],time=Math.floor(time/unitSizes[i]);return timeValues}_formatTime(seconds,split){if("function"==typeof this.i18n.formatTime)return this.i18n.formatTime(seconds,split);for(;split.length<3;)split.push(0);return split.reverse().map(number=>(number<10?"0":"")+number).join(":")}_formatFileProgress(file){return file.totalStr+": "+file.progress+"% ("+(file.loaded>0?this.i18n.uploading.remainingTime.prefix+file.remainingStr:this.i18n.uploading.remainingTime.unknown)+")"}_maxFilesAdded(maxFiles,numFiles){return maxFiles>=0&&numFiles>=maxFiles}_onDragover(event){event.preventDefault(),this.nodrop||this._dragover||(this._dragoverValid=!this.maxFilesReached,this._dragover=!0),event.dataTransfer.dropEffect=!this._dragoverValid||this.nodrop?"none":"copy"}_onDragleave(event){event.preventDefault(),this._dragover&&!this.nodrop&&(this._dragover=this._dragoverValid=!1)}_onDrop(event){this.nodrop||(event.preventDefault(),this._dragover=this._dragoverValid=!1,this._addFiles(event.dataTransfer.files))}_createXhr(){return new XMLHttpRequest}_configureXhr(xhr){if("string"==typeof this.headers)try{this.headers=JSON.parse(this.headers)}catch(e){this.headers=void 0}for(var key in this.headers)xhr.setRequestHeader(key,this.headers[key]);this.timeout&&(xhr.timeout=this.timeout),xhr.withCredentials=this.withCredentials}_setStatus(file,total,loaded,elapsed){file.elapsed=elapsed,file.elapsedStr=this._formatTime(file.elapsed,this._splitTimeByUnits(file.elapsed)),file.remaining=Math.ceil(elapsed*(total/loaded-1)),file.remainingStr=this._formatTime(file.remaining,this._splitTimeByUnits(file.remaining)),file.speed=~~(total/elapsed/1024),file.totalStr=this._formatSize(total),file.loadedStr=this._formatSize(loaded),file.status=this._formatFileProgress(file)}uploadFiles(files){files=(files=files||this.files).filter(file=>!file.complete),Array.prototype.forEach.call(files,this._uploadFile.bind(this))}_uploadFile(file){if(file.uploading)return;const ini=Date.now(),xhr=file.xhr=this._createXhr(file);let stalledId,last;xhr.upload.onprogress=e=>{clearTimeout(stalledId);const elapsed=((last=Date.now())-ini)/1e3,loaded=e.loaded,total=e.total,progress=~~(loaded/total*100);file.loaded=loaded,file.progress=progress,file.indeterminate=loaded<=0||loaded>=total,file.error?file.indeterminate=file.status=void 0:file.abort||(progress<100?(this._setStatus(file,total,loaded,elapsed),stalledId=setTimeout(()=>{file.status=this.i18n.uploading.status.stalled,this._notifyFileChanges(file)},2e3)):(file.loadedStr=file.totalStr,file.status=this.i18n.uploading.status.processing,file.uploading=!1)),this._notifyFileChanges(file),this.dispatchEvent(new CustomEvent("upload-progress",{detail:{file:file,xhr:xhr}}))},xhr.onreadystatechange=()=>{if(4==xhr.readyState){if(clearTimeout(stalledId),file.indeterminate=file.uploading=!1,file.abort)return void this._notifyFileChanges(file);if(file.status="",!this.dispatchEvent(new CustomEvent("upload-response",{detail:{file:file,xhr:xhr},cancelable:!0})))return;0===xhr.status?file.error=this.i18n.uploading.error.serverUnavailable:xhr.status>=500?file.error=this.i18n.uploading.error.unexpectedServerError:xhr.status>=400&&(file.error=this.i18n.uploading.error.forbidden),file.complete=!file.error,this.dispatchEvent(new CustomEvent(`upload-${file.error?"error":"success"}`,{detail:{file:file,xhr:xhr}})),this._notifyFileChanges(file)}};const formData=new FormData;file.uploadTarget=this.target||"",file.formDataName=this.formDataName,this.dispatchEvent(new CustomEvent("upload-before",{detail:{file:file,xhr:xhr},cancelable:!0}))&&(formData.append(file.formDataName,file,file.name),xhr.open(this.method,file.uploadTarget,!0),this._configureXhr(xhr),file.status=this.i18n.uploading.status.connecting,file.uploading=file.indeterminate=!0,file.complete=file.abort=file.error=file.held=!1,xhr.upload.onloadstart=()=>{this.dispatchEvent(new CustomEvent("upload-start",{detail:{file:file,xhr:xhr}})),this._notifyFileChanges(file)},this.dispatchEvent(new CustomEvent("upload-request",{detail:{file:file,xhr:xhr,formData:formData},cancelable:!0}))&&xhr.send(formData))}_retryFileUpload(file){this.dispatchEvent(new CustomEvent("upload-retry",{detail:{file:file,xhr:file.xhr},cancelable:!0}))&&this._uploadFile(file)}_abortFileUpload(file){this.dispatchEvent(new CustomEvent("upload-abort",{detail:{file:file,xhr:file.xhr},cancelable:!0}))&&(file.abort=!0,file.xhr&&file.xhr.abort(),this._notifyFileChanges(file))}_notifyFileChanges(file){var p="files."+this.files.indexOf(file)+".";for(var i in file)file.hasOwnProperty(i)&&this.notifyPath(p+i,file[i])}_addFiles(files){Array.prototype.forEach.call(files,this._addFile.bind(this))}_addFile(file){if(this.maxFilesReached)return void this.dispatchEvent(new CustomEvent("file-reject",{detail:{file:file,error:this.i18n.error.tooManyFiles}}));if(this.maxFileSize>=0&&file.size>this.maxFileSize)return void this.dispatchEvent(new CustomEvent("file-reject",{detail:{file:file,error:this.i18n.error.fileIsTooBig}}));const fileExt=file.name.match(/\.[^\.]*$|$/)[0],re=new RegExp("^("+this.accept.replace(/[, ]+/g,"|").replace(/\/\*/g,"/.*")+")$","i");!this.accept||re.test(file.type)||re.test(fileExt)?(file.loaded=0,file.held=!0,file.status=this.i18n.uploading.status.held,this.unshift("files",file),this.noAuto||this._uploadFile(file)):this.dispatchEvent(new CustomEvent("file-reject",{detail:{file:file,error:this.i18n.error.incorrectFileType}}))}_removeFile(file){this.files.indexOf(file)>-1&&this.splice("files",this.files.indexOf(file),1)}_onAddFilesTouchEnd(e){e.preventDefault(),this.__resetMouseCanceller(),this._onAddFilesClick()}__resetMouseCanceller(){resetMouseCanceller()}_onAddFilesClick(){this.maxFilesReached||(this.$.fileInput.value="",this.$.fileInput.click())}_onFileInputChange(event){this._addFiles(event.target.files)}_onFileStart(event){this._uploadFile(event.detail.file)}_onFileRetry(event){this._retryFileUpload(event.detail.file)}_onFileAbort(event){this._abortFileUpload(event.detail.file)}_onFileRemove(event){event.stopPropagation(),this._removeFile(event.detail.file)}_dragoverChanged(dragover){dragover?this.setAttribute("dragover",dragover):this.removeAttribute("dragover")}_dragoverValidChanged(dragoverValid){dragoverValid?this.setAttribute("dragover-valid",dragoverValid):this.removeAttribute("dragover-valid")}_i18nPlural(value,plural){return 1==value?plural.one:plural.many}_isMultiple(){return 1!=this.maxFiles}}customElements.define(UploadElement.is,UploadElement);export{UploadElement};