const DEV_MODE_CODE_REGEXP=/\/\*\*\s+vaadin-dev-mode:start([\s\S]*)vaadin-dev-mode:end\s+\*\*\//i,FlowClients=window.Vaadin&&window.Vaadin.Flow&&window.Vaadin.Flow.clients;function uncommentAndRun(callback,args){if("function"!=typeof callback)return;const match=DEV_MODE_CODE_REGEXP.exec(callback.toString());if(match)try{callback=new Function(match[1])}catch(e){console.log("vaadin-development-mode-detector: uncommentAndRun() failed",e)}return callback(args)}window.Vaadin=window.Vaadin||{};export const runIfDevelopmentMode=function(callback,args){if(window.Vaadin.developmentMode)return uncommentAndRun(callback,args)};void 0===window.Vaadin.developmentMode&&(window.Vaadin.developmentMode=function isDevelopmentMode(){try{return!!function isForcedDevelopmentMode(){return localStorage.getItem("vaadin.developmentmode.force")}()||!!function isLocalhost(){return["localhost","127.0.0.1"].indexOf(window.location.hostname)>=0}()&&(FlowClients?!function isFlowProductionMode(){if(FlowClients){if(Object.keys(FlowClients).map(key=>FlowClients[key]).filter(client=>client.productionMode).length>0)return!0}return!1}():!function isMinified(){return uncommentAndRun((function test(){return!0}))}())}catch(e){return!1}}());