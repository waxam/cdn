import{Base}from"../../../@polymer/polymer/polymer-legacy.js";export const ArrayDataProviderMixin=superClass=>(class ArrayDataProviderMixin extends superClass{static get properties(){return{items:Array}}static get observers(){return["_itemsChanged(items, items.*, isAttached)"]}_itemsChanged(items,splices,isAttached){if(isAttached){if(!Array.isArray(items))return null==items&&(this.size=0),void(this.dataProvider===this._arrayDataProvider&&(this.dataProvider=void 0));this.size=items.length,this.dataProvider=this.dataProvider||this._arrayDataProvider,this.clearCache(),this._ensureFirstPageLoaded()}}_arrayDataProvider(opts,cb){let items=(Array.isArray(this.items)?this.items:[]).slice(0);this._filters&&this._checkPaths(this._filters,"filtering",items)&&(items=this._filter(items)),this.size=items.length,opts.sortOrders.length&&this._checkPaths(this._sorters,"sorting",items)&&(items=items.sort(this._multiSort.bind(this)));const start=opts.page*opts.pageSize,end=start+opts.pageSize;cb(items.slice(start,end),items.length)}_checkPaths(arrayToCheck,action,items){if(!items.length)return!1;let result=!0;for(var i in arrayToCheck){const path=arrayToCheck[i].path;if(!path||-1===path.indexOf("."))continue;const parentProperty=path.replace(/\.[^\.]*$/,"");void 0===Base.get(parentProperty,items[0])&&(console.warn(`Path "${path}" used for ${action} does not exist in all of the items, ${action} is disabled.`),result=!1)}return result}_multiSort(a,b){return this._sorters.map(sort=>"asc"===sort.direction?this._compare(Base.get(sort.path,a),Base.get(sort.path,b)):"desc"===sort.direction?this._compare(Base.get(sort.path,b),Base.get(sort.path,a)):0).reduce((p,n)=>p||n,0)}_normalizeEmptyValue(value){return[void 0,null].indexOf(value)>=0?"":isNaN(value)?value.toString():value}_compare(a,b){return(a=this._normalizeEmptyValue(a))<(b=this._normalizeEmptyValue(b))?-1:a>b?1:0}_filter(items){return items.filter((item,index)=>0===this._filters.filter(filter=>{const value=this._normalizeEmptyValue(Base.get(filter.path,item)),filterValueLowercase=this._normalizeEmptyValue(filter.value).toString().toLowerCase();return-1===value.toString().toLowerCase().indexOf(filterValueLowercase)}).length)}});