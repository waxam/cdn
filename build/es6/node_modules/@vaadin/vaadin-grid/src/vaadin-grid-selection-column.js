import"../../../@polymer/polymer/polymer-legacy.js";import{GridColumnElement}from"./vaadin-grid-column.js";import"../../vaadin-checkbox/src/vaadin-checkbox.js";import{html}from"../../../@polymer/polymer/lib/utils/html-tag.js";class GridSelectionColumnElement extends GridColumnElement{static get template(){return html`
    <template class="header" id="defaultHeaderTemplate">
      <vaadin-checkbox class="vaadin-grid-select-all-checkbox" aria-label="Select All" hidden\$="[[_selectAllHidden]]" on-checked-changed="_onSelectAllCheckedChanged" checked="[[_isChecked(selectAll, _indeterminate)]]" indeterminate="[[_indeterminate]]">
      </vaadin-checkbox>
    </template>
    <template id="defaultBodyTemplate">
      <vaadin-checkbox aria-label="Select Row" checked="{{selected}}">
      </vaadin-checkbox>
    </template>
`}static get is(){return"vaadin-grid-selection-column"}static get properties(){return{width:{type:String,value:"56px"},flexGrow:{type:Number,value:0},selectAll:{type:Boolean,value:!1,notify:!0},autoSelect:{type:Boolean,value:!1},_indeterminate:Boolean,_previousActiveItem:Object,_selectAllHidden:Boolean}}static get observers(){return["_onSelectAllChanged(selectAll)"]}_pathOrHeaderChanged(path,header,headerCell,footerCell,cells,renderer,headerRenderer,bodyTemplate,headerTemplate){if(cells.value&&(path!==void 0||renderer!==void 0)){this._bodyTemplate=bodyTemplate=void 0;this.__cleanCellsOfTemplateProperties(cells.value)}if(headerCell&&(header!==void 0||headerRenderer!==void 0)){this._headerTemplate=headerTemplate=void 0;this.__cleanCellsOfTemplateProperties([headerCell])}super._pathOrHeaderChanged(path,header,headerCell,footerCell,cells,renderer,headerRenderer,bodyTemplate,headerTemplate)}__cleanCellsOfTemplateProperties(cells){cells.forEach(cell=>{cell._content.innerHTML="";delete cell._instance;delete cell._template})}_prepareHeaderTemplate(){const headerTemplate=this._prepareTemplatizer(this._findTemplate(!0)||this.$.defaultHeaderTemplate);headerTemplate.templatizer.dataHost=headerTemplate===this.$.defaultHeaderTemplate?this:this.dataHost;return headerTemplate}_prepareBodyTemplate(){const template=this._prepareTemplatizer(this._findTemplate()||this.$.defaultBodyTemplate);template.templatizer.dataHost=template===this.$.defaultBodyTemplate?this:this.dataHost;return template}constructor(){super();this._boundOnActiveItemChanged=this._onActiveItemChanged.bind(this);this._boundOnDataProviderChanged=this._onDataProviderChanged.bind(this);this._boundOnSelectedItemsChanged=this._onSelectedItemsChanged.bind(this)}disconnectedCallback(){this._grid.removeEventListener("active-item-changed",this._boundOnActiveItemChanged);this._grid.removeEventListener("data-provider-changed",this._boundOnDataProviderChanged);this._grid.removeEventListener("filter-changed",this._boundOnSelectedItemsChanged);this._grid.removeEventListener("selected-items-changed",this._boundOnSelectedItemsChanged);const isSafari=/^((?!chrome|android).)*safari/i.test(navigator.userAgent);if(isSafari&&window.ShadyDOM&&this.parentElement){const parent=this.parentElement,nextSibling=this.nextElementSibling;parent.removeChild(this);if(nextSibling){parent.insertBefore(this,nextSibling)}else{parent.appendChild(this)}}super.disconnectedCallback()}connectedCallback(){super.connectedCallback();if(this._grid){this._grid.addEventListener("active-item-changed",this._boundOnActiveItemChanged);this._grid.addEventListener("data-provider-changed",this._boundOnDataProviderChanged);this._grid.addEventListener("filter-changed",this._boundOnSelectedItemsChanged);this._grid.addEventListener("selected-items-changed",this._boundOnSelectedItemsChanged)}}_onSelectAllChanged(selectAll){if(selectAll===void 0||!this._grid){return}if(this._selectAllChangeLock){return}this._grid.selectedItems=selectAll&&Array.isArray(this._grid.items)?this._grid._filter(this._grid.items):[]}_arrayContains(a,b){for(var i=0;a&&b&&b[i]&&0<=a.indexOf(b[i]);i++);return i==b.length}_onSelectAllCheckedChanged(e){this.selectAll=this._indeterminate||e.target.checked}_isChecked(selectAll,indeterminate){return indeterminate||selectAll}_onActiveItemChanged(e){const activeItem=e.detail.value;if(this.autoSelect){const item=activeItem||this._previousActiveItem;if(item){this._grid._toggleItem(item)}}this._previousActiveItem=activeItem}_onSelectedItemsChanged(){this._selectAllChangeLock=!0;if(Array.isArray(this._grid.items)){if(!this._grid.selectedItems.length){this.selectAll=!1;this._indeterminate=!1}else if(this._arrayContains(this._grid.selectedItems,this._grid._filter(this._grid.items))){this.selectAll=!0;this._indeterminate=!1}else{this.selectAll=!1;this._indeterminate=!0}}this._selectAllChangeLock=!1}_onDataProviderChanged(){this._selectAllHidden=!Array.isArray(this._grid.items)}}customElements.define(GridSelectionColumnElement.is,GridSelectionColumnElement);export{GridSelectionColumnElement};