/**
 * @license
 * Copyright (c) 2021 The Polymer Project Authors. All rights reserved.
 * This code may only be used under the BSD style license found at
 * http://polymer.github.io/LICENSE.txt
 * The complete set of authors may be found at
 * http://polymer.github.io/AUTHORS.txt
 * The complete set of contributors may be found at
 * http://polymer.github.io/CONTRIBUTORS.txt
 * Code distributed by Google as part of the polymer project is also
 * subject to an additional IP rights grant found at
 * http://polymer.github.io/PATENTS.txt
 */
import{Directive as t}from"./directive.js";import{AttributePart as e,BooleanAttributePart as r,EventPart as a,NodePart as s,PropertyPart as i}from"./lit-html.js";export class AsyncDirective extends t{constructor(t){super(t),this._renderedYet=!1,this._legacyPart=t.legacyPart}_legacyGetNode(){return this._legacyPart instanceof s?this._legacyPart.startNode:this._legacyPart instanceof a||this._legacyPart instanceof r?this._legacyPart.element:this._legacyPart instanceof i||this._legacyPart instanceof e?this._legacyPart.committer.element:void 0}_shouldRender(){if(!this._renderedYet)return this._renderedYet=!0,!0;const t=this._legacyGetNode();return!!(null==t?void 0:t.isConnected)}setValue(t){this._shouldRender()&&(this._legacyPart.setValue(t),this._legacyPart.commit())}disconnected(){}reconnected(){}}