const t=[];new MutationObserver((function(){const e=getDocumentDir();t.forEach(t=>{alignDirs(t,e)})})).observe(document.documentElement,{attributes:!0,attributeFilter:["dir"]});const alignDirs=function(t,e){e?t.setAttribute("dir",e):t.removeAttribute("dir")},getDocumentDir=function(){return document.documentElement.getAttribute("dir")};export const DirMixin=e=>class VaadinDirMixin extends e{static get properties(){return{dir:{type:String,readOnly:!0}}}connectedCallback(){super.connectedCallback(),this.hasAttribute("dir")||(this.__subscribe(),alignDirs(this,getDocumentDir()))}attributeChangedCallback(e,i,s){if(super.attributeChangedCallback(e,i,s),"dir"!==e)return;const n=s===getDocumentDir()&&-1===t.indexOf(this),r=!s&&i&&-1===t.indexOf(this),c=s!==getDocumentDir()&&i===getDocumentDir();n||r?(this.__subscribe(),alignDirs(this,getDocumentDir())):c&&this.__subscribe(!1)}disconnectedCallback(){super.disconnectedCallback(),this.__subscribe(!1)}__subscribe(e=!0){e?-1===t.indexOf(this)&&t.push(this):t.indexOf(this)>-1&&t.splice(t.indexOf(this),1)}};