/**
@license
Copyright (c) 2016 Vaadin Ltd.
This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
*/
import{PolymerElement as t}from"../../../@polymer/polymer/polymer-element.js";import{GestureEventListeners as e}from"../../../@polymer/polymer/lib/mixins/gesture-event-listeners.js";import{FlattenedNodesObserver as i}from"../../../@polymer/polymer/lib/utils/flattened-nodes-observer.js";import{IronResizableBehavior as r}from"../../../@polymer/iron-resizable-behavior/iron-resizable-behavior.js";import{ThemableMixin as s}from"../../vaadin-themable-mixin/vaadin-themable-mixin.js";import{ElementMixin as n}from"../../vaadin-element-mixin/vaadin-element-mixin.js";import{html as o}from"../../../@polymer/polymer/lib/utils/html-tag.js";import{mixinBehaviors as a}from"../../../@polymer/polymer/lib/legacy/class.js";class SplitLayoutElement extends(n(s(e(a([r],t))))){static get template(){return o`
    <style>
      :host {
        display: flex;
        overflow: hidden !important;
        transform: translateZ(0);
      }

      :host([hidden]) {
        display: none !important;
      }

      :host([orientation="vertical"]) {
        flex-direction: column;
      }

      :host ::slotted(*) {
        flex: 1 1 auto;
        overflow: auto;
        -webkit-overflow-scrolling: touch;
      }

      [part="splitter"] {
        flex: none;
        position: relative;
        z-index: 1;
        overflow: visible;
        min-width: 8px;
        min-height: 8px;
      }

      :host(:not([orientation="vertical"])) > [part="splitter"] {
        cursor: ew-resize;
      }

      :host([orientation="vertical"]) > [part="splitter"] {
        cursor: ns-resize;
      }

      [part="handle"] {
        width: 40px;
        height: 40px;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate3d(-50%, -50%, 0);
      }
    </style>
    <slot id="primary" name="primary"></slot>
    <div part="splitter" id="splitter" on-track="_onHandleTrack" on-down="_setPointerEventsNone" on-up="_restorePointerEvents">
      <div part="handle"></div>
    </div>
    <slot id="secondary" name="secondary"></slot>

    <div hidden="">
      <!-- Workaround to fix a Shady style scoping issue caused by dynamic slot naming of the child elements (primary/secondary) -->
      <slot></slot>
    </div>
`}static get is(){return"vaadin-split-layout"}static get version(){return"4.3.0"}static get properties(){return{orientation:{type:String,reflectToAttribute:!0,value:"horizontal"},_previousPrimaryPointerEvents:String,_previousSecondaryPointerEvents:String}}ready(){super.ready(),new i(this,this._processChildren)}_processChildren(){this.getEffectiveChildren().forEach(((t,e)=>{0===e?(this._primaryChild=t,t.setAttribute("slot","primary")):1==e?(this._secondaryChild=t,t.setAttribute("slot","secondary")):t.removeAttribute("slot")}))}_setFlexBasis(t,e,i){0===(e=Math.max(0,Math.min(e,i)))&&(e=1e-6),t.style.flex="1 1 "+e+"px"}_setPointerEventsNone(t){this._primaryChild&&this._secondaryChild&&(this._previousPrimaryPointerEvents=this._primaryChild.style.pointerEvents,this._previousSecondaryPointerEvents=this._secondaryChild.style.pointerEvents,this._primaryChild.style.pointerEvents="none",this._secondaryChild.style.pointerEvents="none",t.preventDefault())}_restorePointerEvents(){this._primaryChild&&this._secondaryChild&&(this._primaryChild.style.pointerEvents=this._previousPrimaryPointerEvents,this._secondaryChild.style.pointerEvents=this._previousSecondaryPointerEvents)}_onHandleTrack(t){if(!this._primaryChild||!this._secondaryChild)return;var e="vertical"===this.orientation?"height":"width";if("start"===t.detail.state)return void(this._startSize={container:this.getBoundingClientRect()[e]-this.$.splitter.getBoundingClientRect()[e],primary:this._primaryChild.getBoundingClientRect()[e],secondary:this._secondaryChild.getBoundingClientRect()[e]});var i="vertical"===this.orientation?t.detail.dy:t.detail.dx;const r="vertical"!==this.orientation&&"rtl"===this.getAttribute("dir")?-i:i;this._setFlexBasis(this._primaryChild,this._startSize.primary+r,this._startSize.container),this._setFlexBasis(this._secondaryChild,this._startSize.secondary-r,this._startSize.container),this.notifyResize(),"end"===t.detail.state&&(this.dispatchEvent(new CustomEvent("splitter-dragend")),delete this._startSize)}notifyResize(){super.notifyResize()}}customElements.define(SplitLayoutElement.is,SplitLayoutElement);export{SplitLayoutElement};