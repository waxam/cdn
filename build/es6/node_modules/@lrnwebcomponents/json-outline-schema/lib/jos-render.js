import{LitElement as t,html as e,css as i}from"../../../lit-element/lit-element.js";import"../json-outline-schema.js";import{wipeSlot as s,varGet as r,varExists as a}from"../../utils/utils.js";import"../../dynamic-import-registry/dynamic-import-registry.js";class JosRender extends t{static get tag(){return"jos-render"}constructor(){super(),this.registry=window.DynamicImportRegistry.requestAvailability(),window.WCAutoloadBasePath&&(this.registry.basePath=window.WCAutoloadBasePath),this.items=[]}static get styles(){return[i`
        :host {
          display: block;
        }
        .children {
          display: block;
          margin: 16px auto;
        }
        .children ::slotted(*) {
          display: inline-flex;
          margin: var(--jos-render-margin, 8px);
          padding: var(--jos-render-padding, 8px);
        }
      `]}static get properties(){return{source:{type:String},map:{type:Object},items:{type:Array}}}render(){return e`
      <div class="children">
        <slot></slot>
      </div>
    `}updated(t){t.forEach(async(t,e)=>{if("source"==e){let t=window.JSONOutlineSchema.requestAvailability();await t.load(this[e])&&(this.items=[...t.items])}"map"==e&&this.map.path&&this.map.tag&&(this.registry.register({tag:this.map.tag,path:this.map.path}),this.registry.loadDefinition(this.map.tag),this.items.length>0&&this.renderItems(this.items)),"items"==e&&this.renderItems(this.items)})}renderItems(t){this.map&&this.map.properties&&(s(this),t.forEach(t=>{let e=document.createElement(this.map.tag);for(var i in this.map.properties){let s=this.map.properties[i];!0===s||!1===s||null===s?e[i]=s:s.transform&&s.value&&a(t,s.value)?e[i]=s.transform(r(t,s.value),t):"string"==typeof s&&a(t,s)?e[i]=r(t,s):e[i]=s}this.appendChild(e)}))}}window.customElements.define(JosRender.tag,JosRender);export{JosRender};