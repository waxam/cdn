/**
 * Copyright 2019 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{JSONOutlineSchemaItem}from"./lib/json-outline-schema-item.js";window.JSONOutlineSchema=window.JSONOutlineSchema||{},window.JSONOutlineSchema.requestAvailability=()=>(window.JSONOutlineSchema.instance||(window.JSONOutlineSchema.instance=document.createElement("json-outline-schema"),document.body.appendChild(window.JSONOutlineSchema.instance)),window.JSONOutlineSchema.instance);class JsonOutlineSchema extends HTMLElement{get html(){return"\n<style>\n:host {\n  display: block;\n}\n:host([debug]) {\n  font-family: monospace;\n  white-space: pre;\n  margin: 16px 0px;\n}\n:host([hidden]) {\n  display: none;\n}\n        </style>\n<slot></slot>"}static get properties(){return{...super.properties}}static get tag(){return"json-outline-schema"}constructor(delayRender=!1){super(),this.tag=JsonOutlineSchema.tag,this.template=document.createElement("template"),this.attachShadow({mode:"open"}),delayRender||this.render(),this.__ready=!1,this.file=null,this.id=this.generateUUID(),this.title="New site",this.author="",this.description="",this.license="by-sa",this.metadata={},this.items=[],this.debug=!1,window.JSONOutlineSchema.instance=this}connectedCallback(){window.ShadyCSS&&window.ShadyCSS.styleElement(this),window.addEventListener("json-outline-schema-debug-toggle",this._toggleDebug.bind(this));const evt=new CustomEvent("json-outline-schema-ready",{bubbles:!0,cancelable:!1,composed:!0,detail:!0});this.dispatchEvent(evt),this.__ready=!0}_copyAttribute(name,to){const recipients=this.shadowRoot.querySelectorAll(to),value=this.getAttribute(name),fname=null==value?"removeAttribute":"setAttribute";for(const node of recipients)node[fname](name,value)}_setProperty({name:name,value:value}){this[name]=value}render(){this.shadowRoot.innerHTML=null,this.template.innerHTML=this.html,window.ShadyCSS&&window.ShadyCSS.prepareTemplate(this.template,this.tag),this.shadowRoot.appendChild(this.template.content.cloneNode(!0))}disconnectedCallback(){window.removeEventListener("json-outline-schema-debug-toggle",this._toggleDebug.bind(this));const evt=new CustomEvent("json-outline-schema-unready",{bubbles:!0,cancelable:!1,detail:!0});this.dispatchEvent(evt)}clone(){const schema={id:this.id,title:this.title,author:this.author,description:this.description,license:this.license,metadata:this.metadata,items:this.items};return JSON.parse(JSON.stringify(schema))}newItem(){return new JSONOutlineSchemaItem}addItem(item){let safeItem=this.validateItem(item);return count=array_push(this.items,safeItem),count}validateItem(item){let tmp=new JSONOutlineSchemaItem;for(var key in tmp)void 0!==item[key]&&(tmp[key]=item[key]);return tmp}removeItem(id){for(var key in this.items)if(this.items[key].id==id){let tmp=this.items[key];return delete this.items[key],tmp}return!1}updateItem(item,save=!1){let safeItem=this.validateItem(item);for(var key in this.items)if(this.items[key].id==safeItem.id)return this.items[key]=safeItem,!save||this.save();return!1}async load(location){if(location){this.file=location;let data=await fetch(location).then((function(response){return response.text()})),fileData=JSON.parse(data);for(var key in fileData)void 0!==this[key]&&"items"!==key&&(this[key]=fileData[key]);if(fileData.items)for(var key in fileData.items){let item=fileData.items[key],newItem=new JSONOutlineSchemaItem;newItem.id=item.id,newItem.indent=item.indent,newItem.location=item.location,newItem.order=item.order,newItem.parent=item.parent,newItem.title=item.title,newItem.description=item.description,newItem.metadata=item.metadata,this.items[key]=newItem}return!0}return!1}save(){let schema={id:this.id,title:this.title,author:this.author,description:this.description,license:this.license,metadata:this.metadata,items:this.items};return JSON.stringify(schema,null,2)}generateUUID(){return"ss-s-s-s-sss".replace(/s/g,this._uuidPart)}_uuidPart(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}_toggleDebug(e){this.debug=!this.debug,this._triggerDebugPaint(this.debug)}_triggerDebugPaint(debug){if(debug){let obj={file:this.file,id:this.id,title:this.title,author:this.author,description:this.description,license:this.license,metadata:this.metadata,items:this.items},span=document.createElement("span");span.innerHTML=JSON.stringify(obj,null,2),this.shadowRoot.appendChild(span.cloneNode(!0))}else this.render()}static get observedAttributes(){return["file","id","title","author","description","license","debug"]}attributeChangedCallback(attr,oldValue,newValue){this.debug&&(this.render(),this._triggerDebugPaint(this.debug))}get file(){return this.getAttribute("file")}set file(newValue){this.__ready&&this.setAttribute("file",newValue)}get id(){return this.getAttribute("id")}set id(newValue){this.__ready&&this.setAttribute("id",newValue)}get title(){return this.getAttribute("title")}set title(newValue){this.__ready&&this.setAttribute("title",newValue)}get author(){return this.getAttribute("author")}set author(newValue){this.__ready&&this.setAttribute("author",newValue)}get description(){return this.getAttribute("description")}set description(newValue){this.__ready&&this.setAttribute("description",newValue)}get license(){return this.getAttribute("license")}set license(newValue){this.__ready&&this.setAttribute("license",newValue)}get debug(){return this.getAttribute("debug")}set debug(newValue){this.__ready&&newValue?this.setAttribute("debug",newValue):this.removeAttribute("debug")}updateMetadata(key,value){this.metadata[key]=value,this.debug&&(this.render(),this._triggerDebugPaint(this.debug))}getItemValues(item,parent=!1){var valid;return valid=item?this.validateItem(item):new JSONOutlineSchemaItem,parent&&(valid.parent=parent.id),valid}getItemSchema(requested="item"){var obj,schema={$schema:"http://json-schema.org/schema#",title:this.title,type:"object",properties:{}};for(var key in"item"==requested?obj=new JSONOutlineSchemaItem:(obj={file:this.file,id:this.id,title:this.title,author:this.author,description:this.description,license:this.license,metadata:this.metadata},"outline"==requested&&(obj.items=this.items)),obj){let props={title:key,type:"string",value:obj[key]};switch(key){case"file":case"id":case"title":case"author":case"description":case"license":case"location":case"parent":props.component={name:"paper-input",valueProperty:"value",properties:{required:!0}};break;case"indent":case"order":props.component={name:"paper-input",valueProperty:"value",properties:{required:!0},attributes:{type:"number"}};case"metadata":case"items":props.type="array",props.items={type:"object",properties:{key:{title:"key",type:"string",component:{name:"paper-input",valueProperty:"value",properties:{required:!0}}},value:{title:"value",type:"string",component:{name:"paper-input",valueProperty:"value",properties:{required:!0}}}}};break;default:console.log(key)}schema.properties[key]=props}return schema}itemsToNodes(items=[]){0===items.length&&(items=this.items);let tree=this.unflattenItems(items);return this.treeToNodes(tree,document.createElement("ul"))}treeToNodes(tree,appendTarget){for(var i in tree){let li=document.createElement("li");li.innerText=tree[i].title,li.setAttribute("data-jos-id",tree[i].id),tree[i].location&&li.setAttribute("data-jos-location",tree[i].location),appendTarget.appendChild(li),tree[i].children&&tree[i].children.length>0&&appendTarget.appendChild(this.treeToNodes(tree[i].children,document.createElement("ul")))}return appendTarget}unflattenItems(items,parent,tree){tree=void 0!==tree?tree:[],parent=void 0!==parent?parent:{id:null};let children=items.filter(child=>child.parent===parent.id);return children.length&&(parent.id?parent.children=children:tree=children,children.forEach(child=>{this.unflattenItems(items,child)})),tree}scrubElementJOSData(node){for(var i in node.children)node.removeAttribute("data-jos-id"),node.removeAttribute("data-jos-location"),node.children[i].children&&this.scrubElementJOSData(node.children[i])}nodesToItems(node,save=!1){const items=this.getChildOutline(node);return save&&(this.items=items,this.debug&&(this.render(),this._triggerDebugPaint(this.debug))),items}getChildOutline(node,order=0,indent=0,parent=null){const clone=node.cloneNode(!0);let items=[],item={};for(;null!==clone.firstChild;){if(void 0!==clone.firstChild.tagName){const child=clone.firstChild;if(null!==child.firstChild&&void 0!==child.firstChild.tagName){let parentPassdown=parent;void 0!==item.id&&(parentPassdown=item.id),items=items.concat(this.getChildOutline(child,0,indent+1,parentPassdown))}else item=new JSONOutlineSchemaItem,child.getAttribute("data-jos-id")&&(item.id=child.getAttribute("data-jos-id")),child.getAttribute("data-jos-location")?item.location=child.getAttribute("data-jos-location"):item.location="",item.indent=indent,item.order=order,order+=1,item.title=child.innerText,item.parent=parent,items.push(item)}clone.removeChild(clone.firstChild)}return items}nextPage(manifest,activeItem){manifest.items=manifest.items.sort((a,b)=>{})}}window.customElements.define(JsonOutlineSchema.tag,JsonOutlineSchema);export{JsonOutlineSchema,JSONOutlineSchemaItem};