import{LitElement as e,html as t,css as s}from"../../../lit-element/lit-element.js";import{SimpleFieldsLite as o}from"./simple-fields-lite.js";class SimpleFieldsFormLite extends o{static get styles(){return[s`
        :host {
          display: block;
        }
      `]}static get tag(){return"simple-fields-form-lite"}render(){return t`
      <form>
        <slot name="before"></slot>
        <simple-fields-lite id="sf" autofocus></simple-fields-lite>
        <slot></slot>
      </form>
    `}firstUpdated(e){e.forEach((e,t)=>{"loadEndpoint"===t&&this.autoload&&this.loadData()})}updated(e){e.forEach((e,t)=>{!this.autoload||this.loadResponse||this.loading||"loadEndpoint"!==t&&"autoload"!==t||this.loadData(),"loadResponse"===t&&this.loadResponse.data&&(this._applyLoadedData(),this.dispatchEvent(new CustomEvent("response",{bubbles:!0,composed:!0,cancelable:!1,detail:this.loadResponse})))})}_applyLoadedData(){let e=this.shadowRoot.querySelector("#sf");this.loadResponse.data.schema&&(e.schema=this.loadResponse.data.schema),this.loadResponse.data.value&&(e.value=this.loadResponse.data.value)}loadData(){this.loading=!0,this.fetchData(this.loadEndpoint,this.method,this.headers,this.body).then(e=>{this.loading=!1,this.loadResponse=e,this.dispatchEvent(new CustomEvent("simple-fields-form-data-loaded",{detail:{value:e}}))})}async fetchData(e,t,s,o){let a={};return"GET"==t?(o&&(e+="?"+Object.entries(o).map(([e,t])=>`${encodeURIComponent(e)}=${encodeURIComponent(t)}`).join("&")),a=await fetch(e,{method:t,headers:s})):a=await fetch(e,{method:t,headers:s,body:JSON.stringify(o)}),await a.json()}constructor(){super(),this.method="POST",this.loading=!1,this.autoload=!1,this.headers={Accept:"application/json","Content-Type":"application/json"},this.body={}}submit(){let e=this.shadowRoot.querySelector("#sf");return this.saveEndpoint&&fetch(this.saveEndpoint,{method:this.method,headers:this.headers,body:JSON.stringify(e.value)}),e.value}static get properties(){return{...super.properties,autoload:{type:Boolean,reflect:!0},loading:{type:Boolean,reflect:!0},loadEndpoint:{type:String,attribute:"load-endpoint"},saveEndpoint:{type:String,attribute:"save-endpoint"},method:{type:String},headers:{type:Object},body:{type:Object},loadResponse:{type:Object}}}}window.customElements.define(SimpleFieldsFormLite.tag,SimpleFieldsFormLite);export{SimpleFieldsFormLite};