import{LitElement as e,html as t,css as i}from"../../../lit-element/lit-element.js";class SimpleFieldsContainer extends e{static get tag(){return"simple-fields-container"}static get styles(){return[i`
        :host {
          display: block;
          width: 100%;
          font-size: var(--simple-fields-detail-font-size, 12px);
          font-family: var(--simple-fields-detail-font-family, sans-serif);
          line-height: var(--simple-fields-detail-line-height, 22px);
          transition: color 0.3s ease-in-out;
          margin: var(--simple-fields-margin, 16px) 0;
        }
        :host([hidden]),
        :host([type="hidden"]) {
          display: none;
        }
        :host([error]) {
          color: var(--simple-fields-error-color, #dd2c00);
          transition: color 0.3s ease-in-out;
        }
        :host([disabled]) {
          color: var(--simple-fields-disabled-color, #999);
        }
        .field-main.inline,
        .field-main > div,
        #field-bottom {
          display: flex;
          align-items: stretch;
          justify-content: flex-start;
        }
        * {
          flex: 1 1 auto;
        }
        #fieldmeta {
          text-align: right;
        }
        :host(:focus-within) .label-main {
          color: var(--simple-fields-accent-color, #3f51b5);
          transition: color 0.3s ease-in-out;
        }
        .inline label {
          margin: 0 var(--simple-fields-margin-small, 8px) 0 0;
          flex: 0 1 auto;
        }
        .inline label,
        .field-main > div,
        .field,
        ::slotted([slot="field"]) {
          font-size: var(--simple-fields-font-size, 16px);
          font-family: var(--simple-fields-font-family, sans-serif);
          line-height: var(--simple-fields-line-height, 22px);
        }
        .field,
        ::slotted([slot="field"]) {
          width: auto;
          border: none;
          color: var(--simple-fields-color, black);
          transition: opacity ease-in-out;
          flex: 1 0 auto;
        }
        .field-main.inline .field,
        .field-main.inline ::slotted([slot="field"]) {
          min-width: var(--simple-fields-detail-line-height, 22px);
          height: var(--simple-fields-detail-line-height, 22px);
          margin: 0 var(--simple-fields-margin-small, 8px) 0 0;
        }
        .field[disabled],
        :host([readonly]) ::slotted([slot="field"]) {
          opacity: var(--simple-fields-disabled-opacity, 0.7);
          transition: opacity ease-in-out;
        }
        .field[readonly],
        .field[disabled],
        :host([readonly]) ::slotted([slot="field"]),
        :host([disabled]) ::slotted([slot="field"]) {
          cursor: not-allowed;
        }
        .border-bottom {
          height: 0;
        }
        :host([type="checkbox"]) .border-bottom,
        :host([type="color"]) .border-bottom,
        :host([type="file"]) .border-bottom,
        :host([type="radio"]) .border-bottom,
        :host([type="range"]) .border-bottom {
          display: none;
        }
        :host([disabled]) .border-bottom {
          border-bottom: 1px dashed var(--simple-fields-border-color, #999);
        }
        .border-bottom.blur {
          border-bottom: 1px solid var(--simple-fields-border-color, #999);
          width: 100%;
        }
        .border-bottom.focus {
          margin: -1px auto 0;
          width: 0;
          border-bottom: 2px solid var(--simple-fields-accent-color, #3f51b5);
          transition: width 0.5s ease-in-out;
        }
        :host(:focus-within) .border-bottom.focus {
          width: 100%;
          transition: width 0.5s ease-in-out;
        }
      `]}render(){return t`
      ${this.fieldMainTemplate} ${this.fieldBottom}
    `}static get properties(){return{autovalidate:{type:Boolean},description:{type:String},disabled:{type:Boolean,reflect:!0},defaultErrorMessage:{type:String},defaultRequiredMessage:{type:String},error:{type:Boolean,reflect:!0},errorMessage:{type:String},hidden:{type:Boolean,reflect:!0},field:{type:Object},id:{type:String,reflect:!0},inline:{type:Boolean,reflect:!0},label:{type:String},name:{type:String,reflect:!0},prefix:{type:String},readonly:{type:Boolean,reflect:!0},required:{type:Boolean,reflect:!0},suffix:{type:String},value:{reflect:!0},type:{type:String,reflect:!0},validTypes:{type:Array}}}constructor(){super(),this.autovalidate=!1,this.disabled=!1,this.hidden=!1,this.error=!1,this.inline=!1,this.validTypes=["checkbox","color","date","datetime-local","email","file","hidden","month","number","password","radio","range","search","select","tel","text","textarea","time","url","week"],this._observeAndListen(),this.addEventListener("click",e=>this.focus())}disconnectedCallback(){this.removeEventListener("click",e=>this.focus()),super.disconnectedCallback()}autoGrow(e){e||(this._updateCount(),e&&(e.style.height="auto",e.style.height=`${e.scrollHeight}px`,e.style.overflowY="hidden"))}firstUpdated(){this._updateField()}updated(e){let t=!1;e.forEach((e,i)=>{"error"===i&&this.error!==e&&(t=!0),"errorMessage"===i&&this.errorMessage!==e&&(t=!0),"error"===i&&this.field&&this.field.setAttribute("aria-invalid",this.error?"true":"false")}),t&&this._fireErrorChanged()}get descriptionTemplate(){return t`
      <div id="description">
        <slot name="description"></slot>
        ${this.description}
      </div>
    `}get errorTemplate(){return t`
      <div id="error-message" ?hidden="${!this.error}" role="alert">
        ${this.errorMessage}
      </div>
    `}get fieldBottom(){return t`
      <div class="border-bottom blur"></div>
      <div class="border-bottom focus"></div>
      <div id="field-bottom">
        <div id="error-desc">
          ${this.descriptionTemplate} ${this.errorTemplate}
        </div>
        ${this.fieldMeta}
      </div>
    `}get fieldElementTag(){return"select"===this.type?"select":"textarea"===this.type?"textarea":this.hasFieldSet?"fieldset":"input"}get fieldId(){return`${this.id||"field"}.input`}get fieldMainTemplate(){return t`
      <div
        class="${this.inline||["checkbox","color","radio"].includes(this.type||"text")?"field-main inline":"field-main"}"
      >
        ${this.labelTemplate}
        <div>
          ${this.prefixTemplate}
          <slot name="field"></slot>
          ${this.suffixTemplate}
        </div>
      </div>
    `}get fieldMeta(){return t`
      <div id="fieldmeta" aria-live="polite">
        <slot name="field-meta"></slot>
      </div>
    `}get labelTemplate(){return t`
      <label for="${this.fieldId}" class="label-main">
        <slot name="label"></slot>
        ${this.label}${this.error||this.required?"*":""}
      </label>
    `}get numeric(){return["date","month","week","time","datetime-local","number","range"].includes(this.type)}get prefixTemplate(){return t`
      <slot name="prefix"></slot>
      ${this.prefix}
    `}get slottedFieldObserver(){return new MutationObserver(this._updateField)}get suffixTemplate(){return t`
      <slot name="suffix"></slot>
      ${this.suffix}
    `}focus(){this.field&&this.field.focus()}select(){!this.field||"text"!==this.type&&"textarea"!==this.type||this.field.select()}setRangeText(e,t,i,s){!this.field||"text"!==this.type&&"textarea"!==this.type||this.field.setRangeText(e,t,i,s)}setSelectionRange(e,t,i){!this.field||"text"!==this.type&&"textarea"!==this.type||this.field.setSelectionRange(e,t,i)}stepDown(e=1){this.field&&this.numeric&&this.field.stepDown()}stepUp(e=1){this.field&&this.numeric&&this.field.stepUp()}validate(){let e=this.field.value,t=this.field.pattern,i=!(e||!this.required)&&(this.defaultRequiredMessage||this.defaultErrorMessage),s=!(""===t||!e||e.match(t))&&this.defaultErrorMessage;this.errorMessage=i||s,this.error=!1!==this.errorMessage}_fireErrorChanged(){this.dispatchEvent(new CustomEvent("error-changed",{bubbles:!0,cancelable:!0,composed:!0,detail:this}))}_getValidType(e){return"datetime"===e&&this.validTypes.includes(e)?"datetime-local":this.validTypes.includes(e)?e:"text"}_observeAndListen(e=!0){e?(this.slottedFieldObserver.observe(this,{attributeFilter:["disabled","readonly","required","slot"],childlist:!0}),this._updateField(),this.addEventListener("click",this.focus),this.addEventListener("focusout",this._onFocusout),this.addEventListener("focusin",this._onFocusin)):(this.slottedFieldObserver.disconnect(),this.removeEventListener("click",this.focus),this.removeEventListener("focusout",this._onFocusout),this.removeEventListener("focusin",this._onFocusin))}_onFocusin(){this.error=!1}_onFocusout(){this.autovalidate&&this.validate()}_updateField(){if(this.field=this.querySelector&&this.querySelector("[slot=field]")?this.querySelector("[slot=field]"):void 0,this.id=`${this.fieldId||""}-wrapper`,this.field){let e=this.field.tagName.toLowerCase(),t=this.field.type||this.field.getAttribute("type")||"text";this.type=this._getValidType("input"===e?t:e),this.required=this.field.required,this.disabled=this.field.disabled,this.readonly=this.field.readonly,this.field.setAttribute("aria-describedby","field-bottom")}else this.disabled=!1,this.readonly=!1,this.required=!1,this.type=void 0}}window.customElements.define(SimpleFieldsContainer.tag,SimpleFieldsContainer);export{SimpleFieldsContainer};