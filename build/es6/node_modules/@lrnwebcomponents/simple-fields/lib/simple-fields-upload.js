import{html as e,css as o,LitElement as i}from"../../../lit/index.js";import"./simple-fields-field.js";import{SimpleFieldsButtonStyles as t}from"./simple-fields-ui.js";import{SimpleFieldsFieldsetBehaviors as a}from"./simple-fields-fieldset.js";import"../../simple-icon/lib/simple-icon-lite.js";import"../../simple-icon/lib/simple-icons.js";import"../../simple-toolbar/simple-toolbar.js";import"../../simple-toolbar/lib/simple-toolbar-button.js";import"../../../@vaadin/vaadin-upload/vaadin-upload.js";class SimpleFieldsUpload extends(a(i)){static get tag(){return"simple-fields-upload"}static get styles(){return[...super.styles,...t,o`
        :host {
          pointer-events: all;
          overflow: visible;
          transition: 0.3s all ease;
          --simple-login-camera-aspect: 1.777777777777;
          --simple-camera-snap-color: var(--simple-fields-color, currentColor);
          --simple-camera-snap-background: var(
            --simple-fields-background-color,
            unset
          );
          --simple-camera-snap-border-radius: 2px;
          --lumo-font-family: var(--simple-fields-font-family, sans-serif);
          --lumo-error-color: var(--simple-fields-error-color, #b40000);
          --lumo-primary-font-color: var(--simple-fields-color, currentColor);
          --lumo-base-color: var(--simple-fields-background-color, transparent);
        }
        fieldset {
          padding: 0px;
          max-width: 100%;
        }
        #url-browse {
          width: 100%;
          font-family: var(--simple-fields-button-font-family, sans-serif);
          font-size: var(--simple-fields-button-font-size, 14px);
        }
        vaadin-upload::part(drop-label) {
          display: flex;
          align-items: center;
          flex-wrap: wrap;
          justify-content: center;
        }
        div[slot="drop-label"] {
          display: flex;
          align-items: center;
          justify-content: center;
          flex-wrap: wrap;
        }
        div[slot="drop-label"] > * {
          flex: 0 1 auto;
        }
        #url {
          flex: 1 1 100%;
          margin-bottom: var(--simple-fields-margin-small, 8px);
        }
        simple-toolbar-button {
          font-family: var(--simple-fields-font-family, sans-serif);
          color: var(--simple-fields-color, currentColor);
          margin: calc(0.5 * var(--simple-fields-margin-small, 8px));
        }
        #drop,
        #photo {
          white-space: nowrap;
        }
        #upload-options {
          position: relative;
          transition: height 0.3s linear;
        }
        #cancel-camera {
          position: absolute;
          right: 0;
          top: 0;
          z-index: 2;
          --simple-fields-button-padding-sm: 0;
        }
        #cancel-camera::part(button) {
        }
        vaadin-upload {
          padding: var(--simple-fields-margin-small, 8px);
          position: relative;
          overflow: visible;
          border: none !important;
        }
        vaadin-upload::part(drop-label) {
          font-family: var(--simple-fields-font-family, sans-serif);
          color: var(--simple-fields-color, currentColor);
          display: flex;
          align-items: center;
          justify-content: center;
          padding: 0;
          width: 100%;
          margin-top: -16px;
        }
        vaadin-upload::part(drop-label-icon) {
          display: none;
        }
        vaadin-upload.option-selfie::part(drop-label) {
          display: block;
        }
        vaadin-upload[dragover] {
          border-color: var(
            --simple-fields-secondary-accent-color,
            var(--simple-colors-default-theme-accent-3, #77e2ff)
          );
        }
        vaadin-upload-file {
          --disabled-text-color: #var(--simple-fields-border-color, #999);
        }
        simple-camera-snap {
          --simple-camera-snap-button-container-bottom: 2px;
          --simple-camera-snap-button-container-z-index: 5;
          --simple-camera-snap-button-border-radius: 100%;
          --simple-camera-snap-button-opacity: 0.7;
        }
      `]}constructor(){super(),this.autocomplete="off",this.noCamera=!1,this.noVoiceRecord=!0}render(){return e`
      <fieldset part="fieldset">${this.legend} ${this.fields}</fieldset>
    `}get fields(){return e`
      <div id="url-browse"></div>
      <div id="upload-options">
        <vaadin-upload
          capture
          class="option-${this.option}"
          form-data-name="file-upload"
          id="fileupload"
          @upload-before="${this._fileAboutToUpload}"
          @upload-response="${this._fileUploadResponse}"
          part="upload"
        >
          <button id="add-hidden" slot="add-button" hidden></button>
          <div
            slot="drop-label"
            part="browse-area"
            ?hidden="${"selfie"==this.option||"audio"==this.option}"
          >
            <simple-fields-field
              id="url"
              ?autofocus="${this.autofocus}"
              autocomplete="${this.autocomplete}"
              value="${this.value||""}"
              @value-changed="${this.valueChanged}"
              label="URL"
              .description="${this.description}"
              type="url"
              auto-validate=""
              part="url"
              @click="${e=>e.preventDefault()}"
              @mousedown="${e=>e.preventDefault()}"
              @focus="${e=>e.preventDefault()}"
            >
            </simple-fields-field>
            <simple-toolbar-button
              id="browse"
              label="Browse..."
              show-text-label
              @click="${this._handleBrowse}"
              controls="fieldset"
              part="browse"
            >
            </simple-toolbar-button>
            <simple-toolbar-button
              icon="image:camera-alt"
              label="Take photo"
              show-text-label
              @mousedown="${e=>e.preventDefault()}"
              @focus="${e=>e.preventDefault()}"
              @click="${this._handleCameraOption}"
              controls="fieldset"
              part="take-photo"
              ?hidden="${!navigator.mediaDevices||this.noCamera}"
            >
            </simple-toolbar-button>
            <simple-toolbar-button
              icon="image:camera-alt"
              label="Record Audio"
              show-text-label
              @mousedown="${e=>e.preventDefault()}"
              @focus="${e=>e.preventDefault()}"
              @click="${this._handleAudioOption}"
              controls="fieldset"
              part="record-audio"
              ?hidden="${!navigator.mediaDevices||this.noVoiceRecord}"
            >
            </simple-toolbar-button>
            <span id="drop" part="drop-area-text">
              <simple-icon-lite
                icon="file-upload"
                part="drop-area-icon"
              ></simple-icon-lite>
              or drop media here
            </span>
          </div>
          <simple-toolbar-button
            id="cancel-camera"
            icon="icons:clear"
            label="Cancel"
            @mousedown="${e=>e.preventDefault()}"
            @focus="${e=>e.preventDefault()}"
            @click="${this._handleCancel}"
            controls="fieldset"
            slot="drop-label"
            part="cancel-media"
            ?hidden="${"selfie"!==this.option&&"audio"!==this.option}"
          >
          </simple-toolbar-button>
          <div
            id="camerahole"
            ?hidden="${"selfie"!==this.option}"
            part="camera"
            slot="drop-label"
            part="camera-preview"
          ></div>
          <div
            id="voicerecorder"
            ?hidden="${"audio"!==this.option}"
            slot="drop-label"
            part="voice-preview"
          ></div>
        </vaadin-upload>
      </div>
    `}_handleCameraOption(e){e.preventDefault(),this.option="selfie",this._takeSelfie(e)}_handleAudioOption(e){e.preventDefault(),this.option="voice",this._voiceRecorder(e)}_handleCancel(e){e.preventDefault(),this.option="fileupload"}_handleBrowse(e){e.preventDefault(),this.shadowRoot.querySelector("#add-hidden").dispatchEvent(new CustomEvent("click",e))}valueChanged(e){this.value=e.detail.value}updated(e){super.updated&&super.updated(e),e.forEach(((e,o)=>{"value"==o&&this.dispatchEvent(new CustomEvent("value-changed",{detail:{value:this[o]}}))})),this.field&&this.__delayedFocus&&this.focus()}static get properties(){return{...super.properties,accept:{type:String},autocomplete:{type:String},autofocus:{type:Boolean},value:{type:String},option:{type:String},noCamera:{type:Boolean,attribute:"no-camera"},noVoiceRecord:{type:Boolean,attribute:"no-voice-record"}}}get field(){if(this.shadowRoot)return"selfie"==this.option&&this.shadowRoot.querySelector("#cancel")||"audio"==this.option&&this.shadowRoot.querySelector("#cancel")?this.shadowRoot.querySelector("#cancel"):!!this.shadowRoot.querySelector("#url")&&this.shadowRoot.querySelector("#url")}focus(){this.field?(this.field.focus(),this.__delayedFocus=!1):this.__delayedFocus=!0}_fileAboutToUpload(e){this.dispatchEvent(new CustomEvent("upload-before",{bubbles:!0,cancelable:!0,composed:!1,detail:e.detail}))}_fileUploadResponse(e){this.shadowRoot.querySelector("#url").value=item.url,this.dispatchEvent(new CustomEvent("upload-response",{bubbles:!0,cancelable:!0,composed:!1,detail:e.detail}))}firstUpdated(e){super.firstUpdated&&super.firstUpdated(e),this.value?this.option="url":this.option="fileupload"}__newPhotoShowedUp(e){let o=new File([e.detail.raw],"headshot"+e.timeStamp+".jpg");this.shadowRoot.querySelector("#fileupload")._addFile(o)}__newAudioShowedUp(e){let o=new File([e.detail.value],"voice-memo"+e.timeStamp+".mp3");this.shadowRoot.querySelector("#fileupload")._addFile(o)}_takeSelfie(e){this.camera||(import("../../simple-login/lib/simple-camera-snap.js"),this.camera=document.createElement("simple-camera-snap"),this.camera.autoplay=!0,this.camera.addEventListener("simple-camera-snap-image",this.__newPhotoShowedUp.bind(this)),this.shadowRoot.querySelector("#camerahole").appendChild(this.camera))}_voiceRecorder(e){this.voice||(import("../../voice-recorder/voice-recorder.js"),this.voice=document.createElement("voice-recorder"),this.voice.addEventListener("voice-recorder-recording",this.__newAudioShowedUp.bind(this)),this.shadowRoot.querySelector("#voicerecorder").appendChild(this.voice))}_resolveObjectPath(e,o){return e.split(".").reduce((function(e,o){return e?e[o]:null}),o||self)}}window.customElements.define(SimpleFieldsUpload.tag,SimpleFieldsUpload);export{SimpleFieldsUpload};