import{LitElement as e,html as t,css as i}from"../../../lit-element/lit-element.js";import{SimpleFieldsFieldset as o}from"./simple-fields-fieldset.js";import"../../../@polymer/paper-icon-button/paper-icon-button.js";import"../../../@polymer/iron-icons/iron-icons.js";import"../../simple-tooltip/simple-tooltip.js";class SimpleFieldsArrayItem extends o{static get styles(){return[i`
        :host {
          padding: 0 var(--simple-fields-margin-small, 8px);
          border-radius: var(--simple-fields-border-radius, 2px);
          display: block;
          border: none;
          transform: rotate(0deg);
          transition: all 0.5s ease;
        }
        :host([disabled]) {
          opacity: 0.5;
        }
        :host([aria-expanded="true"]) {
          padding: var(--simple-fields-margin, 16px)
            var(--simple-fields-margin-small, 8px);
          border: 1px solid var(--simple-fields-border-color-light, #ccc);
          transition: all 0.5s ease;
        }
        :host([error]) {
          border: 1px solid var(--simple-fields-error-color, #dd2c00);
          transition: border 0.5s ease;
        }
        :host(:focus-within) {
          border: 1px solid var(--simple-fields-border-color, #999);
          transition: border 0.5s ease;
          z-index: 2;
        }
        *[aria-controls="content"][disabled] {
          cursor: not-allowed;
        }
        #drag-handle {
          flex: 0 1 auto;
        }
        #preview {
          flex: 1 0 auto;
          margin: 0;
        }
        #heading,
        .heading-inner {
          display: flex;
          justify-content: space-between;
          align-items: center;
        }
        #content {
          overflow: hidden;
          max-height: 0;
        }
        :host #content-inner {
          display: flex;
          align-items: flex-end;
          justify-content: space-between;
          overflow: hidden;
          max-height: 0;
          transition: max-height 0.75s ease 0.1s;
        }
        :host([aria-expanded="true"]) #content {
          max-height: 20000vh;
          transition: max-height 0.75s ease 0.1s;
        }
        :host([aria-expanded="true"]) #content-inner {
          max-height: 20000vh;
        }
        #content-inner > * {
          flex: 1 1 auto;
        }
        #remove {
          flex: 0 0 auto;
          color: var(--simple-fields-error-color, #ac0000);
        }
        #expand {
          padding: var(--simple-fields-margin-small, 8px);
          transform: rotate(0deg);
          transition: transform 0.5s ease-in-out;
        }
        :host([aria-expanded="true"]) #expand {
          transform: rotate(-90deg);
          transition: transform 0.5s ease-in-out;
        }
        paper-icon-button,
        simple-tooltip {
          font-family: var(--simple-fields-detail-font-family, sans-serif);
          font-size: var(--simple-fields-detail-font-size, 12px);
          line-height: var(--simple-fields-detail-line-height, 22px);
        }
        ::slotted([slot="preview"]:first-of-type) {
          margin-top: 0;
        }
        ::slotted([slot="preview"]:last-of-type) {
          margin-bottom: 0;
        }
      `]}render(){return t`
      <div id="heading">
        <paper-icon-button
          id="drag-handle"
          controls="${this.id}"
          icon="open-with"
          label="Reorder this item"
          ?hidden="${!this.sortable}"
          ?disabled="${this.disabled}"
        >
        </paper-icon-button>
        <div id="preview"><slot name="preview"></slot></div>
        <paper-icon-button
          id="expand"
          controls="${this.id}"
          icon="expand-more"
          label="Toggle expand"
          @click="${this.toggle}"
        >
        </paper-icon-button>
      </div>
      <div id="content">
        <div id="content-inner">
          <div><slot></slot></div>
          </paper-icon-button>
          <paper-icon-button
            id="remove"
            controls="${this.id}"
            icon="delete"
            label="Remove this item"
            ?disabled="${this.disabled}"
            @click="${e=>this._handleRemove()}"
          >
          </paper-icon-button>
          <simple-tooltip for="remove">Remove this item</simple-tooltip>
        </div>
      </div>
    `}static get tag(){return"simple-fields-array-item"}static get properties(){return{expanded:{type:Boolean},disabled:{type:Boolean,reflect:!0,attribute:"disabled"},sortable:{type:Boolean,reflect:!0,attribute:"sortable"},preview:{type:Boolean},previewBy:{type:Array,reflect:!0,attribute:"preview-by"}}}constructor(){super(),this.disabled=!1,this.sortable=!1,this.previewBy=[]}connectedCallback(){super.connectedCallback(),setTimeout(()=>{this.dispatchEvent(new CustomEvent("added",{bubbles:!0,cancelable:!0,composed:!0,detail:this}))},0)}updated(e){e.forEach((e,t)=>{let i=this.getAttribute("aria-expanded");"error"===t&&this.setAttribute("aria-expanded",this.error||i)})}get slots(){let e={};return this.previewBy.forEach(t=>e[t]="preview"),e}toggle(){"true"===this.getAttribute("aria-expanded")?this.setAttribute("aria-expanded","false"):this.setAttribute("aria-expanded","true")}_handleCopy(){this.dispatchEvent(new CustomEvent("copy",{bubbles:!0,cancelable:!0,composed:!0,detail:this}))}_handleRemove(){this.dispatchEvent(new CustomEvent("remove",{bubbles:!0,cancelable:!0,composed:!0,detail:this}))}disconnectedCallback(){this.dispatchEvent(new CustomEvent("removed",{bubbles:!0,cancelable:!0,composed:!0,detail:this})),super.disconnectedCallback()}}window.customElements.define(SimpleFieldsArrayItem.tag,SimpleFieldsArrayItem);export{SimpleFieldsArrayItem};