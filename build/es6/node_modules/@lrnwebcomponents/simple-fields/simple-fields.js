import{html,PolymerElement}from"../../@polymer/polymer/polymer-element.js";import{HAXWiring}from"../hax-body-behaviors/lib/HAXWiring.js";import{MutableData}from"../../@polymer/polymer/lib/mixins/mutable-data.js";import"../../@polymer/paper-toggle-button/paper-toggle-button.js";import"../../@polymer/paper-button/paper-button.js";import"../../@polymer/paper-input/paper-textarea.js";import"../../@polymer/iron-icons/iron-icons.js";import"../eco-json-schema-form/eco-json-schema-form.js";import"../eco-json-schema-form/lib/eco-json-schema-object.js";import"../code-editor/code-editor.js";import"../../app-datepicker/app-datepicker.js";import"../simple-picker/simple-picker.js";import"../simple-icon-picker/simple-icon-picker.js";import"../simple-colors/lib/simple-colors-picker.js";import"../paper-input-flagged/paper-input-flagged.js";import"../simple-colors/simple-colors.js";class SimpleFields extends(MutableData(PolymerElement)){static get template(){return html`
      <style>
        :host {
          display: block;
          background-color: #ffffff;
          overflow: hidden;
        }

        :host([hidden]) {
          display: none;
        }

        eco-json-schema-object {
          width: 50%;
        }
        eco-json-schema-object {
          color: var(--hax-text-color);
          --eco-json-form-color: var(--hax-text-color);
          --eco-json-schema-object-form : {
            -ms-flex: unset;
            -webkit-flex: unset;
            flex: unset;
            -webkit-flex-basis: unset;
            flex-basis: unset;
          }
        }
        eco-json-schema-object .hax-code-editor {
          padding: 0;
        }
      </style>
      <eco-json-schema-object
        id="schemaobject"
        autofocus$="[[autofocus]]"
        hide-line-numbers$="[[hideLineNumbers]]"
        on-form-changed="_formChanged"
        schema="[[__validatedSchema]]"
        value="{{value}}"
      ></eco-json-schema-object>
    `}static get haxProperties(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"Simple fields",description:"Uses eco-json-form and HAX wiring to display a series of fields",icon:"icons:android",color:"green",groups:["Fields"],handles:[{type:"todo:read-the-docs-for-usage"}],meta:{author:"nikkimk",owner:"The Pennsylvania State University"}},settings:{quick:[],configure:[{property:"fields",description:"",inputMethod:"array",required:!1,icon:"icons:android"}],advanced:[]}}}static get properties(){let props={autofocus:{type:Boolean,value:!1},hideLineNumbers:{type:Boolean,value:!1},fields:{type:Array,value:[],observer:"_fieldsChanged"},value:{type:Object,notify:!0,value:{},reflectToAttribute:!0,observer:"_valueChanged"},__validatedSchema:{type:Array,value:{properties:{}}}};return super.properties&&(props=Object.assign(props,super.properties)),props}static get tag(){return"simple-fields"}connectedCallback(){super.connectedCallback(),this.HAXWiring=new HAXWiring,this.HAXWiring.setup(SimpleFields.haxProperties,SimpleFields.tag,this)}_formChanged(e){this.dispatchEvent(new CustomEvent("fields-changed",{bubbles:!0,cancelable:!0,composed:!0,detail:e.detail}))}_valueChanged(oldValue,newValue){JSON.stringify(oldValue)!==JSON.stringify(newValue)&&this._setValues()}_fieldsChanged(oldValue,newValue){JSON.stringify(oldValue)!==JSON.stringify(newValue)&&this._setValues()}_setValues(){let wiring=window.HAXWiring,schema=wiring._getHaxJSONSchemaProperty(this.fields,wiring);for(let prop in this.value)schema[prop]&&(schema[prop].value=this.value[prop]);this.__validatedSchema=null,this.__validatedSchema={properties:schema}}}window.customElements.define(SimpleFields.tag,SimpleFields);export{SimpleFields};