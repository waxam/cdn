import{LitElement as t,html as e,css as i}from"../../lit/index.js";class RandomImage extends t{static get styles(){return[i`
        :host {
          display: block;
        }
        .is-circle {
          border: 1px solid grey;
          border-radius: 50%;
          box-shadow: 0px 5px 10px #ccc;
        }
      `]}constructor(){super(),this.mode="",this.imagesList=[]}render(){return e`
      <img
        style="width:200px; height:200px;"
        class="${this.mode}"
        loading="lazy"
        src="${this._imgSrc}"
        title="${this._imgTitle}"
      />
    `}static get tag(){return"random-image"}static get properties(){return{mode:{type:String},_imgSrc:{type:String},_imgTitle:{type:String},imagesList:{type:Array,attribute:"images-list"}}}_pickRandomProperty(t){var e,i=0;for(var s in t)Math.random()<1/++i&&(e=s);return e}updated(t){t.forEach(((t,e)=>{if("imagesList"==e){let t=this._pickRandomProperty(this.imagesList);this._imgSrc=this.imagesList[t].path,this._imgTitle=this.imagesList[t].title}if(["imagesList","mode"].includes(e)){let t=`${e.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g,"$1-$2").toLowerCase()}-changed`;this.dispatchEvent(new CustomEvent(t,{detail:{value:this[e]}}))}}))}}window.customElements.define(RandomImage.tag,RandomImage);export{RandomImage};