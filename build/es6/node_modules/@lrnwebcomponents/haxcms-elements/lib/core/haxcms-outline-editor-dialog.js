import{html,Polymer}from"../../../../@polymer/polymer/polymer-legacy.js";import*as async from"../../../../@polymer/polymer/lib/utils/async.js";import"../../../../@polymer/paper-button/paper-button.js";import"../../../../@polymer/paper-dialog-scrollable/paper-dialog-scrollable.js";import"../../../json-editor/json-editor.js";import"../../../editable-outline/editable-outline.js";Polymer({_template:html`
    <style>
      :host {
        display: block;
        height: 60vh;
        width: 60vw;
      }
      .buttons {
        position: absolute;
        bottom: 0;
        z-index: 1000000;
        background-color: var(--simple-modal-titlebar-background, #ddd);
        left: 0;
        right: 0;
      }
      paper-dialog-scrollable {
        padding-bottom: 32px;
      }
    </style>
    <paper-dialog-scrollable>
      <paper-button id="toggle" on-tap="toggleView">[[viewLabel]]</paper-button>
      <editable-outline
        id="outline"
        edit-mode
        hidden$="[[viewMode]]"
        items="[[manifest.items]]"
      ></editable-outline>
      <json-editor
        id="editor"
        label="Outline data"
        value="[[manifestItems]]"
        hidden$="[[!viewMode]]"
      ></json-editor>
    </paper-dialog-scrollable>
    <div class="buttons">
      <paper-button dialog-confirm on-tap="_saveTap">Save</paper-button>
      <paper-button dialog-dismiss>Cancel</paper-button>
    </div>
  `,is:"haxcms-outline-editor-dialog",properties:{opened:{type:Boolean,notify:!0},manifest:{type:Object},manifestItems:{type:String},viewLabel:{type:String,computed:"_getViewLabel(viewMode)"},viewMode:{type:Boolean,value:!1,observer:"_viewModeChanged"}},ready:function(){document.body.addEventListener("json-outline-schema-changed",this.__jsonOutlineSchemaChanged.bind(this));this.$.editor.addEventListener("current-data-changed",e=>{if(e.detail.value){let outline=window.JSONOutlineSchema.requestAvailability();this.set("manifest.items",e.detail.value);this.notifyPath("manifest.items.*");outline.items=e.detail.value;this.manifestItems=JSON.stringify(e.detail.value,null,2);this.$.outline.importJsonOutlineSchemaItems()}})},attached:function(){async.microTask.run(()=>{if(typeof window.cmsSiteEditor.jsonOutlineSchema!==typeof void 0){this.set("manifest",window.cmsSiteEditor.jsonOutlineSchema);this.notifyPath("manifest.*");this.manifestItems=JSON.stringify(this.manifest.items,null,2)}})},detached:function(){document.body.removeEventListener("json-outline-schema-changed",this.__jsonOutlineSchemaChanged.bind(this))},toggleView:function(){this.viewMode=!this.viewMode},_getViewLabel:function(mode){if(mode){return"Outline mode"}else{return"Developer mode"}},_viewModeChanged:function(newValue){if(!newValue){this.$.outline.importJsonOutlineSchemaItems()}else{const items=this.$.outline.exportJsonOutlineSchemaItems();this.set("manifest.items",[]);this.set("manifest.items",items);this.notifyPath("manifest.items");this.manifestItems=JSON.stringify(items,null,2)}},__jsonOutlineSchemaChanged:function(e){if(typeof e.detail.items!==typeof void 0){this.set("manifest",[]);this.set("manifest",e.detail);this.notifyPath("manifest.*");this.manifestItems=JSON.stringify(this.manifest.items,null,2);this.$.outline.importJsonOutlineSchemaItems()}},_saveTap:function(){const items=this.$.outline.exportJsonOutlineSchemaItems();this.set("manifest.items",[]);this.set("manifest.items",items);this.notifyPath("manifest.items");this.manifestItems=JSON.stringify(items,null,2);this.fire("haxcms-save-outline",items)}});