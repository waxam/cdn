import{LitElement as t,html as i,css as e,unsafeCSS as o}from"../../../../../lit/index.js";import"../../../../simple-icon/lib/simple-icon-button.js";import"../../../../simple-icon/lib/simple-icons.js";import"../../../../hax-iconset/lib/simple-hax-iconset.js";import"../../../../simple-tooltip/simple-tooltip.js";import{HAXCMSI18NMixin as s}from"./HAXCMSI18NMixin.js";import{HAXCMSThemeParts as n}from"./HAXCMSThemeParts.js";const r=new URL("../../../../app-hax/lib/assets/images/ButtonBGLM.svg",import.meta.url).href,l=new URL("../../../../app-hax/lib/assets/images/ButtonBGDM.svg",import.meta.url).href;export class HAXCMSButton extends(n(s(t))){constructor(){super(),this.icon="mdextra:hexagon-multiple",this.label="button",this.voiceCommand=""}static get properties(){return{...super.properties,icon:{type:String},label:{type:String},voiceCommand:{type:String},accentColor:{type:String,attribute:"accent-color"}}}static get styles(){return[...super.styles||[],e`
        :host {
          display: block;
        }
        simple-icon-button {
          --simple-icon-width: 24px;
          --simple-icon-height: 24px;
          border-radius: 50%;
          border: none;
          background-image: url('${o(r)}');
          background-color: var(--simple-colors-default-theme-accent-5, blue);
          color: var(--simple-colors-default-theme-accent-12, white);
          text-align: center;
          line-height: 40px;
          min-width: unset;
          padding: 0;
          width: 40px;
          height: 40px;
          transition: 0.2s all ease-in-out;
          position: relative;
          box-shadow: 0 8px 10px 1px rgba(0, 0, 0, 0.14),
            0 3px 14px 2px rgba(0, 0, 0, 0.12),
            0 5px 5px -3px rgba(0, 0, 0, 0.4);
        }
        simple-icon-button:hover,
        simple-icon-button:focus,
        simple-icon-button:active {
          opacity: .8;
        }
        :host([dark-mode]) simple-icon-button {
          background-image: url('${o(l)}');
        }
        simple-tooltip:not(:defined) {
          display: none !important;
        }
        simple-tooltip {
          font-family: 'Press Start 2P', sans-serif;
        }
      `]}HAXCMSFireButtonEvent(t,i,e){const o=new CustomEvent(t,{bubbles:!0,composed:!0,cancelable:!0,detail:{originalTarget:i,values:e}});this.dispatchEvent(o)}HAXCMSButtonClick(t){}renderButton(t,e){return i`
      <simple-icon-button
        .part="${this.editMode?"edit-mode-active":""}"
        tabindex="${this.editMode?"-1":""}"
        id="button"
        label="${t}"
        @click="${this.HAXCMSButtonClick}"
        ?dark="${!this.darkMode}"
        icon="${this.icon}"
        accent-color="${this.accentColor}"
        voice-command="${this.voiceCommand}"
      ></simple-icon-button>
      <simple-tooltip for="button" position="bottom" offset="14">
        ${e}
      </simple-tooltip>
    `}}