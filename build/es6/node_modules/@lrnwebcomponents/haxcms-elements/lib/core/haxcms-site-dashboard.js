/**
 * Copyright 2018 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement as t,html as o,css as e}from"../../../../lit-element/lit-element.js";import{store as i}from"./haxcms-site-store.js";import{varGet as a,varExists as s}from"../../../utils/utils.js";import{autorun as r,toJS as n}from"../../../../mobx/lib/mobx.module.js";import"../../../../@polymer/paper-button/paper-button.js";import"../../../../@polymer/paper-icon-button/paper-icon-button.js";import"../../../simple-tooltip/simple-tooltip.js";import"../../../../@polymer/iron-icons/iron-icons.js";import"../../../../@polymer/iron-icons/notification-icons.js";import"../../../simple-fields/lib/simple-fields-form.js";import"../../../portal-launcher/portal-launcher.js";import{HaxSchematizer as l,HaxElementizer as c}from"../../../hax-body-behaviors/lib/HAXFields.js";class HAXCMSSiteDashboard extends t{static get tag(){return"haxcms-site-dashboard"}constructor(){super(),this.manifest={},this.__disposer=[],r(t=>{this.jwt=n(i.jwt),this.__disposer.push(t)}),r(t=>{this.dashboardOpened=n(i.dashboardOpened),this.__disposer.push(t)}),r(t=>{this.manifest=n(i.manifest),this.__disposer.push(t)})}static get styles(){return[e`
        :host {
          z-index: 1;
          display: inline-block;
          vertical-align: top;
          position: fixed;
          height: 100vh;
          width: 50vw;
          margin-left: -50vw;
          border-right: 2px solid #17271f;
          overflow: scroll;
          background-color: var(--haxcms-dashboard-bg, #37474f);
        }
        :host([dashboard-opened]) {
          margin-left: 0;
        }
        #homebutton {
          display: inline-block;
          vertical-align: top;
          margin-top: 4px;
        }
        #homebutton paper-icon-button {
          color: #ffffff;
          --paper-icon-button-ink-color: var(--haxcms-color, #ffffff);
          background-color: #000000;
          height: 48px;
          width: 48px;
          padding: 8px;
          border-radius: 50%;
        }
        #homebutton paper-icon-button:hover,
        #homebutton paper-icon-button:active,
        #homebutton paper-icon-button:focus {
          background-color: var(--haxcms-color, #ffffff);
        }
        .buttons {
          border: 1px solid #aaaaaa;
          background-color: var(--simple-modal-titlebar-background, #000000);
          color: var(--simple-modal-titlebar-color, #ffffff);
          position: absolute;
          bottom: 0;
          left: 0;
          right: 0;
          display: flex;
        }
        .buttons paper-button {
          color: #ffffff;
          background-color: #000000;
          font-weight: bold;
          text-transform: none;
          border-radius: 0;
          border: none;
          border-right: 1px solid white;
          margin: 0;
        }
        #save {
          background-color: var(--haxcms-system-action-color);
        }
        #cancel {
          background-color: var(--haxcms-system-danger-color);
        }
        #save:active,
        #save:focus,
        #save:hover,
        #cancel:active,
        #cancel:focus,
        #cancel:hover {
          background-color: var(--haxcms-color);
        }
        .buttons paper-button:active,
        .buttons paper-button:focus,
        .buttons paper-button:hover {
          color: #ffffff;
        }
        .title {
          color: white;
          font-size: 24px;
          margin: 0 0 0 16px;
          padding: 0;
          display: inline-flex;
        }
        @media screen and (max-width: 600px) {
          :host {
            width: 90vw;
            margin-left: -90vw;
          }
          .title {
            font-size: 14px;
            margin: 0;
          }
          .toptext {
            font-size: 11px;
          }
          #homebutton paper-icon-button {
            height: 36px;
            width: 36px;
            padding: 4px;
          }
        }
        paper-button {
          background-color: white;
          color: black;
        }
        .publishlink {
          color: white;
        }
        .title-wrapper {
          padding: 0 16px;
        }
        .toptext {
          padding: 0;
          margin: 0;
          font-size: 12px;
          font-style: italic;
          display: inline-flex;
        }
        .fields-wrapper {
          height: auto;
          background-color: white;
        }
        #siteform {
          --a11y-tabs-height: 80vh;
          --a11y-tabs-tab-height: 75vh;
          --a11y-tabs-tab-overflow: scroll;
          --primary-color: var(--haxcms-color, #000000);
          --paper-input-container-focus-color: var(--haxcms-color, #000000);
          --lumo-primary-text-color: var(--haxcms-color, #000000);
          --a11y-tabs-color: var(--haxcms-color, #000000);
          --a11y-tabs-focus-color: var(--haxcms-color, #000000);
        }
      `]}render(){return o`
      <div class="title-wrapper">
        <portal-launcher>
          <a href="../../" tabindex="-1" id="homebutton"
            ><paper-icon-button
              icon="icons:home"
              title="Back to site list"
            ></paper-icon-button
          ></a>
        </portal-launcher>
        <simple-tooltip for="homebutton" offset="14" position="bottom">
          Back to site list
        </simple-tooltip>
        <h2 class="title">${this.manifest.title} settings</h2>
        ${s(this.manifest,"metadata.site.static.publishedLocation")?o`
              <span class="toptext">
                <a
                  class="publishlink"
                  href="${a(this.manifest,"metadata.site.static.publishedLocation","#")}"
                  rel="noopener noreferrer"
                  target="_blank"
                  >Published version
                </a>
              </span>
            `:""}
      </div>
      <div class="fields-wrapper">
        <simple-fields-form
          id="siteform"
          autoload
          .headers="${this.headers}"
          .body="${this.body}"
          .schematizer="${l}"
          .elementizer="${c}"
          load-endpoint="${this.loadEndpoint}"
          method="${this.method}"
        ></simple-fields-form>
      </div>
      <div class="buttons">
        <paper-button
          title="Save site settings"
          id="save"
          @click="${this._saveSiteFieldsTap}"
          ><iron-icon icon="icons:save"></iron-icon> Save settings</paper-button
        >
        <paper-button
          title="Cancel and close dashboard"
          id="cancel"
          @click="${this._cancel}"
          ><iron-icon icon="icons:cancel"></iron-icon> Cancel</paper-button
        >
      </div>
    `}static get properties(){return{dashboardOpened:{type:Boolean,reflect:!0,attribute:"dashboard-opened"},method:{type:String},jwt:{type:String},publishing:{type:Boolean},manifest:{type:Object}}}disconnectedCallback(){for(var t in this.__disposer)this.__disposer[t].dispose();super.disconnectedCallback()}updated(t){t.forEach((t,o)=>{"dashboardOpened"===o&&this.dashboardOpened&&(this.removeAttribute("aria-hidden"),this.removeAttribute("tabindex")),"dashboardOpened"!==o||this.dashboardOpened||(this.setAttribute("aria-hidden","aria-hidden"),this.setAttribute("tabindex","-1"))})}_saveSiteFieldsTap(t){window.dispatchEvent(new CustomEvent("haxcms-save-site-data",{bubbles:!0,composed:!0,cancelable:!0,detail:this.shadowRoot.querySelector("#siteform").submit()}))}_cancel(t){window.dispatchEvent(new CustomEvent("haxcms-load-site-dashboard",{bubbles:!0,composed:!0,cancelable:!1,detail:t.target}))}}window.customElements.define(HAXCMSSiteDashboard.tag,HAXCMSSiteDashboard);export{HAXCMSSiteDashboard};