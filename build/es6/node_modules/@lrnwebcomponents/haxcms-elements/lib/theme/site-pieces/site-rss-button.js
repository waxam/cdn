import{html,PolymerElement}from"../../../../../@polymer/polymer/polymer-element.js";import"../../../../../@polymer/paper-button/paper-button.js";import"../../../../../@polymer/iron-icon/iron-icon.js";import"../../../../../@polymer/iron-icons/communication-icons.js";class SiteRSSButton extends PolymerElement{static get tag(){return"site-rss-button"}static get template(){return html`
      <style>
        :host {
          display: block;
          font-size: 16px;
          color: var(--site-rss-color, #383f45);
        }
        paper-button {
          text-transform: unset;
          color: white;
          background-color: var(--site-rss-bg-color, #383f45);
          font-size: var(--site-rss-font-size, 13px);
          margin: 0;
        }
        paper-button:hover,
        paper-button:focus,
        paper-button:active {
          background-color: var(--site-rss-bg-active, #2d3237);
        }
      </style>
      <a
        tabindex="-1"
        href$="[[href]]"
        target="_blank"
        rel="noopener noreferrer"
      >
        <paper-button raised>
          <iron-icon icon="[[icon]]"></iron-icon> [[label]]
        </paper-button>
      </a>
    `}static get properties(){return{type:{type:String,value:"rss",observer:"_generateLink"}}}_generateLink(newValue){if(this._link){document.head.removeChild(this._link)}if(newValue){let link=document.createElement("link");link.rel="alternate";if("rss"===newValue){link.href="rss.xml";link.title="RSS feed";link.type="application/rss+xml";this.icon="communication:rss-feed"}else if("atom"===newValue){link.href="atom.xml";link.title="Atom feed";link.type="application/atom+xml";this.icon="communication:rss-feed"}this.label=link.title;this.href=link.href;document.head.appendChild(link);this._link=link}}}window.customElements.define(SiteRSSButton.tag,SiteRSSButton);export{SiteRSSButton};