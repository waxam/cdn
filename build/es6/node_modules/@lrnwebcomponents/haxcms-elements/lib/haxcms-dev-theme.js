import{html,Polymer}from"../../../@polymer/polymer/polymer-legacy.js";import{dom}from"../../../@polymer/polymer/lib/legacy/polymer.dom.js";import"../../../@polymer/paper-card/paper-card.js";import"../../../@polymer/paper-button/paper-button.js";import"../../../@polymer/iron-icons/iron-icons.js";import"../../../@polymer/iron-list/iron-list.js";import"../../schema-behaviors/schema-behaviors.js";import"../../simple-colors/simple-colors.js";import"./haxcms-theme-behavior.js";Polymer({is:"haxcms-dev-theme",_template:html`
    <style is="custom-style" include="simple-colors">
      :host {
        display: block;
        /* theme color which is dictated by the manifest */
        background-color: var(--haxcms-color, black);
      }
      iron-list {
        padding: 16px;
        margin: 0 auto;
        -webkit-box-sizing: border-box;
        -moz-box-sizing: border-box;
        box-sizing: border-box;
      }
      paper-card {
        width: 200px;
        color: black;
        background-color: white;
        padding: 8px;
        font-size: 10px;
      }
      /**
       * Hide the slotted content during edit mode. This must be here to work.
       */
      :host([edit-mode]) #slot {
        display: none;
      }
      .manifest,
      .activeitem {
        width: 48%;
        margin: 0;
        padding: 0;
        display: inline-block;
        vertical-align: text-top;
      }
    </style>
    <h1 style="margin:0;">HAXCMS DEVELOPMENT THEME</h1>
    <iron-list id="list" items="[[manifest.items]]" grid>
      <template>
        <div style="padding:16px;">
          <paper-card
            heading="[[item.title]]"
            image="[[item.metadata.image]]"
            elevation="1"
            animated-shadow="false"
          >
            <div class="card-content">
              <div>description: [[item.description]]</div>
              <div>location: [[item.location]]</div>
              <div>changed: [[item.metadata.updated]]</div>
            </div>
            <div class="card-actions">
              <paper-button data-id$="[[item.id]]"
                >Click to set activeItem</paper-button
              >
            </div>
          </paper-card>
        </div>
      </template>
    </iron-list>
    <div class="manifest">
      <h2>title: [[manifest.title]]</h2>
      <div>description: [[manifest.description]]</div>
      <div>icon: <iron-icon icon="[[manifest.metadata.icon]]"></iron-icon></div>
      <div>
        image:
        <img src$="[[manifest.metadata.image]]" height="200px" width="200px" />
      </div>
    </div>
    <div class="activeitem">
      <paper-button id="unset">Unset activeItem</paper-button>
      <h2>ACTIVE ITEM</h2>
      <div>[[activeItem.title]]</div>
      <div id="contentcontainer">
        <div id="slot"><slot></slot></div>
      </div>
    </div>
  `,behaviors:[SchemaBehaviors.Schema,HAXCMSBehaviors.Theme],properties:{},ready:function(){this.setupHAXTheme()},attached:function(){this.$.list.addEventListener("tap",this._itemTapped.bind(this));this.$.unset.addEventListener("tap",this._unsetTapped.bind(this))},detached:function(){this.setupHAXTheme(!1);this.$.list.removeEventListener("tap",this._itemTapped.bind(this));this.$.unset.removeEventListener("tap",this._unsetTapped.bind(this))},_itemTapped:function(e){var normalizedEvent=dom(e),local=normalizedEvent.localTarget,activeId=local.getAttribute("data-id");if("PAPER-BUTTON"===local.tagName&&typeof activeId!==typeof void 0){const item=this.manifest.items.filter(d=>{if(activeId===d.id){return d}}).pop();this.fire("json-outline-schema-active-item-changed",item);console.log(this.manifest);console.log(item)}},_unsetTapped:function(){this.fire("json-outline-schema-active-item-changed",{})}});