import{html,PolymerElement}from"../../../../../@polymer/polymer/polymer-element.js";import{pathFromUrl}from"../../../../../@polymer/polymer/lib/utils/resolve-url.js";import{dom}from"../../../../../@polymer/polymer/lib/legacy/polymer.dom.js";import{encapScript,findTagsInHTML,wipeSlot}from"../../../../hax-body/lib/haxutils.js";import{microTask}from"../../../../../@polymer/polymer/lib/utils/async.js";import{store}from"../../core/haxcms-site-store.js";import"../../../../../@polymer/iron-ajax/iron-ajax.js";import{autorun,toJS}from"../../../../../mobx/lib/mobx.module.js";class SiteRenderItem extends PolymerElement{static get tag(){return"site-render-item"}static get template(){return html`
      <style>
        :host {
          display: block;
        }
      </style>
      <iron-ajax
        id="content"
        url="[[location]]"
        handle-as="text"
        loading="{{loading}}"
        debounce-duration="250"
        last-response="{{itemContent}}"
      ></iron-ajax>
      <slot></slot>
    `}static get properties(){return{render:{type:Boolean,value:!1},itemId:{type:String},location:{type:String,computed:"_computeLocation(itemId, render)",observer:"locationChanged"},itemContent:{type:String,notify:!0,observer:"_itemContentChanged"}}}_computeLocation(itemId,render){if(itemId&&render){let item=store.findItem(itemId);return item.location+"?"+Math.floor(Date.now()/1e3)}}locationChanged(newValue){if(newValue){this.$.content.generateRequest()}}_itemContentChanged(newValue){if(newValue){var html=newValue;if(null!==html){html=encapScript(newValue);wipeSlot(this,"*");microTask.run(()=>{setTimeout(()=>{let frag=document.createRange().createContextualFragment(html);dom(this).appendChild(frag)},5)});if(this.manifest.metadata.dynamicElementLoader){let tagsFound=findTagsInHTML(html);const basePath=pathFromUrl(decodeURIComponent(import.meta.url));for(var i in tagsFound){const tagName=tagsFound[i];if(this.manifest.metadata.dynamicElementLoader[tagName]&&!window.customElements.get(tagName)){import(`${basePath}../../../../../${this.manifest.metadata.dynamicElementLoader[tagName]}`).then(()=>{}).catch(error=>{console.log(error)})}}}}}}connectedCallback(){super.connectedCallback();this.__disposer=[];autorun(reaction=>{this.manifest=toJS(store.manifest);this.__disposer.push(reaction)})}disconnectedCallback(){for(var i in this.__disposer){this.__disposer[i]}super.disconnectedCallback()}}window.customElements.define(SiteRenderItem.tag,SiteRenderItem);export{SiteRenderItem};