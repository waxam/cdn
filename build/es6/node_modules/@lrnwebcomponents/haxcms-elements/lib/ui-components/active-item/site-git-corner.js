import{LitElement as t,html as i,css as e}from"../../../../../lit-element/lit-element.js";import{store as r}from"../../core/haxcms-site-store.js";import{autorun as s,toJS as o}from"../../../../../mobx/lib/mobx.module.js";import{varGet as n}from"../../../../utils/utils.js";class SiteGitCorner extends t{static get tag(){return"site-git-corner"}static get styles(){return[e`
        :host {
          display: block;
          float: var(--site-git-corner-float);
        }
        :host([direction="right"]) {
          float: right;
        }
        :host([direction="left"]) {
          float: left;
        }
      `]}render(){return i`
      <git-corner
        alt="${this.alt}"
        source="${this.activeGitFileLink}"
      ></git-corner>
    `}constructor(){super(),this.alt="See page source",this.direction="right",this.activeGitFileLink="",this.__disposer=[],s(t=>{""==n(r.manifest,"metadata.site.git.publicRepoUrl","")||window.customElements.get("git-corner")||import("../../../../git-corner/git-corner.js"),this.__disposer.push(t)}),s(t=>{r.activeItem&&(this.activeGitFileLink=n(r.manifest,"metadata.site.git.publicRepoUrl","")+r.activeItem.location),this.__disposer.push(t)})}disconnectedCallback(){for(var t in this.__disposer)this.__disposer[t].dispose();super.disconnectedCallback()}static get properties(){return{activeGitFileLink:{type:String,attribute:"active-git-file-link"},direction:{type:String,reflect:!0},alt:{type:String}}}}window.customElements.define(SiteGitCorner.tag,SiteGitCorner);export{SiteGitCorner};