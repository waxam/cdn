import{html,PolymerElement}from"../../../../../@polymer/polymer/polymer-element.js";import{store}from"../../core/haxcms-site-store.js";import{afterNextRender}from"../../../../../@polymer/polymer/lib/utils/render-status.js";import{autorun,toJS}from"../../../../../mobx/lib/mobx.module.js";import"../../../../../@polymer/iron-icon/iron-icon.js";import"../../../../../@polymer/paper-tooltip/paper-tooltip.js";class ActiveWhenVisible extends PolymerElement{static get tag(){return"active-when-visible"}static get template(){return html`
      <style>
        :host {
          display: block;
        }
        a {
          height: 10px;
          width: 10px;
          float: left;
          pointer-events: none;
          background-color: transparent;
        }
      </style>
      <div>
        <a id="a" href$="[[_a]]" name$="#[[itemId]]" aria-hidden></a>
        <slot></slot>
      </div>
    `}static get properties(){return{itemId:{type:String},_a:{type:String},thresholds:{type:Array,value:[0,.25,.5,.75,1]},rootMargin:{type:String,value:"0px"},visibleLimit:{type:Number,value:.5,reflectToAttribute:!0},isVisible:{type:Boolean,value:!1,notify:!0}}}connectedCallback(){super.connectedCallback();afterNextRender(this,function(){this.observer=new IntersectionObserver(this.handleIntersectionCallback.bind(this),{root:document.rootElement,rootMargin:this.rootMargin,threshold:this.thresholds});this.observer.observe(this)})}disconnectedCallback(){super.disconnectedCallback()}handleIntersectionCallback(entries){for(let entry of entries){if((+entry.intersectionRatio).toFixed(2)>=this.visibleLimit){if(this.itemId){let item=store.findItem(this.itemId);this._a=item.location.replace("pages/","").replace("/index.html","");this.isVisible=!0;setTimeout(()=>{this.$.a.click()},25)}}}}}window.customElements.define(ActiveWhenVisible.tag,ActiveWhenVisible);export{ActiveWhenVisible};