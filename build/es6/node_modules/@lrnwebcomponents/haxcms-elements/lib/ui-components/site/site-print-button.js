import{html,PolymerElement}from"../../../../../@polymer/polymer/polymer-element.js";import{store}from"../../core/haxcms-site-store.js";import"../layout/site-footer.js";import"../../../../../@polymer/paper-icon-button/paper-icon-button.js";import"../../../../../@polymer/paper-tooltip/paper-tooltip.js";class SitePrintButton extends PolymerElement{static get tag(){return"site-print-button"}static get template(){return html`
      <style>
        :host {
          display: block;
          text-rendering: optimizelegibility;
          position: relative;
        }
        paper-icon-button {
          @apply --site-print-button-button;
        }
        paper-icon-button:hover,
        paper-icon-button:focus,
        paper-icon-button:active {
          @apply --site-print-button-button-hover;
        }
        paper-tooltip {
          @apply --site-print-button-tooltip;
        }
      </style>
      <paper-icon-button
        id="btn"
        icon="[[icon]]"
        on-click="print"
        title$="[[label]]"
      ></paper-icon-button>
      <paper-tooltip for="btn" position="[[position]]" offset="14">
        [[label]]
      </paper-tooltip>
    `}static get properties(){return{icon:{type:String,value:"icons:print"},label:{type:String},position:{type:String,value:"bottom"},type:{type:String,value:"page",observer:"_typeChanged"}}}_typeChanged(newValue){if(typeof this.label===typeof void 0){if("page"===newValue||"site"===newValue){this.label=`Print ${newValue}`}else{this.label=`Print outline`}}}async print(){const type=this.type;let content="";if("page"===type){content=`
      <h1>${store.activeItem.title}</h1>
      <div>${store.activeItemContent}</div>`}else if("parent"===type){const result=store.computeItems(1,100,store.activeId,"parent",store.routerManifest,!0);for(var i in result){content+=await fetch("pages/"+result[i].location+"/index.html").then(function(response){return response.text()}).then(function(response){let indent=result[i].indent+1;if(6<indent){indent=6}return`<h${indent}>${result[i].title}</h${indent}>
              ${response}`})}}else if("ancestor"===type){const result=store.computeItems(1,100,store.activeId,"ancestor",store.routerManifest,!0);for(var i in result){content+=await fetch("pages/"+result[i].location+"/index.html").then(function(response){return response.text()}).then(function(response){let indent=result[i].indent+1;if(6<indent){indent=6}return`<h${indent}>${result[i].title}</h${indent}>
              ${response}`})}}else if("site"===type){const result=store.routerManifest.items;for(var i in result){content+=await fetch("pages/"+result[i].location+"/index.html").then(function(response){return response.text()}).then(function(response){let indent=result[i].indent+1;if(6<indent){indent=6}return`<h${indent}>${result[i].title}</h${indent}>
              ${response}`})}}var currentdate=new Date,datetime="Printed on: "+currentdate.getDate()+"/"+(currentdate.getMonth()+1)+"/"+currentdate.getFullYear()+" at "+currentdate.getHours()+":"+currentdate.getMinutes()+":"+currentdate.getSeconds();let element=document.createElement("div");element.innerHTML=`
<style>
  @media print {
    body {
      padding: 0 15px 5px;
      color: #000;
      background-color: #ffffff;
      border-top: 1px solid #aaa;
    }
  }
</style>
<h1>${store.siteTitle}</h1>
<site-footer></site-footer>
<p>${datetime}</p>
${content}`;let print=window.open("","","left=0,top=0,width=800,height=800,toolbar=0,scrollbars=0,status =0");if(document.head.getElementsByTagName("base")){let base=document.createElement("base");base.href=document.head.getElementsByTagName("base")[0].getAttribute("href");print.document.head.appendChild(base)}print.document.body.appendChild(element);print.document.close();print.focus();print.print();print.close()}}window.customElements.define(SitePrintButton.tag,SitePrintButton);export{SitePrintButton};