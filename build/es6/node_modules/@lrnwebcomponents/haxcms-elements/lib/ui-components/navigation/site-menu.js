import{html,PolymerElement}from"../../../../../@polymer/polymer/polymer-element.js";import{store}from"../../core/haxcms-site-store.js";import{autorun,toJS}from"../../../../../mobx/lib/mobx.module.js";import"../../../../map-menu/map-menu.js";class SiteMenu extends PolymerElement{static get tag(){return"site-menu"}static get template(){return html`
      <style>
        :host {
          display: block;
          height: 100vh;
        }
        map-menu {
          @apply --site-menu;
          --map-menu-active-color: var(--site-menu-active-color);
          --map-menu-container: var(--site-menu-container);
          --map-menu-item-active-item: var(--site-menu-item-active-item);
        }

        map-menu::-webkit-scrollbar-track {
          -webkit-box-shadow: inset 0 0 4px
            var(--site-menu-scrolltrack-bg-color, rgba(56, 63, 69, 0.9));
          border-radius: 0;
          background-color: var(--site-menu-bg-color, #383f45);
        }
        map-menu::-webkit-scrollbar {
          width: 2px;
          background-color: var(--site-menu-bg-color, #383f45);
        }
        map-menu::-webkit-scrollbar-thumb {
          border-radius: 1px;
          -webkit-box-shadow: inset 0 0 4px var(--site-menu-bg-shadow, #747474);
          background-color: var(--site-menu-bg-color, #383f45);
        }
      </style>
      <map-menu
        id="menu"
        selected="[[activeId]]"
        manifest="[[routerManifest]]"
        active-indicator="[[!hideActiveIndicator]]"
        auto-scroll="[[!preventAutoScroll]]"
      ></map-menu>
    `}static get properties(){return{routerManifest:{type:Object},activeId:{type:String},hideActiveIndicator:{type:Boolean,value:!1},preventAutoScroll:{type:Boolean,value:!1}}}connectedCallback(){super.connectedCallback();this.__disposer=autorun(()=>{this.routerManifest=Object.assign({},toJS(store.routerManifest))});setTimeout(()=>{this.__disposer2=autorun(()=>{this.activeId=toJS(store.activeId)})},50);this.$.menu.addEventListener("active-item",this.mapMenuActiveChanged.bind(this))}disconnectedCallback(){super.disconnectedCallback();this.__disposer();if(this.__disposer2){this.__disposer2()}this.$.menu.removeEventListener("active-item",this.mapMenuActiveChanged.bind(this))}mapMenuActiveChanged(e){e.detail.trackIcon="icons:check";let userData=JSON.parse(window.localStorage.getItem("HAXCMSSystemData"));userData.manifests[this.routerManifest.id].accessData[e.detail.id]={timestamp:Math.floor(Date.now()/1e3),trackIcon:"icons:check"};for(var i in this.routerManifest.items){if(this.routerManifest.items[i].id===e.detail.id){this.routerManifest.items[i].metadata.accessData=userData.manifests[this.routerManifest.id].accessData[e.detail.id]}}window.localStorage.setItem("HAXCMSSystemData",JSON.stringify(userData))}}window.customElements.define(SiteMenu.tag,SiteMenu);export{SiteMenu};