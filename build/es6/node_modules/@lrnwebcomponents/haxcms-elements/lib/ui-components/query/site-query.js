import{html,PolymerElement}from"../../../../../@polymer/polymer/polymer-element.js";import{MutableData}from"../../../../../@polymer/polymer/lib/mixins/mutable-data.js";import{store}from"../../core/haxcms-site-store.js";import{autorun,toJS}from"../../../../../mobx/lib/mobx.module.js";class SiteQuery extends MutableData(PolymerElement){static get tag(){return"site-query"}static get properties(){return{routerManifest:{type:Object},activeId:{type:String},result:{type:Array,notify:!0},__result:{type:Array,computed:"_computeResult(conditions, sort, routerManifest.items, activeId, forceRebuild)",observer:"_noticeResultChange"},conditions:{type:Object,notify:!0,value:{}},sort:{type:Object,notify:!0,value:{}},forceRebuild:{type:Boolean,notify:!0,value:!1}}}_computeResult(conditions,sorts,realItems,activeId){let items=Object.assign([],toJS(realItems));if(conditions&&items){for(var i in conditions){items=items.filter(item=>{if("$activeId"===conditions[i]){if(item[i]!==activeId){return!1}return!0}else{if(item[i]!==conditions[i]){return!1}return!0}})}}if(sorts){for(var i in sorts){items.sort((item1,item2)=>{if("ASC"===sorts[i]){if(item1[i]<item2[i]){return-1}else if(item1[i]>item2[i]){return 1}else{return 0}}else{if(item1[i]>item2[i]){return-1}else if(item1[i]<item2[i]){return 1}else{return 0}}})}}return items}_noticeResultChange(newValue){this.set("result",newValue);this.notifyPath("result")}connectedCallback(){super.connectedCallback();this.__disposer=autorun(()=>{this.routerManifest=Object.assign({},toJS(store.routerManifest))});this.__disposer2=autorun(()=>{this.activeId=toJS(store.activeId)})}disconnectedCallback(){super.disconnectedCallback();this.__disposer();this.__disposer2()}}window.customElements.define(SiteQuery.tag,SiteQuery);export{SiteQuery};