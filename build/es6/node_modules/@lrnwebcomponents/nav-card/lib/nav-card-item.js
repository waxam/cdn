/**
 * Copyright 2020 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement as t,html as e,css as i}from"../../../lit-element/lit-element.js";import"../../../@polymer/iron-icon/iron-icon.js";import"../../../@polymer/iron-icons/iron-icons.js";import"../../lrndesign-avatar/lrndesign-avatar.js";class NavCardItem extends t{static get tag(){return"nav-card-item"}static get properties(){return{avatar:{type:String,attribute:"avatar"},icon:{type:String,attribute:"icon"},accentColor:{type:String,attribute:"accent-color"},dark:{type:Boolean,attribute:"dark"},initials:{type:String,attribute:"initials"}}}static get haxProperties(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"Nav card",description:"an accent card of link lists",icon:"av:playlist-play",color:"pink",groups:["Card","Nav","List"],handles:[{type:"todo:read-the-docs-for-usage"}],meta:{author:"nikkimk",owner:"The Pennsylvania State University"}},settings:{quick:[],configure:[{property:"accentColor",title:"Accent Color",description:"Select an accent color.",inputMethod:"colorpicker",required:!1},{property:"dark",title:"Dark",description:"Display the card as dark theme?",inputMethod:"boolean",required:!1},{property:"icon",title:"Icon",description:"Select an icon.",inputMethod:"iconpicker",required:!1},{property:"initials",title:"Initials",description:"Initials to display if there is no icon.",inputMethod:"textfield",required:!1},{property:"avatar",title:"Avatar Image",description:"Select an image",inputMethod:"haxupload",required:!1},{slot:"label",title:"Button or Link",inputMethod:"code-editor",required:!1},{slot:"description",title:"Additional description",inputMethod:"code-editor",required:!1}],advanced:[{property:"avatar",title:"Avatar Icon",description:"Select an icon.",inputMethod:"iconpicker",required:!1}]}}}static get styles(){return[i`
        :host {
          position: relative;
          display: flex;
          align-items: center;
          justify-content: space-between;
          text-decoration: none;
          padding: 5px 0;
          margin-bottom: 1px;
          color: var(--nav-card-item-color, unset);
          background-color: var(--nav-card-item-background-color, unset);
          border-bottom: var(
            --nav-card-linklist-border-bottom,
            1px solid var(--simple-colors-default-theme-grey-4, #666)
          );
        }
        :host(:last-of-type) {
          border-bottom: none;
        }
        :host([hidden]) {
          display: none;
        }
        :host div {
          flex: 1 1 auto;
        }
        ::slotted([slot="label"]:hover),
        ::slotted([slot="label"]:focus),
        :host(:hover) ::slotted([slot="label"]),
        :host(:focus-within) ::slotted([slot="label"]) {
          text-decoration: underline;
        }
        ::slotted(*) {
          display: block;
        }
        ::slotted([slot="label"]),
        ::slotted([slot="description"]) {
          color: inherit;
          font-family: inherit;
        }
        ::slotted([slot="label"]) {
          text-decoration: inherit;
          outline: none;
          border: none;
          padding: 0;
          text-align: left;
          color: var(--nav-card-item-color, unset);
          background-color: var(--nav-card-item-background-color, unset);
          font-size: var(--nav-card-item-label-font-size, inherit);
          font-weight: var(--nav-card-item-label-font-weight, bold);
        }
        ::slotted([slot="description"]) {
          font-size: var(--nav-card-item-label-font-size, 11px);
          font-weight: var(--nav-card-item-label-font-weight, normal);
        }
        ::slotted([slot="label"]):after {
          content: "";
          position: absolute;
          left: 0;
          top: 0;
          right: 0;
          bottom: 0;
        }
        ::slotted([slot="label"]:focus):after {
          outline: 1px solid blue;
        }
        lrndesign-avatar {
          margin-right: 10px;
          width: var(
            --nav-card-item-avatar-width,
            var(--nav-card-item-avatar-size, 36px)
          );
          height: var(
            --nav-card-item-avatar-height,
            var(--nav-card-item-avatar-size, 36px)
          );
          --lrndesign-avatar-width: var(
            --nav-card-item-avatar-width,
            var(--nav-card-item-avatar-size, 36px)
          );
          --lrndesign-avatar-height: var(
            --nav-card-item-avatar-height,
            var(--nav-card-item-avatar-size, 36px)
          );
        }
        iron-icon {
          margin-left: 10px;
          width: var(
            --nav-card-item-icon-width,
            var(--nav-card-item-icon-size, 24px)
          );
          height: var(
            --nav-card-item-icon-height,
            var(--nav-card-item-icon-size, 24px)
          );
          --lrndesign-icon-width: var(
            --nav-card-item-icon-width,
            var(--nav-card-item-icon-size, 24px)
          );
          --lrndesign-icon-height: var(
            --nav-card-item-icon-height,
            var(--nav-card-item-icon-size 24px)
          );
        }
      `]}render(){return e`
      ${this.avatar||this.initials?e`
            <lrndesign-avatar
              .accentColor="${this.accentColor||""}"
              ?dark="${this.dark}"
              .icon="${this.ico||""}"
              .src="${this.src||""}"
              .label="${this.label}"
              ?two-chars="${this.twoChars}"
            >
            </lrndesign-avatar>
          `:""}
      <div>
        <slot name="label"></slot>
        <slot name="description"></slot>
      </div>
      ${this.icon?e`
            <iron-icon icon="${this.icon}"></iron-icon>
          `:""}
    `}constructor(){super(),this.tag=NavCardItem.tag,this.accentColor="grey",this.dark=!1}get twoChars(){return this.label&&this.label.split(/\s*/).length>1}get label(){let t=this.initials&&this.initials.split(" ");return t&&t[0]?`${t[0][0]} ${t[1]?t[1][0]:t[0][1]||""}}`:this.initials}get ico(){return this.avatar&&this.avatar.indexOf(".")<0?this.avatar:""}get src(){return this.avatar&&this.avatar.indexOf(".")>-1?this.avatar:""}}customElements.define("nav-card-item",NavCardItem);export{NavCardItem};