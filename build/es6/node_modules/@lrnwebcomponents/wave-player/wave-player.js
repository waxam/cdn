/**
 * Copyright 2019 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement as e,html as t,css as i}from"../../lit/index.js";import{SchemaBehaviors as o}from"../schema-behaviors/schema-behaviors.js";import"../es-global-bridge/es-global-bridge.js";import"../simple-icon/simple-icon.js";import"../simple-icon/lib/simple-icons.js";import"../simple-icon/lib/simple-icon-button.js";class WavePlayer extends(o(e)){static get styles(){return[i`
        :host {
          height: 150px;
          background-color: var(--dark-primary-color);
          display: block;
        }

        simple-icon-button {
          position: absolute;
        }

        .title,
        .subtitle {
          transition: all 0.5s ease;
          padding: 10px 10px 10px 0;
          left: 160px;
          position: absolute;
        }

        .subtitle {
          bottom: 0;
        }

        .controls {
          height: 50px;
          width: 100%;
          top: 0;
          background: var(--accent-color);
          z-index: 20;
        }

        simple-icon-button.fab {
          transition: all 0.5s ease;
          top: -25px;
          z-index: 25;
          border-radius: 0;
        }

        .albuminfo {
          position: relative;
          transition: all 0.5s ease;
          top: -156px;
          margin-bottom: -150px;
          z-index: 20;
          height: 150px;
          background-color: rgba(0, 0, 0, 0.4);
          color: #fff;
          font-family: Roboto, sans-serif;
        }

        .albuminfoActive {
          top: -25;
          height: 25px;
          width: 100%;
          margin-bottom: -19px;
        }

        .waveContainer {
          top: -31px;
          transition: all 0.5s ease;
          background-color: var(--dark-primary-color);
          transform: scaleY(1.5);
        }

        .circleAnimation {
          border-radius: 50%;
          overflow: auto;
          -moz-box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.4);
          box-shadow: 0 2px 5px 0 rgba(0, 0, 0, 0.4);
        }

        .circleAnimation:active {
          -moz-box-shadow: 0 8px 17px 0 rgba(0, 0, 0, 0.2);
          box-shadow: 0 8px 17px 0 rgba(0, 0, 0, 0.2);
        }

        .playActive {
          top: 0;
          width: 100%;
          height: 50px;
        }

        .waveActive {
          top: 0px;
          transform: scaleY(1);
        }

        .centred,
        .titleActive {
          transform: scaleY(0);
        }

        .titleActive {
          opacity: 0;
        }

        #playbutton {
          transition: all 0.5s ease;
        }

        .coverart {
          transition: all 0.5s ease;
          width: 150px;
          height: 150px;
        }

        .title {
          font-size: 24px;
        }

        .coverartActive {
          width: 25px;
          height: 25px;
        }

        .nameActive {
          font-size: 19px;
          padding: 3px 3px 3px 0;
          left: 30px;
        }

        .centred {
          top: calc(50% - 20px);
          left: calc(50% - 20px);
          transition: all 0.3s ease;
        }

        .left,
        .middle,
        .right {
          transform: scale(1);
        }

        .left {
          left: calc(25% - 20px);
        }

        .right {
          left: calc(75% - 20px);
        }
        .hidden {
          display: none;
        }
        @media only screen and (max-width: 500px) {
          .albuminfo {
            width: 100%;
          }
        }
      `]}render(){return t`
      <simple-icon-button
        id="playbutton"
        class="circleAnimation fab"
        disabled=""
        icon="av:play-arrow"
        @click="${this.togglePlay}"
      ></simple-icon-button>
      <paper-material id="controls" class="controls hidden" elevation="2">
        <simple-icon-button
          class="centred middle"
          style="color: white;"
          icon="av:pause"
          @click="${this.togglePlay}"
        ></simple-icon-button>
        <simple-icon-button
          id="replay"
          class="centred"
          style="color: white;"
          icon="av:replay-30"
          @click="${this.throwBack}"
        ></simple-icon-button>
        <simple-icon-button
          id="mute"
          class="centred"
          style="color: white;"
          icon="av:volume-up"
          @click="${this.toggleMute}"
        ></simple-icon-button>
      </paper-material>
      <div id="container" class="waveContainer" elevation="0"></div>
      <div id="albuminfo" class="albuminfo">
        <img loading="lazy" class="coverart" src="${this.coverart}" />
        <span class="title">${this.title}</span>
        <span class="subtitle">${this.subtitle}</span>
      </div>
    `}static get tag(){return"wave-player"}updated(e){super.updated&&super.updated(e),e.forEach(((e,t)=>{if(["src","title","subtitle","coverart","lean","wavecolor","progresscolor"].includes(t)){let e=`${t.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g,"$1-$2").toLowerCase()}-changed`;this.dispatchEvent(new CustomEvent(e,{detail:{value:this[t]}}))}"src"==t&&this._srcChanged(this[t],e)}))}static get properties(){return{...super.properties,src:{type:String},title:{type:String},subtitle:{type:String},coverart:{type:String},wavesurfer:{type:Object},lean:{type:String},wavecolor:{type:String},progresscolor:{type:String},__ready:{type:Boolean}}}_srcChanged(e,t){void 0!==e&&this.__wavesurfer&&window.wavesurferobject.load(e)}constructor(){super(),this.title="",this.subtitle="",this.coverart="",this.__ready=!1,this.lean="left",this.wavecolor="#ffffff",this.progresscolor="#CFD8DC",setTimeout((()=>{import("../../@polymer/paper-material/paper-material.js")}),0);const e=`${new URL("./",import.meta.url).href}lib/wavesurferjs/dist/wavesurfer.js`;window.addEventListener("es-bridge-wavesurfer-loaded",this._wavesurferLoaded.bind(this)),window.ESGlobalBridge.requestAvailability().load("wavesurfer",e)}disconnectedCallback(){window.removeEventListener("es-bridge-wavesurfer-loaded",this._wavesurferLoaded.bind(this)),super.disconnectedCallback()}firstUpdated(e){if(super.firstUpdated&&super.firstUpdated(e),"right"===this.lean?(this.shadowRoot.querySelector("#playbutton").style.right="25",this.shadowRoot.querySelector("#controls").style.right="0"):(this.shadowRoot.querySelector("#playbutton").style.left="25",this.shadowRoot.querySelector("#controls").style.left="0"),""===this.name&&this.shadowRoot.querySelector("#albuminfo").classList.add("hidden"),""===this.coverart){const e=new URL("./",import.meta.url).href;this.coverart=`${e}lib/art.jpg`}this.__ready&&this.initWaveSurfer()}_wavesurferLoaded(){this.__wavesurfer=!0,window.removeEventListener("es-bridge-wavesurfer-loaded",this._wavesurferLoaded.bind(this)),this.__ready=!0}activateAnimation(){var e=this.shadowRoot.querySelector("#container"),t=this.shadowRoot.querySelector("#playbutton"),i=this.shadowRoot.querySelector("#controls"),o=this.shadowRoot.querySelector("#mute"),r=this.shadowRoot.querySelector("#replay"),s=this.shadowRoot.querySelector("#albuminfo"),a=s.querySelector(".coverart"),l=s.querySelector(".title"),c=s.querySelector(".subtitle");t.setAttribute("icon","av:pause"),t.classList.remove("circleAnimation"),t.classList.add("playActive"),s.classList.add("albuminfoActive"),a.classList.add("coverartActive"),l.classList.add("nameActive"),c.classList.add("titleActive"),"right"===this.lean?this.shadowRoot.querySelector("#playbutton").style.right="0":this.shadowRoot.querySelector("#playbutton").style.left="0",e.classList.add("waveActive"),setTimeout((function(){i.classList.remove("hidden"),t.classList.add("hidden")}),500),setTimeout((function(){o.classList.add("right"),r.classList.add("left")}),600)}deactivateAnimation(){var e=this,t=this.shadowRoot.querySelector("#container"),i=this.shadowRoot.querySelector("#playbutton"),o=this.shadowRoot.querySelector("#controls"),r=this.shadowRoot.querySelector("#mute"),s=this.shadowRoot.querySelector("#replay"),a=this.shadowRoot.querySelector("#albuminfo"),l=a.querySelector(".coverart"),c=a.querySelector(".title"),n=a.querySelector(".subtitle");r.classList.remove("right"),s.classList.remove("left"),setTimeout((function(){o.classList.add("hidden"),i.classList.remove("hidden")}),100),setTimeout((function(){i.setAttribute("icon","av:play-arrow"),i.classList.add("circleAnimation"),i.classList.remove("playActive"),a.classList.remove("albuminfoActive"),l.classList.remove("coverartActive"),c.classList.remove("nameActive"),n.classList.remove("titleActive"),"right"===e.lean?i.style.right="25":i.style.left="25",t.classList.remove("waveActive")}),200)}initWaveSurfer(){window.wavesurferobject=new WaveSurfer({container:this.shadowRoot.querySelector("#container"),waveColor:this.wavecolor,progressColor:this.progresscolor,fillParent:!0,height:100}),window.wavesurferobject.init(),void 0!==this.src&&window.wavesurferobject.load(this.src),window.wavesurferobject.on("ready",(()=>{this.shadowRoot.querySelector("#playbutton").removeAttribute("disabled")})),window.wavesurferobject.on("finish",(()=>{this.deactivateAnimation()}))}togglePlay(e){window.wavesurferobject.playPause(),"av:play-arrow"===this.shadowRoot.querySelector("#playbutton").getAttribute("icon")?this.activateAnimation():this.deactivateAnimation()}toggleMute(e){var t=this.shadowRoot.querySelector("#mute"),i=t.getAttribute("icon");window.wavesurferobject.toggleMute(),"av:volume-up"===i?t.setAttribute("icon","av:volume-off"):t.setAttribute("icon","av:volume-up")}throwBack(e){window.wavesurferobject.skipBackward(30)}static get haxProperties(){return{canScale:!0,canPosition:!0,canEditSource:!0,gizmo:{title:"Audio player",description:"Audio that is just like spotify.",icon:"av:play-circle-filled",color:"purple",groups:["Audio","Media"],handles:[{type:"audio",source:"src",title:"title",caption:"subtitle"}],meta:{author:"ELMS:LN"}},settings:{configure:[{property:"src",title:"Source",description:"The URL for this video.",inputMethod:"textfield",icon:"link",required:!0,validationType:"url"},{property:"title",title:"Title",description:"A simple title",inputMethod:"textfield",icon:"av:video-label",required:!1,validationType:"text"}],advanced:[]}}}}window.customElements.define(WavePlayer.tag,WavePlayer);export{WavePlayer};