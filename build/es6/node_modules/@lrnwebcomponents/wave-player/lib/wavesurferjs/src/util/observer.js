export default class Observer{constructor(){this.handlers=null}on(s,n){this.handlers||(this.handlers={});let t=this.handlers[s];return t||(t=this.handlers[s]=[]),t.push(n),{name:s,callback:n,un:(s,n)=>this.un(s,n)}}un(s,n){if(!this.handlers)return;const t=this.handlers[s];let e;if(t)if(n)for(e=t.length-1;e>=0;e--)t[e]==n&&t.splice(e,1);else t.length=0}unAll(){this.handlers=null}once(s,n){const fn=(...t)=>{n.apply(this,t),setTimeout((()=>{this.un(s,fn)}),0)};return this.on(s,fn)}fireEvent(s,...n){if(!this.handlers)return;const t=this.handlers[s];t&&t.forEach((s=>{s(...n)}))}}