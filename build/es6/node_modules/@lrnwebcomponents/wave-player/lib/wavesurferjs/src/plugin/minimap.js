export default class MinimapPlugin{static create(e){return{name:"minimap",deferInit:!(!e||!e.deferInit)&&e.deferInit,params:e,staticProps:{initMinimap(i){console.warn("Deprecated initMinimap!"),e=i,this.initPlugins("minimap")}},instance:MinimapPlugin}}constructor(e,i){if(this.params=i.util.extend({},i.params,{showRegions:!1,showOverview:!1,overviewBorderColor:"green",overviewBorderSize:2,container:!1,height:Math.max(Math.round(i.params.height/4),20)},e,{scrollParent:!1,fillParent:!0}),"string"==typeof e.container){const i=document.querySelector(e.container);i||console.warn(`Wavesurfer minimap container ${e.container} was not found! The minimap will be automatically appended below the waveform.`),this.params.container=i}e.container||(this.params.container=i.util.style(document.createElement("minimap"),{display:"block"})),this.drawer=new i.Drawer(this.params.container,this.params),this.wavesurfer=i,this.util=i.util,this.renderEvent="MediaElement"===i.params.backend?"waveform-ready":"ready",this.overviewRegion=null,this.drawer.createWrapper(),this.createElements();let r=!1;this._onShouldRender=()=>{r||(this.bindWavesurferEvents(),this.bindMinimapEvents(),r=!0),document.body.contains(this.params.container)||i.container.insertBefore(this.params.container,null),this.wavesurfer.regions&&this.params.showRegions&&this.regions(),this.render()},this._onAudioprocess=e=>{this.drawer.progress(this.wavesurfer.backend.getPlayedPercents())},this._onSeek=()=>this.drawer.progress(i.backend.getPlayedPercents()),this._onScroll=e=>{this.draggingOverview||this.moveOverviewRegion(e.target.scrollLeft/this.ratio)},this._onMouseover=e=>{this.draggingOverview&&(this.draggingOverview=!1)};let t=0;this._onResize=i.util.debounce((()=>{t!=this.drawer.wrapper.clientWidth&&(t=this.drawer.wrapper.clientWidth,this.render(),this.drawer.progress(this.wavesurfer.backend.getPlayedPercents()))}))}init(){this.wavesurfer.isReady&&this._onShouldRender(),this.wavesurfer.on(this.renderEvent,this._onShouldRender)}destroy(){window.removeEventListener("resize",this._onResize,!0),window.removeEventListener("orientationchange",this._onResize,!0),this.wavesurfer.drawer.wrapper.removeEventListener("mouseover",this._onMouseover),this.wavesurfer.un(this.renderEvent,this._onShouldRender),this.wavesurfer.un("seek",this._onSeek),this.wavesurfer.un("scroll",this._onScroll),this.wavesurfer.un("audioprocess",this._onAudioprocess),this.drawer.destroy(),this.overviewRegion=null,this.unAll()}regions(){this.regions={},this.wavesurfer.on("region-created",(e=>{this.regions[e.id]=e,this.renderRegions()})),this.wavesurfer.on("region-updated",(e=>{this.regions[e.id]=e,this.renderRegions()})),this.wavesurfer.on("region-removed",(e=>{delete this.regions[e.id],this.renderRegions()}))}renderRegions(){const e=this.drawer.wrapper.querySelectorAll("region");let i;for(i=0;i<e.length;++i)this.drawer.wrapper.removeChild(e[i]);Object.keys(this.regions).forEach((e=>{const i=this.regions[e],r=this.drawer.width*((i.end-i.start)/this.wavesurfer.getDuration()),t=this.drawer.width*(i.start/this.wavesurfer.getDuration()),s=this.util.style(document.createElement("region"),{height:"inherit",backgroundColor:i.color,width:r+"px",left:t+"px",display:"block",position:"absolute"});s.classList.add(e),this.drawer.wrapper.appendChild(s)}))}createElements(){this.drawer.createElements(),this.params.showOverview&&(this.overviewRegion=this.util.style(document.createElement("overview"),{height:this.drawer.wrapper.offsetHeight-2*this.params.overviewBorderSize+"px",width:"0px",display:"block",position:"absolute",cursor:"move",border:this.params.overviewBorderSize+"px solid "+this.params.overviewBorderColor,zIndex:2,opacity:this.params.overviewOpacity}),this.drawer.wrapper.appendChild(this.overviewRegion))}bindWavesurferEvents(){window.addEventListener("resize",this._onResize,!0),window.addEventListener("orientationchange",this._onResize,!0),this.wavesurfer.on("audioprocess",this._onAudioprocess),this.wavesurfer.on("seek",this._onSeek),this.params.showOverview&&(this.wavesurfer.on("scroll",this._onScroll),this.wavesurfer.drawer.wrapper.addEventListener("mouseover",this._onMouseover))}bindMinimapEvents(){const e={clientX:0,clientY:0};let i=0,r=!0;this.params.interact&&(this.drawer.wrapper.addEventListener("click",(e=>{this.fireEvent("click",e,this.drawer.handleEvent(e))})),this.on("click",((e,i)=>{r?(this.drawer.progress(i),this.wavesurfer.seekAndCenter(i)):r=!0}))),this.params.showOverview&&(this.overviewRegion.addEventListener("mousedown",(r=>{this.draggingOverview=!0,i=r.layerX,e.clientX=r.clientX,e.clientY=r.clientY})),this.drawer.wrapper.addEventListener("mousemove",(e=>{this.draggingOverview&&this.moveOverviewRegion(e.clientX-this.drawer.container.getBoundingClientRect().left-i)})),this.drawer.wrapper.addEventListener("mouseup",(i=>{e.clientX-i.clientX==0&&e.clientX-i.clientX==0?(r=!0,this.draggingOverview=!1):this.draggingOverview&&(r=!1,this.draggingOverview=!1)})))}render(){const e=this.drawer.getWidth(),i=this.wavesurfer.backend.getPeaks(e,0,e);this.drawer.drawPeaks(i,e,0,e),this.drawer.progress(this.wavesurfer.backend.getPlayedPercents()),this.params.showOverview&&(this.ratio=this.wavesurfer.drawer.width/this.drawer.width,this.waveShowedWidth=this.wavesurfer.drawer.width/this.ratio,this.waveWidth=this.wavesurfer.drawer.width,this.overviewWidth=this.drawer.width/this.ratio,this.overviewPosition=0,this.moveOverviewRegion(this.wavesurfer.drawer.wrapper.scrollLeft/this.ratio),this.overviewRegion.style.width=this.overviewWidth-2*this.params.overviewBorderSize+"px")}moveOverviewRegion(e){e<0?this.overviewPosition=0:e+this.overviewWidth<this.drawer.width?this.overviewPosition=e:this.overviewPosition=this.drawer.width-this.overviewWidth,this.overviewRegion.style.left=this.overviewPosition+"px",this.draggingOverview&&(this.wavesurfer.drawer.wrapper.scrollLeft=this.overviewPosition*this.ratio)}}