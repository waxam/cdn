export default class TimelinePlugin{static create(t){return{name:"timeline",deferInit:!(!t||!t.deferInit)&&t.deferInit,params:t,instance:TimelinePlugin}}_onScroll=()=>{this.wrapper&&this.drawer.wrapper&&(this.wrapper.scrollLeft=this.drawer.wrapper.scrollLeft)};_onRedraw=()=>this.render();_onReady=()=>{const t=this.wavesurfer;this.drawer=t.drawer,this.pixelRatio=t.drawer.params.pixelRatio,this.maxCanvasWidth=t.drawer.maxCanvasWidth||t.drawer.width,this.maxCanvasElementWidth=t.drawer.maxCanvasElementWidth||Math.round(this.maxCanvasWidth/this.pixelRatio),t.drawer.wrapper.addEventListener("scroll",this._onScroll),t.on("redraw",this._onRedraw),t.on("zoom",this._onZoom),this.render()};_onWrapperClick=t=>{t.preventDefault();const e="offsetX"in t?t.offsetX:t.layerX;this.fireEvent("click",e/this.wrapper.scrollWidth||0)};constructor(t,e){if(this.container="string"==typeof t.container?document.querySelector(t.container):t.container,!this.container)throw new Error("No container for wavesurfer timeline");this.wavesurfer=e,this.util=e.util,this.params=this.util.extend({},{height:20,notchPercentHeight:90,labelPadding:5,unlabeledNotchColor:"#c0c0c0",primaryColor:"#000",secondaryColor:"#c0c0c0",primaryFontColor:"#000",secondaryFontColor:"#000",fontFamily:"Arial",fontSize:10,zoomDebounce:!1,formatTimeCallback:this.defaultFormatTimeCallback,timeInterval:this.defaultTimeInterval,primaryLabelInterval:this.defaultPrimaryLabelInterval,secondaryLabelInterval:this.defaultSecondaryLabelInterval},t),this.canvases=[],this.wrapper=null,this.drawer=null,this.pixelRatio=null,this.maxCanvasWidth=null,this.maxCanvasElementWidth=null,this._onZoom=this.params.zoomDebounce?this.wavesurfer.util.debounce((()=>this.render()),this.params.zoomDebounce):()=>this.render()}init(){this.wavesurfer.on("ready",this._onReady),this.wavesurfer.isReady&&this._onReady()}destroy(){this.unAll(),this.wavesurfer.un("redraw",this._onRedraw),this.wavesurfer.un("zoom",this._onZoom),this.wavesurfer.un("ready",this._onReady),this.wavesurfer.drawer.wrapper.removeEventListener("scroll",this._onScroll),this.wrapper&&this.wrapper.parentNode&&(this.wrapper.removeEventListener("click",this._onWrapperClick),this.wrapper.parentNode.removeChild(this.wrapper),this.wrapper=null)}createWrapper(){const t=this.wavesurfer.params;this.container.innerHTML="",this.wrapper=this.container.appendChild(document.createElement("timeline")),this.util.style(this.wrapper,{display:"block",position:"relative",userSelect:"none",webkitUserSelect:"none",height:`${this.params.height}px`}),(t.fillParent||t.scrollParent)&&this.util.style(this.wrapper,{width:"100%",overflowX:"hidden",overflowY:"hidden"}),this.wrapper.addEventListener("click",this._onWrapperClick)}render(){this.wrapper||this.createWrapper(),this.updateCanvases(),this.updateCanvasesPositioning(),this.renderCanvases()}updateCanvases(){const addCanvas=()=>{const t=this.wrapper.appendChild(document.createElement("canvas"));this.canvases.push(t),this.util.style(t,{position:"absolute",zIndex:4})},removeCanvas=()=>{const t=this.canvases.pop();t.parentElement.removeChild(t)},t=Math.round(this.drawer.wrapper.scrollWidth),e=Math.ceil(t/this.maxCanvasElementWidth);for(;this.canvases.length<e;)addCanvas();for(;this.canvases.length>e;)removeCanvas()}updateCanvasesPositioning(){const t=this.canvases.length;this.canvases.forEach(((e,a)=>{const i=a===t-1?this.drawer.wrapper.scrollWidth-this.maxCanvasElementWidth*(t-1):this.maxCanvasElementWidth;e.width=i*this.pixelRatio,e.height=(this.params.height+1)*this.pixelRatio,this.util.style(e,{width:`${i}px`,height:`${this.params.height}px`,left:a*this.maxCanvasElementWidth+"px"})}))}renderCanvases(){const t=this.wavesurfer.backend.getDuration();if(t<=0)return;const e=this.wavesurfer.params,a=this.params.fontSize*e.pixelRatio,i=parseInt(t,10)+1,r=e.fillParent&&!e.scrollParent?this.drawer.getWidth():this.drawer.wrapper.scrollWidth*e.pixelRatio,s=this.params.height*this.pixelRatio,n=this.params.height*(this.params.notchPercentHeight/100)*this.pixelRatio,l=r/t,h=this.params.formatTimeCallback,intervalFnOrVal=t=>"function"==typeof t?t(l):t,o=intervalFnOrVal(this.params.timeInterval),p=intervalFnOrVal(this.params.primaryLabelInterval),d=intervalFnOrVal(this.params.secondaryLabelInterval);let c,m=0,u=0;const f=[];for(c=0;c<i/o;c++)f.push([c,u,m]),u+=o,m+=l*o;const renderPositions=t=>{f.forEach((e=>{t(e[0],e[1],e[2])}))};this.setFillStyles(this.params.primaryColor),this.setFonts(`${a}px ${this.params.fontFamily}`),this.setFillStyles(this.params.primaryFontColor),renderPositions(((t,e,a)=>{t%p==0&&(this.fillRect(a,0,1,s),this.fillText(h(e,l),a+this.params.labelPadding*this.pixelRatio,s))})),this.setFillStyles(this.params.secondaryColor),this.setFonts(`${a}px ${this.params.fontFamily}`),this.setFillStyles(this.params.secondaryFontColor),renderPositions(((t,e,a)=>{t%d==0&&(this.fillRect(a,0,1,s),this.fillText(h(e,l),a+this.params.labelPadding*this.pixelRatio,s))})),this.setFillStyles(this.params.unlabeledNotchColor),renderPositions(((t,e,a)=>{t%d!=0&&t%p!=0&&this.fillRect(a,0,1,n)}))}setFillStyles(t){this.canvases.forEach((e=>{e.getContext("2d").fillStyle=t}))}setFonts(t){this.canvases.forEach((e=>{e.getContext("2d").font=t}))}fillRect(t,e,a,i){this.canvases.forEach(((r,s)=>{const n=s*this.maxCanvasWidth,l={x1:Math.max(t,s*this.maxCanvasWidth),y1:e,x2:Math.min(t+a,s*this.maxCanvasWidth+r.width),y2:e+i};l.x1<l.x2&&r.getContext("2d").fillRect(l.x1-n,l.y1,l.x2-l.x1,l.y2-l.y1)}))}fillText(t,e,a){let i,r=0;this.canvases.forEach((s=>{const n=s.getContext("2d"),l=n.canvas.width;r>e+i||(r+l>e&&(i=n.measureText(t).width,n.fillText(t,e-r,a)),r+=l)}))}defaultFormatTimeCallback(t,e){if(t/60>1){return`${parseInt(t/60,10)}:${t=(t=parseInt(t%60,10))<10?"0"+t:t}`}return Math.round(1e3*t)/1e3}defaultTimeInterval(t){return t>=25?1:5*t>=25?5:15*t>=25?15:60*Math.ceil(.5/t)}defaultPrimaryLabelInterval(t){return t>=25?10:5*t>=25?6:4}defaultSecondaryLabelInterval(t){return t>=25?5:2}}