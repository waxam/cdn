{"version":3,"sources":["webpack://WaveSurfer.[name]/webpack/universalModuleDefinition","webpack://WaveSurfer.[name]/webpack/bootstrap","webpack://WaveSurfer.[name]/./src/plugin/spectrogram.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","FFT","bufferSize","sampleRate","windowFunc","alpha","this","bandwidth","sinTable","Float32Array","cosTable","windowValues","reverseTable","Uint32Array","peakBand","peak","Math","abs","cos","PI","pow","E","undefined","sin","Error","limit","bit","calculateSpectrum","buffer","rval","ival","mag","real","imag","bSi","sqrt","spectrum","k","floor","log","LN2","length","phaseShiftStepReal","phaseShiftStepImag","currentPhaseShiftReal","currentPhaseShiftImag","off","tr","ti","tmpReal","halfSize","fftStep","N","SpectrogramPlugin","params","ws","_this","_classCallCheck","wavesurfer","util","frequenciesDataUrl","_onScroll","e","updateScroll","_onReady","drawer","container","document","querySelector","width","pixelRatio","fftSamples","height","noverlap","createWrapper","createCanvas","render","wrapper","addEventListener","on","deferInit","staticProps","instance","isReady","unAll","un","removeEventListener","parentNode","removeChild","_this2","prevSpectrogram","wsParams","createElement","labels","labelsEl","classList","add","style","left","position","zIndex","concat","appendChild","loadLabels","display","userSelect","webkitUserSelect","fillParent","scrollParent","overflowX","overflowY","preventDefault","relX","offsetX","layerX","fireEvent","scrollWidth","canvas","spectrCc","getContext","updateCanvasStyle","loadFrequenciesData","getFrequencies","drawSpectrogram","round","frequenciesData","my","backend","getDuration","j","pixels","resample","heightFactor","numberOfChannels","colorValue","fillStyle","fillRect","callback","channelOne","getChannelData","bufferLength","frequencies","uniqueSamplesPerPx","max","fft","currentOffset","segment","slice","array","Uint8Array","log10","push","url","_this3","ajax","data","JSON","parse","target","statusText","freq","toFixed","bgFill","fontSizeFreq","fontSizeUnit","fontType","textColorFreq","textColorUnit","textAlign","getMaxY","labelIndex","step","ac","ctx","fill","textBaseline","label","freqType","units","unitType","font","fillText","x","scrollLeft","oldMatrix","columnsNumber","newMatrix","oldPiece","newPiece","column","Array","oldStart","oldEnd","newStart","newEnd","overlap","min","intColumn"],"mappings":"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","file":"wavesurfer.spectrogram.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"spectrogram\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"spectrogram\"] = factory();\n\telse\n\t\troot[\"WaveSurfer\"] = root[\"WaveSurfer\"] || {}, root[\"WaveSurfer\"][\"spectrogram\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"localhost:8080/dist/plugin/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","/**\n * Calculate FFT - Based on https://github.com/corbanbrook/dsp.js\n */\n/* eslint-disable complexity, no-redeclare, no-var, one-var */\nconst FFT = function(bufferSize, sampleRate, windowFunc, alpha) {\n    this.bufferSize = bufferSize;\n    this.sampleRate = sampleRate;\n    this.bandwidth = (2 / bufferSize) * (sampleRate / 2);\n\n    this.sinTable = new Float32Array(bufferSize);\n    this.cosTable = new Float32Array(bufferSize);\n    this.windowValues = new Float32Array(bufferSize);\n    this.reverseTable = new Uint32Array(bufferSize);\n\n    this.peakBand = 0;\n    this.peak = 0;\n\n    switch (windowFunc) {\n        case 'bartlett':\n            for (var i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (2 / (bufferSize - 1)) *\n                    ((bufferSize - 1) / 2 - Math.abs(i - (bufferSize - 1) / 2));\n            }\n            break;\n        case 'bartlettHann':\n            for (var i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    0.62 -\n                    0.48 * Math.abs(i / (bufferSize - 1) - 0.5) -\n                    0.38 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1));\n            }\n            break;\n        case 'blackman':\n            alpha = alpha || 0.16;\n            for (var i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (1 - alpha) / 2 -\n                    0.5 * Math.cos((Math.PI * 2 * i) / (bufferSize - 1)) +\n                    (alpha / 2) *\n                        Math.cos((4 * Math.PI * i) / (bufferSize - 1));\n            }\n            break;\n        case 'cosine':\n            for (var i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = Math.cos(\n                    (Math.PI * i) / (bufferSize - 1) - Math.PI / 2\n                );\n            }\n            break;\n        case 'gauss':\n            alpha = alpha || 0.25;\n            for (var i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = Math.pow(\n                    Math.E,\n                    -0.5 *\n                        Math.pow(\n                            (i - (bufferSize - 1) / 2) /\n                                ((alpha * (bufferSize - 1)) / 2),\n                            2\n                        )\n                );\n            }\n            break;\n        case 'hamming':\n            for (var i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (0.54 - 0.46) *\n                    Math.cos((Math.PI * 2 * i) / (bufferSize - 1));\n            }\n            break;\n        case 'hann':\n        case undefined:\n            for (var i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    0.5 * (1 - Math.cos((Math.PI * 2 * i) / (bufferSize - 1)));\n            }\n            break;\n        case 'lanczoz':\n            for (var i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    Math.sin(Math.PI * ((2 * i) / (bufferSize - 1) - 1)) /\n                    (Math.PI * ((2 * i) / (bufferSize - 1) - 1));\n            }\n            break;\n        case 'rectangular':\n            for (var i = 0; i < bufferSize; i++) {\n                this.windowValues[i] = 1;\n            }\n            break;\n        case 'triangular':\n            for (var i = 0; i < bufferSize; i++) {\n                this.windowValues[i] =\n                    (2 / bufferSize) *\n                    (bufferSize / 2 - Math.abs(i - (bufferSize - 1) / 2));\n            }\n            break;\n        default:\n            throw Error(\"No such window function '\" + windowFunc + \"'\");\n    }\n\n    var limit = 1;\n    var bit = bufferSize >> 1;\n\n    var i;\n\n    while (limit < bufferSize) {\n        for (i = 0; i < limit; i++) {\n            this.reverseTable[i + limit] = this.reverseTable[i] + bit;\n        }\n\n        limit = limit << 1;\n        bit = bit >> 1;\n    }\n\n    for (i = 0; i < bufferSize; i++) {\n        this.sinTable[i] = Math.sin(-Math.PI / i);\n        this.cosTable[i] = Math.cos(-Math.PI / i);\n    }\n\n    this.calculateSpectrum = function(buffer) {\n        // Locally scope variables for speed up\n        var bufferSize = this.bufferSize,\n            cosTable = this.cosTable,\n            sinTable = this.sinTable,\n            reverseTable = this.reverseTable,\n            real = new Float32Array(bufferSize),\n            imag = new Float32Array(bufferSize),\n            bSi = 2 / this.bufferSize,\n            sqrt = Math.sqrt,\n            rval,\n            ival,\n            mag,\n            spectrum = new Float32Array(bufferSize / 2);\n\n        var k = Math.floor(Math.log(bufferSize) / Math.LN2);\n\n        if (Math.pow(2, k) !== bufferSize) {\n            throw 'Invalid buffer size, must be a power of 2.';\n        }\n        if (bufferSize !== buffer.length) {\n            throw 'Supplied buffer is not the same size as defined FFT. FFT Size: ' +\n                bufferSize +\n                ' Buffer Size: ' +\n                buffer.length;\n        }\n\n        var halfSize = 1,\n            phaseShiftStepReal,\n            phaseShiftStepImag,\n            currentPhaseShiftReal,\n            currentPhaseShiftImag,\n            off,\n            tr,\n            ti,\n            tmpReal;\n\n        for (var i = 0; i < bufferSize; i++) {\n            real[i] =\n                buffer[reverseTable[i]] * this.windowValues[reverseTable[i]];\n            imag[i] = 0;\n        }\n\n        while (halfSize < bufferSize) {\n            phaseShiftStepReal = cosTable[halfSize];\n            phaseShiftStepImag = sinTable[halfSize];\n\n            currentPhaseShiftReal = 1;\n            currentPhaseShiftImag = 0;\n\n            for (var fftStep = 0; fftStep < halfSize; fftStep++) {\n                var i = fftStep;\n\n                while (i < bufferSize) {\n                    off = i + halfSize;\n                    tr =\n                        currentPhaseShiftReal * real[off] -\n                        currentPhaseShiftImag * imag[off];\n                    ti =\n                        currentPhaseShiftReal * imag[off] +\n                        currentPhaseShiftImag * real[off];\n\n                    real[off] = real[i] - tr;\n                    imag[off] = imag[i] - ti;\n                    real[i] += tr;\n                    imag[i] += ti;\n\n                    i += halfSize << 1;\n                }\n\n                tmpReal = currentPhaseShiftReal;\n                currentPhaseShiftReal =\n                    tmpReal * phaseShiftStepReal -\n                    currentPhaseShiftImag * phaseShiftStepImag;\n                currentPhaseShiftImag =\n                    tmpReal * phaseShiftStepImag +\n                    currentPhaseShiftImag * phaseShiftStepReal;\n            }\n\n            halfSize = halfSize << 1;\n        }\n\n        for (var i = 0, N = bufferSize / 2; i < N; i++) {\n            rval = real[i];\n            ival = imag[i];\n            mag = bSi * sqrt(rval * rval + ival * ival);\n\n            if (mag > this.peak) {\n                this.peakBand = i;\n                this.peak = mag;\n            }\n            spectrum[i] = mag;\n        }\n        return spectrum;\n    };\n};\n/* eslint-enable complexity, no-redeclare, no-var, one-var */\n\n/**\n * @typedef {Object} SpectrogramPluginParams\n * @property {string|HTMLElement} container Selector of element or element in\n * which to render\n * @property {number} fftSamples=512 number of samples to fetch to FFT. Must be\n * a pwer of 2.\n * @property {number} noverlap Size of the overlapping window. Must be <\n * fftSamples. Auto deduced from canvas size by default.\n * @property {string} windowFunc='hann' The window function to be used. One of\n * these: `'bartlett'`, `'bartlettHann'`, `'blackman'`, `'cosine'`, `'gauss'`,\n * `'hamming'`, `'hann'`, `'lanczoz'`, `'rectangular'`, `'triangular'`\n * @property {?number} alpha Some window functions have this extra value.\n * (Between 0 and 1)\n * @property {number} pixelRatio=wavesurfer.params.pixelRatio to control the\n * size of the spectrogram in relation with its canvas. 1 = Draw on the whole\n * canvas. 2 = Draw on a quarter (1/2 the length and 1/2 the width)\n * @property {?boolean} deferInit Set to true to manually call\n * `initPlugin('spectrogram')`\n */\n\n/**\n * Render a spectrogram visualisation of the audio.\n *\n * @implements {PluginClass}\n * @extends {Observer}\n * @example\n * // es6\n * import SpectrogramPlugin from 'wavesurfer.spectrogram.js';\n *\n * // commonjs\n * var SpectrogramPlugin = require('wavesurfer.spectrogram.js');\n *\n * // if you are using <script> tags\n * var SpectrogramPlugin = window.WaveSurfer.spectrogram;\n *\n * // ... initialising wavesurfer with the plugin\n * var wavesurfer = WaveSurfer.create({\n *   // wavesurfer options ...\n *   plugins: [\n *     SpectrogramPlugin.create({\n *       // plugin options ...\n *     })\n *   ]\n * });\n */\nexport default class SpectrogramPlugin {\n    /**\n     * Spectrogram plugin definition factory\n     *\n     * This function must be used to create a plugin definition which can be\n     * used by wavesurfer to correctly instantiate the plugin.\n     *\n     * @param  {SpectrogramPluginParams} params parameters use to initialise the plugin\n     * @return {PluginDefinition} an object representing the plugin\n     */\n    static create(params) {\n        return {\n            name: 'spectrogram',\n            deferInit: params && params.deferInit ? params.deferInit : false,\n            params: params,\n            staticProps: {\n                FFT: FFT\n            },\n            instance: SpectrogramPlugin\n        };\n    }\n\n    constructor(params, ws) {\n        this.params = params;\n        this.wavesurfer = ws;\n        this.util = ws.util;\n\n        this.frequenciesDataUrl = params.frequenciesDataUrl;\n        this._onScroll = e => {\n            this.updateScroll(e);\n        };\n        this._onReady = () => {\n            const drawer = (this.drawer = ws.drawer);\n\n            this.container =\n                'string' == typeof params.container\n                    ? document.querySelector(params.container)\n                    : params.container;\n\n            if (!this.container) {\n                throw Error('No container for WaveSurfer spectrogram');\n            }\n\n            this.width = drawer.width;\n            this.pixelRatio = this.params.pixelRatio || ws.params.pixelRatio;\n            this.fftSamples =\n                this.params.fftSamples || ws.params.fftSamples || 512;\n            this.height = this.fftSamples / 2;\n            this.noverlap = params.noverlap;\n            this.windowFunc = params.windowFunc;\n            this.alpha = params.alpha;\n\n            this.createWrapper();\n            this.createCanvas();\n            this.render();\n\n            drawer.wrapper.addEventListener('scroll', this._onScroll);\n            ws.on('redraw', () => this.render());\n        };\n    }\n\n    init() {\n        // Check if ws is ready\n        if (this.wavesurfer.isReady) {\n            this._onReady();\n        }\n\n        this.wavesurfer.on('ready', this._onReady);\n    }\n\n    destroy() {\n        this.unAll();\n        this.wavesurfer.un('ready', this._onReady);\n        this.drawer.wrapper.removeEventListener('scroll', this._onScroll);\n        this.wavesurfer = null;\n        this.util = null;\n        this.params = null;\n        if (this.wrapper) {\n            this.wrapper.parentNode.removeChild(this.wrapper);\n            this.wrapper = null;\n        }\n    }\n\n    createWrapper() {\n        const prevSpectrogram = this.container.querySelector('spectrogram');\n        if (prevSpectrogram) {\n            this.container.removeChild(prevSpectrogram);\n        }\n        const wsParams = this.wavesurfer.params;\n        this.wrapper = document.createElement('spectrogram');\n        // if labels are active\n        if (this.params.labels) {\n            const labelsEl = (this.labelsEl = document.createElement('canvas'));\n            labelsEl.classList.add('spec-labels');\n            this.drawer.style(labelsEl, {\n                left: 0,\n                position: 'absolute',\n                zIndex: 9,\n                height: `${this.height / this.pixelRatio}px`,\n                width: `${55 / this.pixelRatio}px`\n            });\n            this.wrapper.appendChild(labelsEl);\n            // can be customized in next version\n            this.loadLabels(\n                'rgba(68,68,68,0.5)',\n                '12px',\n                '10px',\n                '',\n                '#fff',\n                '#f7f7f7',\n                'center',\n                '#specLabels'\n            );\n        }\n\n        this.drawer.style(this.wrapper, {\n            display: 'block',\n            position: 'relative',\n            userSelect: 'none',\n            webkitUserSelect: 'none',\n            height: `${this.height / this.pixelRatio}px`\n        });\n\n        if (wsParams.fillParent || wsParams.scrollParent) {\n            this.drawer.style(this.wrapper, {\n                width: '100%',\n                overflowX: 'hidden',\n                overflowY: 'hidden'\n            });\n        }\n        this.container.appendChild(this.wrapper);\n\n        this.wrapper.addEventListener('click', e => {\n            e.preventDefault();\n            const relX = 'offsetX' in e ? e.offsetX : e.layerX;\n            this.fireEvent('click', relX / this.scrollWidth || 0);\n        });\n    }\n\n    createCanvas() {\n        const canvas = (this.canvas = this.wrapper.appendChild(\n            document.createElement('canvas')\n        ));\n\n        this.spectrCc = canvas.getContext('2d');\n\n        this.util.style(canvas, {\n            position: 'absolute',\n            zIndex: 4\n        });\n    }\n\n    render() {\n        this.updateCanvasStyle();\n\n        if (this.frequenciesDataUrl) {\n            this.loadFrequenciesData(this.frequenciesDataUrl);\n        } else {\n            this.getFrequencies(this.drawSpectrogram);\n        }\n    }\n\n    updateCanvasStyle() {\n        const width = Math.round(this.width / this.pixelRatio) + 'px';\n        this.canvas.width = this.width;\n        this.canvas.height = this.height;\n        this.canvas.style.width = width;\n    }\n\n    drawSpectrogram(frequenciesData, my) {\n        const spectrCc = my.spectrCc;\n        const length = my.wavesurfer.backend.getDuration();\n        const height = my.height;\n        const pixels = my.resample(frequenciesData);\n        const heightFactor = my.buffer ? 2 / my.buffer.numberOfChannels : 1;\n        let i;\n        let j;\n\n        for (i = 0; i < pixels.length; i++) {\n            for (j = 0; j < pixels[i].length; j++) {\n                const colorValue = 255 - pixels[i][j];\n                my.spectrCc.fillStyle =\n                    'rgb(' +\n                    colorValue +\n                    ', ' +\n                    colorValue +\n                    ', ' +\n                    colorValue +\n                    ')';\n                my.spectrCc.fillRect(\n                    i,\n                    height - j * heightFactor,\n                    1,\n                    heightFactor\n                );\n            }\n        }\n    }\n\n    getFrequencies(callback) {\n        const fftSamples = this.fftSamples;\n        const buffer = (this.buffer = this.wavesurfer.backend.buffer);\n        const channelOne = buffer.getChannelData(0);\n        const bufferLength = buffer.length;\n        const sampleRate = buffer.sampleRate;\n        const frequencies = [];\n\n        if (!buffer) {\n            this.fireEvent('error', 'Web Audio buffer is not available');\n            return;\n        }\n\n        let noverlap = this.noverlap;\n        if (!noverlap) {\n            const uniqueSamplesPerPx = buffer.length / this.canvas.width;\n            noverlap = Math.max(0, Math.round(fftSamples - uniqueSamplesPerPx));\n        }\n\n        const fft = new FFT(\n            fftSamples,\n            sampleRate,\n            this.windowFunc,\n            this.alpha\n        );\n        const maxSlicesCount = Math.floor(\n            bufferLength / (fftSamples - noverlap)\n        );\n        let currentOffset = 0;\n\n        while (currentOffset + fftSamples < channelOne.length) {\n            const segment = channelOne.slice(\n                currentOffset,\n                currentOffset + fftSamples\n            );\n            const spectrum = fft.calculateSpectrum(segment);\n            const array = new Uint8Array(fftSamples / 2);\n            let j;\n            for (j = 0; j < fftSamples / 2; j++) {\n                array[j] = Math.max(-255, Math.log10(spectrum[j]) * 45);\n            }\n            frequencies.push(array);\n            currentOffset += fftSamples - noverlap;\n        }\n        callback(frequencies, this);\n    }\n\n    loadFrequenciesData(url) {\n        const ajax = this.util.ajax({ url: url });\n\n        ajax.on('success', data =>\n            this.drawSpectrogram(JSON.parse(data), this)\n        );\n        ajax.on('error', e =>\n            this.fireEvent('error', 'XHR error: ' + e.target.statusText)\n        );\n\n        return ajax;\n    }\n\n    freqType(freq) {\n        return freq >= 1000 ? (freq / 1000).toFixed(1) : Math.round(freq);\n    }\n\n    unitType(freq) {\n        return freq >= 1000 ? 'KHz' : 'Hz';\n    }\n\n    loadLabels(\n        bgFill,\n        fontSizeFreq,\n        fontSizeUnit,\n        fontType,\n        textColorFreq,\n        textColorUnit,\n        textAlign,\n        container\n    ) {\n        const frequenciesHeight = this.height;\n        bgFill = bgFill || 'rgba(68,68,68,0)';\n        fontSizeFreq = fontSizeFreq || '12px';\n        fontSizeUnit = fontSizeUnit || '10px';\n        fontType = fontType || 'Helvetica';\n        textColorFreq = textColorFreq || '#fff';\n        textColorUnit = textColorUnit || '#fff';\n        textAlign = textAlign || 'center';\n        container = container || '#specLabels';\n        const getMaxY = frequenciesHeight || 512;\n        const labelIndex = 5 * (getMaxY / 256);\n        const freqStart = 0;\n        const step =\n            (this.wavesurfer.backend.ac.sampleRate / 2 - freqStart) /\n            labelIndex;\n\n        const ctx = this.labelsEl.getContext('2d');\n        this.labelsEl.height = this.height;\n        this.labelsEl.width = 55;\n\n        ctx.fillStyle = bgFill;\n        ctx.fillRect(0, 0, 55, getMaxY);\n        ctx.fill();\n        let i;\n\n        for (i = 0; i <= labelIndex; i++) {\n            ctx.textAlign = textAlign;\n            ctx.textBaseline = 'middle';\n\n            const freq = freqStart + step * i;\n            const index = Math.round(\n                (freq / (this.sampleRate / 2)) * this.fftSamples\n            );\n            const label = this.freqType(freq);\n            const units = this.unitType(freq);\n            const x = 16;\n            const yLabelOffset = 2;\n\n            if (i == 0) {\n                ctx.fillStyle = textColorUnit;\n                ctx.font = fontSizeUnit + ' ' + fontType;\n                ctx.fillText(units, x + 24, getMaxY + i - 10);\n                ctx.fillStyle = textColorFreq;\n                ctx.font = fontSizeFreq + ' ' + fontType;\n                ctx.fillText(label, x, getMaxY + i - 10);\n            } else {\n                ctx.fillStyle = textColorUnit;\n                ctx.font = fontSizeUnit + ' ' + fontType;\n                ctx.fillText(units, x + 24, getMaxY - i * 50 + yLabelOffset);\n                ctx.fillStyle = textColorFreq;\n                ctx.font = fontSizeFreq + ' ' + fontType;\n                ctx.fillText(label, x, getMaxY - i * 50 + yLabelOffset);\n            }\n        }\n    }\n\n    updateScroll(e) {\n        if (this.wrapper) {\n            this.wrapper.scrollLeft = e.target.scrollLeft;\n        }\n    }\n\n    resample(oldMatrix) {\n        const columnsNumber = this.width;\n        const newMatrix = [];\n\n        const oldPiece = 1 / oldMatrix.length;\n        const newPiece = 1 / columnsNumber;\n        let i;\n\n        for (i = 0; i < columnsNumber; i++) {\n            const column = new Array(oldMatrix[0].length);\n            let j;\n\n            for (j = 0; j < oldMatrix.length; j++) {\n                const oldStart = j * oldPiece;\n                const oldEnd = oldStart + oldPiece;\n                const newStart = i * newPiece;\n                const newEnd = newStart + newPiece;\n\n                const overlap =\n                    oldEnd <= newStart || newEnd <= oldStart\n                        ? 0\n                        : Math.min(\n                              Math.max(oldEnd, newStart),\n                              Math.max(newEnd, oldStart)\n                          ) -\n                          Math.max(\n                              Math.min(oldEnd, newStart),\n                              Math.min(newEnd, oldStart)\n                          );\n                let k;\n                /* eslint-disable max-depth */\n                if (overlap > 0) {\n                    for (k = 0; k < oldMatrix[0].length; k++) {\n                        if (column[k] == null) {\n                            column[k] = 0;\n                        }\n                        column[k] += (overlap / newPiece) * oldMatrix[j][k];\n                    }\n                }\n                /* eslint-enable max-depth */\n            }\n\n            const intColumn = new Uint8Array(oldMatrix[0].length);\n            let m;\n\n            for (m = 0; m < oldMatrix[0].length; m++) {\n                intColumn[m] = column[m];\n            }\n\n            newMatrix.push(intColumn);\n        }\n\n        return newMatrix;\n    }\n}\n"],"sourceRoot":""}