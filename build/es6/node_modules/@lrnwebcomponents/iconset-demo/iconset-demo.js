/**
 * Copyright 2018 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{html as e,PolymerElement as t}from"../../@polymer/polymer/polymer-element.js";import"../../@polymer/polymer/lib/elements/dom-repeat.js";import{IronMeta as o}from"../../@polymer/iron-meta/iron-meta.js";import"../simple-icon/simple-icon.js";import"../simple-icon/lib/simple-icons.js";import"../../@polymer/marked-element/marked-element.js";class IconsetDemo extends t{static get template(){return e` <style>
        :host {
          display: block;
          box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),
            0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);
          margin-bottom: 40px;
          padding: 20px 40px;
        }

        :host .iconset:not(:first-of-type) {
          border-top: 1px solid #ddd;
        }

        :host ul {
          list-style-type: none;
          padding: 0;
        }

        :host li {
          display: inline-block;
          width: 160px;
          margin: 16px 8px;
          text-align: center;
          font-size: 10px;
        }

        :host simple-icon {
          font-size: 14px;
          color: rgb(97, 97, 97);
          display: inline-block;
        }

        :host .iconset:nth-of-type(9n + 2) simple-icon {
          color: #be3300;
        }

        :host .iconset:nth-of-type(9n + 3) simple-icon {
          color: #0000b5;
        }

        :host .iconset:nth-of-type(9n + 4) simple-icon {
          color: #750075;
        }

        :host .iconset:nth-of-type(9n + 5) simple-icon {
          color: #aa5d00;
        }

        :host .iconset:nth-of-type(9n + 6) simple-icon {
          color: #db0a5b;
        }

        :host .iconset:nth-of-type(9n + 7) simple-icon {
          color: #005500;
        }

        :host .iconset:nth-of-type(9n + 8) simple-icon {
          color: #cf000f;
        }

        :host .iconset:nth-of-type(9n) simple-icon {
          color: #005f8b;
        }
      </style>
      <template is="dom-repeat" items="[[__iconList]]" as="iconset">
        <div class="iconset">
          <p><strong>[[iconset.name]]</strong></p>
          <ul>
            <template is="dom-repeat" items="[[iconset.icons]]" as="icon">
              <li>
                <div id="icon">
                  <simple-icon icon$="[[icon]]"></simple-icon>
                  <div id="icon-text">[[icon]]</div>
                </div>
              </li>
            </template>
          </ul>
        </div>
      </template>`}static get properties(){return{...super.properties,__iconList:{name:"__iconList",type:Array,value:[]},includeSets:{name:"includeSets",type:String,value:null},excludeSets:{name:"excludeSets",type:String,value:null}}}static get tag(){return"iconset-demo"}connectedCallback(){super.connectedCallback();const e=new o({type:"iconset"});let t=[],i=this;if(void 0!==e&&e.list&&e.list.length){var n=0;e.list.forEach((function(e){let o=e.name;i._hideIconset(o)||(t.push({name:o,icons:[]}),e.getIconNames().forEach((e=>{t[n].icons.push(e)})),n++)}))}this.set("__iconList",[]),this.set("__iconList",t)}_hideIconset(e){let t=null!==this.includeSets?this.includeSets.split(/ /):[],o=0===t.length||t.includes(e),i=null!==this.excludeSets?this.excludeSets.split(/ /):[],n=i.length.length>0&&i.includes(e);return!o||n}}window.customElements.define(IconsetDemo.tag,IconsetDemo);export{IconsetDemo};