import{html as t,css as e}from"../../lit-element/lit-element.js";import{SimpleColors as r}from"../simple-colors/simple-colors.js";class LrndesignAvatar extends r{static get styles(){return[...super.styles,e`
        :host {
          display: block;
        }
        paper-avatar {
          color: var(--simple-colors-default-theme-grey-1);
          --paper-avatar-width: var(--lrndesign-avatar-width, 40px);
          --paper-avatar-height: var(--lrndesign-avatar-height, 40px);
          --paper-avatar-text-color: var(--simple-colors-default-theme-grey-1);
        }
      `]}constructor(){super(),import("../paper-avatar/paper-avatar.js"),this.label="avatar",this.twoChars=!1,this.color="blue",this.jdenticon=!1}render(){return t`
      <paper-avatar
        label="${this.label}"
        src="${this.src}"
        ?two-chars="${this.twoChars}"
        style="background-color:${this.hexColor} !important;"
        ?jdenticon="${this.jdenticon}"
      ></paper-avatar>
    `}static get tag(){return"lrndesign-avatar"}_getAccentColor(t){t=t.replace("-text",""),this.accentColor&&"grey"!==this.accentColor||!this.colors[t]||(this.accentColor=t)}_getHexColor(t){let e=t.replace("-text",""),a=new r;return a.colors[e]?a.colors[e][6]:"#000000"}updated(t){super.updated&&super.updated(t),t.forEach((t,e)=>{"color"==e&&this._getAccentColor(this[e]),"accentColor"==e&&(this.hexColor=this._getHexColor(this[e]))})}static get properties(){return{...super.properties,hexColor:{type:String},label:{type:String},src:{type:String},twoChars:{type:Boolean,attribute:"two-chars"},color:{type:String,reflect:!0},jdenticon:{type:Boolean}}}}window.customElements.define(LrndesignAvatar.tag,LrndesignAvatar);export{LrndesignAvatar};