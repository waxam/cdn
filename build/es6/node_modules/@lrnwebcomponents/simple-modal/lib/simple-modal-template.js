import{html,PolymerElement}from"../../../@polymer/polymer/polymer-element.js";import"../simple-modal.js";class SimpleModalTemplate extends PolymerElement{static get tag(){return"simple-modal-template"}static get properties(){return{modal:{type:"Object",computed:"_getModal()"},title:{type:"String",value:""}}}static get template(){return html`
      <style>
        :host {
          display: none;
          --simple-modal-width: 50vw;
          --simple-modal-height: 50vh;
          --simple-modal-titlebar-color: #444;
          --simple-modal-titlebar-background: #ddd;
          --simple-modal-header-color: #222;
          --simple-modal-header-background: #ccc;
          --simple-modal-content-container-color: #222;
          --simple-modal-content-container-background: #fff;
          --simple-modal-buttons-color: blue;
          --simple-modal-buttons-background: #fff;
          --simple-modal-button-color: var(--simple-modal-buttons-color);
          --simple-modal-button-background: var(
            --simple-modal-buttons-background-color
          );
        }
      </style>
      <slot name="header"></slot> <slot name="content"></slot>
      <slot name="buttons"></slot>
    `}associateEvents(target,evt="tap",bubbles=!0,cancelable=!0){let root=this;target.addEventListener(evt,()=>{root.openModal(target,bubbles,cancelable)});return root.modal}_getModal(){return window.SimpleModal.requestAvailability()}openModal(target,bubbles=!0,cancelable=!0){const styles=getComputedStyle(this),evt=new CustomEvent("simple-modal-show",{bubbles:bubbles,cancelable:cancelable,detail:{title:null!==this.title?this.title:!1,elements:{header:this._getSlot("header"),content:this._getSlot("content"),buttons:this._getSlot("buttons")},invokedBy:target}});["--simple-modal-width","--simple-modal-height","--simple-modal-titlebar-color","--simple-modal-titlebar-background","--simple-modal-header-color","--simple-modal-header-background","--simple-modal-content-container-color","--simple-modal-content-container-background","--simple-modal-buttons-color","--simple-modal-buttons-background","--simple-modal-button-color","--simple-modal-button-background"].forEach(prop=>{this.modal.style.setProperty(prop,styles.getPropertyValue(prop))});window.dispatchEvent(evt)}_getSlot(slotName){let slot=this.querySelector("[slot=\""+slotName+"\"]");return null!==slot?slot.cloneNode(!0):!1}}window.customElements.define(SimpleModalTemplate.tag,SimpleModalTemplate);export{SimpleModalTemplate};