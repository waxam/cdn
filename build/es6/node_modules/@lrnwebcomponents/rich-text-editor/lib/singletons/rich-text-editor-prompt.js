/**
 * Copyright 2018 Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement as t,html as i,css as e}from"../../../../lit-element/lit-element.js";import{RichTextEditorStyles as o}from"../rich-text-editor-styles.js";import{RichTextEditorButtonStyles as r}from"../buttons/rich-text-editor-button-styles.js";import"../../../simple-popover/simple-popover.js";import"../../../simple-fields/simple-fields.js";import"./rich-text-editor-selection.js";class RichTextEditorPrompt extends(r(o(t))){static get styles(){return[...super.styles,e`
        :host {
          --simple-fields-color: var(--rich-text-editor-focus-color, #000);
          --simple-fields-invalid-color: var(
            --rich-text-editor-error-color,
            #800
          );
        }
        #prompt {
          display: block;
          width: 300px;
          max-width: 300px;
          --simple-popover-padding: 0px;
          z-index: 2;
        }
        #prompt[hidden] {
          display: none;
        }
        #prompt #form {
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: space-between;
          z-index: 2;
        }
        #formfields {
          width: calc(100% - 20px);
          padding: 10px 10px 0;
          overflow: visible;
        }
        #prompt simple-fields-field {
          padding: 0;
        }
        #confirm,
        #cancel {
          min-width: unset;
        }
        #cancel {
          color: var(--rich-text-editor-button-color);
          background-color: var(--rich-text-editor-button-bg);
        }
        #cancel:focus,
        #cancel:hover {
          color: var(--rich-text-editor-button-hover-color);
          background-color: var(--rich-text-editor-button-hover-bg);
        }
        #confirm {
          color: var(--rich-text-editor-button-color);
          background-color: var(--rich-text-editor-button-bg);
        }
        #confirm:focus,
        #confirm:hover {
          color: var(--rich-text-editor-button-hover-color);
          background-color: var(--rich-text-editor-button-hover-bg);
        }
        .actions {
          width: 100%;
          padding-bottom: 3px;
          display: flex;
          align-items: center;
          justify-content: flex-end;
        }
        .confirm-or-cancel {
          min-width: 40px;
        }
      `]}render(){return i`
      <simple-popover id="prompt" auto for="${this.for}" ?hidden="${!this.for}">
        <form id="form">
          <simple-fields
            id="formfields"
            autofocus
            hide-line-numbers
            .fields="${this.fields}"
            .value="${this.value}"
          ></simple-fields>
          <div class="actions">
            <button
              id="cancel"
              class="rtebutton"
              controls="${this.for}"
              @click="${this._cancel}"
              tabindex="0"
            >
              <simple-icon-lite id="icon" aria-hidden="true" icon="clear">
              </simple-icon-lite>
              <span id="label" class="offscreen">Cancel</span>
            </button>
            <simple-tooltip id="tooltip" for="cancel">Cancel</simple-tooltip>
            <button
              id="confirm"
              class="rtebutton"
              controls="${this.for}"
              @click="${this._confirm}"
              tabindex="0"
            >
              <simple-icon-lite id="icon" aria-hidden="true" icon="check">
              </simple-icon-lite>
              <span id="label" class="offscreen">OK</span>
            </button>
            <simple-tooltip id="tooltip" for="confirm">OK</simple-tooltip>
          </div>
        </form>
      </simple-popover>
    `}static get tag(){return"rich-text-editor-prompt"}static get properties(){return{fields:{type:Array},for:{type:String},range:{type:Object},value:{type:Object}}}constructor(){if(super(),this.__selection=window.RichTextEditorSelection.requestAvailability(),window.addEventListener("rich-text-editor-prompt-open",this.open.bind(this)),!window.RichTextEditorPrompt.instance)return window.RichTextEditorPrompt.instance=this,this}connectedCallback(){super.connectedCallback()}open(t){t&&(this.for=this.__selection.id,this.button=t.detail,this.editor=this.button.editor,this.fields=[...t.detail.fields],this.value={...t.detail.value})}close(){this.for=void 0,this.button=void 0,this.editor=void 0,this.fields=[],this.value={}}_cancel(t){t.preventDefault(),this.button.cancel(),this.close()}_confirm(t){t.preventDefault(),this.button.confirm(this.value),this.close()}}window.customElements.define(RichTextEditorPrompt.tag,RichTextEditorPrompt);export{RichTextEditorPrompt};window.RichTextEditorPrompt=window.RichTextEditorPrompt||{},window.RichTextEditorPrompt.requestAvailability=()=>(window.RichTextEditorPrompt.instance||(window.RichTextEditorPrompt.instance=document.createElement("rich-text-editor-prompt"),document.body.appendChild(window.RichTextEditorPrompt.instance)),window.RichTextEditorPrompt.instance);