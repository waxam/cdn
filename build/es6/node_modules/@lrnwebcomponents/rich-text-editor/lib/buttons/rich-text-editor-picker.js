/**
 * Copyright 2019 Penn State University
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement as t,html as e,css as i}from"../../../../lit-element/lit-element.js";import{RichTextEditorButtonBehaviors as r}from"./rich-text-editor-button.js";import"../../../simple-picker/simple-picker.js";const RichTextEditorPickerBehaviors=function(t){return class extends(r(t)){static get tag(){return"rich-text-editor-picker"}static get styles(){return[...super.styles,i`
          :host {
            margin: 0 var(--rich-text-editor-button-margin);
          }
          .rtebutton {
            margin-top: 0;
            margin-bottom: 0;
            --simple-picker-border-radius: 0px;
            --simple-picker-color: var(--rich-text-editor-button-color);
            --simple-picker-color-active: var(
              --rich-text-editor-button-hover-color
            );
            --simple-picker-color-disabled: var(
              --rich-text-editor-border-color
            );
            --simple-picker-background-color: var(--rich-text-editor-bg);
            --simple-picker-background-color-disabled: var(
              --rich-text-editor-border-color
            );
            --simple-picker-border-width: 0px;
            --simple-picker-option-size: 24px;
            --simple-picker-icon-size: 16px;
            --simple-picker-options-border-width: 1px;
          }
        `]}render(){return e`
        <simple-picker
          id="button"
          ?allow-null="${this.allowNull}"
          class="rtebutton ${this.toggled?"toggled":""}"
          ?disabled="${this.disabled}"
          controls="${super.controls}"
          .options="${this.options}"
          @mouseover="${this._pickerFocus}"
          @keydown="${this._pickerFocus}"
          @value-changed="${this._pickerChange}"
          tabindex="0"
          ?title-as-html="${this.titleAsHtml}"
        >
          <span id="label" class="${super.labelStyle}"
            >${this.currentLabel}</span
          >
        </simple-picker>
        <simple-tooltip id="tooltip" for="button"
          >${this.currentLabel}</simple-tooltip
        >
      `}static get properties(){return{...super.properties,allowNull:{type:Boolean},command:{type:String},icon:{type:String},titleAsHtml:{type:Boolean},value:{type:Object}}}constructor(){super(),this.allowNull=!1,this.command="insertHTML",this.label="Insert link",this.titleAsHtml=!1,this.value=null}firstUpdated(t){super.firstUpdated(t),this._setOptions()}_pickerFocus(t){t.preventDefault()}get isToggled(){return!1}_rangeChanged(){let t=this._getSelection();this.shadowRoot&&(this.blockSelectors.split(",").includes(t)?this.shadowRoot.querySelector("#button").value=t:this.range&&!this.range.collapsed||(this.shadowRoot.querySelector("#button").value=null)),super._rangeChanged()}_setOptions(){return this.options=this._setPickerOptions()}_setPickerOptions(t=this.options||[]){let e=[],i=Math.sqrt(t.length)<11?Math.ceil(Math.sqrt(t.length)):10;return t.forEach((t,r)=>{let o=Math.floor(r/i),s=r-o*i;e[o]||(e[o]=[]),e[o][s]=t}),e}_pickerChange(t){let e=this._getSelectionType()||"";this.commandVal=t.detail.value||"",this.range&&e!==this.commandVal&&("formatBlock"===this.command?this.setRange():this.__selection.selectRange(this.range),this.execCommand())}}};class RichTextEditorPicker extends(RichTextEditorPickerBehaviors(t)){}window.customElements.define(RichTextEditorPicker.tag,RichTextEditorPicker);export{RichTextEditorPicker,RichTextEditorPickerBehaviors};