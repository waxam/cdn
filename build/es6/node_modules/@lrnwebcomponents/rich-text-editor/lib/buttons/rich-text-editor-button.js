/**
 * Copyright 2019 Penn State University
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement as t,html as e,css as o}from"../../../../lit-element/lit-element.js";import{RichTextEditorButtonStyles as n}from"./rich-text-editor-button-styles.js";import"../../../../@polymer/paper-button/paper-button.js";import"../../../../@polymer/iron-a11y-keys/iron-a11y-keys.js";import"../singletons/rich-text-editor-selection.js";const RichTextEditorButtonBehaviors=function(t){return class extends(n(t)){static get tag(){return"rich-text-editor-button"}static get styles(){return[...super.styles,o`
          .rtebutton {
            min-width: var(--rich-text-editor-button-min-width);
            height: var(--rich-text-editor-button-height);
            margin: var(--rich-text-editor-button-margin);
            padding: var(--rich-text-editor-button-padding);
          }
        `]}render(){return e`
        <iron-a11y-keys
          id="a11y"
          .target="${this.__a11y}"
          keys="enter"
          @keys-pressed="${this._buttonTap}"
        >
        </iron-a11y-keys>
        <paper-button
          id="button"
          class="rtebutton"
          ?disabled="${this.disabled}"
          ?controls="${this.controls}"
          @click="${this._buttonTap}"
          tabindex="0"
          ?toggled="${this.isToggled}"
        >
          <iron-icon id="icon" aria-hidden="true" icon="${this.currentIcon}">
          </iron-icon>
          <span id="label" class="${this.labelStyle}"
            >${this.currentLabel}</span
          >
        </paper-button>
        <simple-tooltip id="tooltip" for="button"
          >${this.currentLabel}</simple-tooltip
        >
      `}static get properties(){return{controls:{type:String},command:{type:String},commandVal:{attribute:"command-val",type:Object},disabled:{type:Boolean},icon:{type:String},label:{type:String},range:{type:Object},shortcutKeys:{attribute:"shortcut-keys",type:String},showTextLabel:{attribute:"show-text-label",type:Boolean},tag:{type:String},target:{type:Object},toggledCommand:{attribute:"toggled-command",type:String},toggledCommandVal:{attribute:"toggled-command-val",type:Object},toggledIcon:{attribute:"toggled-icon",type:String},toggledLabel:{attribute:"toggled-label",type:String},toggles:{type:Boolean},__selection:{type:Object}}}constructor(){super(),this.__selection=window.RichTextEditorSelection.requestAvailability(),this.disabled=!1,this.showTextLabel=!1,this.toggles=!1,import("../../../../@polymer/iron-icons/iron-icons.js"),import("../../../../@polymer/iron-icons/editor-icons.js"),import("../../../../@polymer/iron-icons/image-icons.js"),import("../../../md-extra-icons/md-extra-icons.js"),import("../../../simple-tooltip/simple-tooltip.js")}get blockSelectors(){return"p,h1,h2,h3,h4,h5,h6,div,address,blockquote,pre"}get currentLabel(){return this._regOrToggled(this.label,this.toggledLabel,this.isToggled)}get currentIcon(){return this._regOrToggled(this.icon,this.toggledIcon,this.isToggled)}get labelStyle(){return this.icon&&""!==this.icon&&!1===this.showTextLabel?"offscreen":null}get isToggled(){let t=!(!this.range||!this.command)&&document.queryCommandState(this.command),e="underline"===this.command?null!==this._getSelectedBlock("u"):t;return!!(this.range&&this.toggles&&e)}get validCommands(){return["backColor","bold","createLink","copy","cut","defaultParagraphSeparator","delete","fontName","fontSize","foreColor","formatBlock","forwardDelete","insertHorizontalRule","insertHTML","insertImage","insertLineBreak","insertOrderedList","insertParagraph","insertText","insertUnorderedList","justifyCenter","justifyFull","justifyLeft","justifyRight","outdent","paste","redo","selectAll","strikethrough","styleWithCss","superscript","undo","unlink","useCSS"]}updated(t){super.updated(t),t.forEach((t,e)=>{"controls"===e&&this._editorChanged(),"range"===e&&this._rangeChanged(),"commandVal"===e&&this._commandValChanged(),"toggledCommandVal"===e&&this._toggledCommandValChanged()})}connectedCallback(){super.connectedCallback(),this.__a11y=this.shadowRoot.querySelector("#button")}disconnectedCallback(){super.disconnectedCallback()}get operationCommand(){return this.isToggled&&this.toggledCommand?this.toggledCommand:this.command}get operationCommandVal(){return this.isToggled&&this.toggledCommand?this.toggledCommandVal||"":this.commandVal}execCommand(){this.range&&(document.execCommand(this.operationCommand,!1,this.operationCommandVal),this.dispatchEvent(new CustomEvent(this.operationCommand+"-button",{bubbles:!0,cancelable:!0,composed:!0,detail:this})))}setRange(){let t=this._getSelectedBlock();t&&this.__selection.selectNode(t)}_buttonTap(t){t.preventDefault(),"formatBlock"===this.command&&this.setRange(),this.execCommand()}_commandValChanged(){this.dispatchEvent(new CustomEvent("command-val-changed",{bubbles:!0,cancelable:!0,composed:!0,detail:this}))}_getSelection(){return"formatBlock"===this.command?this._getSelectedBlock():this._getSelectedHtml()}_getSelectionType(){return"formatBlock"===this.command?this._getSelectedTag():this._getSelectedHtml()}_getSelectedBlock(t=this.blockSelectors){console.log("_getSelectedBlock",this.range,!this.range||!this.range.cloneContents()||this.range.cloneContents().childNodes,!this.range||this.range.commonAncestorContainer.childNodes);let e=!(!this.range||!this.range.cloneContents())&&this.range.cloneContents().childNodes,o=!(!t||""===t)&&t.split(",");if(console.log("_getSelectedBlock 1",e,o),o&&e&&1===e.length&&e[0].tagName&&o.includes(e[0].tagName.toLowerCase())){let t=this.range.startContainer;return console.log("_getSelectedBlock 1a",t,t.childNodes[this.range.startOffset]),t.childNodes[this.range.startOffset]}if(this.range){let e=this.range.commonAncestorContainer,o=1===e.nodeType?e.closest(t):1===e.parentNode.nodeType?e.parentNode.closest(t):void 0;return console.log("_getSelectedBlock 2",this.range,e,o),o}}_getSelectedHtml(){if(this.range){let t,e=document.createElement("div"),o=this.range.cloneContents();return e.appendChild(o),t=e.innerHTML,e.remove(),t?t.trim():void 0}}_getSelectedTag(){let t=this._getSelectedBlock();return!(!t||!t.tagName)&&t.tagName.toLowerCase()}_editorChanged(t,e){this.dispatchEvent(new CustomEvent(this.command+"-button-editor-change",{bubbles:!0,cancelable:!0,composed:!0,detail:this}))}_keysPressed(t){t.preventDefault(),this._buttonTap(t)}_rangeChanged(){this.dispatchEvent(new CustomEvent("range-changed",{bubbles:!0,cancelable:!0,composed:!0,detail:this}))}_regOrToggled(t,e,o){return e&&o?e:t}_toggledCommandValChanged(){this.dispatchEvent(new CustomEvent("toggled-command-val-changed",{bubbles:!0,cancelable:!0,composed:!0,detail:this}))}}};class RichTextEditorButton extends(RichTextEditorButtonBehaviors(t)){}window.customElements.define(RichTextEditorButton.tag,RichTextEditorButton);export{RichTextEditorButton,RichTextEditorButtonBehaviors};