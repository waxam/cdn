/**
 * Copyright 2019 Penn State University
 * @license Apache-2.0, see License.md for full text.
 */
import{html as e,PolymerElement as t}from"../../../../@polymer/polymer/polymer-element.js";import"../../../../@polymer/paper-button/paper-button.js";import"../../../simple-tooltip/simple-tooltip.js";import"../../../../@polymer/iron-a11y-keys/iron-a11y-keys.js";import"../../../../@polymer/iron-icons/iron-icons.js";import"./rich-text-editor-button-styles.js";import"../singletons/rich-text-editor-selection.js";class RichTextEditorButton extends t{static get template(){return e`
      <style include="rich-text-editor-button-styles">
        :host .rtebutton {
          min-width: var(--rich-text-editor-button-min-width);
          height: var(--rich-text-editor-button-height);
          margin: var(--rich-text-editor-button-margin);
          padding: var(--rich-text-editor-button-padding);
        }
      </style>
      <iron-a11y-keys
        id="a11y"
        target="[[__a11y]]"
        keys="enter"
        on-keys-pressed="_buttonTap"
      >
      </iron-a11y-keys>
      <paper-button
        id="button"
        class="rtebutton"
        disabled$="[[disabled]]"
        controls$="[[controls]]"
        on-click="_buttonTap"
        tabindex="0"
        toggled$="[[toggled]]"
      >
        <iron-icon
          id="icon"
          aria-hidden
          icon$="[[_regOrToggled(icon,toggledIcon,toggled)]]"
        >
        </iron-icon>
        <span id="label" class$="[[labelStyle]]">[[__label]]</span>
      </paper-button>
      <simple-tooltip id="tooltip" for="button">[[__label]]</simple-tooltip>
    `}static get properties(){return{controls:{name:"controls",type:String,observer:"_editorChanged"},command:{name:"command",type:String},commandVal:{name:"commandVal",type:Object,value:null,notify:!0},disabled:{name:"disabled",type:Boolean,value:!1},icon:{name:"icon",type:String,value:null},label:{name:"label",type:String,value:null},labelStyle:{name:"labelStyle",type:String,computed:"_labelStyle(icon,showTextLabel)",readOnly:!0},range:{name:"range",type:Object,notify:!0,value:null},shortcutKeys:{name:"shortcutKeys",type:String,value:null},showTextLabel:{name:"showTextLabel",type:Boolean,value:!1},target:{name:"target",type:Object,value:null},toggled:{name:"toggled",type:Boolean,computed:"_isToggled(range)",notify:!0},__label:{name:"__label",type:String,computed:"_getLabel(range,command,toggles)",notify:!0},toggledCommand:{name:"toggledCommand",type:String,value:null},toggledCommandVal:{name:"toggledCommandVal",type:Object,value:null},toggledIcon:{name:"toggledIcon",type:String,value:null},toggledLabel:{name:"toggledLabel",type:String,value:null},toggles:{name:"toggles",type:Boolean,value:!1},validCommands:{name:"validCommands",type:Array,value:["backColor","bold","createLink","copy","cut","defaultParagraphSeparator","delete","fontName","fontSize","foreColor","formatBlock","forwardDelete","insertHorizontalRule","insertHTML","insertImage","insertLineBreak","insertOrderedList","insertParagraph","insertText","insertUnorderedList","justifyCenter","justifyFull","justifyLeft","justifyRight","outdent","paste","redo","selectAll","strikethrough","styleWithCss","superscript","undo","unlink","useCSS"],readOnly:!0}}}static get tag(){return"rich-text-editor-button"}ready(){super.ready();this.addEventListener("mousedown",(function(e){console.log("mousedown",e)})),this.addEventListener("keypress",(function(e){e.preventDefault()}))}connectedCallback(){super.connectedCallback(),this.__a11y=this.shadowRoot.querySelector("#button")}disconnectedCallback(){super.disconnectedCallback()}doTextOperation(){let e=this,t=e.range;e.toggled&&null!==e.toggledCommand?document.execCommand(e.toggledCommand,!1,e.toggledCommand||""):null!==e.command&&(e.dispatchEvent(new CustomEvent(e.command+"-button",{bubbles:!0,cancelable:!0,composed:!0,detail:e})),console.log("doTextOperation",t,e.command,!1,e.commandVal||""),document.execCommand(e.command,!1,e.commandVal||""),e.range=t)}_buttonTap(e){e.preventDefault(),console.log("_buttonTap",e),this.doTextOperation()}_editorChanged(e,t){this.dispatchEvent(new CustomEvent(this.command+"-button-editor-change",{bubbles:!0,cancelable:!0,composed:!0,detail:this}))}_getLabel(e,t,o){let n=!(null===this.command||!o)&&document.queryCommandState(t);return this._regOrToggled(this.label,this.toggledLabel,n)}_isToggled(e){return!(null===this.command||!this.toggles)&&document.queryCommandState(this.command)}_keysPressed(e){console.log("_keysPressed",e),e.preventDefault(),this._buttonTap(e)}_regOrToggled(e,t,o){return null!==t&&o?t:e}_labelStyle(e,t){return null!=e&&""!==e&&!1===t?"offscreen":null}}window.customElements.define(RichTextEditorButton.tag,RichTextEditorButton);export{RichTextEditorButton};