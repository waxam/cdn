import{html,Polymer}from"@polymer/polymer/polymer-legacy.js";import"@lrnwebcomponents/smooth-scroll/smooth-scroll.js";import"./lib/map-menu-container.js";import"./lib/map-menu-builder.js";let MapMenu=Polymer({_template:html`
    <style>
      :host {
        --map-menu-active-color: rgba(0, 0, 0, 0.1);
        display: block;
        overflow-y: scroll;
        position: relative;
        height: 100%;
      }

      #activeIndicator {
        background: var(--map-menu-active-color);
        transition: all 0.3s ease-in-out;
        position: absolute;
      }

      map-menu-container {
        padding: 32px;
        @apply --map-menu-container;
      }

      /* turn default active color if indicator is on */
      :host([active-indicator]) map-menu-builder {
        --map-menu-active-color: transparent;
      }
    </style>
    <div id="itemslist">
      <map-menu-container>
        <div id="activeIndicator"></div>
        <map-menu-builder id="builder" items="[[items]]"></map-menu-builder>
      </map-menu-container>
    </div>
    <smooth-scroll id="smoothScroll"></smooth-scroll>
  `,is:"map-menu",properties:{title:{type:String,value:"Content Outline"},data:{type:Array,value:null},items:{type:Array,value:null,notify:!0},selected:{type:String,notify:!0,observer:"__selectedChanged"},autoScroll:{type:Boolean,value:!1},activeIndicator:{type:Boolean,value:!1}},observers:["_dataChanged(data)"],listeners:{"link-clicked":"__linkClickedHandler","child-attached":"__childAttached","toggle-updated":"__toggleUpdated"},__selectedChanged:function(a,b){a!==b&&this.refreshActiveChildren(a)},refreshActiveChildren:function(a,b=100){const c=this.querySelector("[active]");if(a&&""!==a){const f=this.querySelector(`#${a}`);f&&(f.setAttribute("active",!0),this.activeIndicator&&this.__updateActiveIndicator(f,b),this.autoScroll&&this.$.smoothScroll.scroll(f,{duration:300,scrollElement:this}))}c&&c.removeAttribute("active")},setData:function(a){this.set("data",[]),this.set("data",a)},_dataChanged:function(a){const b=[];a&&(a.forEach(c=>{c.parent||b.push(c)}),b.forEach(c=>{this._setChildren(c,a)}),this.set("items",[]),this.set("items",b))},_setChildren:function(a,b){const c=b.filter(f=>a.id===f.parent);a.children=c,0<a.children.length&&a.children.forEach(f=>{this._setChildren(f,b)})},__hasChildren:function(a){return 0<a.children.length},__linkClickedHandler:function(a){this.selected=a.detail.id,this.fire("selected",a.detail.id)},__childAttached:function(a){const b=a.detail.id;b===this.selected&&this.refreshActiveChildren(this.selected)},__toggleUpdated:function(){this.refreshActiveChildren(this.selected,300)},__isInViewport:function(a){const b=this.__getScrollParent(a);if(!b)return!1;var c=a.offsetTop,f=c+a.offsetHeight,g=b.offsetTop,h=g+b.offsetHeight;return f>g&&c<h},__getScrollParent:function(a){return null==a?null:a.scrollHeight>a.clientHeight?a:this.__getScrollParent(a.parentNode)},__updateActiveIndicator:function(a,b=100){setTimeout(()=>{const c=this.$.activeIndicator,f=this.__parentsHidden(a),g=a.offsetLeft,h=a.offsetBottom,j=a.offsetTop,k=a.offsetWidth,l=f?0:a.offsetHeight;b=0<l?b:10,c.setAttribute("style",`width:${k}px;height:${l}px;top:${j}px;left:${g}px`)},b)},__parentsHidden:function(a){const b=a.parentNode;return null==b?null:"MAP-MENU-SUBMENU"!==b.tagName||b.opened?"MAP-MENU"!==b.tagName&&this.__parentsHidden(b):!0}});export{MapMenu};