import{LitElement as e,html as t,css as a}from"../../../lit-element/lit-element.js";class MapMenuBuilder extends e{static get styles(){return[a`
        :host {
          display: block;
        }
      `]}constructor(){super(),this.items=[],import("./map-menu-submenu.js"),import("./map-menu-item.js")}render(){return t`
      ${this.items?this.items.map(e=>t`
              ${e.children.length>0?t`
                    <map-menu-submenu
                      title="${e.title}"
                      id="${e.id}"
                      url="${e.slug}"
                      icon="${e.metadata&&e.metadata.icon?e.metadata.icon:""}"
                      open="${!(!e.metadata||!e.metadata.active)&&e.metadata.active}"
                      avatar-label="${e.metadata&&e.metadata.avatarLabel?e.metadata.avatarLabel:""}"
                      selected="${this.selected}"
                    >
                      <map-menu-builder
                        .items="${e.children}"
                        selected="${this.selected}"
                      ></map-menu-builder>
                    </map-menu-submenu>
                  `:t`
                    <map-menu-item
                      title="${e.title}"
                      id="${e.id}"
                      url="${e.slug}"
                      icon="${e.metadata&&e.metadata.icon?e.metadata.icon:""}"
                      track-icon="${e.metadata&&e.metadata.accessData&&e.metadata.accessData.trackIcon?e.metadata.accessData.trackIcon:""}"
                      active-path="${this.activePath}"
                      selected="${this.selected}"
                    ></map-menu-item>
                  `}
            `):""}
    `}static get tag(){return"map-menu-builder"}static get properties(){return{items:{type:Array},selected:{type:String}}}createRenderRoot(){return this}}window.customElements.define(MapMenuBuilder.tag,MapMenuBuilder);export{MapMenuBuilder};