import{LitElement as t,html as i,css as e}from"../../../lit/index.js";import"../../simple-icon/lib/simple-icon-lite.js";import"../../simple-icon/lib/simple-icons.js";class MapMenuItem extends t{static get styles(){return[e`
        :host {
          display: block;
          transition: 0.1s all ease-in-out;
          font-size: var(--map-menu-item-font-size);
          --map-menu-item-height: 42px;
          --map-menu-item-icon-height: 24px;
          overflow: var(--map-menu-item-overflow, hidden);
        }
        :host([active]) {
          background: var(--map-menu-active-color);
          color: var(--map-menu-item-active-item-color, #000000);
        }
        simple-icon-lite {
          display: inline-block;
          --simple-icon-height: var(--map-menu-item-icon-height);
          --simple-icon-width: var(--map-menu-item-icon-height);
        }
        .title {
          text-transform: none;
        }
        a,
        a:visited {
          display: block;
          color: var(--map-menu-item-a-color, inherit);
          text-decoration: var(--map-menu-item-a-text-decoration, none);
        }
        a:hover button,
        a:active button,
        a:focus button {
          color: var(
            --map-menu-item-a-active-color,
            var(--map-menu-item-a-color, inherit)
          );
          text-decoration: var(
            --map-menu-item-a-text-decoration-hover,
            underline
          );
        }
        #track {
          transition: 0.1s all ease-in-out;
          position: absolute;
          right: 0;

          margin-right: 0px;
          width: 0px;
          height: 0px;
          visibility: hidden;
          opacity: 0;
        }
        #track.show-icon {
          margin-right: 5px;
          width: 18px;
          height: 18px;
          visibility: visible;
          opacity: 1;
        }
        button {
          cursor: pointer;
          color: inherit;
          background-color: transparent;
          text-transform: none;
          width: 100%;
          justify-content: left;
          margin: 0px;
          border: 0;
          height: var(
            --map-menu-item-button-height,
            var(--map-menu-item-height)
          );
          padding: 4px;
          text-align: left;
          border-radius: 0;
        }
      `]}render(){return i`
      <a tabindex="-1" href="${this.url}">
        <button id="wrapper" role="link" noink>
          ${this.__icon?i`
                <simple-icon-lite icon="${this.__icon}"></simple-icon-lite>
              `:""}
          <span class="title">${this.title}</span>
          ${this.trackIcon?i`
                <simple-icon-lite
                  id="track"
                  icon="${this.trackIcon}"
                ></simple-icon-lite>
              `:""}
        </button>
      </a>
    `}static get tag(){return"map-menu-item"}constructor(){super(),this.icon=null,this.__icon=null,this.trackIcon=null,this.title="",this.url="",this.active=!1,this.published=!0}static get properties(){return{icon:{type:String,reflect:!0},__icon:{type:String},trackIcon:{type:String,attribute:"track-icon"},title:{type:String},url:{type:String},id:{type:String,reflect:!0},active:{type:Boolean},selected:{type:String},published:{type:Boolean}}}updated(t){t.forEach(((t,i)=>{"trackIcon"==i&&this._trackIconChanged(this[i],t),"icon"==i&&(this.__icon=this[i]),["id","selected"].includes(i)&&this.__selectedChanged(this.selected,this.id),"published"==i&&this[i]&&!1===this.published&&(this.__icon="visibility-off")}))}_trackIconChanged(t,i){this.shadowRoot.querySelector("#track")&&(t?this.shadowRoot.querySelector("#track").classList.add("show-icon"):this.shadowRoot.querySelector("#track").classList.remove("show-icon"))}__selectedChanged(t,i){t===i&&this.dispatchEvent(new CustomEvent("active-item",{bubbles:!0,cancelable:!0,composed:!0,detail:this}))}_click(){this.dispatchEvent(new CustomEvent("link-clicked",{bubbles:!0,cancelable:!0,composed:!0,detail:{id:this.id}}))}}window.customElements.define(MapMenuItem.tag,MapMenuItem);export{MapMenuItem};