import{html,PolymerElement}from"../../@polymer/polymer/polymer-element.js";import"./lib/absolute-position-state-manager.js";class AbsolutePositionBehavior extends PolymerElement{static get template(){return html`
      <style>
        :host {
          display: inline-block;
        }

        :host([hidden]) {
          display: none;
        }
      </style>
      <slot></slot>
    `}static get properties(){let props={auto:{type:Boolean,value:!1},fitToVisibleBounds:{type:Boolean,value:!1,observer:"updatePosition"},for:{type:String,observer:"updatePosition",reflectToAttribute:!0},offset:{type:Number,value:0,observer:"updatePosition"},position:{type:String,value:"bottom",observer:"updatePosition",reflectToAttribute:!0},target:{type:Object,observer:"updatePosition"},__positions:{type:Object}};return super.properties&&(props=Object.assign(props,super.properties)),props}static get tag(){return"absolute-position-behavior"}connectedCallback(){super.connectedCallback();this.__observe=!1,this.__manager=window.AbsolutePositionStateManager.requestAvailability(),!1!==this.auto&&this.setPosition()}ready(){super.ready()}setPosition(){this.__observe=!0,this.__manager.loadElement(this)}unsetPosition(){this.__observe=!1,this.__manager.unloadElement(this)}updatePosition(){let root=this;!0===root.__observe&&root.__manager.positionElement(root)}disconnectedCallback(){this.unsetPosition(),super.disconnectedCallback()}}window.customElements.define(AbsolutePositionBehavior.tag,AbsolutePositionBehavior);export{AbsolutePositionBehavior};