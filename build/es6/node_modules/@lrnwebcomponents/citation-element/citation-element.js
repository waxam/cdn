import{html,PolymerElement}from"../../@polymer/polymer/polymer-element.js";import{afterNextRender}from"../../@polymer/polymer/lib/utils/render-status.js";import{dom}from"../../@polymer/polymer/lib/legacy/polymer.dom.js";import{HAXWiring}from"../hax-body-behaviors/lib/HAXWiring.js";import{SchemaBehaviors}from"../schema-behaviors/schema-behaviors.js";import{licenseList}from"../license-element/license-element.js";class CitationElement extends(SchemaBehaviors(PolymerElement)){static get template(){return html`
      <style>
        :host {
          display: block;
          color: var("--license-text-color");
        }
        :host([display-method="footnote"]) {
          visibility: hidden;
          opacity: 0;
        }
        :host([display-method="popup"]) {
          display: block;
        }
        .license-link {
          font-size: 16px;
          line-height: 16px;
          font-style: italic;
        }
        .citation-date {
          font-size: 16px;
          line-height: 16px;
          font-style: italic;
        }
        .license-link img {
          height: 16px;
          min-width: 16px;
          margin-right: 8px;
        }
      </style>
      <meta
        about\$="[[relatedResource]]"
        property="cc:attributionUrl"
        content\$="[[source]]"
      />
      <meta
        about\$="[[relatedResource]]"
        property="cc:attributionName"
        typeof="oer:Text"
        content\$="[[title]]"
      />
      <meta
        rel="cc:license"
        href\$="[[licenseLink]]"
        content\$="License: [[licenseName]]"
      />
      <cite
        ><a target="_blank" href="[[source]]">[[title]]</a> by [[creator]],
        licensed under
        <a class="license-link" target="_blank" href="[[licenseLink]]"
          ><img
            alt="[[licenseName]] graphic"
            src="[[licenseImage]]"
            hidden&="[[!licenseImage]]"
          />[[licenseName]]</a
        >. Accessed <span class="citation-date">[[date]]</span>.</cite
      >
    `}static get tag(){return"citation-element"}static get properties(){let props={title:{type:String},scope:{type:String,value:"sibling",observer:"_scopeChanged"},displayMethod:{type:String,reflectToAttribute:!0},creator:{type:String},source:{type:String},date:{type:String},licenseName:{type:String},licenseLink:{type:String},license:{type:String,observer:"_licenseUpdated"},_aboutLink:{type:Object,computed:"_generateAboutLink(relatedResource, licenseLink)"},_licenseLink:{type:Object,computed:"_generateLicenseLink(source)"}};return super.properties&&(props=Object.assign(props,super.properties)),props}_generateLicenseLink(source){this._licenseLink&&document.head.removeChild(this._licenseLink);let link=document.createElement("link");return link.setAttribute("typeof","resource"),link.setAttribute("rel","license"),link.setAttribute("src",source),document.head.appendChild(link),link}_generateAboutLink(relatedResource,licenseLink){this._aboutLink&&document.head.removeChild(this._aboutLink);let link=document.createElement("link");return link.setAttribute("about",relatedResource),link.setAttribute("property","cc:license"),link.setAttribute("content",licenseLink),document.head.appendChild(link),link}_scopeChanged(newValue,oldValue){if("sibling"===newValue&&null!==dom(this).previousElementSibling){if(dom(this).previousElementSibling.getAttribute("resource"))this.relatedResource=dom(this).previousElementSibling.getAttribute("resource");else{let uuid=this.generateResourceID();this.relatedResource=uuid,dom(this).previousElementSibling.setAttribute("resource",uuid)}dom(this).previousElementSibling.setAttribute("prefix",this.getAttribute("prefix"))}else if("parent"===newValue){if(dom(this).parentNode.getAttribute("resource"))this.relatedResource=dom(this).parentNode.getAttribute("resource");else{let uuid=this.generateResourceID();this.relatedResource=uuid,dom(this).parentNode.setAttribute("resource",uuid)}dom(this).parentNode.setAttribute("prefix",this.getAttribute("prefix"))}}static get haxProperties(){return{canScale:!1,canPosition:!1,canEditSource:!1,gizmo:{title:"Citation",description:"A basic citation element with 3 presentation modes",icon:"editor:title",color:"grey",groups:["Content","Text","Copyright"],handles:[{type:"citation",source:"source",title:"title",author:"creator",license:"license",accessDate:"date"}],meta:{author:"LRNWebComponents"}},settings:{quick:[{property:"title",title:"Title",description:"The title of the work being cited.",inputMethod:"textfield",icon:"editor:title"}],configure:[{property:"title",title:"Title",description:"The title of the work being cited.",inputMethod:"textfield",icon:"editor:title"},{property:"source",title:"Source link",description:"The source url for the element this is citing.",inputMethod:"textfield",icon:"link",validationType:"url"},{property:"date",title:"Date accessed",description:"The date this was accessed.",inputMethod:"textfield",icon:"link"},{property:"scope",title:"Scope",description:"Scope of what to cite.",inputMethod:"select",options:{sibling:"Sibling element",parent:"Parent element"},icon:"code"},{property:"license",title:"License",description:"The source url for the element this is citing.",inputMethod:"select",options:new licenseList("select"),icon:"link"},{property:"creator",title:"Creator",description:"Who made or owns this.",inputMethod:"textfield",icon:"link"}],advanced:[]}}}connectedCallback(){super.connectedCallback(),afterNextRender(this,function(){this.HAXWiring=new HAXWiring,this.HAXWiring.setup(CitationElement.haxProperties,CitationElement.tag,this)})}_licenseUpdated(newValue,oldValue){if(void 0!==newValue){var list=new licenseList;void 0!==list[newValue]&&(this.licenseName=list[newValue].name,this.licenseLink=list[newValue].link,this.licenseImage=list[newValue].image)}}}window.customElements.define(CitationElement.tag,CitationElement);export{CitationElement};