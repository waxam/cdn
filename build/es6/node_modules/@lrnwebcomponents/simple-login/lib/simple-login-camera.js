import"../../es-global-bridge/es-global-bridge.js";class SimpleLoginCamera extends HTMLElement{static get tag(){return"simple-login-camera"}pathFromUrl(e){return e.substring(0,e.lastIndexOf("/")+1)}constructor(){super();const e=`${this.pathFromUrl(decodeURIComponent(import.meta.url))}../../../msr/MediaStreamRecorder.min.js`;window.ESGlobalBridge.requestAvailability(),window.ESGlobalBridge.instance.load("msr",e),window.addEventListener("es-bridge-msr-loaded",this._msrLoaded.bind(this)),this._shadow=this.attachShadow({mode:"closed"}),this._shadow.innerHTML=this.html,this._video=this._shadow.querySelector("video"),this._error=this._shadow.querySelector("p"),this._record=this._shadow.querySelector("button.record"),this._pauseRecord=this._shadow.querySelector("button.pause-record"),document.addEventListener("DOMContentLoaded",this.documentLoaded.bind(this)),this.hasAttribute("record")?(this._record.addEventListener("click",()=>this._record.hasAttribute("recording")?(this._record.innerText="Record",this._record.removeAttribute("recording"),this._stopRecording()):(this._record.innerText="Stop & Save",this._record.setAttribute("recording",""),this._startRecording())),this._pauseRecord.addEventListener("click",()=>this._pauseRecord.hasAttribute("resume")?(this._pauseRecord.innerText="Pause record",this._pauseRecord.removeAttribute("resume"),this._resumeRecording()):(this._pauseRecord.innerText="Resume record",this._pauseRecord.setAttribute("resume",""),this._pauseRecording()))):(this._record.remove(),this._pauseRecord.remove())}static get observedAttributes(){return["autoplay","controls","audio"]}_startRecording(){this._pauseRecord.removeAttribute("hidden"),this.MediaStreamRecorder.start(100)}_stopRecording(){this._pauseRecord.setAttribute("hidden",""),this._pauseRecord.removeAttribute("resume"),this.MediaStreamRecorder.stop()}_pauseRecording(){this._record.setAttribute("disabled",""),this.MediaStreamRecorder.pause()}_resumeRecording(){this._record.removeAttribute("disabled"),this.MediaStreamRecorder.resume()}_saveVideo(e){const t=e.type.split("/").pop();this.MediaStreamRecorder.save(e,`my-camera-${(new Date).toISOString().replace(/:|\./g,"-")}.${t}`)}_cameraStream(){return navigator.mediaDevices.getUserMedia?navigator.mediaDevices.getUserMedia({video:{width:{min:320,ideal:1280,max:1920},height:{min:240,ideal:720,max:1080},facingMode:"user"},audio:this.hasAttribute("audio")}):Promise.reject(new Error("getUserMedia is not implemented in this browser"))}takeASnap(){const e=document.createElement("canvas"),t=e.getContext("2d");return e.width=this._video.videoWidth,e.height=this._video.videoHeight,t.drawImage(this._video,0,0),new Promise((t,r)=>{e.toBlob(t,"image/jpeg")})}renderImage(e){let t=document.createElement("img");return t.src=URL.createObjectURL(e),t}imageBlob(e){return e}download(e){let t=document.createElement("a");t.href=URL.createObjectURL(e),t.download="screenshot.jpg",document.body.appendChild(t),t.click()}_addVideoAtributes(){this._video.autoplay=this.hasAttribute("autoplay"),this._video.controls=this.hasAttribute("controls")}_msrLoaded(e){this._applyMSR()}async _applyMSR(){try{this._video.srcObject=await this._cameraStream(),this._addVideoAtributes(),this.hasAttribute("record")&&(this.MediaStreamRecorder=new MediaStreamRecorder(this._video.srcObject),this.MediaStreamRecorder.ondataavailable=this._saveVideo.bind(this)),this._error.remove()}catch(e){if(this._video.remove(),this._record.remove(),this._pauseRecord.remove(),"ConstraintNotSatisfiedError"===e.name)this._error.innerText="The resolution is not supported by your device.";else{if("NotAllowedError"!==e.name)throw this._error.innerText=e.message,Error(e);this._error.innerText="Permissions have not been granted to use your camera and microphone, you need to allow the page access to your devices in order for the demo to work."}}}connectedCallback(){window.ESGlobalBridge&&window.ESGlobalBridge.imports.msr&&this._applyMSR()}documentLoaded(e){window.ESGlobalBridge&&window.ESGlobalBridge.imports.msr&&this._applyMSR()}disconnectedCallback(){document.removeEventListener("DOMContentLoaded",this.documentLoaded.bind(this)),window.removeEventListener("es-bridge-msr-loaded",this._msrLoaded.bind(this))}attributeChangedCallback(e,t,r){}get html(){return'\n      <style>\n        :host {\n          width: var(--simple-login-camera-width, 200px);\n          height: var(--simple-login-camera-height, 200px);\n        }\n        #wrapper {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          flex-direction: column;\n          position: relative;\n          background-color: var(--simple-login-camera-background, var(--background-color, #ccc));\n          width: var(--simple-login-camera-width, 200px);\n          height: var(--simple-login-camera-height, 200px);\n        }\n        video {\n          width: calc(var(--simple-login-camera-height, 200px) * 16 / 9);\n          height: var(--simple-login-camera-height, 200px);\n          background-color: rgba(0, 0, 0, 0);\n        }\n        .error {\n          color: var(-simple-login-camera-error, var(--color, red));\n          font-size: 1em;\n          text-align: center;\n        }\n        .custom-controls {\n          top: 8px;\n          right: 8px;\n          position: absolute;\n        }\n        .custom-controls button {\n          padding: 8px 10px;\n        }\n        [hidden] {\n          display: none;\n        }\n      </style>\n      <div id="wrapper">\n        <video></video>\n        <p class="error"></p>\n        <div class="custom-controls">\n          <button class="record">Record</button>\n          <button class="pause-record" hidden>Pause record</button>\n        </div>\n      </div>\n    '}}navigator.mediaDevices&&window.customElements.define(SimpleLoginCamera.tag,SimpleLoginCamera);export{SimpleLoginCamera};