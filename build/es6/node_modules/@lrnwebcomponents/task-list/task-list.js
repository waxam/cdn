import{LitElement as e,html as t,css as r}from"../../lit-element/lit-element.js";import{SchemaBehaviors as i}from"../schema-behaviors/schema-behaviors.js";class TaskList extends(i(e)){static get styles(){return[r`
        :host {
          display: block;
          border: var(--task-list-border, 1px solid #eeeeee);
          font-size: var(--task-list-font-size, 18px);
          padding: var(--task-list-padding, 16px);
        }
      `]}render(){return t`
      <h3><span property="oer:name">${this.name}</span></h3>
      <ol>
        ${this.tasks.map(e=>t`
            <li>
              ${e.link?t`
                    <a href="${e.link}" property="oer:task">${e.name}</a>
                  `:t`
                    <span property="oer:task">${e.name}</span>
                  `}
            </li>
          `)}
      </ol>
    `}static get tag(){return"task-list"}static get properties(){return{...super.properties,name:{type:String},relatedResource:{type:String,attribute:"related-resource"},tasks:{type:Array},_resourceLink:{type:Object}}}constructor(){super(),this.tasks=[],this.name="Steps to completion"}updated(e){e.forEach((e,t)=>{if(["tasks"].includes(t)){let e=`${t.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g,"$1-$2").toLowerCase()}-changed`;this.dispatchEvent(new CustomEvent(e,{detail:{value:this[t]}}))}"relatedResource"==t&&(this._resourceLink=this._generateResourceLink(this[t]))})}_generateResourceLink(e){this._resourceLink&&document.head.removeChild(this._resourceLink);let t=document.createElement("link");return t.setAttribute("property","oer:forComponent"),t.setAttribute("content",e),document.head.appendChild(t),t}firstUpdated(){setTimeout(()=>{this.setAttribute("typeof","oer:SupportingMaterial")},0)}static get haxProperties(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"Task list",description:"A list of tasks which is an ordered list",icon:"icons:list",color:"orange",groups:["Content","Instructional"],handles:[],meta:{author:"ELMS:LN"}},settings:{quick:[{property:"name",title:"Name",description:"Name of the list",inputMethod:"textfield",icon:"editor:title"},{property:"relatedResource",title:"Related resource",description:"A reference to the related Schema resource",inputMethod:"textfield",icon:"editor:title"}],configure:[{property:"name",title:"Name",description:"Name of the list",inputMethod:"textfield",icon:"editor:title"},{property:"relatedResource",title:"Related resource",description:"A reference to the related Schema resource",inputMethod:"textfield",icon:"editor:title"},{property:"tasks",title:"Tasks",description:"The tasks to be completed",inputMethod:"array",itemLabel:"label",properties:[{property:"name",title:"Name",description:"Name of the task",inputMethod:"textfield",required:!0},{property:"link",title:"Link",description:"Optional link",inputMethod:"textfield"}]}],advanced:[]},saveOptions:{unsetAttributes:["_resource-link"]}}}}window.customElements.define(TaskList.tag,TaskList);export{TaskList};