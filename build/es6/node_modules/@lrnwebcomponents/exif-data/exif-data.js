/**
 * Copyright 2019 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import"../es-global-bridge/es-global-bridge.js";class ExifData extends HTMLElement{static get tag(){return"exif-data"}pathFromUrl(t){return t.substring(0,t.lastIndexOf("/")+1)}get html(){return'\n    <style>\n      ul.showdata {\n        z-index: 1;\n        visibility: visible;\n        opacity: .9;\n      }\n      ul {\n        position: absolute;\n        transition: 0.3s linear all;\n        background-color: #000000;\n        opacity: 0;\n        visibility: hidden;\n        overflow: scroll;\n        padding: 0;\n        margin: 0;\n      }\n      ul li {\n        padding: 8px;\n        font-size: 14px;\n        color: white;\n      }\n    </style>\n    <slot></slot>\n    <ul id="data"></ul>'}render(){this.shadowRoot.innerHTML=null,this.template.innerHTML=this.html,this.shadowRoot.appendChild(this.template.content.cloneNode(!0))}constructor(){super(),this.nodeData=[];const t=this.pathFromUrl(decodeURIComponent(import.meta.url));window.ESGlobalBridge.requestAvailability(),window.ESGlobalBridge.instance.load("exif-js",`${t}lib/exif-js.js`),window.addEventListener("es-bridge-exif-js-loaded",this._onExifJsLoaded.bind(this)),this.template=document.createElement("template"),this.attachShadow({mode:"open"}),this.render()}_onExifJsLoaded(){window.removeEventListener("es-bridge-exif-js-loaded",this._onExifJsLoaded.bind(this)),this.__ready=!0,this.updateExif()}showDetails(t){if(!t)return;let e=this.alignTarget;e||(e=t.node);const i=e.getBoundingClientRect();var a="";for(var n in t.data)""!=t.data[n]&&0!=t.data[n]&&" "!=t.data[n]&&0!=t.data[n]&&null!=t.data[n]&&(a+=`<li><strong>${n}</strong>: ${t.data[n]}</li>`);this.dataElement.innerHTML=a,this.alignTargetTop?this.dataElement.style.top=this.alignTargetTop:this.dataElement.style.top=i.top+"px",this.dataElement.style.height=i.height+"px",this.dataElement.style.width=i.width+"px",this.noLeft||(this.dataElement.style.left=i.left+"px"),this.dataElement.classList.add("showdata")}clickImage(t){"IMG"===t.target.tagName&&this.nodeData.forEach(e=>{e.node===t.target&&this.showDetails(e)})}getExifData(t){window.EXIF.getData(t,()=>{let e=window.EXIF.getAllTags(t);delete e.MakerNote,delete e.thumbnail,this.nodeData.push({node:t,data:e})})}updateExif(t=!1){this.nodeData=[],this.dataElement.innerHTML="",this.childNodes.forEach(t=>{this.__ready&&t.tagName&&"IMG"===t.tagName&&this.getExifData(t)}),t&&1===this.children.length&&setTimeout(()=>{this.showDetails(this.nodeData[0])},250)}clickData(t){this.dataElement.classList.remove("showdata")}connectedCallback(){window.ShadyCSS&&window.ShadyCSS.styleElement(this),this.dataElement=this.shadowRoot.querySelector("#data"),null==this.getAttribute("no-events")&&(this.addEventListener("click",this.clickImage.bind(this)),this.dataElement.addEventListener("click",this.clickData.bind(this))),null==this.getAttribute("no-left")?this.noLeft=!1:this.noLeft=!0,this.observer=new MutationObserver(t=>{this.updateExif()}),this.observer.observe(this,{childList:!0})}disconnectedCallback(){null==this.getAttribute("no-events")&&(this.removeEventListener("click",this.clickImage.bind(this)),this.dataElement.removeEventListener("click",this.clickData.bind(this))),this.observer.disconnect()}}window.customElements.define(ExifData.tag,ExifData);export{ExifData};