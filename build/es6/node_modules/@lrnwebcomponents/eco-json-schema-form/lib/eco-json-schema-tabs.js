import{html,PolymerElement}from"../../../@polymer/polymer/polymer-element.js";import{dom}from"../../../@polymer/polymer/lib/legacy/polymer.dom.js";import{afterNextRender}from"../../../@polymer/polymer/lib/utils/render-status.js";import{AppLocalizeBehavior}from"../../../@polymer/app-localize-behavior/app-localize-behavior.js";import{mixinBehaviors}from"../../../@polymer/polymer/lib/legacy/class.js";import"../../a11y-tabs/a11y-tabs.js";class EcoJsonSchemaTabs extends(mixinBehaviors([AppLocalizeBehavior],PolymerElement)){static get tag(){return"eco-json-schema-tabs"}static get template(){return html`
      <custom-style>
        <style is="custom-style" include="iron-flex iron-flex-alignment">
          :host{
            color: var(--eco-json-form-color);
            background-color: var(--eco-json-form-bg);
            font-family: var(--eco-json-form-font-family);
          }
          :host ([hidden]) {
            display: none;
          }
          :host #form {
            --a11y-tabs-color: var(--eco-json-form-faded-color);
            --a11y-tabs-focus-color: var(--eco-json-form-color);
            --a11y-tabs-border-color: var(--eco-json-form-faded-color);
            --a11y-tabs-border-radius: var(--eco-json-form-border-radius);
            --a11y-tabs-background: var(--eco-json-form-bg);
            --a11y-tabs-faded-background: var(--eco-json-form-faded-bg);
            --a11y-tabs-justify-tabs: flex-start;
            --ally-tabs-wrap: unset;
            --a11y-tabs-content-padding: 8px 16px 16px;
            --a11y-tabs-button-padding: 8px;
            --a11y-tabs-vertical-button-padding: unset;
            --a11y-tabs-horizontal-border-radius: unset;
            --a11y-tabs-vertical-border-radius: unset;
            --a11y-tabs-horizontal-button-padding: 2px 5px;
          }
          :host #form:focus,
          :host #form:focus-within {
            --a11y-tabs-border-color: : var(--eco-json-form-focus-color);
          }
          :host .tab-title {
            position: absolute;
            left: -99999px;
            height: 0;
            overflow: hidden;
          }
        </style>
      </custom-style>
      <a11y-tabs id="form">
        <template
          is="dom-repeat"
          items="[[__validatedSchema]]"
          as="item"
          restamp
        >
          <a11y-tab
            id$="item-[[index]]"
            icon$="[[item.icon]]"
            label$="[[item.title]]"
          >
            <eco-json-schema-object
              id="schemaobject"
              controls$="item-[[index]]"
              item="[[index]]"
              autofocus$="[[autofocus]]"
              on-value-changed="_valueChanged"
              hide-line-numbers$="[[hideLineNumbers]]"
              schema="[[item]]"
              value="{{item.value}}"
            >
            </eco-json-schema-object>
          </a11y-tab>
        </template>
      </a11y-tabs>
    `}static get properties(){return{autofocus:{type:"Boolean",value:!1},hideLineNumbers:{type:Boolean,value:!1},schema:{type:Object,notify:!0,observer:"_schemaChanged"},value:{type:Array,notify:!0,value:{}},__validatedSchema:{type:Array,value:[],notify:!0}}}_valueChanged(e){let val=this.__validatedSchema.map(item=>item.value);this.notifyPath("value.*"),this.set("value",val),this.dispatchEvent(new CustomEvent("value-changed",{bubbles:!0,cancelable:!0,composed:!0,detail:this}))}_schemaChanged(oldValue,newValue){JSON.stringify(oldValue)!==JSON.stringify(newValue)&&this._setValues(),this.dispatchEvent(new CustomEvent("schema-changed",{bubbles:!0,cancelable:!0,composed:!0,detail:this}))}_setValues(){let schema=[];for(let prop in this.schema.items.properties){let tab={title:this.schema.items.properties[prop].title,icon:this.schema.items.properties[prop].icon,properties:this.schema.items.properties[prop].items?this.schema.items.properties[prop].items.properties:{},value:this.value&&this.value[prop]?JSON.parse(JSON.stringify(this.value[prop])):{}};for(let subprop in tab.properties)tab.properties.value&&delete tab.properties.value,this.value&&this.value[prop]&&(tab.properties[subprop].value=this.value[prop][subprop]);schema.push(tab)}this.notifyPath("__validatedSchema.*"),this.__validatedSchema=[],this.__validatedSchema=schema}}window.customElements.define(EcoJsonSchemaTabs.tag,EcoJsonSchemaTabs);export{EcoJsonSchemaTabs};