import{html,PolymerElement}from"../../../@polymer/polymer/polymer-element.js";import{dom}from"../../../@polymer/polymer/lib/legacy/polymer.dom.js";import"../../../@polymer/polymer/lib/elements/dom-if.js";import{FlattenedNodesObserver}from"../../../@polymer/polymer/lib/utils/flattened-nodes-observer.js";import{AppLocalizeBehavior}from"../../../@polymer/app-localize-behavior/app-localize-behavior.js";import{mixinBehaviors}from"../../../@polymer/polymer/lib/legacy/class.js";import"../../../@polymer/iron-flex-layout/iron-flex-layout-classes.js";import"./eco-json-schema-array.js";import"./eco-json-schema-boolean.js";import"./eco-json-schema-enum.js";import"./eco-json-schema-file.js";import"./eco-json-schema-input.js";class EcoJsonSchemaObject extends(mixinBehaviors([AppLocalizeBehavior],PolymerElement)){static get tag(){return"eco-json-schema-object"}static get template(){return html`
      <custom-style>
        <style is="custom-style" include="iron-flex iron-flex-alignment">
          div.layout {
            height: auto;
          }
          #form {
            color: var(--eco-json-form-color, unset);
            display: block;
            @apply --eco-json-schema-object-form;
            @apply --layout-vertical;
            @apply --layout-wrap;
          }
          #form ::slotted(paper-input),
          #form ::slotted(div[role="tooltip"]) {
            color: var(--eco-json-form-color, unset);
            font-family: var(--paper-font-caption_-_font-family, unset);
          }
          #form ::slotted(div[role="tooltip"]) {
            font-size: 80%;
          }
          #form ::slotted(code-editor) {
            margin: 8px 0;
            --code-editor-code: {
              border: var(--eco-json-schema-code-border, 1px solid black);
            }
            --code-editor-label: {
              color: var(--eco-json-form-color, unset);
              font-family: var(--paper-font-caption_-_font-family, unset);
            }
          }
        </style>
      </custom-style>

      <template is="dom-if" if="{{!wizard}}">
        <div class="header" hidden\$="[[!label]]">[[label]]</div>
      </template>
      <div class="layout vertical flex start-justified">
        <div
          id="form"
          class="layout horizontal flex start-justified"
          aria-live="polite"
        >
          <slot></slot>
        </div>
      </div>
    `}static get properties(){return{language:{value:"en"},resources:{value:()=>({})},schema:{type:Object,notify:!0,observer:"_schemaChanged"},label:{type:String},value:{type:Object,notify:!0,value:()=>({})},error:{type:Object,observer:"_errorChanged"},wizard:{type:Boolean,notify:!0},codeTheme:{type:String,value:"vs-light-2"},autofocus:{type:Boolean,value:!1}}}disconnectedCallback(){this._clearForm(),super.disconnectedCallback()}_buildSchemaProperties(){var ctx=this;this._schemaProperties=Object.keys(this.schema.properties||[]).map(key=>{var schema=ctx.schema.properties[key],property={property:key,label:schema.title||key,schema:schema,label:schema.title||key,description:schema.description,component:schema.component||{}};if(property.component.valueProperty||(property.component.valueProperty="value"),property.component.slot||(property.component.slot=""),ctx._isSchemaEnum(schema))property.component.name=property.component.name||"eco-json-schema-enum",void 0===schema.value&&(schema.value=""),property.value=schema.value;else if(ctx._isSchemaBoolean(schema.type))property.component.name=property.component.name||"eco-json-schema-boolean",void 0===schema.value&&(schema.value=!1),property.value=schema.value;else if(ctx._isSchemaFile(schema.type))property.component.name=property.component.name||"eco-json-schema-file",void 0===schema.value&&(schema.value={}),property.value=schema.value;else if(ctx._isSchemaValue(schema.type))property.component.name=property.component.name||"eco-json-schema-input",void 0===schema.value&&(schema.value=""),property.value=schema.value;else if(ctx._isSchemaObject(schema.type))property.component.name=property.component.name||"eco-json-schema-object",void 0===schema.value&&(schema.value={}),property.value=schema.value;else{if(!ctx._isSchemaArray(schema.type))return console.error("Unknown property type %s",schema.type);property.component.name=property.component.name||"eco-json-schema-array",void 0===schema.value&&(schema.value=[]),property.value=schema.value}return property})}_schemaPropertyChanged(event,detail){if(detail){if(detail.path&&/\.length$/.test(detail.path))return;var ctx=this,property=event.target.schemaProperty,path=["value",property.property];if(detail.path&&/\.splices$/.test(detail.path)){for(var parts=detail.path.split(".").slice(1,-1);parts.length;)path.push(parts.shift()),property.keyMap&&property.keyMap[path.join(".")]&&(path=property.keyMap[path.join(".")].split("."));detail.value.keySplices&&property.keyMap&&detail.value.keySplices.forEach(splice=>{splice.removed.forEach(k=>{delete property.keyMap[path.concat([k]).join(".")]})}),detail.value&&detail.value.indexSplices.forEach(splice=>{var args=[path.join("."),splice.index,splice.removed.length];if(splice.addedCount)for(var i=0,ii=splice.addedCount;i<ii;i++)splice.addedKeys&&splice.addedKeys[i]&&(property.keyMap=property.keyMap||{},property.keyMap[path.concat([splice.addedKeys[i]]).join(".")]=path.concat([i+splice.index]).join(".")),args.push(ctx._deepClone(splice.object[i+splice.index]));ctx.splice.apply(ctx,args)})}else if(detail.path){parts=detail.path.split(".").slice(1);for(this.value.hasOwnProperty(property.property)||(this.set("value."+property.property,{}),this.notifyPath("value."+property.property));parts.length;){var k=parts.shift();path.push(k),property.keyMap&&property.keyMap[path.join(".")]&&(path=property.keyMap[path.join(".")].split("."))}this.set(path.join("."),this._deepClone(detail.value)),this.notifyPath(path.join("."))}else property.value=detail.value,this.set(path,this._deepClone(detail.value)),this.notifyPath(path)}}_setValue(){var value={};this._schemaProperties.forEach(property=>{void 0!==property.value&&(value[property.property]=this._deepClone(property.value))}),this.set("value",value),this.notifyPath("value.*")}_buildForm(){let autofocus=this.autofocus;this._schemaProperties.forEach(property=>{"code-editor"===property.component.name&&(property.schema.component.properties.editorValue=property.schema.value,property.schema.component.properties.theme=this.codeTheme);var el=this.create(property.component.name,{label:property.label,schema:property.schema,schemaProperty:property,language:this.language,resources:this.resources});for(var attr in"paper-input"===property.component.name&&(el.style["background-color"]="transparent",el.style.width="100%"),el.setAttribute("name",property.property),autofocus&&el.setAttribute("autofocus",autofocus),autofocus=!1,el.className="flex start-justified",el[property.component.valueProperty]=property.value,property.component.attributes)el.setAttribute(attr,property.component.attributes[attr]);for(var prop in property.component.properties)el[prop]=property.component.properties[prop];if(this.listen(el,property.component.valueProperty.replace(/([A-Z])/g,"-$1").toLowerCase()+"-changed","_schemaPropertyChanged"),void 0!==this.$&&(dom(this).appendChild(el),property.description)){var id="tip-"+property.property,tip=document.createElement("div");el.setAttribute("aria-describedby",id),tip.setAttribute("id",id),tip.setAttribute("role","tooltip"),tip.innerHTML=property.description,dom(this).appendChild(tip)}if(""!=property.component.slot){let temp=document.createElement("div");temp.innerHTML=property.component.slot;let cloneDiv=temp.cloneNode(!0);for(;null!==dom(cloneDiv).firstChild;)dom(el).appendChild(dom(cloneDiv).firstChild)}this.dispatchEvent(new CustomEvent("form-changed",{bubbles:!0,cancelable:!0,composed:!0,detail:this}))})}_removePropertyEl(el){void 0!==el.schemaProperty&&this.unlisten(el,el.schemaProperty.component.valueProperty.replace(/([A-Z])/g,"-$1").toLowerCase()+"-changed","_schemaPropertyChanged"),el.schemaProperty=null,dom(this).removeChild(el)}_clearForm(){if(void 0!==this.$)for(var formEl=dom(this);formEl.firstChild;)this._removePropertyEl(formEl.firstChild)}_schemaChanged(newValue,oldValue){newValue&&(this._clearForm(),this._buildSchemaProperties(),this._buildForm(),this._setValue())}_errorChanged(){dom(this).childNodes.forEach(el=>{var name=el.getAttribute("name");this.error&&this.error[name]?el.error=this.error[name]:el.error=null})}_deepClone(o){return JSON.parse(JSON.stringify(o))}_isSchemaValue(type){return this._isSchemaBoolean(type)||this._isSchemaNumber(type)||this._isSchemaString(type)||this._isSchemaFile(type)}_isSchemaFile(type){return Array.isArray(type)?-1!==type.indexOf("file"):"file"===type}_isSchemaBoolean(type){return Array.isArray(type)?-1!==type.indexOf("boolean"):"boolean"===type}_isSchemaEnum(schema){return!!schema.enum}_isSchemaNumber(type){return Array.isArray(type)?-1!==type.indexOf("number")||-1!==type.indexOf("integer"):"number"===type||"integer"===type}_isSchemaString(type){return Array.isArray(type)?-1!==type.indexOf("string"):"string"===type}_isSchemaObject(type){return"object"===type}_isSchemaArray(type){return"array"===type}focus(){}}window.customElements.define(EcoJsonSchemaObject.tag,EcoJsonSchemaObject);export{EcoJsonSchemaObject};