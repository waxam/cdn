import{html,PolymerElement}from"../../@polymer/polymer/polymer-element.js";import{dom}from"../../@polymer/polymer/lib/legacy/polymer.dom.js";import"../../@polymer/iron-ajax/iron-ajax.js";import"../../@polymer/iron-list/iron-list.js";import"./lib/site-card.js";import"../../@polymer/paper-button/paper-button.js";class SitesListing extends PolymerElement{constructor(){super(),import("../elmsln-loading/elmsln-loading.js")}static get template(){return html`
      <style>
        :host {
          height: 100vh;
          display: flex;
          flex-direction: column;
        }
        iron-list {
          flex: 1 1 auto;
        }
        #loading {
          width: 100%;
          z-index: 1000;
          opacity: 0.8;
          padding: 16px;
          text-align: center;
          align-content: center;
          justify-content: center;
          height: 100vh;
          position: absolute;
          background-color: rgba(250, 250, 250, 0.8);
          transition: all linear 0.8s;
          visibility: visible;
        }
        #loading div {
          font-size: 32px;
          font-weight: bold;
          padding: 16px;
        }
        #loading[data-loading] {
          background-color: rgba(0, 0, 0, 0);
          opacity: 0;
          visibility: hidden;
        }
        site-card {
          padding: 16px;
          font-size: 16px;
        }
        paper-button.site-card-wrapper {
          margin: 0;
          padding: 0;
        }
      </style>
      <iron-ajax
        id="loaddata"
        auto=""
        loading="{{__loading}}"
        url="[[dataSource]]"
        handle-as="json"
        debounce-duration="250"
        last-response="{{sitesResponse}}"
      ></iron-ajax>
      <div id="loading" data-loading\$="[[!__loading]]">
        <elmsln-loading size="large"></elmsln-loading>
        <div>Loading..</div>
      </div>
      <iron-list id="list" items="[[sites]]" as="site" grid="">
        <template>
          <paper-button
            on-focusin="_mouseEnter"
            on-focusout="_mouseLeave"
            data-site-id\$="[[site.id]]"
            class="site-card-wrapper"
            on-click="_siteClicked"
          >
            <site-card
              data-site-id\$="[[site.id]]"
              size="[[size]]"
              image="[[site.metadata.image]]"
              icon="[[site.metadata.icon]]"
              name="[[site.title]]"
              title="[[site.description]]"
              elevation="2"
            ></site-card>
          </paper-button>
        </template>
      </iron-list>
    `}static get tag(){return"sites-listing"}static get properties(){return{sitesResponse:{type:Object,notify:!0,observer:"_sitesResponseChanged"},sites:{type:Array,notify:!0},size:{type:String,value:"large"},dataSource:{type:String},loadLocation:{type:Boolean,value:!1}}}connectedCallback(){super.connectedCallback(),window.addEventListener("sites-listing-refresh-data",this.refreshData.bind(this))}disconnectedCallback(){window.removeEventListener("sites-listing-refresh-data",this.refreshData.bind(this)),super.disconnectedCallback()}refreshData(e){this.shadowRoot.querySelector("#loaddata").generateRequest()}_sitesResponseChanged(newValue,oldValue){newValue&&void 0!==newValue.items&&(this.set("sites",[]),this.set("sites",newValue.items),this.notifyPath("sites.*"))}_siteClicked(e){var active=dom(e).localTarget.getAttribute("data-site-id");let findSite=this.sites.filter(site=>site.id===active);findSite.length>0&&(findSite=findSite.pop()),this.loadLocation&&void 0!==findSite.location&&(window.location.href=findSite.location),this.dispatchEvent(new CustomEvent("sites-listing-item-selected",{bubbles:!0,cancelable:!0,composed:!0,detail:findSite}))}_mouseEnter(e){let card=dom(e.target).querySelectorAll("site-card")[0];card.__oldElevation=card.elevation,card.elevation+2>5?card.elevation=5:card.elevation+=2}_mouseLeave(e){let card=dom(e.target).querySelectorAll("site-card")[0];card.elevation=card.__oldElevation}}window.customElements.define(SitesListing.tag,SitesListing);export{SitesListing};