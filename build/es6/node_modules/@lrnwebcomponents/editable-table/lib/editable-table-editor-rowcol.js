/**
 * Copyright 2018 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement as t,html as e,css as o}from"../../../lit/index.js";import{cellBehaviors as i,editableTableCellStyles as n}from"./editable-table-behaviors.js";import"../../a11y-menu-button/a11y-menu-button.js";import"../../a11y-menu-button/lib/a11y-menu-button-item.js";import{A11yMenuButton as l}from"../../a11y-menu-button/a11y-menu-button.js";import"../../simple-icon/lib/simple-icon-lite.js";import"../../simple-icon/lib/simple-icons.js";import"../../hax-iconset/lib/simple-hax-iconset.js";class EditableTableEditorRowcol extends(i(l)){static get styles(){return[...super.styles||[],...n,o`
        :host {
          display: block;
          height: 100%;
          width: 100%;
          --paper-item-min-height: 24px;
          --a11y-menu-button-border: none;
          --a11y-menu-button-list-border: 1px solid
            var(--editable-table-border-color, #999);
          --a11y-menu-button-vertical-padding: var(
            --editable-table-cell-vertical-padding,
            10px
          );
          --a11y-menu-button-horizontal-padding: var(
            --editable-table-cell-horizontal-padding,
            6px
          );
          --a11y-menu-button-item-focus-bg-color: var(
            --editable-table-heading-bg-color,
            #e8e8e8
          );
          --a11y-menu-button-list-bg-color: var(
            --editable-table-bg-color,
            #fff
          );
        }
        a11y-menu-button {
          display: block;
          height: 100%;
          width: 100%;
        }
        a11y-menu-button::part(button) {
          font-family: var(
            --editable-table-secondary-font-family,
            "Roboto",
            "Noto",
            sans-serif
          );
          height: 100%;
          width: 100%;
        }
        a11y-menu-button::part(menu-outer) {
          min-width: 150px;
        }
        a11y-menu-button-item::part(button) {
          font-family: var(
            --editable-table-secondary-font-family,
            "Roboto",
            "Noto",
            sans-serif
          );
          color: var(--editable-table-color, #222);
          font-size: var(--editable-table-secondary-font-size, 12px);
          line-height: 150%;
        }
      `]}render(){return e`
      <a11y-menu-button
        id="menubutton" 
        position="${this.row?"right":"bottom"}">
        <span class="sr-only" slot="button">${this.type}</span>
        <span id="label" slot="button">${this.label||""} </span>
        <span class="sr-only" slot="button">Menu</span>
        <simple-icon-lite icon="arrow-drop-down" slot="button"></simple-icon-lite>
          ${this._getItem()} 
          ${this._getItem(!1,!0)}
          ${this._getItem(!0)}
        </ul>
      </a11y-menu-button>
    `}static get tag(){return"editable-table-editor-rowcol"}static get properties(){return{...super.properties,index:{type:Number},row:{type:Boolean}}}get controls(){return this.row?`cell-0-${this.index}`:`cell-${this.index}-0`}get label(){return this.row?this._getLabel(this.index,!0):this._getLabel(this.index,!1)}get labelInfo(){return e`<span class="sr-only">${this.label}</span>`}get type(){return this.row?"Row":"Column"}updated(t){super.updated&&super.updated(t),t.forEach(((t,e)=>{"expanded"===e&&this.menuToggle()}))}rowColAction(t=this.index,e=!0){this.dispatchEvent(new CustomEvent("rowcol-action",{bubbles:!0,cancelable:!0,composed:!0,detail:{insert:e,row:this.row,index:t}}))}_getItem(t=!1,o=!1){return e`<a11y-menu-button-item
      @click="${t?this._onDelete:o?this._onInsertAfter:this._onInsertBefore}"
    >
      ${t?"Delete":"Insert"}
      ${this.type}${t?" ":o?" After ":" Before "}
      ${this.labelInfo}
    </a11y-menu-button-item>`}menuToggle(t){this.dispatchEvent(new CustomEvent("rowcol-menu-toggle",{bubbles:!0,cancelable:!0,composed:!0,detail:this}))}_onDelete(t){this.rowColAction(this.index,!1)}_onInsertBefore(t){this.rowColAction(this.row?this.index-1:this.index)}_onInsertAfter(t){this.rowColAction(this.row?this.index:this.index+1)}}window.customElements.define(EditableTableEditorRowcol.tag,EditableTableEditorRowcol);export{EditableTableEditorRowcol};