import{html,PolymerElement}from"../../../@polymer/polymer/polymer-element.js";import"../../../@polymer/paper-menu-button/paper-menu-button.js";import"../../../@polymer/paper-button/paper-button.js";import"../../../@polymer/paper-listbox/paper-listbox.js";import"../../../@polymer/paper-tooltip/paper-tooltip.js";import"../../../@polymer/iron-icons/iron-icons.js";import{cellBehaviors}from"./editable-table-behaviors.js";class EditableTableEditorRowcol extends(cellBehaviors(PolymerElement)){static get template(){return html`
      <style>
        :host {
          display: block;
        }
        :host #label {
          margin: 0;
          padding: 0;
        }
        :host paper-menu-button {
          margin: 0;
          padding: 0;
          width: 100%;
        }
        :host paper-button {
          margin: 0;
          display: block;
          text-transform: none;
          text-align: left;
          background-color: transparent;
          padding-top: var(--editable-table-row-vertical-padding);
          padding-bottom: var(--editable-table-row-vertical-padding);
          font-family: var(--editable-table-secondary-font-family);
        }
        :host([condensed]) paper-button {
          padding-top: var(--editable-table-row-vertical-padding-condensed);
          padding-bottom: var(--editable-table-row-vertical-padding-condensed);
        }
      </style>
      <paper-menu-button id="menu">
        <paper-button slot="dropdown-trigger">
          <span id="label">[[label]]</span>
          <iron-icon icon="arrow-drop-down"></iron-icon>
        </paper-button>
        <paper-listbox slot="dropdown-content" label$="[[label]]">
          <paper-button on-click="_onInsertBefore"
            >Insert [[_getType(row)]] Before</paper-button
          >
          <paper-button on-click="_onInsertAfter"
            >Insert [[_getType(row)]] After</paper-button
          >
          <paper-button on-click="_onDelete"
            >Delete [[_getType(row)]]</paper-button
          >
        </paper-listbox>
      </paper-menu-button>
    `}static get tag(){return"editable-table-editor-rowcol"}static get properties(){return{index:{type:Number,value:null},label:{type:String,computed:"_getLabel(index,type)"},row:{type:Boolean,value:!1}}}_getType(row){return row?"Row":"Column"}rowColAction(index=this.index,insert=!0){this.dispatchEvent(new CustomEvent("rowcol-action",{bubbles:!0,cancelable:!0,composed:!0,detail:{insert:insert,row:this.row,index:index}}))}_onDelete(e){this.rowColAction(this.index,!1)}_onInsertBefore(e){this.rowColAction(this.row?this.index-1:this.index)}_onInsertAfter(e){this.rowColAction(this.row?this.index:this.index+1)}}window.customElements.define(EditableTableEditorRowcol.tag,EditableTableEditorRowcol);export{EditableTableEditorRowcol};