/**
 * Copyright 2018 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{html as e,PolymerElement as t}from"../../@polymer/polymer/polymer-element.js";import"../simple-tooltip/simple-tooltip.js";import"../../@polymer/paper-input/paper-input.js";import"../../@polymer/iron-ajax/iron-ajax.js";import{displayBehaviors as o}from"./lib/editable-table-behaviors.js";import"./lib/editable-table-editor-rowcol.js";import"./lib/editable-table-editor-toggle.js";import"./lib/editable-table-editor-cell.js";import"./lib/editable-table-styles.js";import"./lib/editable-table-display.js";class EditableTable extends(o(t)){static get template(){return e`
      <style include="editable-table-styles">
        :host {
          --paper-listbox-background-color: var(
            --editable-table-rowcol-bg-color
          );
        }
        :host .filter-icon,
        :host .sortable-icon {
          display: none;
          opacity: 0.4;
          width: 24px;
          height: 24px;
        }
        :host([sort]) tbody .tr:first-child .sortable-icon,
        :host([filter]) tbody .tr:not(:first-of-type) .filter-icon {
          display: inline-block;
          opacity: 0.25;
        }
        :host table {
          min-width: calc(100% - 2.3px);
          width: unset;
        }
        :host caption {
          width: 100%;
          padding: 0;
          margin: 0;
          color: var(--editable-table-caption-color);
        }
        :host caption,
        :host .th-or-td {
          border: 1px solid #ddd;
        }
        :host label,
        :host .label {
          font-size: var(--editable-table-secondary-font-size);
          font-family: var(--editable-table-secondary-font-family);
        }
        :host .field-group {
          width: 100%;
          padding: 0;
          margin: 0;
          transition: all 2s;
          color: var(--editable-table-caption-color);
        }
        :host .field-group:not([hidden]) {
          display: flex;
          flex-wrap: wrap;
          justify-content: space-between;
          align-items: center;
        }
        :host caption > *,
        :host .field-group > * {
          margin: 0 2.5px;
        }
        :host .field-group .field-group {
          width: unset;
        }
        :host .th,
        :host th {
          padding: 0;
          vertical-align: center;
          color: var(--editable-table-rowcol-color);
          background-color: var(--editable-table-rowcol-bg-color);
          outline: var(--editable-table-border);
        }
        :host td {
          margin: 0;
          padding: var(--editable-table-cell-padding);
        }
        :host th:hover,
        :host th:focus-within {
          background-color: var(--editable-table-rowcol-hover-bg-color);
        }
        :host .th:first-child {
          width: 96px;
        }
        :host([responsive]) thead .th:nth-of-type(3),
        :host([responsive]) .td:nth-of-type(2) {
          border-right-width: calc(var(--editable-table-border-width) + 5px);
          border-right-style: double;
        }
        :host([bordered]) thead .th:not(:first-child) {
          border-bottom: var(--editable-table-border);
        }
        :host([striped][column-header])
          tbody
          .tr:nth-child(2n + 1):not(:first-of-type)
          .td,
        :host([striped]:not([column-header])) tbody .tr:nth-child(2n) .td {
          @apply --editable-table-style-stripe;
        }
        :host([column-header]) tbody .tr:first-child .td {
          @apply --editable-table-style-column-header;
        }
        :host([row-header]) tbody .tr .td:first-of-type {
          @apply --editable-table-style-row-header;
        }
        :host([footer]) tbody .tr:last-of-type .td {
          @apply --editable-table-style-footer;
        }
      </style>
      <iron-ajax
        auto
        hidden$="[[!dataCsv]]"
        url="[[dataCsv]]"
        handle-as="text"
        debounce-duration="500"
        last-response="{{csvData}}"
        on-response="_loadExternalData"
      ></iron-ajax>
      <editable-table-display
        aria-hidden$="[[editMode]]"
        bordered$="[[bordered]]"
        caption$="[[caption]]"
        column-header$="[[columnHeader]]"
        data="{{data}}"
        condensed$="[[condensed]]"
        filter$="[[filter]]"
        footer$="[[footer]]"
        hidden$="[[editMode]]"
        responsive$="[[responsive]]"
        row-header$="[[rowHeader]]"
        sort$="[[sort]]"
        striped$="[[striped]]"
      >
      </editable-table-display>
      <div id="outer" hidden$="[[!editMode]]" aria-hidden$="[[!editMode]]">
        <div id="inner">
          <p class="sr-only">Table Editor</p>
          <table
            id="table-editmode"
            bordered$="[[bordered]]"
            condensed$="[[condensed]]"
            striped$="[[striped]]"
          >
            <caption>
              <p class="sr-only">Edit Mode for</p>
              <paper-input
                id="caption"
                label="Caption"
                placeholder="A title for the table."
                on-change="_captionChanged"
                value$="{{caption}}"
              >
              </paper-input>
            </caption>
            <thead>
              <tr class="tr">
                <th class="th th-or-td" scope="col">
                  <span class="sr-only">Row Operations</span>
                </th>
                <template
                  id="headers"
                  is="dom-repeat"
                  items="[[data]]"
                  as="row"
                  index-as="tr"
                  mutable-data
                  restamp
                >
                  <template is="dom-if" if="[[_isFirstRow(tr)]]" restamp>
                    <template
                      id="headercols"
                      is="dom-repeat"
                      items="[[row]]"
                      as="cell"
                      index-as="th"
                      mutable-data
                      restamp
                    >
                      <th class="th th-or-td col-[[th]]" scope="col">
                        <editable-table-editor-rowcol
                          index$="[[th]]"
                          condensed$="[[condensed]]"
                          on-rowcol-action="_handleRowColumnMenu"
                        >
                        </editable-table-editor-rowcol>
                      </th>
                    </template>
                  </template>
                </template>
              </tr>
            </thead>
            <tbody id="tbody">
              <template
                id="rows"
                is="dom-repeat"
                items="[[data]]"
                as="row"
                index-as="tr"
                mutable-data
                restamp
              >
                <tr class="tr tbody-tr">
                  <th class="th th-or-td" scope="row">
                    <editable-table-editor-rowcol
                      index$="[[tr]]"
                      condensed$="[[condensed]]"
                      on-rowcol-action="_handleRowColumnMenu"
                      row
                    >
                    </editable-table-editor-rowcol>
                  </th>
                  <template
                    id="columns"
                    index-as="td"
                    is="dom-repeat"
                    items="[[row]]"
                    as="cell"
                    mutable-data
                    restamp
                  >
                    <td class="td th-or-td" on-click="_onCellClick">
                      <editable-table-editor-cell
                        id="cell-[[td]]-[[tr]]"
                        class="cell"
                        column="[[td]]"
                        row="[[tr]]"
                        on-change="_onCellValueChange"
                        value="{{cell}}"
                      >
                        <iron-icon
                          class="sortable-icon"
                          icon="editable-table:sortable"
                          aria-hidden="true"
                        ></iron-icon>
                        <iron-icon
                          class="filter-icon"
                          icon="editable-table:filter-off"
                        ></iron-icon>
                      </editable-table-editor-cell>
                    </td>
                  </template>
                </tr>
              </template>
            </tbody>
          </table>
        </div>
        <div class="field-group">
          <div class="field-group">
            <div class="label">Headers and footers</div>
            <editable-table-editor-toggle
              id="columnHeader"
              icon="editable-table:column-headers"
              label="First row has column headers."
              on-change="_onTableSettingChange"
              toggled$="[[columnHeader]]"
            >
            </editable-table-editor-toggle>
            <editable-table-editor-toggle
              id="rowHeader"
              icon="editable-table:row-headers"
              on-change="_onTableSettingChange"
              label="First column has row headers."
              toggled$="[[rowHeader]]"
            >
            </editable-table-editor-toggle>
            <editable-table-editor-toggle
              id="footer"
              icon="editable-table:footer"
              label="Last row is a footer."
              on-change="_onTableSettingChange"
              toggled$="[[footer]]"
            >
            </editable-table-editor-toggle>
          </div>
          <div class="field-group" hidden$="[[hideDisplay]]">
            <div class="label">Display</div>
            <editable-table-editor-toggle
              id="bordered"
              disabled$="[[hideBordered]]"
              hidden$="[[hideBordered]]"
              icon="image:grid-on"
              label="Borders."
              on-change="_onTableSettingChange"
              toggled$="[[bordered]]"
            >
            </editable-table-editor-toggle>
            <editable-table-editor-toggle
              id="striped"
              disabled$="[[hideStriped]]"
              hidden$="[[hideStriped]]"
              icon="editable-table:row-striped"
              label="Alternating rows."
              on-change="_onTableSettingChange"
              toggled$="[[striped]]"
            >
            </editable-table-editor-toggle>
            <editable-table-editor-toggle
              id="condensed"
              disabled$="[[hideCondensed]]"
              hidden$="[[hideCondensed]]"
              icon="editable-table:row-condensed"
              label="Condensed rows."
              on-change="_onTableSettingChange"
              toggled$="[[condensed]]"
            >
            </editable-table-editor-toggle>
            <editable-table-editor-toggle
              id="responsive"
              disabled$="[[hideResponsive]]"
              hidden$="[[hideResponsive]]"
              icon="device:devices"
              label="Adjust width to screen size."
              on-change="_onTableSettingChange"
              toggled$="[[responsive]]"
            >
            </editable-table-editor-toggle>
          </div>
          <div class="field-group" hidden$="[[hideSortFilter]]">
            <div class="label">Data</div>
            <editable-table-editor-toggle
              id="sort"
              disabled$="[[_isSortDisabled(hideSort,columnHeader)]]"
              hidden$="[[_isSortDisabled(hideSort,columnHeader)]]"
              label="Column sorting (for tables with column headers)."
              icon="editable-table:sortable"
              on-change="_onTableSettingChange"
              toggled$="[[sort]]"
            >
            </editable-table-editor-toggle>
            <editable-table-editor-toggle
              id="filter"
              disabled$="[[hideFilter]]"
              hidden$="[[hideFilter]]"
              icon="editable-table:filter"
              label="Column filtering."
              on-change="_onTableSettingChange"
              toggled$="[[filter]]"
            >
            </editable-table-editor-toggle>
          </div>
        </div>
      </div>
      <div id="htmlImport" hidden><slot></slot></div>
    `}static get tag(){return"editable-table"}static get properties(){return{editMode:{type:Boolean,value:!1},hideBordered:{type:Boolean,value:!1},hideCondensed:{type:Boolean,value:!1},hideDisplay:{type:Boolean,computed:"_tableDisplayHidden(hideBordered,hideCondensed,hideStriped,hideResponsive)"},hideFilter:{type:Boolean,value:!1},hideSortFilter:{type:Boolean,computed:"_tableSortHidden(hideSort,hideFilter)"},hideSort:{type:Boolean,value:!1},hideResponsive:{type:Boolean,value:!1},hideStriped:{type:Boolean,value:!1}}}deleteColumn(e){for(let t=0;t<this.data.length;t++)this.splice("data."+t,e,1);let t=this.data.slice();this.set("data",t)}deleteRow(e){this.splice("data",e,1);let t=this.data.slice();this.set("data",t)}insertColumn(e){let t=this.data.slice();for(let o=0;o<t.length;o++)t[o].splice(e,0,"");this.set("data",t)}insertRow(e){let t=this.data.slice(),o=new Array;for(let e=0;e<t[0].length;e++)o.push("");t.splice(e+1,0,o),this.set("data",t)}toggleEditMode(e){e=void 0!==e?e:!this.editMode,this.dispatchEvent(new CustomEvent("toggle-edit-mode",{bubbles:!0,cancelable:!0,composed:!0,detail:this})),e&&(this.shadowRoot.querySelector("editable-table-display").toggleFilter(),this.shadowRoot.querySelector("editable-table-display").sortData("none",-1),this.shadowRoot.querySelector("#inner").focus()),this.editMode=e}_captionChanged(){this.caption=this.shadowRoot.querySelector("#caption").value}_dataChanged(e,t){if(!e||e.length<1||e[0].length<1){let e=this.children.item(0);null!=e&&"TABLE"===e.tagName?this.importHTML(e):this.set("data",[["","",""],["","",""],["","",""]])}}_getCurrentRow(e,t){let o=null;return null!=t&&void 0!==t[e]&&null!==t[e]&&(o=t[e]),o}_handleRowColumnMenu(e){e.detail.insert&&e.detail.row?this.insertRow(e.detail.index):e.detail.insert&&!e.detail.row?this.insertColumn(e.detail.index):!e.detail.insert&&e.detail.row?this.deleteRow(e.detail.index):this.deleteColumn(e.detail.index)}_isFirstRow(e){return 0===e}_isSortDisabled(e,t){return e||!t}_onCellClick(e){e.model&&e.model.root&&e.model.root.nodeList[0]&&e.model.root.nodeList[0].focus()}_onCellValueChange(e){let t=this.data.slice();t[e.detail.row][e.detail.column]=e.detail.value,this.set("data",[]),this.set("data",t)}_onTableSettingChange(e){this[e.detail.id]=e.detail.toggled}_setMinimumData(e){(e.length<1||e[0].length<1)&&this.set("data",[["","",""],["","",""],["","",""]])}_tableDisplayHidden(e,t,o,l){return e&&t&&o&&l}_tableSortHidden(e,t){return e&&t}}window.customElements.define(EditableTable.tag,EditableTable);export{EditableTable};