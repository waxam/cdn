import{LitElement as t,html as e,css as a}from"../../lit/index.js";import"../a11y-tabs/a11y-tabs.js";import"../a11y-tabs/lib/a11y-tab.js";class TabList extends t{static get styles(){return[a`
        :host {
          display: block;
          margin: 0 auto;
          list-style: none;
          display: block;
          padding: 16px;
          border-bottom: 1px solid black;
        }
        a11y-tabs {
          align-items: center;
          justify-items: center;
        }
        a11y-tab a {
          text-decoration: none;
          flex: unset;
          height: unset;
          width: 100%;
          text-align: center;
        }
        button {
          text-transform: unset;
          width: 100%;
          display: block;
          min-width: unset;
          margin: 0;
          text-overflow: ellipsis;
          overflow: hidden;
        }
        @media screen and (max-width: 600px) {
          a11y-tab {
            display: block;
          }
        }
      `]}constructor(){super(),this.tabs=[]}render(){return e`
      <a11y-tabs>
        ${this.tabs.map((t=>e`
            <a11y-tab label="${t.label}">
              <a
                target="_blank"
                href="${t.link}"
                tabindex="-1"
                rel="noopener noreferrer"
              >
                <button raised>${t.label}</button>
              </a>
            </a11y-tab>
          `))}
      </a11y-tabs>
    `}static get tag(){return"tab-list"}updated(t){t.forEach(((t,e)=>{"tabs"==e&&this.dispatchEvent(new CustomEvent("tabs-changed",{bubbles:!0,cancelable:!0,composed:!0,detail:this[e]}))}))}static get properties(){return{tabs:{type:Array}}}static get haxProperties(){return{canScale:!1,canPosition:!1,canEditSource:!0,gizmo:{title:"Tabs",description:"A list of links as tabs.",icon:"icons:tab",color:"grey",groups:["Presentation","Links"],handles:[],meta:{author:"ELMS:LN"}},settings:{configure:[{property:"tabs",title:"Tabs",description:"Listing of tabs",inputMethod:"array",itemLabel:"label",properties:[{property:"link",title:"Link",description:"link to go to",inputMethod:"textfield",required:!0},{property:"label",title:"Label",description:"text to place on the tab",inputMethod:"textfield",required:!0}]}],advanced:[]}}}}window.customElements.define(TabList.tag,TabList);export{TabList};