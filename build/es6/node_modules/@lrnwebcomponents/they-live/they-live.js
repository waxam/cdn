import{LitElement,html,css}from"../../lit-element/lit-element.js";class TheyLive extends LitElement{static get styles(){return[css`
        :host {
          display: block;
        }

        :host([hidden]) {
          display: none;
        }
      `]}render(){return html`
      <div class="content">
        <div class="truth">${this.truth}</div>
        <slot></slot>
      </div>
    `}static get properties(){return{...super.properties,truth:{type:String}}}static get tag(){return"they-live"}static get styles(){return[css`
        :host {
          display: inline-block;
        }
        .truth {
          font-size: 5.5vw;
          word-break: break-all;
          line-height: 5.5vw;
          position: absolute;
          margin: 0 auto;
          text-align: center;
          display: flex;
          visibility: hidden;
          opacity: 0;
          transition: 0.3s all linear;
          z-index: 2;
          text-align: center;
        }
        :host(:focus),
        :host(:hover) {
          background-color: grey;
        }
        :host(:focus) .content ::slotted(*),
        :host(:hover) .content ::slotted(*) {
          visibility: hidden;
        }
        :host(:focus) .truth,
        :host(:hover) .truth {
          visibility: visible;
          opacity: 1;
        }
      `]}constructor(){super()}connectedCallback(){super.connectedCallback()}disconnectedCallback(){super.disconnectedCallback()}firstUpdated(changedProperties){this.setAttribute("tabindex","0"),changedProperties.forEach((oldValue,propName)=>{})}updated(changedProperties){changedProperties.forEach((oldValue,propName)=>{})}}customElements.define("they-live",TheyLive);export{TheyLive};