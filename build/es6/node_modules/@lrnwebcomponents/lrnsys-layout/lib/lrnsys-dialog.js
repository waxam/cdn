import{html,Polymer}from"../../../@polymer/polymer/polymer-legacy.js";import{dom}from"../../../@polymer/polymer/lib/legacy/polymer.dom.js";import"../../paper-avatar/paper-avatar.js";import"../../lrn-icons/lrn-icons.js";import"../../simple-colors/simple-colors.js";import"../../simple-modal/simple-modal.js";import"../../../@polymer/paper-tooltip/paper-tooltip.js";import"../../../@polymer/paper-button/paper-button.js";import"../../../@polymer/neon-animation/neon-animation.js";import"../../../@polymer/neon-animation/neon-animations.js";import"../../../@polymer/iron-icons/iron-icons.js";import"./lrnsys-button-inner.js";Polymer({_template:html`
    <custom-style>
      <style is="custom-style" include="simple-colors">
        :host {
          display: inline-block;
          --lrnsys-dialog-color: var(--simple-colors-foreground1, #000);
          --lrnsys-dialog-background-color: var(--simple-colors-background1);
          --lrnsys-dialog-toolbar-background-color: var(
            --simple-colors-background3
          );
          --lrnsys-dialog-secondary-background-color: rgba(255, 255, 255, 0.7);
        }
        :host([dark]) {
          --lrnsys-dialog-toolbar-background-color: var(
            --simple-colors-background1
          );
          --lrnsys-dialog-background-color: var(--simple-colors-background3);
          --lrnsys-dialog-secondary-background-color: rgba(0, 0, 0, 0.7);
        }
        #dialogtrigger {
          display: inline-block;
        }
      </style>
    </custom-style>
    <paper-button
      class$="[[class]]"
      id="dialogtrigger"
      on-tap="openDialog"
      raised="[[raised]]"
      disabled$="[[disabled]]"
      title="[[alt]]"
      aria-label$="[[alt]]"
    >
      <lrnsys-button-inner
        avatar$="[[avatar]]"
        icon$="[[icon]]"
        text$="[[text]]"
      >
        <slot name="button" slot="button"></slot>
      </lrnsys-button-inner>
    </paper-button>
    <paper-tooltip for="dialogtrigger" animation-delay="0" hidden$="[[!alt]]"
      >[[alt]]</paper-tooltip
    >
  `,is:"lrnsys-dialog",listeners:{mousedown:"tapEventOn",mouseover:"tapEventOn",mouseout:"tapEventOff"},properties:{icon:{type:String},raised:{type:Boolean},avatar:{type:String},text:{type:String},alt:{type:String,reflectToAttribute:!0},header:{type:String},disabled:{type:Boolean,value:!1},hoverClass:{type:String},headingClass:{type:String,value:"white-text black"},dynamicImages:{type:Boolean,value:!1},focusState:{type:Boolean,value:!1}},tapEventOn:function(){const root=this;if(typeof root.hoverClass!==typeof void 0){var classes=root.hoverClass.split(" ");classes.forEach(function(item){if(""!=item){root.$.dialogtrigger.classList.add(item)}})}},tapEventOff:function(){const root=this;if(typeof root.hoverClass!==typeof void 0){var classes=root.hoverClass.split(" ");classes.forEach(function(item){if(""!=item){root.$.dialogtrigger.classList.remove(item)}})}},openDialog:function(){let nodes=dom(this).getEffectiveChildNodes(),h=document.createElement("span"),c=document.createElement("span"),node={};for(var i in nodes){if(typeof nodes[i].tagName!==typeof void 0){switch(nodes[i].getAttribute("slot")){case"toolbar-primary":case"toolbar-secondary":case"toolbar":case"header":node=nodes[i].cloneNode(!0);h.appendChild(node);break;case"button":break;default:node=nodes[i].cloneNode(!0);if(this.dynamicImages&&"IRON-IMAGE"===node.tagName){node.preventLoad=!1;node.removeAttribute("prevent-load")}c.appendChild(node);break;}}}const evt=new CustomEvent("simple-modal-show",{bubbles:!0,cancelable:!0,detail:{title:this.header,elements:{header:h,content:c},invokedBy:this.$.dialogtrigger}});this.dispatchEvent(evt)},focusToggle:function(){const root=this;root.fire("focus-changed",{focus:root.focusState});if(typeof root.hoverClass!==typeof void 0){var classes=root.hoverClass.split(" ");classes.forEach(function(item){if(""!=item){if(root.focusState){root.$.dialogtrigger.classList.add(item)}else{root.$.dialogtrigger.classList.remove(item)}}})}root.focusState=!root.focusState},ready:function(){this.__modal=window.SimpleModal.requestAvailability()},attached:function(){this.$.dialogtrigger.addEventListener("focused-changed",this.focusToggle.bind(this))},detached:function(){this.$.dialogtrigger.removeEventListener("focused-changed",this.focusToggle.bind(this))}});