import{LitElement as t,html as i,css as o}from"../../../lit-element/lit-element.js";class LrnsysDialogToolbarButton extends t{static get styles(){return[o`
        :host {
          display: inline-block;
        }
        iron-icon {
          display: inline-block;
          height: 16px;
          width: 16px;
        }
      `]}render(){return i`
      <paper-button
        raised
        @click="${this._onTap}"
        id="${this.id}"
        aria-label="${this.title}"
      >
        <iron-icon icon="${this.icon}"></iron-icon> ${this.title}
      </paper-button>
      <simple-tooltip for="${this.id}" animation-delay="0"
        >${this.title}</simple-tooltip
      >
    `}static get tag(){return"lrnsys-dialog-toolbar-button"}constructor(){super(),import("../../../@polymer/paper-button/paper-button.js"),import("../../../@polymer/iron-icon/iron-icon.js"),import("../../../@polymer/iron-icons/iron-icons.js"),import("../../simple-tooltip/simple-tooltip.js")}static get properties(){return{title:{type:String},icon:{type:String},id:{type:String}}}firstUpdated(t){this.dispatchEvent(new CustomEvent("button-initialized",{detail:{id:this.id}}))}_onTap(t){this.dispatchEvent(new CustomEvent("dialog-toolbar-button-tapped",{detail:{id:t.target.getAttribute("id")}}))}}window.customElements.define(LrnsysDialogToolbarButton.tag,LrnsysDialogToolbarButton);export{LrnsysDialogToolbarButton};