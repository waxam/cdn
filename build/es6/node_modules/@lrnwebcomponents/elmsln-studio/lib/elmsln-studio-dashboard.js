/**
 * Copyright 2020 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement as t,html as s,css as e}from"../../../lit-element/lit-element.js";import"../../../@polymer/iron-ajax/iron-ajax.js";import"../../accent-card/accent-card.js";import"../../a11y-collapse/a11y-collapse.js";import"../../progress-donut/progress-donut.js";import"../../../@polymer/iron-icons/iron-icons.js";class ElmslnStudioDashboard extends t{static get styles(){return[e`
        :host {
          font-family: var(--elmsln-studio--FontFamily, sans-serif);
          font-size: 13px;
        }
        h1,
        h2,
        h3,
        [slot="heading"] {
          font-size: 14px;
          font-weight: normal;
          color: var(--simple-colors-default-theme-grey-7, #666);
          margin: 0;
        }
        [slot="subheading"] {
          text-decoration: underline;
        }
        [slot="subheading"]:focus,
        [slot="subheading"]:hover {
          text-decoration: none;
        }
        accent-card {
          margin: var(--elmsln-studio--Margin, 20px);
          flex: 1 0 calc(50% - 2 * var(--elmsln-studio--Margin, 20px));
        }
        .linklist {
          list-style-type: none;
          padding-inline-start: 0;
        }
        #comments .linklist {
          padding: 0 var(--elmsln-studio--Margin, 20px);
        }
        .linklist li {
          position: relative;
          padding: 5px 0;
          margin-bottom: 1px;
          opacity: 0.8;
        }
        .linklist li,
        accent-card th,
        accent-card td {
          padding: 5px 0;
          text-align: left;
          min-height: 25px;
          border-bottom: 1px solid
            var(--simple-colors-default-theme-grey-4, #666);
        }
        accent-card table {
          width: 100%;
          border-collapse: collapse;
        }
        accent-card button,
        .linklist button {
          border: none;
          padding: 0;
          text-align: left;
          font-size: inherit;
          font-weight: inherit;
        }
        .linklist iron-icon {
          position: absolute;
          width: 24px;
          height: 24px;
          right: 0px;
          top: calc(50% - 12px);
        }
        .linklist-heading::after {
          content: " ";
          position: absolute;
          left: 0;
          right: 0;
          top: 0;
          bottom: 0;
        }
        .linklist li:focus,
        .linklist li:focus-within .linklist-heading::after {
          outline: 1px solid blue;
        }
        .linklist li:hover {
          cursor: pointer;
          opacity: 1;
        }
        .linklist-heading,
        .linklist-subheading {
          display: block;
          width: calc(100% - 24px);
        }
        .linklist-heading {
          font-weight: bold;
        }
        .linklist-subheading {
          font-size: 12px;
        }
        @media screen and (min-width: 600px) {
          :host {
            display: flex;
            align-items: stretch;
            justify-content: space-between;
          }
          #cards {
            width: calc(66.66666667%);
          }
          #comments {
            padding-right: var(--elmsln-studio--Padding, 20px);
            width: calc(33.33333333% - var(--elmsln-studio--Padding, 20px));
          }
          h1,
          h2 {
            flex: 0 0 calc(100% - var(--elmsln-studio--Margin, 20px));
            padding: 0 var(--elmsln-studio--Margin, 20px);
          }
        }
        @media screen and (min-width: 900px) {
          #cards > div {
            display: flex;
            align-items: stretch;
            justify-content: space-between;
            flex-wrap: wrap;
          }
        }
      `]}render(){return s`
      <iron-ajax
        auto
        url="${this.activitySrc}"
        @response="${t=>this._handleArrayData(t,"__activity")}"
      ></iron-ajax>
      <iron-ajax
        auto
        url="${this.assignmentsSrc}"
        @response="${t=>this._handleArrayData(t,"__assignments")}"
      ></iron-ajax>
      <iron-ajax
        auto
        url="${this.commentsSrc}"
        @response="${t=>this._handleArrayData(t,"__comments")}"
      ></iron-ajax>
      <iron-ajax
        auto
        url="${this.profileSrc}"
        @response="${t=>this._handleObjectData(t,"__profile")}"
      ></iron-ajax>
      <iron-ajax
        auto
        url="${this.submissionsSrc}"
        @response="${t=>this._handleObjectData(t,"__submissions")}"
      ></iron-ajax>
      <!--h1 class="sr-only">Overview</h1-->
      <div id="cards">
        <div id="profile">
          <h2 class="sr-only">My Progress</h2>
          <accent-card accent-color="purple">
            <span slot="heading"
              >${this.__profile.student.data.display_name}</span
            >
            <progress-donut
              accent-color="purple"
              slot="content"
              animation="500"
              animation-delay="500"
              complete="[5,3,2,6]"
              donut-width="25%"
              chart-padding="0"
              image-src="${this.__profile.student.data.sis.avatar_url}"
              image-alt="Profile picture for ${this.__profile.student.data.display_name}"
              start-angle="0"
              total="30"
            ></progress-donut>
            <table slot="content">
              <tbody>
                <tr>
                  <th scope="row">Course Progress</th>
                  <td>
                    ${Math.round(100*this.__profile.student.progress.submissions.reduce((t,s)=>t+s)/this.__profile.student.progress.totalAssignments)}%
                  </td>
                </tr>
                <tr>
                  <th scope="row">Comments</th>
                  <td>${this.__profile.student.progress.comments}</td>
                </tr>
                <tr>
                  <th scope="row">Submissions</th>
                  <td>
                    ${this.__profile.student.progress.submissions.reduce((t,s)=>t+s)}
                  </td>
                </tr>
              </tbody>
            </table>
          </accent-card>
          <accent-card accent-color="green">
            <span slot="heading">Work Due</span>
            <ul class="linklist" slot="content">
              ${this.__assignments.map(t=>s`
                  <li>
                    <iron-icon
                      aria-hidden="true"
                      icon="chevron-right"
                    ></iron-icon>
                    <button class="linklist-heading">
                      ${t.attributes.title}
                    </button>
                    <span class="linklist-subheading"
                      >${this._getDueDate(t)?s`
                            Due
                            ${this.date(1e3*parseInt(this._getDueDate(t)))}
                          `:""}
                    </span>
                  </li>
                `)}
            </ul>
          </accent-card>
        </div>
        <div id="work">
          <h2>Recent Work</h2>
          <accent-card accent-color="amber">
            <span slot="heading">Submissions</span>
            <button slot="subheading">All submissions</button>
            <ul class="linklist" slot="content">
              ${Object.keys(this.__submissions).map(t=>s`
                  <li>
                    <iron-icon
                      aria-hidden="true"
                      icon="chevron-right"
                    ></iron-icon>
                    <button class="linklist-heading">
                      ${this.__submissions[t].attributes.title}
                    </button>
                    <span class="linklist-subheading"
                      >${this.date(this.__submissions[t].meta.changed)}</span
                    >
                  </li>
                `)}
            </ul>
          </accent-card>
          <accent-card accent-color="cyan">
            <span slot="heading">Comments</span>
            <button slot="subheading">All comments</button>
            <!-- TODO need a comments list where student is in the thread or thread is about student submission -->
            <ul class="linklist" slot="content">
              ${this.__comments.map(t=>s`
                  <li>
                    <iron-icon
                      aria-hidden="true"
                      icon="chevron-right"
                    ></iron-icon>
                    <button class="linklist-heading">
                      ${t.attributes.subject}
                    </button>
                    <span class="linklist-subheading"
                      >${this.date(t.attributes.changed)}</span
                    >
                  </li>
                `)}
            </ul>
          </accent-card>
        </div>
      </div>
      <div id="comments">
        <h2>Recent Activity</h2>
        <ul class="linklist">
          ${this.__activity.map(t=>s`
              <li>
                <iron-icon aria-hidden="true" icon="chevron-right"></iron-icon>
                <button class="linklist-heading">
                  ${t.relationships.author.data.sis.sortable_name.replace(/.*,/,"")}
                  ${"comment"===t.type?"commented":"submitted"}
                  ${"comment"===t.type?t.attributes.subject:t.attributes.title}
                </button>
                <span class="linklist-subheading">
                  ${this.date("comment"===t.type?t.attributes.changed:t.meta.changed)}
                </span>
              </li>
            `)}
        </ul>
      </div>
    `}static get properties(){return{activitySrc:{type:String,attribute:"activity-src"},assignmentsSrc:{type:String,attribute:"assignments-src"},commentsSrc:{type:String,attribute:"comments-src"},profileSrc:{type:String,attribute:"profile-src"},submissionsSrc:{type:String,attribute:"submissions-src"},__activity:{type:Array},__assignments:{type:Array},__comments:{type:Array},__profileSrc:{type:Object},__submissions:{type:Object}}}tag(){return"elmsln-studio-dashboard"}constructor(){super(),this.__activity=[],this.__assignments=[],this.__comments=[],this.__profile={student:{data:{type:"user",id:"371",name:"toc5234",display_name:"Tom Cat",avatar:"http://placekitten.com/300/150",sis:{id:6966348,name:"Tom Cat",created_at:"2019-07-24T16:16:51-04:00",sortable_name:"Cat, Tom",short_name:"Tom Cat",sis_user_id:"toc5234@psu.edu",integration_id:null,avatar_url:"http://placekitten.com/300/150"}},progress:{comments:22,submissions:[5,3,2,6],totalAssignments:30}}},this.__submissions=[],this.tag=ElmslnStudioDashboard.tag}_getDueDates(t){return t.meta.rationale&&t.meta.rationale.data?t.meta.rationale.data:void 0}_getDueDate(t){return this._getDueDates(t)?this._getDueDates(t)[1]||this._getDueDates(t)[0]:void 0}_handleArrayData(t,s){this[s]=t&&t.detail&&t.detail.response&&t.detail.response.data?t.detail.response.data:[]}_handleObjectData(t,s){this[s]=t&&t.detail&&t.detail.response&&t.detail.response.data?t.detail.response.data:{}}date(t){let s;if(t&&isNaN(t)){let e=t.split(/\D+/);s=new Date(...e)}else t&&(s=new Date(parseInt(t)));return s.toLocaleDateString(void 0,{year:"numeric",month:"long",day:"numeric"})}connectedCallback(){super.connectedCallback()}}customElements.define("elmsln-studio-dashboard",ElmslnStudioDashboard);export{ElmslnStudioDashboard};