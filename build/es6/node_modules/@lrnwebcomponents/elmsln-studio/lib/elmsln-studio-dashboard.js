/**
 * Copyright 2020 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement as i,html as t,css as e}from"../../../lit-element/lit-element.js";import{ElmslnStudioUtilities as a}from"./elmsln-studio-utilities.js";import{ElmslnStudioStyles as s}from"./elmsln-studio-styles.js";import"./elmsln-studio-link.js";import"./elmsln-studio-button.js";class ElmslnStudioDashboard extends(a(s(i))){static get tag(){return"elmsln-studio-dashboard"}static get styles(){return[...super.styles,e`
        h1,
        h2,
        h3,
        .card [slot="heading"] {
          margin: 0;
          color: #9d9d9d;
          font-weight: normal;
          font-size: calc(1.5 * var(--elmsln-studio-FontSize, 16px));
          font-family: var(--elmsln-studio-FontFamily, "Roboto", sans-serif);
        }
        h2,
        #secondary [slot="heading"] {
          font-weight: bold;
          color: #989898;
        }
        #primary > div {
          margin: 0;
        }
        .card {
          font-size: var(--elmsln-studio-FontSize, 16px);
          font-family: var(--elmsln-studio-FontFamily, "Roboto", sans-serif);
          margin: calc(0.5 * var(--elmsln-studio-margin, 20px)) 0
            calc(2 * var(--elmsln-studio-margin, 20px));
          flex: 1 0 50%;
          color: #95989a;
          --accent-card-footer-border-color: transparent;
        }
        .card [slot="subheading"] {
          font-weight: bold;
          border: none;
          font-size: calc(0.75 * var(--elmsln-studio-FontSize, 16px));
        }
        .card.primary [slot="heading"],
        .card.primary [slot="subheading"] {
          text-align: center;
          display: block;
          margin: 0 auto;
        }
        .card.primary [slot="label"] {
          color: #5c5c5c;
        }
        .card.primary [slot="description"] {
          color: #818181;
          font-size: calc(0.75 * var(--elmsln-studio-FontSize, 16px));
        }
        .card.secondary {
          margin-top: 0;
          font-size: calc(0.75 * var(--elmsln-studio-FontSize, 16px));
          --accent-card-heading-padding-top: 0;
          --nav-card-linklist-margin-top: 0;
          --nav-card-linklist-left-size: 36px;
          --paper-avatar-width: var(--nav-card-linklist-left-size, 36px);
        }
        #profile {
          --lrndesign-avatar-width: 100px;
        }
        #profile lrndesign-avatar {
          margin: 0 auto;
          text-align: center;
        }
        accent-card {
          --accent-card-heading-padding-top: 0;
        }
        accent-card table {
          width: 100%;
          border-collapse: collapse;
          font-family: var(
            --elmsln-studio-ssecondary-FontFamily,
            "Helvetica Neue",
            sans-serif
          );
        }
        accent-card th,
        accent-card td {
          font-weight: normal;
          padding: 5px 0;
          text-align: left;
          min-height: 25px;
          border-bottom: 1px solid
            var(--simple-colors-default-theme-grey-4, #666);
        }
        accent-card td {
          text-align: right;
        }
        accent-card.card th elmsln-studio-link {
          --elmsln-studio-link-TextDecoration: underline !important;
        }
        accent-card.card th elmsln-studio-link:focus,
        accent-card.card th elmsln-studio-link:focus-within,
        accent-card.card th elmsln-studio-link:hover {
          --elmsln-studio-link-TextDecoration: none !important;
        }
        @media screen and (min-width: 600px) {
          #profile {
            --lrndesign-avatar-width: 150px;
          }
          #profile lrndesign-avatar {
            margin: 0 auto;
          }
          h1,
          h2 {
            flex: 0 0 100%;
          }
          #primary > div {
            display: flex;
            align-items: stretch;
            justify-content: space-between;
            flex-wrap: wrap;
          }
          .card.primary {
            flex: 0 0 calc(50% - var(--elmsln-studio-margin, 20px));
          }
        }
        @media screen and (min-width: 900px) {
          :host {
            display: flex;
            align-items: flex-start;
            justify-content: space-between;
          }
          #profile {
            --lrndesign-avatar-width: 200px;
          }
          #profile lrndesign-avatar {
            margin: 0 auto;
          }
        }
      `]}render(){return t`
      <h1 class="sr-only">Overview</h1>
      <div id="primary">
        <div id="profile">
          <h2>${this.profileName}</h2>
          <accent-card accent-color="purple" class="card primary">
            <span slot="heading" class="sr-only">My Progress</span>
            <lrndesign-avatar
              accent-color="${this.accentColor(this.profileName)}"
              slot="content"
              src="${this.profile?this.profile.image:"unknown"}"
              label="${this.profileName}"
              two-chars
              size="200px"
            ></lrndesign-avatar>
            <table slot="content">
              <tbody>
                <tr>
                  <th scope="row">Feedback Given</th>
                  <td>
                    ${this.profile&&this.profile.feedbackBy?this.profile.feedbackBy:"unknown"}
                  </td>
                </tr>
                <tr>
                  <th scope="row">Conversations</th>
                  <td>
                    ${this.profile&&this.profile.feedbackBy&&this.profile.repliesBy?this.profile.repliesBy+this.profile.feedbackBy:"unknown"}
                  </td>
                </tr>
                <tr>
                  <th scope="row">
                    <elmsln-studio-link href="/submissions${this.profile?`?student=${this.profile.id}`:""}">
                      Total Submissions
                    </elmsln-studio-link>
                  </th>
                  <td>
                    ${this.profile?(this.profile.submissions||[]).length:"unknown"}
                  </td>
                </tr>
                <tr>
                  <th scope="row">Assignments Completed</th>
                  <td>
                    ${this.profile&&this.profile.assignmentsCompleted&&this.profile.workDue&&this.profile.assignmentsTotal?`${this.profile.assignmentsCompleted} / ${this.profile.assignmentsTotal}`:"unknown"}
                  </td>
                </tr>
              </tbody>
            </table>
          </accent-card>
          <nav-card accent-color="green" class="card primary">
            <span slot="heading">Work Due</span>
            <div slot="linklist">
              ${this.profile?(this.profile.workDue||[]).slice(0,5).map(i=>t`
                        <nav-card-item icon="chevron-right">
                          <elmsln-studio-link
                            id="due-${i.id}"
                            aria-describedby="due-${i.id}-desc"
                            slot="label"
                          >
                            ${i.title}
                          </elmsln-studio-link>
                          <span id="due-${i.id}-desc" slot="description"
                            >${this.dateFormat(i.date,"long")}</span
                          >
                        </nav-card-item>
                      `):"unknown"}
            </div>
          </nav-card>
        </div>
        <div id="work">
          <h2>Recent Work</h2>
          <nav-card
            accent-color="amber"
            class="card primary"
            link-icon="chevron-right"
          >
            <span slot="heading">Submissions</span>
            <elmsln-studio-link slot="subheading" href="/submissions${this.profile?`?student=${this.profile.id}`:""}">All submissions</elmsln-studio-link>
            <div slot="linklist">
              ${this.profile?(this.profile.submissions||[]).slice(0,5).map(i=>t`
                        <nav-card-item icon="chevron-right">
                          <elmsln-studio-link
                            id="sub-${i.id}"
                            aria-describedby="sub-${i.id}-desc"
                            slot="label"
                            href="${i.link}"
                          >
                            ${i.title}
                          </elmsln-studio-link>
                          <span id="sub-${i.id}-desc" slot="description"
                            >${this.dateFormat(i.date)}</span
                          >
                        </nav-card-item>
                      `):"unknown"}
            </div>
          </nav-card>
          <nav-card
            accent-color="cyan"
            class="card primary"
            link-icon="chevron-right"
          >
            <span slot="heading">Feedback</span>
            <elmsln-studio-link slot="subheading">All feedback</elmsln-studio-link>
            <div slot="linklist">
              ${this.profile?(this.profile.feedbackFor||[]).slice(0,5).map(i=>t`
                        <nav-card-item icon="chevron-right">
                          <elmsln-studio-link
                            id="feed-${i.id}"
                            aria-describedby="feed-${i.id}-desc"
                            slot="label"
                            href="${i.link}"
                          >
                            ${i.title}
                          </elmsln-studio-link>
                          <span id="feed-${i.id}-desc" slot="description"
                            >${this.dateFormat(i.date)}</span
                          >
                        </nav-card-item>
                      `):"unknown"}
            </div>
          </nav-card>
        </div>
      </div>
      <div id="secondary">
        <nav-card
          flat
          no-border
          class="card secondary"
          link-icon="chevron-right"
        >
          <span slot="heading">Recent Activity</span>
          <div slot="linklist">
            ${(this.activity||[]).slice(0,this.activityLoad).map(i=>t`
                <nav-card-item
                  accent-color="${this.accentColor(i.name)}"
                  .avatar="${i.avatar}"
                  icon="chevron-right"
                  .initials="${i.name}"
                >
                  <elmsln-studio-link
                    id="act-${i.id}"
                    aria-describedby="act-${i.id}-desc"
                    slot="label"
                    href="${i.link}"
                  >
                    ${i.title}
                  </elmsln-studio-link>
                  <div id="act-${i.id}-desc" slot="description">
                    ${this.dateFormat(i.date)}
                  </div>
                </nav-card-item>
              `)}
          </div>
          <button
            class="load-more"
            slot="footer"
            ?disabled="${this.activityLoad>=this.activity.length}"
            ?hidden="${this.activityLoad>=this.activity.length}"
            @click="${i=>this.activityLoad+=10}"
          >
            Load More
          </button>
        </nav-card>
      </div-->
    `}static get properties(){return{...super.properties,activity:{type:Array},activityLoad:{type:Number,attribute:"activity-load"},profile:{type:Object}}}constructor(){super(),this.activity=[],this.profile={},this.activityLoad=15,this.tag=ElmslnStudioDashboard.tag}updated(i){super.updated&&super.updated(i),i.forEach((i,t)=>{"activity"===t&&(this.activityLoad=15)})}get profileName(){return this.profile&&this.profile.firstName&&this.profile.lastName?`${this.profile.firstName} ${this.profile.lastName}`:""}loadMoreComments(i){this.activityLoad+=10}}customElements.define("elmsln-studio-dashboard",ElmslnStudioDashboard);export{ElmslnStudioDashboard};