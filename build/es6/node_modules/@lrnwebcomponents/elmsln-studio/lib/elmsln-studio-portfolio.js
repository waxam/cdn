/**
 * Copyright 2020 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement as i,html as e,css as o}from"../../../lit-element/lit-element.js";import{ElmslnStudioStyles as s}from"./elmsln-studio-styles.js";import{ElmslnStudioUtilities as t}from"./elmsln-studio-utilities.js";import"../../lrndesign-gallery/lrndesign-gallery.js";import"../../hax-iconset/hax-iconset.js";import"./elmsln-studio-link.js";import"./elmsln-studio-button.js";class ElmslnStudioPortfolio extends(t(s(i))){static get styles(){return[...super.styles,o`
        :host {
          display: block;
        }
        h1 {
          text-align: center;
        }
        lrndesign-avatar,
        .student-name,
        .project-name,
        .assignment-name,
        .submission-date {
          font-weight: normal;
          display: block;
        }
        .student-name {
          font-size: calc(2 * var(--elmsln-studio-FontSize, 16px));
          font-weight: bold;
          color: #4b4b4b;
        }
        .project-name {
          font-size: calc(1.75 * var(--elmsln-studio-FontSize, 16px));
          color: #95989a;
        }
        .submission-header {
          position: relative;
        }
        .submission-header elmsln-studio-button {
          color: #95989a;
          font-size: var(--elmsln-studio-FontSize, 16px);
          text-transform: uppercase;
          position: absolute;
          right: 0;
          top: 0;
        }
        .submission-header elmsln-studio-button:focus,
        .submission-header elmsln-studio-button:hover {
          color: #4b4b4b;
        }
        section {
          border-top: 2px solid #eaeaea;
          padding: calc(0.5 * var(--elmsln-studio-margin, 20px)) 0
            var(--elmsln-studio-margin, 20px);
        }
        .view-discussion section {
          opacity: 0.4;
        }
        .view-discussion section.section-discussion {
          border: 4px solid #95989a;
          padding: calc(0.5 * var(--elmsln-studio-margin, 20px))
            calc(0.5 * var(--elmsln-studio-margin, 20px))
            var(--elmsln-studio-margin, 20px);
          opacity: 1;
        }
        h2 {
          margin: calc(2 * var(--elmsln-studio-margin, 20px)) auto;
          text-align: center;
        }
        .assignment-name {
          font-size: calc(1.5 * var(--elmsln-studio-FontSize, 16px));
          color: #555555;
        }
        .submission-date {
          font-size: var(--elmsln-studio-FontSize, 16px);
          color: #95989a;
        }
        .submission-body {
          color: #95989a;
          line-height: 160%;
          margin: calc(0.5 * var(--elmsln-studio-margin, 20px)) auto
            var(--elmsln-studio-margin, 20px);
        }
        .submission-body:first-child {
          margin-top: 0;
        }
        .submission-body:last-child {
          margin-bottom: 0;
        }
        .submission-links {
          list-style: none;
          padding-inline-start: 0;
        }
        .submission-links > li {
          display: flex;
          align-items: flex-start;
          justify-content: flex-start;
        }
        .submission-links a:link,
        .submission-links a:visited {
          font-size: calc(1.5 * var(--elmsln-studio-FontSize, 16px));
          font-weight: bold;
          color: #000;
          text-decoration: none;
        }
        .submission-links a:focus,
        .submission-links a:hover {
          text-decoration: underline;
        }
        .submission-links iron-icon {
          margin-right: 0.5em;
        }
        .submission-links a:focus iron-icon,
        .submission-links a:hover iron-icon {
          text-decoration: none;
        }
        .callout {
          font-size: calc(0.75 * var(--elmsln-studio-FontSize, 16px));
          border: 1px solid #eaeaea;
          padding: 0;
        }
        .discussion-label {
          text-align: left;
          font-size: calc(1 * var(--elmsln-studio-FontSize, 16px));
          margin: var(--elmsln-studio-margin, 20px) 0
            calc(0.25 * var(--elmsln-studio-margin, 20px));
        }
        .callout > * {
          padding: calc(0.25 * var(--elmsln-studio-margin, 20px))
            calc(0.5 * var(--elmsln-studio-margin, 20px));
        }
        .callout .callout-label {
          font-size: calc(1 * var(--elmsln-studio-FontSize, 16px));
          font-weight: normal;
          display: flex;
          align-items: center;
          justify-content: flex-start;
          margin: 0;
          color: #4b4b4b;
          border-bottom: 1px solid #eaeaea;
        }
        .callout .callout-label iron-icon {
          margin-right: 1em;
        }
        .comment-textarea {
          flex: 1 0 100%;
          height: 100px;
          overflow-x: auto;
          border: none;
          resize: none;
          border-bottom: 1px solid #eaeaea;
        }
        .comment-form {
          display: flex;
          justify-content: flex-end;
          flex-wrap: wrap;
        }
        .callout .comment-form {
          width: calc(100% - var(--elmsln-studio-margin, 20px));
        }
        .comment-submit {
          border: none;
          text-align: center;
          display: inline;
          background-color: #4b4b4b;
          color: #fff;
          margin: calc(0.25 * var(--elmsln-studio-margin, 20px)) 0;
        }
        .comment-submit:focus,
        .comment-submit:hover {
          background-color: var(--simple-colors-default-theme-grey11, #222);
        }
        #threads {
          background-color: #eaeaea;
          padding: 1px;
        }
        .thread {
          width: 100%;
          transition: all 0.5s ease-in-out;
        }
        .comment {
          background-color: white;
          margin: 1px;
          padding: calc(0.5 * var(--elmsln-studio-margin, 20px)) 0;
        }
        .comment-reply {
          margin-left: calc(1 * var(--elmsln-studio-margin, 20px));
        }
        .comment-header,
        .comment-footer {
          display: flex;
          align-items: stretch;
          justify-content: space-between;
        }
        .comment-header,
        .comment-body {
          padding: 0 calc(0.5 * var(--elmsln-studio-margin, 20px));
        }
        .comment-header > div {
          margin: 0 calc(0.5 * var(--elmsln-studio-margin, 20px));
          flex: 1 1 auto;
        }
        .comment-name {
          margin: 0 0 calc(0.25 * var(--elmsln-studio-margin, 20px));
          font-size: var(--elmsln-studio-FontSize, 16px);
          font-size: calc(1.25 * var(--elmsln-studio-FontSize, 16px));
          font-weight: bold;
          color: #4b4b4b;
        }
        .comment-date {
          margin: 0;
          font-size: calc(0.75 * var(--elmsln-studio-FontSize, 16px));
          font-weight: normal;
          color: #95989a;
        }
        .comment-body {
          line-height: 160%;
          font-size: calc(0.8 * var(--elmsln-studio-FontSize, 16px));
          color: #95989a;
        }
        .comment-header iron-icon {
          color: var(--simple-colors-default-theme-grey-4);
        }
        .comment-read iron-icon {
          color: var(--simple-colors-default-theme-light-blue-7);
        }
        .comment-footer {
          justify-content: flex-end;
          padding: 0;
        }
        @media screen and (min-width: 600px) {
          :host {
            display: flex;
            align-items: flex-start;
            justify-content: space-between;
          }
          #primary.view-discussion {
            flex: 0 0 calc(50% - var(--elmsln-studio-margin, 20px));
          }
          #primary {
            flex: 1 0 100%;
          }
          #secondary {
            flex: 0 0 calc(50% - var(--elmsln-studio-margin, 20px));
          }
        }
      `]}render(){return e`
      <div
        id="primary"
        ?hidden="${!this.portfolio}"
        class="${this.comment&&""!==this.comment?"view-discussion":""}"
      >
        <article>
          <!--div class="close-view" hidden>
            <button class="close-view-button">
              <iron-icon aria-hidden="true" icon="close"></iron-icon>
              <span>Close</span>
            </button>
          </div-->
          <h1>
            <lrndesign-avatar
              accent-color="${this.accentColor(this.fullName(this.portfolio))}"
              aria-hidden="true"
              label="${this.fullName(this.portfolio)}"
              .src="${this.portfolio&&this.portfolio.avatar?this.portfolio.avatar:void 0}"
              two-chars
            >
            </lrndesign-avatar>
            <span class="student-name">${this.fullName(this.portfolio)}</span>
            <span class="project-name">${this.portfolio.project}</span>
          </h1>
          ${this.portfolio?(this.portfolio.submissions||[]).map(i=>e`
                  <section
                    class="${this.submissionFilter===i.id?"section-discussion":""}"
                  >
                    <div class="submission-header">
                      <h2 id="sub-${i.id}">
                        <span class="assignment-name">${i.assignment}</span>
                        <span class="submission-date"
                          >Submitted: ${this.dateFormat(i.date)}</span
                        >
                      </h2>
                      <elmsln-studio-button
                        class="view-discussion-button"
                        aria-describedby="sub-${i.id}"
                        icon="${this._getFeedbackIcon(i.feedback.length)}"
                        path="${i.link}&comment=show"
                      >
                        <span class="sr-only"
                          >Give / View Feedback (${i.feedback.length})</span
                        >
                      </elmsln-studio-button>
                    </div>
                    <div class="submission-body">
                      ${i.links&&i.links.length>0?e`
                            <ul class="submission-links">
                              ${i.links.map(i=>e`
                                  <li>
                                    <elmsln-studio-link
                                      href="${i.url}"
                                      target="_blank"
                                    >
                                      <iron-icon
                                        aria-hidden="true"
                                        icon="${"pdf"===i.type?"hax:file-pdf":"link"}"
                                      ></iron-icon>
                                      ${i.text||i.url}
                                    </elmsln-studio-link>
                                  </li>
                                `)}
                            </ul>
                          `:i.sources&&i.sources.length>0?e`
                            <lrndesign-gallery
                              class="submission-image"
                              layout="grid"
                              .sources="${i.sources}"
                            ></lrndesign-gallery>
                          `:e`
                            ${i.body}
                          `}
                    </div>
                  </section>
                `):""}
        </article>
      </div>
      <div
        id="secondary"
        ?hidden=${!this.portfolio||!this.comment||""===this.comment}
      >
        <aside>
          <div class="instructions callout">
            <h2 class="callout-label">
              <iron-icon icon="info" aria-hidden="true"></iron-icon>
              Directions for Assignment
            </h2>
            <div>
              <ul>
                <li>Step 1. Do something.</li>
                <li>Step 2. Do another thing.</li>
                <li>Step 3. Do something else.</li>
                <li>Step 4. Do ALL THE THINGS!</li>
              </ul>
            </div>
          </div>
          <h2 class="discussion-label">
            Discussion for Submission
          </h2>
          <div class="discussion callout">
            <label class="callout-label" for="feedback">
              <iron-icon
                icon="communication:comment"
                aria-hidden="true"
              ></iron-icon>
              Feedback
            </label>
            ${this.makeWrite("feedback",`sub-${this.submission.id}`)}
          </div>
          <div id="threads">
            ${(this.submission.feedback||[]).map(i=>e`
                <div class="thread">
                  ${this.makeComment(i)}
                  ${i.replies.map(i=>this.makeComment(i))}
                </div>
              `)}
          </div>
        </aside>
      </div>
    `}makeWrite(i,o="",s=!1,t){return e`
      <div id="${i}-div" ?hidden=${s} class="comment-form">
        ${t?e`
              <label class="sr-only" for="${i}">${t}</label>
            `:""}
        <textarea
          id="${i}"
          aria-desccribedby="${o}"
          class="comment-textarea"
        ></textarea>
        <button
          controls="${i}"
          @click="${e=>this._handleComment(i,o)}"
          class="comment-submit"
        >
          <iron-icon icon="send" aria-hidden="true"></iron-icon>
          Submit
        </button>
      </div>
    `}makeComment(i){return e`
      <div
        id="${i.id}"
        class="comment ${i.feedbackId?"comment-reply":""}"
        aria-describedby="${i.feedbackId||""}"
      >
        <div class="comment-header ${i.feedbackId?"comment-read":""}">
          <lrndesign-avatar
            accent-color="${this.accentColor(this.fullName(i))}"
            initials="${this.fullName(i)}"
            .src="${i.avatar}"
            two-chars
          >
          </lrndesign-avatar>
          <div>
            <p class="comment-name">${this.fullName(i)}</p>
            <p class="comment-date">${this.dateFormat(i.date)}</p>
          </div>
          <iron-icon icon="thumb-up"></iron-icon>
        </div>
        <div class="comment-body">
          <p>${i.body}</p>
        </div>
        <div class="comment-footer" ?hidden="${i.feedbackId}">
          <button
            controls="reply-to-${i.id}-div"
            @click="${e=>this._handleReply(`reply-to-${i.id}`)}"
          >
            Reply
            <iron-icon icon="arrow-forward"></iron-icon>
          </button>
          ${this.makeWrite(`reply-to-${i.id}`,i.id,!0,"Write Reply")}
        </div>
      </div>
    `}static get properties(){return{...super.properties,portfolio:{type:Object},submission:{type:Object},comment:{type:String,attribute:"comment"},submissionFilter:{type:String,attribute:"submission-filter"}}}static get tag(){return"elmsln-studio-portfolio"}constructor(){super(),this.portfolio={},this.submission={},this.submissionFilter="",this.comment="",this.tag=ElmslnStudioPortfolio.tag}connectedCallback(){super.connectedCallback()}_getFeedbackIcon(i){return 0===i?"communication:comment":i<10?`hax:messages-${i}`:"hax:messages-9-plus"}_handleReply(i){let e=this.shadowRoot.querySelector(`#${i}-div`),o=this.shadowRoot.querySelector(`[controls=${i}]`);console.log("_handleComment",i,e,o)}_handleComment(i,e){let o=this.shadowRoot.querySelector(`#${i}`),s=this.shadowRoot.querySelector(`#${e}`);console.log("_handleComment",i,e,o,s)}updated(i){super.updated&&super.updated(i),i.forEach((i,e)=>{}),console.log("portfolio",this.portfolio,this.feedback)}}customElements.define("elmsln-studio-portfolio",ElmslnStudioPortfolio);export{ElmslnStudioPortfolio};