/**
 * Copyright 2018 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement as e,html as t,css as n}from"../../lit-element/lit-element.js";import"../../@polymer/paper-tabs/paper-tabs.js";import"../../@polymer/marked-element/marked-element.js";import"../../@polymer/iron-pages/iron-pages.js";import"./lib/lrn-markdown-editor-editor.js";class LrnMarkdownEditor extends e{static get styles(){return[n`
        :host {
          display: block;
        }

        #split-pane {
          display: flex;
        }

        .split-pane > * {
          flex: 1 1 auto;
          min-height: 160px;
        }

        .preview-pane {
          background: lightblue;
        }

        div.pane {
          padding: 16px;
          width: calc(100% - 32px);
        }

        paper-tabs {
          background: #f5f5f5;
          border-style: solid;
          border-color: #dcdcdc;
          border-width: 1px;
          min-width: 500px;
        }

        marked-element.lrn-markdown-editor {
          width: 100%;
          word-wrap: break-word;
        }

        .container-flex {
          display: flex;
          flex-wrap: nowrap;
        }

        .split-pane .container-flex > * {
          width: 50%;
        }

        .split-pane marked-element {
          width: calc(100% - 32px);
          min-width: 150px;
          margin: 0 16px;
          padding: 0 16px;
          background: #fff;
          border-left: solid #dcdcdc 1px;
        }
      `]}render(){return t`
      <div class="mtz-toolbar">
        <paper-tabs
          selected="${this.selected}"
          @selected-changed="${this.__selectedChanged}"
        >
          <paper-tab>Write</paper-tab>
          <paper-tab>Preview</paper-tab>
          <paper-tab>Split View</paper-tab>
        </paper-tabs>
      </div>

      <iron-pages
        selected="${this.selected}"
        @selected-changed="${this.__selectedChanged}"
      >
        <section>
          <div class="pane">
            <lrn-markdown-editor-editor
              content="${this.content}"
              @content-changed="${this.__contentChanged}"
            ></lrn-markdown-editor-editor>
          </div>
        </section>

        <section>
          <div class="pane">
            <marked-element
              markdown="${this.content}"
              @markdown-changed="${this.__contentChanged}"
            ></marked-element>
          </div>
        </section>

        <section class="split-pane">
          <div class="pane">
            <div class="container-flex">
              <lrn-markdown-editor-editor
                content="${this.content}"
                @content-changed="${this.__contentChanged}"
              ></lrn-markdown-editor-editor>
              <marked-element
                class="preview-pane"
                markdown="${this.content}"
                @markdown-changed="${this.__contentChanged}"
              ></marked-element>
            </div>
          </div>
        </section>
      </iron-pages>
    `}__selectedChanged(e){this.selected=e.detail.value}__contentChanged(e){this.content=e.detail.value}constructor(){super(),this.selected="0",this.layout="0",this.content="",this.cookies=!0,this.elReady=!1}static get tag(){return"lrn-markdown-editor"}static get properties(){return{content:{type:String},selected:{type:String,reflect:!0},layout:{type:String},cookies:{type:Boolean},elReady:{type:Boolean,attribute:"el-ready"}}}updated(e){e.forEach((e,t)=>{"selected"==t&&this._selectedChanged(this[t]),"content"===t&&this.dispatchEvent(new CustomEvent("content-changed",{detail:{value:this[t]}}))})}static get observers(){return["_selectedChanged(selected)"]}_selectedChanged(e){var t=this._getCookieName();2===e?this._createCookie(t,"true","30"):2!==e&&!0===this.elReady&&this._eraseCookie(t)}_createCookie(e,t,n){var r="";if(n){var i=new Date;i.setTime(i.getTime()+24*n*60*60*1e3),r="; expires="+i.toUTCString()}document.cookie=e+"="+t+r+"; path=/"}_readCookie(e){for(var t=e+"=",n=document.cookie.split(";"),r=0;r<n.length;r++){for(var i=n[r];" "==i.charAt(0);)i=i.substring(1,i.length);if(0==i.indexOf(t))return i.substring(t.length,i.length)}return null}_eraseCookie(e){this._createCookie(e,"",-1)}_getCookieName(){return"lrnmarkdowneditorsplitview"}firstUpdated(e){this.elReady=!0;var t=this._getCookieName(),n=this._readCookie(t);n&&"true"===n&&(this.selected=2)}}window.customElements.define(LrnMarkdownEditor.tag,LrnMarkdownEditor);export{LrnMarkdownEditor};