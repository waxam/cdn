import{LitElement,html,css}from"../../lit-element/lit-element.js";import"../es-global-bridge/es-global-bridge.js";import*as md5 from"./lib/md5.min.js";class PaperAvatar extends LitElement{static get styles(){return[css`
        :host {
          --paper-avatar-width: 40px;
          display: inline-block;
          box-sizing: border-box;
          position: relative;
          width: var(--paper-avatar-width);
          height: var(--paper-avatar-width);
          border-radius: 50%;
          cursor: default;
          background-color: var(
            --paper-avatar-color,
            var(--paper-avatar-bgcolor)
          );
          -webkit-user-select: none;
          -moz-user-select: none;
          -ms-user-select: none;
          user-select: none;
        }

        :host > * {
          pointer-events: none;
        }

        #label,
        #img,
        #jdenticon {
          position: absolute;
          top: 0;
          left: 0;
          right: 0;
          bottom: 0;
          width: 100%;
          height: 100%;
          border-radius: 50%;
        }
        #label {
          overflow: hidden;
          display: -ms-flexbox;
          display: -webkit-flex;
          display: flex;
          -webkit-flex-direction: row;
          -ms-flex-direction: row;
          flex-direction: row;
          -webkit-align-items: center;
          -ms-flex-align: center;
          align-items: center;
        }
        #label span {
          display: block;
          width: 100%;
          font-weight: 400;
          color: var(--paper-avatar-text-color, rgba(255, 255, 255, 0.8));
          text-transform: capitalize;
          font-family: "Roboto", "Noto", sans-serif;
          -webkit-font-smoothing: antialiased;
          text-align: center;
          font-size: calc(var(--paper-avatar-width) / 1.65);
        }
        #jdenticon {
          width: var(--paper-avatar-width);
          height: var(--paper-avatar-width);
        }
        #jdenticon * {
          fill: var(
            --paper-avatar-text-color,
            rgba(255, 255, 255, 0.8)
          ) !important;
        }
      `]}static get tag(){return"paper-avatar"}render(){return html`
      <div id="label" title="${this.label}">
        <span>${this._label(this.label)}</span>
      </div>
      <svg id="jdenticon" width="40" height="40"><slot></slot></svg>
      ${this.src?html`
            <img
              id="img"
              loading="lazy"
              src="${this.src}"
              title="${this.label}"
              @load="${this._onImgLoad}"
              @error="${this._onImgError}"
              title="${this.color}"
            />
          `:""}
    `}constructor(){super(),this.src=null,this.jdenticonExists=!1,this.twoChars=!1,this.jdenticon=!1}updated(changedProperties){changedProperties.forEach((oldValue,propName)=>{"label"==propName&&this._observerLabel(this[propName])})}static get properties(){return{src:{type:String},label:{type:String},jdenticonExists:{type:Boolean},twoChars:{type:Boolean,attribute:"two-chars"},colors:{type:Array},jdenticon:{type:Boolean}}}_observerLabel(label){label&&(this.jdenticonExists&&this.jdenticon&&(this.shadowRoot.querySelector("#label").hidden=!0,window.jdenticon.config={lightness:{color:[1,1],grayscale:[1,1]},saturation:1},window.jdenticon.update(this.shadowRoot.querySelector("#jdenticon"),window.md5(label))),this.style.backgroundColor=this._parseColor(label))}pathFromUrl(url){return url.substring(0,url.lastIndexOf("/")+1)}firstUpdated(changedProperties){const location=`${this.pathFromUrl(decodeURIComponent(import.meta.url))}lib/jdenticon-1.4.0.min.js`;window.addEventListener("es-bridge-jdenticon-loaded",this._jdenticonLoaded.bind(this)),window.ESGlobalBridge.requestAvailability(),window.ESGlobalBridge.instance.load("jdenticon",location)}disconnectedCallback(){window.removeEventListener("es-bridge-jdenticon-loaded",this._jdenticonLoaded.bind(this)),super.disconnectedCallback()}_jdenticonLoaded(e){this.jdenticonExists=!0,this._observerLabel(this.label)}_label(label){if(!label)return"";if(this.twoChars){if(this.label.indexOf(" ")>-1){var matches=this.label.match(/\b(\w)/g);return matches[0]+matches[1]}return label.substring(0,2)}return label.charAt(0)}_onImgLoad(e){e.currentTarget.hidden=!1}_onImgError(e){e.currentTarget.hidden=!0}_parseColor(label){for(var colors=this.colors?this.colors:["#F44336","#E91E63","#9C27B0","#673AB7","#3F51B5","#2196F3","#03A9F4","#00BCD4","#795548","#009688","#4CAF50","#8BC34A","#CDDC39","#FFEB3B","#FFC107","#FF9800","#FF5722","#9E9E9E","#607D8B"],hash=0,a=0;a<label.length;a++)hash+=label.charCodeAt(a)<<5;return hash>=colors.length?colors[hash%colors.length]:colors[hash]}}window.customElements.define(PaperAvatar.tag,PaperAvatar);export{PaperAvatar};