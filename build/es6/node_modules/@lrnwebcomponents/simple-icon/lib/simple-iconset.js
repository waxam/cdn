String.prototype.replaceAll||(String.prototype.replaceAll=function(e,t){return this.split(e).join(t)});class SimpleIconset extends HTMLElement{static get tag(){return"simple-iconset"}constructor(){super(),this.iconsets={},this.needsHydrated=[]}registerIconset(e,t={}){if("object"==typeof t?this.iconsets[e]={...t}:"string"==typeof t&&(this.iconsets[e]=t),this.needsHydrated.length>0){let e=[];this.needsHydrated.forEach((t,s)=>{t.setSrcByIcon(this)&&e.push(s)}),e.reverse().forEach(e=>{this.needsHydrated.splice(e,1)})}}getIcon(e,t){let s=e.replaceAll("/","-").split(":");if(1===s.length&&(s=["icons",e]),2==s.length&&this.iconsets[s[0]]){if("string"!=typeof this.iconsets[s[0]]&&this.iconsets[s[0]][s[1]]&&"function"!=typeof this.iconsets[s[0]][s[1]])return this.iconsets[s[0]][s[1]];if(s[1])return`${this.iconsets[s[0]]}${s[1]}.svg`}return t!=this&&this.needsHydrated.push(t),null}}function pathResolver(e,t=""){return pathFromUrl(decodeURIComponent(e))+t}function pathFromUrl(e){return e.substring(0,e.lastIndexOf("/")+1)}customElements.define(SimpleIconset.tag,SimpleIconset),window.SimpleIconset=window.SimpleIconset||{},window.SimpleIconset.requestAvailability=()=>(null==window.SimpleIconset.instance&&(window.SimpleIconset.instance=document.createElement("simple-iconset")),document.body.appendChild(window.SimpleIconset.instance),window.SimpleIconset.instance);const e=window.SimpleIconset.requestAvailability();export{SimpleIconset,e as SimpleIconsetStore,pathResolver,pathFromUrl};