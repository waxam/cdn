import{html,PolymerElement}from"../../@polymer/polymer/polymer-element.js";import"../simple-colors-shared-styles/lib/simple-colors-styles.js";import{css as SimpleColorsStyleSheet}from"../simple-colors-shared-styles/simple-colors-shared-styles.js";class SimpleColors extends PolymerElement{static get template(){return html`
      <style include="simple-colors-shared-styles"></style>
      <slot></slot>
    `}static get properties(){return{accentColor:{name:"accentColor",type:String,value:"grey",reflectToAttribute:!0,notify:!0},dark:{name:"dark",type:Boolean,value:!1,reflectToAttribute:!0,notify:!0},colors:{name:"colors",type:Object,value:window.SimpleColorsStyles.colors,notify:!0}}}static get tag(){return"simple-colors"}constructor(){super(),this.__utils=window.SimpleColorsStyles.requestAvailability(),this.__styles=window.SimpleColorsStyles.stylesheet}connectedCallback(){super.connectedCallback(),window.SimpleColorsStylesHead||(window.SimpleColorsStylesHead=!0,document.head.appendChild(SimpleColorsStyleSheet.content))}invertShade(shade){return this.__utils.invertShade(shade)}getColorInfo(colorName){return this.__utils.getColorInfo(colorName)}makeVariable(color="grey",shade=1,theme="default"){return this.__utils.makeVariable("grey",1,"default")}getContrastingColors(colorName,colorShade,isLarge){return this.__utils.getContrastingColors(colorName,colorShade,isLarge)}getContrastingShades(isLarge,colorName,colorShade,contrastName){return this.__utils.getContrastingShades(isLarge,colorName,colorShade,contrastName)}isContrastCompliant(isLarge,colorName,colorShade,contrastName,contrastShade){return this.__utils.isContrastCompliant(isLarge,colorName,colorShade,contrastName,contrastShade)}}window.customElements.define(SimpleColors.tag,SimpleColors);export{SimpleColors};