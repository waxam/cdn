/**
 * Copyright 2021 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement as t,html as s,css as o}from"../../lit/index.js";import"./lib/simple-toolbar-more-button.js";import{SimpleToolbarGlobalProperties as i}from"./lib/simple-toolbar-button.js";const SimpleToolbarBehaviors=function(t){return class extends t{tag(){return"simple-toolbar"}static get stickyStyles(){return[o`
          :host([sticky]) {
            position: sticky;
            top: 0;
          }
        `]}static get baseStyles(){return[o`
          :host {
            position: relative;
            display: flex;
            align-items: flex-start;
            opacity: 1;
            z-index: 2;
            margin: 0;
            justify-content: space-between;
            background-color: var(--simple-toolbar-border-bg);
            font-size: inherit;
            margin: 0;
            padding: 0;
            transition: all 0.5s;
            transition: z-index 0s;
          }
          :host([hidden]) {
            z-index: -1;
            visibility: hidden;
            opacity: 0;
            height: 0;
          }
          :host([disabled]) {
            opacity: 0.6;
            pointer-events: none;
          }
          #buttons {
            flex-wrap: wrap;
            display: flex;
            justify-content: flex-start;
            flex: 1 1 auto;
            overflow-y: visible;
          }
          #morebutton {
            flex: 0 0 auto;
          }
          ::slotted(.group) {
            display: flex;
            flex-wrap: nowrap;
            justify-content: space-evenly;
            align-items: stretch;
            margin: 0;
            flex: 0 1 auto;
            overflow-y: visible;
            border-width: 0px;
            border-style: solid;
            padding: var(--simple-toolbar-group-padding, 0 3px);
            border-color: var(
              --simple-toolbar-border-color,
              var(--simple-toolbar-group-border-color, transparent)
            );
          }
          ::slotted(.group:not(:last-child)) {
            border-right-width: var(
              --simple-toolbar-group-border-width,
              var(--simple-toolbar-border-width, 1px)
            );
          }
          ::slotted(*:hover),
          ::slotted(*:focus-wthin) {
            z-index: var(--simple-toolbar-focus-z-index, 100);
            transition: z-index 0s;
          }
          :host([collapsed]:not([always-expanded]))
            ::slotted(*[collapse-hide]) {
            display: none !important;
          }
        `]}static get styles(){return[...this.baseStyles,...this.stickyStyles]}static get properties(){return{...i,alwaysExpanded:{name:"alwaysExpanded",type:Boolean,attribute:"always-expanded",reflect:!0},collapsed:{name:"collapsed",type:Boolean,attribute:"collapsed",reflect:!0},config:{name:"config",type:Array,attribute:"config"},id:{name:"id",type:String,attribute:"id",reflect:!0},moreShortcuts:{name:"moreShortcuts",attribute:"more-shortcuts",type:Object},shortcutKeys:{name:"shortcutKeys",attribute:"shortcut-keys",type:Object},sticky:{name:"sticky",type:Boolean,attribute:"sticky",reflect:!0},__buttons:{name:"__buttons",type:Array},collapseDisabled:{type:Boolean,attribute:"collapse-disabled",reflect:!0},__focused:{name:"__focused",type:Boolean},__hovered:{name:"__hovered",type:Boolean}}}render(){return this.toolbarTemplate}get buttons(){return this.__buttons}get focused(){return this.__focused}get hovered(){return this.__hovered}get moreButton(){return s` <simple-toolbar-more-button
        id="morebutton"
        .align-horizontal="${this.alignHorizontal}"
        .align-vertical="${this.alignVertical}"
        aria-controls="buttons"
        class="button"
        @click="${t=>this.collapsed=!this.collapsed}"
        ?disabled=${this.collapseDisabled}
        @toggle="${t=>this.collapsed=!this.collapsed}"
        ?hidden=${this.collapseDisabled}
        .icon="${this.icon}"
        .icon-position="${this.iconPosition}"
        .label="${this.label}"
        .shortcut="${this.shortcut}"
        ?show-text-label="${this.showTextLabel}"
        ?toggled="${!this.collapsed}"
        .toggled-icon="${this.toggledIcon}"
        .toggled-label="${this.toggledLabel}"
        .toggled-tooltip="${this.toggledTooltip}"
        .tooltip-direction="${this.tooltipDirection}"
        part="morebutton"
      >
      </simple-toolbar-more-button>`}get toolbarTemplate(){return s`
        <div
          id="buttons"
          class="${!this.alwaysExpanded&&this.collapsed?"collapsed":""}"
          part="buttons"
        >
          <slot></slot>
        </div>
        ${this.alwaysExpanded?"":this.moreButton}
      `}constructor(){super(),this.collapsed=!0,this.collapseDisabled=!1,this.config=[],this.__buttons=[],this.__focused=!1,this.__hovered=!1,this.icon="more-vert",this.label="More Buttons",this.toggledLabel="Fewer Buttons",this.showTextLabel=!1,this.shortcut="ctrl+shift+;",this.sticky=!1,this.shortcutKeys={},this.addEventListener("register-button",this._handleButtonRegister),this.addEventListener("deregister-button",this._handleButtonDeregister),this.addEventListener("update-button-registry",this._handleButtonUpdate)}connectedCallback(){super.connectedCallback(),this.collapsed&&window.addEventListener("resize",this._handleResize.bind(this)),this.addEventListener("keypress",this._handleShortcutKeys)}disconnectedCallback(){this.collapsed&&window.removeEventListener("resize",this._handleResize.bind(this)),super.disconnectedCallback(),this.addEventListener("keypress",this._handleShortcutKeys)}firstUpdated(t){this.setAttribute("aria-live","polite"),this.onfocus=t=>this.__focused=!0,this.onblur=t=>this.__focused=!1,this.onmouseover=t=>this.__hovered=!0,this.onmouseout=t=>this.__hovered=!1,super.firstUpdated&&super.firstUpdated(t)}updated(t){super.updated&&super.updated(t),t.forEach(((t,e)=>{"config"===e&&this.updateToolbar(),"collapsed"===e&&(this.collapsed?(this.resizeToolbar(),window.addEventListener("resize",this._handleResize.bind(this))):window.removeEventListener("resize",this._handleResize.bind(this))),"hidden"===e&&this.setAttribute("aria-hidden",this.hidden?"true":"false")})),this.resizeToolbar()}addButton(t,e){let s=this._renderButton(t);return(e=e||this).appendChild(s),s}addButtonGroup(t={},e){if(!t.buttons||t.buttons.length<1)return;let s=this._renderButtonGroup(t);return(e||this).appendChild(s),t.buttons.forEach((t=>this.addButton(t,s))),s}clearToolbar(){this.innerHTML="",this.__buttons=[],this.shortcutKeys={},this.shortcutKeys[this.shortcut]=this.shadowRoot?this.shadowRoot.querySelector("#morebutton"):void 0}deregisterButton(t){this.__buttons=this.__buttons.filter((e=>e!==t)),(t.shortcutKeys||"").split(" ").forEach((t=>delete this.shortcutKeys[t]))}registerButton(t){this.__buttons.push(t),this.__buttons=[...new Set(this.__buttons)],(t.shortcutKeys||"").split(" ").forEach((e=>this.shortcutKeys[e]=t))}resizeToolbar(){if(this.alwaysExpanded)return;if(!this.collapsed)return;let t=[...this.children||[]],e=!0;t.forEach((t=>{t.removeAttribute&&t.removeAttribute("collapse-hide"),t.offsetTop&&t.offsetTop>0?(t.setAttribute("collapse-hide",!0),e=!1):e||t.setAttribute("collapse-hide",!0)})),this.collapseDisabled=!!e}updateButton(t){t&&this.deregisterButton(t),t&&this.registerButton(t)}updateToolbar(){this&&this.config&&0!=this.config.length&&(this.clearToolbar(),typeof this.config!=typeof[]&&(this.config=JSON.parse(config)),this.config.forEach((t=>{"button-group"===t.type?this.addButtonGroup(t,this):this.addButton(t,this)})),this.resizeToolbar())}_handleButtonRegister(t){t.stopPropagation(),this.registerButton(t.detail),this.resizeToolbar()}_handleButtonDeregister(t){t.stopPropagation(),this.deregisterButton(t.detail),this.resizeToolbar()}_handleButtonUpdate(t){t.stopPropagation(),this.updateButton(t.detail)}_handleResize(t){this.resizeToolbar()}_handleShortcutKeys(t){let e=this._shortcutKeysMatch(t);e&&(t.preventDefault(),this.shortcutKeys[e]._handleShortcutKeys(t,e),this.dispatchEvent(new CustomEvent("shortcut-key-pressed",{bubbles:!0,cancelable:!0,composed:!0,detail:{...t.detail,button:this,shortcutKey:this}})))}_renderButton(t){let e=document.createElement(t.type);return Object.keys(t).forEach((s=>e[s]=t[s])),e.addEventListener("button-command",this._handleButton),e}_renderButtonGroup(t){let e=document.createElement("div");return e.setAttribute("class","group"),Object.keys(t).forEach((s=>e[s]=t[s])),e}_shortcutKeysMatch(t){let s=!1;return Object.keys(this.shortcutKeys||{}).forEach((o=>{let i=(o||"").toLowerCase().split("+"),r=i.includes("alt"),a=i.includes("ctrl"),l=i.includes("meta")||i.includes("cmd"),n=i.includes("shift"),d=t.shiftKey&&t.code>65&&t.code<91,h=i.filter((t=>1==t.length)).map((t=>d?t.toUpperCase():t))[0];r===t.altKey&&(a===t.ctrlKey||a===window.navigator.platform==="MacIntel"&&e.metaKey)&&l===t.metaKey&&n===t.shiftKey&&(t.key?t.key===h:!h)&&(s=o)})),s}}};class SimpleToolbar extends(SimpleToolbarBehaviors(t)){}customElements.define("simple-toolbar",SimpleToolbar);export{SimpleToolbar,SimpleToolbarBehaviors};