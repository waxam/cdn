import{LitElement as t,html as e,css as o}from"../../../lit/index.js";import{A11yMenuButtonBehaviors as i}from"../../a11y-menu-button/a11y-menu-button.js";import{SimpleToolbarButtonBehaviors as r}from"./simple-toolbar-button.js";import"./simple-toolbar-menu-item.js";const SimpleToolbarMenuBehaviors=function(t){return class extends(i(r(t))){static get simpleButtonCoreStyles(){return[...super.simpleButtonCoreStyles,o`
          #menubutton {
            display: flex;
            flex-wrap: none;
            align-items: center;
            min-width: 42px;
          }
          .label {
            padding: 0 5px;
          }
          #dropdownicon {
            --simple-icon-height: 18px;
            --simple-icon-width: 18px;
            margin-left: -2px;
          }
        `]}static get simpleButtonLayoutStyles(){return[...super.simpleButtonLayoutStyles,o`
          #menu {
            width: var(--simple-toolbar-button-width);
            min-width: var(--simple-toolbar-button-min-width);
          }
        `]}static get simpleButtonThemeStyles(){return[...super.simpleButtonThemeStyles,o`
          :host([expanded]) absolute-position-behavior {
            border-style: solid;
            border-width: var(
              --simple-toolbar-button-border-width,
              var(--simple-toolbar-border-width, 1px)
            );
            border-color: var(
              --simple-toolbar-button-border-color,
              var(--simple-toolbar-border-color, inherit)
            );
            background-color: var(--simple-toolbar-button-bg, white);
            box-shadow: var(--simple-toolbar-menu-list-box-shadow, unset);
          }
        `]}static get styles(){return[...super.menuButtonCoreStyles,...this.simpleButtonCoreStyles,...this.iconStyles,...this.labelStyles,...this.tooltipStyles,...this.simpleButtonLayoutStyles,...this.simpleButtonThemeStyles]}get buttonTemplate(){return e`
        <button
          id="menubutton"
          aria-haspopup="true"
          aria-controls="menu"
          aria-expanded="${this.expanded?"true":"false"}"
          part="button"
        >
          ${this.iconTemplate} ${this.labelTemplate}
          <simple-icon-lite
            id="dropdownicon"
            icon="arrow-drop-down"
            aria-hidden="true"
            part="dropdown-icon"
          ></simple-icon-lite>
        </button>
      `}get listItemTemplate(){return e`<slot></slot>`}static get tag(){return"simple-toolbar-menu"}static get properties(){return{...super.properties}}}};class SimpleToolbarMenu extends(SimpleToolbarMenuBehaviors(t)){}window.customElements.define(SimpleToolbarMenu.tag,SimpleToolbarMenu);export{SimpleToolbarMenu,SimpleToolbarMenuBehaviors};