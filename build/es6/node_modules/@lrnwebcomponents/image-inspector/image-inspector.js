import{LitElement as t,html as s,css as e}from"../../lit-element/lit-element.js";import"../exif-data/exif-data.js";import"../lrnsys-button/lrnsys-button.js";import"../../@polymer/iron-icons/iron-icons.js";import"../../@polymer/iron-icons/image-icons.js";import"../img-pan-zoom/img-pan-zoom.js";class ImageInspector extends t{static get styles(){return[e`
        :host {
          display: block;
          overflow: hidden;
          --image-inspector-background: #dddddd;
        }

        app-toolbar {
          width: 100%;
          background: var(--image-inspector-background);
          margin: 0 auto;
          padding: 0;
          z-index: 1;
          display: flex;
          text-align: center;
          justify-content: space-evenly;
        }

        lrnsys-button {
          display: inline-flex;
        }

        .top-rotated {
          top: 150px;
          pointer-events: none; /** disable pointer events when rotated bc of HTML canvas issue */
        }
        .showData {
          display: block;
          z-index: 2;
        }
        exif-data {
          margin: 0 auto;
          justify-content: space-evenly;
          position: absolute;
          display: none;
          margin: 0;
          padding: 0;
        }
        exif-data img {
          margin: 0;
          opacity: 0;
          padding: 0;
          height: 500px;
          pointer-events: none;
        }
      `]}constructor(){super(),this.noLeft=!1,this.degrees=0,this.hoverClass="blue white-text",this.src=""}render(){return s`
      <div style="border-bottom: 1px solid black;">
        <lrnsys-button
          alt="Zoom in"
          icon="zoom-in"
          @click="${this.zoomIn}"
          hover-class="${this.hoverClass}"
        ></lrnsys-button>
        <lrnsys-button
          alt="Zoom out"
          icon="zoom-out"
          @click="${this.zoomOut}"
          hover-class="${this.hoverClass}"
        ></lrnsys-button>
        <lrnsys-button
          alt="Rotate right"
          icon="image:rotate-right"
          @click="${this.rotateRight}"
          hover-class="${this.hoverClass}"
        ></lrnsys-button>
        <lrnsys-button
          alt="Rotate left"
          icon="image:rotate-left"
          @click="${this.rotateLeft}"
          hover-class="${this.hoverClass}"
        ></lrnsys-button>
        <lrnsys-button
          alt="Mirror image"
          icon="image:flip"
          @click="${this.mirrorImage}"
          hover-class="${this.hoverClass}"
        ></lrnsys-button>
        <lrnsys-button
          alt="Open in new window"
          icon="launch"
          href="${this.src}"
          target="_blank"
          hover-class="${this.hoverClass}"
        ></lrnsys-button>
        <lrnsys-button
          alt="EXIF Data"
          icon="image:camera-roll"
          @click="${this.exifDataEvent}"
          hover-class="${this.hoverClass}"
        ></lrnsys-button>
        <slot name="toolbar"></slot>
      </div>
      <exif-data
        id="exif"
        @click=${this.hideData}
        no-events
        ?no-left="${this.noLeft}"
        ><img src="${this.src}"
      /></exif-data>
      <img-pan-zoom id="img" src="${this.src}"></img-pan-zoom>
      <slot></slot>
    `}exifDataEvent(t){this.shadowRoot.querySelector("#exif").classList.contains("showData")?this.shadowRoot.querySelector("#exif").classList.remove("showData"):(this.shadowRoot.querySelector("#exif").updateExif(!0),this.shadowRoot.querySelector("#exif").classList.add("showData"))}hideData(t){this.shadowRoot.querySelector("#exif").classList.remove("showData")}static get tag(){return"image-inspector"}static get properties(){return{noLeft:{type:Boolean,attribute:"no-left"},degrees:{type:Number,reflect:!0},src:{type:String},hoverClass:{type:String,attribute:"hover-class"}}}firstUpdated(){this.__img=this.shadowRoot.querySelector("#img"),this.shadowRoot.querySelector("#exif").alignTarget=this.__img,this.shadowRoot.querySelector("#exif").alignTargetTop="0px"}rotateRight(){this.degrees+=90,this.__img.style.transform="rotate("+this.degrees+"deg)",this.__img.classList.contains("top-rotated")?this.__img.classList.remove("top-rotated"):this.__img.classList.add("top-rotated")}rotateLeft(){this.degrees+=-90,this.__img.style.transform="rotate("+this.degrees+"deg)",this.__img.classList.contains("top-rotated")?this.__img.classList.remove("top-rotated"):this.__img.classList.add("top-rotated")}mirrorImage(){"scaleX(1)"===this.__img.style.transform?this.__img.style.transform="scaleX(-1)":this.__img.style.transform="scaleX(1)"}zoomIn(){this.__img.zoomIn()}zoomOut(){this.__img.zoomOut()}}window.customElements.define(ImageInspector.tag,ImageInspector);export{ImageInspector};