import{deprecate as t}from"../utils/deprecate.js";import i from"../utils/is-array.js";import{createLocal as e}from"../create/local.js";import{createInvalid as r}from"../create/valid.js";export var prototypeMin=t("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var t=e.apply(null,arguments);return this.isValid()&&t.isValid()?t<this?this:t:r()}));export var prototypeMax=t("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",(function(){var t=e.apply(null,arguments);return this.isValid()&&t.isValid()?t>this?this:t:r()}));function pickBy(t,r){var n,a;if(1===r.length&&i(r[0])&&(r=r[0]),!r.length)return e();for(n=r[0],a=1;a<r.length;++a)r[a].isValid()&&!r[a][t](n)||(n=r[a]);return n}export function min(){var t=[].slice.call(arguments,0);return pickBy("isBefore",t)}export function max(){var t=[].slice.call(arguments,0);return pickBy("isAfter",t)}