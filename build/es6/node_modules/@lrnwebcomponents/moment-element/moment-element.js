import{LitElement,html}from"../../lit-element/lit-element.js";import"../es-global-bridge/es-global-bridge.js";class MomentElement extends LitElement{render(){return html`
      ${this.output}
    `}static get tag(){return"moment-element"}static get properties(){return{datetime:{type:String},inputFormat:{type:String,attribute:"input-format"},outputFormat:{type:String,attribute:"output-format"},from:{type:String},to:{type:String},output:{type:String},libraryLoaded:{type:Boolean}}}pathFromUrl(url){return url.substring(0,url.lastIndexOf("/")+1)}constructor(){super(),this.datetime=new Date,this.inputFormat="",this.outputFormat="",this.from="",this.to="";const location=`${this.pathFromUrl(decodeURIComponent(import.meta.url))}lib/moment/moment.js`;window.addEventListener("es-bridge-moment-loaded",this._momentLoaded.bind(this)),window.ESGlobalBridge.requestAvailability(),window.ESGlobalBridge.instance.load("moment",location)}updated(changedProperties){changedProperties.forEach((oldValue,propName)=>{if(["output"].includes(propName)){let eventName=`${propName.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g,"$1-$2").toLowerCase()}-changed`;this.dispatchEvent(new CustomEvent(eventName,{detail:{value:this[propName]}}))}["datetime","inputFormat","outputFormat","from","to","libraryLoaded"].includes(propName)&&(this.output=this._computeOutput(this.datetime,this.inputFormat,this.outputFormat,this.from,this.to,this.libraryLoaded))})}disconnectedCallback(){window.removeEventListener("es-bridge-moment-loaded",this._momentLoaded.bind(this)),super.disconnectedCallback()}_momentLoaded(){this.libraryLoaded=!0}_computeOutput(datetime,inputFormat,outputFormat,from,to,libraryLoaded){if(libraryLoaded){var output=inputFormat?moment(datetime,inputFormat):moment(datetime);return outputFormat?output=output.format(outputFormat):from?output="now"===from?output.fromNow():output.from(moment(from)):to&&(output="now"===to?output.toNow():output.to(moment(to))),output}}}window.customElements.define(MomentElement.tag,MomentElement);export{MomentElement};