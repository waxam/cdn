### This file was autogenerated by Nexus 0.11.3
### Do not make changes to this file directly


type AggregateStatement {
  count: Int!
}

type BatchPayload {
  count: Long!
}

scalar Json

scalar Long

type Mutation {
  createStatement(data: StatementCreateInput!): Statement!
  deleteManyStatements(where: StatementWhereInput): BatchPayload!
  deleteStatement(where: StatementWhereUniqueInput!): Statement
  updateManyStatements(data: StatementUpdateManyMutationInput!, where: StatementWhereInput): BatchPayload!
  updateStatement(data: StatementUpdateInput!, where: StatementWhereUniqueInput!): Statement
  upsertStatement(create: StatementCreateInput!, update: StatementUpdateInput!, where: StatementWhereUniqueInput!): Statement!
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Query {
  statement(where: StatementWhereUniqueInput!): Statement
  statements(after: String, before: String, first: Int, last: Int, orderBy: StatementOrderByInput, skip: Int, where: StatementWhereInput): [Statement!]!
  statementsConnection(after: String, before: String, first: Int, last: Int, orderBy: StatementOrderByInput, skip: Int, where: StatementWhereInput): StatementConnection!
}

type Statement {
  data: Json!
  id: ID!
}

type StatementConnection {
  aggregate: AggregateStatement!
  edges: [StatementEdge!]!
  pageInfo: PageInfo!
}

input StatementCreateInput {
  data: Json!
}

type StatementEdge {
  cursor: String!
  node: Statement!
}

enum StatementOrderByInput {
  createdAt_ASC
  createdAt_DESC
  data_ASC
  data_DESC
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input StatementUpdateInput {
  data: Json
}

input StatementUpdateManyMutationInput {
  data: Json
}

input StatementWhereInput {
  AND: [StatementWhereInput!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [StatementWhereInput!]
  OR: [StatementWhereInput!]
}

input StatementWhereUniqueInput {
  id: ID
}
