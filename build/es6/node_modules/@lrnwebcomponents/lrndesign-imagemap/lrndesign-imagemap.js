import{html as e,PolymerElement as t}from"../../@polymer/polymer/polymer-element.js";import{afterNextRender as o}from"../../@polymer/polymer/lib/utils/render-status.js";import"../../@polymer/iron-ajax/iron-ajax.js";import"../../@polymer/iron-a11y-keys/iron-a11y-keys.js";import"../simple-modal/simple-modal.js";class LrndesignImagemap extends t{constructor(){super(),import("../relative-heading/relative-heading.js"),import("./lib/lrndesign-imagemap-hotspot.js")}static get template(){return e`
      <style>
        :host {
          display: block;
        }
        :host #buttons {
          position: absolute;
          left: -999999px;
          top: 0;
          overflow: hidden;
          opacity: 0;
        }
        /*::slotted([hotspot]) {
        display: none;
      }*/
        @media print {
          :host > #svg {
            display: none;
          }
          /*::slotted(#screen-only) {
          display: none;
        }
        ::slotted([hotspot]) {
          display: block;
        }*/
        }
      </style>
      <relative-heading
        hidden\$="[[!label]]"
        id="heading"
        subtopic-of\$="[[subtopicOf]]"
        tag\$="[[tag]]"
        text\$="[[label]]"
      >
      </relative-heading>
      <div id="desc"><slot name="desc"></slot></div>
      <div id="svg"></div>
      <div id="buttons"></div>
      <slot></slot>
      <iron-ajax
        auto=""
        id="get_svg"
        url="[[src]]"
        handle-as="text"
        on-response="_getSVGHandler"
      ></iron-ajax>
    `}static get tag(){return"lrndesign-imagemap"}static get properties(){return{label:{type:String,value:null},src:{type:String,value:null},hotspotDetails:{type:Array,value:[]},subtopicOf:{type:String,value:null,reflectToAttribute:!0},tag:{type:String,value:null,reflectToAttribute:!0}}}connectedCallback(){super.connectedCallback(),window.SimpleModal.requestAvailability(),window.addEventListener("simple-modal-closed",e=>{e.detail.invokedBy===this&&this.closeHotspot()})}disconnectedCallback(){window.removeEventListener("simple-modal-closed",e=>{e.detail.invokedBy===this&&this.closeHotspot()}),super.disconnectedCallback()}_getSVGHandler(e){let t=this,o=document.createElement("div"),getID=function(e,t){return null===e.getAttribute("id")&&e.setAttribute("id",t),e.getAttribute("id")},setAriaLabelledBy=function(e,o,s){let svgElem=function(l){let i="title"===l?"label":l,n=(e=null!==e?e:t).querySelector("#"+i);var r=o.querySelector(l);return null===r&&(r=document.createElement(l),o.prepend(r)),null!==e.getAttribute(i)?r.innerHTML=e.getAttribute(i):null!==n&&""!==n.innerHTML&&(r.innerHTML=n.innerHTML),getID(r,s+"-"+i)};o.setAttribute("aria-labelledby",svgElem("desc")+" "+svgElem("label"))};o.innerHTML=e.detail.response;let s=o.querySelector("svg"),l=getID(s,"svg-"+Date.now()),i=t.querySelectorAll("lrndesign-imagemap-hotspot");setAriaLabelledBy(t,s,l),this.shadowRoot.querySelector("#svg").appendChild(s);for(let e=0;e<i.length;e++){let o=i[e].getAttribute("hotspot-id"),l=s.querySelector("#"+o),n=s.cloneNode(!0);setAriaLabelledBy(i[e],n,o),i[e].appendChild(n),i[e].querySelector("#"+o).classList.add("selected"),i[e].setParentHeading(t.shadowRoot.querySelector("#heading"));for(let t=0;t<i.length;t++)i[e].querySelector("#"+i[t].getAttribute("hotspot-id")).classList.add("hotspot");let r=document.createElement("button");r.setAttribute("tabindex",0),r.setAttribute("aria-label",i[e].label),t.shadowRoot.querySelector("#buttons").appendChild(r),r.addEventListener("focus",(function(){l.classList.add("focus")})),r.addEventListener("blur",(function(){l.classList.remove("focus")})),l.classList.add("hotspot"),l.addEventListener("click",t=>{this.openHotspot(l,i[e])}),r.addEventListener("keyup",t=>{13!==t.keyCode&&32!==t.keyCode||l.classList.contains("selected")||this.openHotspot(l,i[e])})}}openHotspot(e,t){var o=t.shadowRoot.querySelector("#desc").querySelector("slot").assignedNodes({flatten:!0});let s=document.createElement("div");for(var l in o)s.appendChild(o[l].cloneNode(!0));const i=new CustomEvent("simple-modal-show",{bubbles:!0,cancelable:!0,detail:{title:t.getAttribute("label"),elements:{content:s},invokedBy:this,clone:!1}});this.dispatchEvent(i),this.__activeHotspot=e,this.resetHotspots(),e.classList.add("selected")}closeHotspot(){this.resetHotspots(),this.__activeHotspot.focus()}resetHotspots(){let e=this.querySelectorAll('.hotspot[role="button"]');for(let t=0;t<e.length;t++)e[t].classList.remove("selected")}}window.customElements.define(LrndesignImagemap.tag,LrndesignImagemap);export{LrndesignImagemap};