/**
 * Copyright 2019 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement as t,html as i,css as e}from"../../lit-element/lit-element.js";import{SchemaBehaviors as o}from"../schema-behaviors/schema-behaviors.js";import{A11yDetails as a}from"../a11y-details/a11y-details.js";class A11yGifPlayer extends(o(t)){constructor(){super(),this.alt=null,this.disabled=!1,this.src=null,this.tooltip="Toggle animation",this.tooltipPlaying=null,this.srcWithoutAnimation=null,this.__playing=!1,import("../simple-tooltip/simple-tooltip.js"),import("../../@polymer/iron-image/iron-image.js")}static get styles(){return[e`
        :host {
          display: inline-flex;
        }
        :host([hidden]) {
          display: none;
        }
        .sr-only {
          position: absolute;
          left: -9999999px;
          top: 0;
          width: 0;
          overflow: hidden;
        }
        #container {
          padding: 0;
          margin: 0;
          position: relative;
          width: min-content;
          border: var(--a11y-gif-player-border, none);
          border-radius: var(--a11y-gif-player-border-radius, 0);
        }
        button {
          position: absolute;
          width: 100%;
          top: 0;
          left: 0;
          bottom: 0;
          right: 0;
          background-size: contain;
          background-color: var(--a11y-gif-player-button-bg, #cccccc);
        }
        button:active,
        button:focus,
        button:hover {
          border: var(--a11y-gif-player-focus-border, none);
          outline: var(--a11y-gif-player-outline, 3px solid);
        }
        button[disabled] {
          cursor: var(--a11y-gif-player-disabled-cursor, not-allowed);
        }
        button[aria-pressed="true"] {
          opacity: 0;
        }
        svg {
          position: absolute;
          top: 35%;
          left: 35%;
          width: var(--a11y-gif-player-arrow-size, 30%);
          height: var(--a11y-gif-player-arrow-size, 30%);
        }
        g {
          opacity: var(--a11y-gif-player-arrow-opacity, 0.5);
        }
        button:not([disabled]):active g,
        button:not([disabled]):hover g,
        button:not([disabled]):focus g {
          opacity: var(--a11y-gif-player-button-focus-opacity, 0.7);
        }
        polygon {
          fill: var(--a11y-gif-player-button-color, #000000);
          stroke: var(--a11y-gif-player-arrow-border-color, #ffffff);
          stroke-width: var(--a11y-gif-player-arrow-border-width, 15px);
        }
        text {
          fill: var(--a11y-gif-player-button-text-color, #ffffff);
        }
        #longdesc {
          position: absolute;
          left: 2px;
          bottom: 2px;
          width: calc(100% - 2px);
          font-size: 80%;
        }
        simple-tooltip {
          --simple-tooltip-background: #000000;
          --simple-tooltip-opacity: 1;
          --simple-tooltip-text-color: #ffffff;
          --simple-tooltip-delay-in: 0;
        }
      `]}render(){return i`
      <div id="container">
        <iron-image
          id="gif"
          src="${this.src}"
          alt="${this.alt}"
          aria-describedby="${this.longdesc?"longdesc":""} ${(this.describedBy||"").trim()}"
          ?hidden="${!this.src}"
          slot="summary"
        >
        </iron-image>
        <button
          id="button"
          aria-controls="gif"
          aria-pressed="${this.__playing?"true":"false"}"
          @click="${this.toggle}"
          ?disabled="${this.disabled||!this.src}"
          style="background-image: url('${this.srcWithoutAnimation}')"
        >
          <svg
            id="svg"
            aria-hidden="true"
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 200 200"
          >
            <g>
              <polygon points="30,20 30,180 170,100"></polygon>
              <text x="50" y="115" font-size="40px">GIF</text>
            </g>
          </svg>
          <span class="sr-only">
            ${this.__playing&&this.tooltipPlaying?this.tooltipPlaying:this.tooltip}
          </span>
        </button>
        <a11y-details
          id="longdesc"
          ?hidden="${!this.src||!this.longdesc}"
          style="opacity:${this.__playing?0:1}"
        >
          <div slot="summary">info</div>
          <div slot="details">${this.longdesc}</div>
        </a11y-details>
      </div>
      <simple-tooltip for="button" offset="30" animation-delay="0">
        ${this.__playing&&this.tooltipPlaying?this.tooltipPlaying:this.tooltip}
      </simple-tooltip>
    `}static get tag(){return"a11y-gif-player"}static get properties(){return{...super.properties,alt:{type:String},disabled:{type:Boolean},describedBy:{attribute:"described-by",type:String},longdesc:{type:String,attribute:"longdesc"},src:{type:String},srcWithoutAnimation:{type:String,attribute:"src-without-animation"},tooltip:{type:String},tooltipPlaying:{type:String,attribute:"tooltip-playing"},__playing:{type:Boolean}}}play(){this.__playing=!0}stop(){this.__playing=!1}toggle(){this.__playing?this.stop():this.play()}toggleAnimation(){this.__playing?this.stop():this.play()}static get haxProperties(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"Accessible GIF",description:"Makes animated GIFs accessible.",icon:"gif",color:"grey",groups:["Images","Media"],handles:[{type:"image",source:"src",source2:"srcWithoutAnimation",alt:"alt",ariaDescribedby:"describedBy"}],meta:{author:"ELMS:LN"}},settings:{quick:[{property:"src",title:"Animated GIF",description:"The URL to your animated GIF.",inputMethod:"textfield",icon:"link",validationType:"url",required:!0},{property:"srcWithoutAnimation",title:"Still Image",description:"The URL to a still image version of your GIF.",inputMethod:"textfield",icon:"link",validationType:"url",required:!0},{property:"alt",title:"Alt Text",description:"Alternative text for the image.",inputMethod:"textfield",icon:"accessibility",required:!0}],configure:[{property:"src",title:"Animated GIF",description:"The URL to your animated GIF.",inputMethod:"haxupload",icon:"link",validationType:"url",required:!0},{property:"srcWithoutAnimation",title:"Still Image",description:"The URL to a still image version of your GIF.",inputMethod:"haxupload",icon:"link",validationType:"url",required:!0},{property:"alt",title:"Alt Text",description:"Alternative text for the image.",inputMethod:"alt",icon:"accessibility",required:!0},{property:"longdesc",title:"Long Description",description:"Long descriptions of the GOF for accessibiility",inputMethod:"textarea"}],advanced:[{property:"describedBy",title:"aria-decsribedby",description:"Space-separated id list for long descriptions that appear elsewhere",inputMethod:"textfield"}]},demoSchema:[{tag:"a11y-gif-player",properties:{alt:"It's Always Sunny in Philadelphia Pepe Silvia Meme with GIFs",src:"https://media0.giphy.com/media/zHaPZZvl6cVHi/giphy.gif",srcWithoutAnimation:"https://media0.giphy.com/media/zHaPZZvl6cVHi/480w_s.jpg",longdesc:"Pepe Silvia scene from It's Always Sunny in Philadelphia. Jesus, dude, you're still making GIFs. The GIF's don't stop.",style:"max-width:400px"}}]}}}window.customElements.define(A11yGifPlayer.tag,A11yGifPlayer);export{A11yGifPlayer};