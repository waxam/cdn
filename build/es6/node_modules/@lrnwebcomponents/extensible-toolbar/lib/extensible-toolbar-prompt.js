import{html,PolymerElement}from"../../../@polymer/polymer/polymer-element.js";import"../../../@polymer/iron-a11y-keys/iron-a11y-keys.js";import"../../simple-popover/simple-popover.js";import"../../simple-fields/simple-fields.js";import"../buttons/extensible-toolbar-button-styles.js";class ExtensibleToolbarPrompt extends PolymerElement{static get template(){return html`
      <style include="extensible-toolbar-styles extensible-toolbar-button-styles">
        :host {
          --paper-input-container-focus-color: var(
            --extensible-toolbar-focus-color,
            #000
          );
          --paper-input-container-invalid-color: var(
            --extensible-toolbar-error-color,
            #800
          );
        }
        :host #prompt {
          display: none;
          width: 300px;
          max-width: 300px;
          --simple-popover-padding: 0px;
        }
        :host #prompt[for]{
          display: block;
          z-index: 2;
        }
        :host #prompt[for] #form {
          display: flex;
          flex-direction: column;
          align-items: center;
          justify-content: space-between;
          z-index: 2;
        }
        :host #formfields {
          width: calc(100% - 20px);
          padding: 10px 10px 0;
        }
        :host #prompt paper-input {
          padding: 0;
        }
        :host #confirm, 
        :host #cancel {
          min-width: unset;
        }
        :host #formfields {
          overflow: visible;
        }
        :host #cancel {
          color: var(--extensible-toolbar-button-color);
          background-color: var(--extensible-toolbar-button-bg);

        }
        :host #cancel:focus,
        :host #cancel:hover {
          color: var(--extensible-toolbar-button-hover-color);
          background-color: var(--extensible-toolbar-button-hover-bg);
        }
        :host #confirm {
          color: var(--extensible-toolbar-button-color);
          background-color: var(--extensible-toolbar-button-bg);

        }
        :host #confirm:focus,
        :host #confirm:hover {
          color: var(--extensible-toolbar-button-hover-color);
          background-color: var(--extensible-toolbar-button-hover-bg);
        }
        :host .actions {
          width: 100%;
          padding-bottom: 3px;
          display: flex;
          align-items: center;
          justify-content: flex-end;
        }
        :host .confirm-or-cancel {
          min-width: 40px;
        }
      </style>
      <simple-popover
        id="prompt"
        auto
        for$="[[for]]"
      >
        <form id="form">
          <simple-fields
            id="formfields"
            autofocus
            hide-line-numbers
            fields="[[fields]]"
            value="{{value}}"
          ></simple-fields>
          <div class="actions">
            </iron-a11y-keys>
            <paper-button
              id="cancel"
              class="toolbar-button"
              controls$="[[for]]"
              on-click="_cancel"
              tabindex="0"
            >
              <iron-icon id="icon" aria-hidden icon="clear"> </iron-icon>
              <span id="label" class="offscreen">Cancel</span>
            </paper-button>
            <paper-tooltip id="tooltip" for="cancel">Cancel</paper-tooltip>
            <paper-button
              id="confirm"
              class="toolbar-button"
              controls$="[[for]]"
              on-click="_confirm"
              tabindex="0"
            >
              <iron-icon id="icon" aria-hidden icon="check"> </iron-icon>
              <span id="label" class="offscreen">OK</span>
            </paper-button>
            <paper-tooltip id="tooltip" for="confirm">OK</paper-tooltip>
          </div>
          <iron-a11y-keys
            id="a11ycancel"
            target="[[__a11ycancel]]"
            keys="enter space"
            on-keys-pressed="_cancel"
          >
          <iron-a11y-keys
            id="a11yconfirm"
            target="[[__a11yconfirm]]"
            keys="enter space"
            on-keys-pressed="_confirm"
          >
          </iron-a11y-keys>
        </form>
      </simple-popover>
    `}static get tag(){return"extensible-toolbar-prompt"}static get properties(){return{for:{type:String},range:{type:Object,value:null},fields:{type:Array,value:null},value:{type:Object,value:null},__button:{type:Object,value:null}}}constructor(){if(super(),!window.ExtensibleToolbarPrompt.instance)return window.ExtensibleToolbarPrompt.instance=this,this}connectedCallback(){super.connectedCallback(),this.__a11yconfirm=this.$.confirm,this.__a11ycancel=this.$.cancel}setTarget(button){this.clearTarget(),this.set("fields",button.__fields),this.set("value",button.value),this.__button=button,button.__selection&&(this.for=button.__selection.getAttribute("id"))}clearTarget(){this.__button&&(this.for=null,this.set("fields",null),this.set("value",null),this.__button=null)}_cancel(e){e.preventDefault(),this.__button&&(this.__button.cancel(),this.clearTarget())}_confirm(e){e.preventDefault(),this.__button.value=this.value,this.__button.confirm(),this.clearTarget()}}window.customElements.define(ExtensibleToolbarPrompt.tag,ExtensibleToolbarPrompt);export{ExtensibleToolbarPrompt};window.ExtensibleToolbarPrompt=window.ExtensibleToolbarPrompt||{},window.ExtensibleToolbarPrompt.requestAvailability=()=>(window.ExtensibleToolbarPrompt.instance||(window.ExtensibleToolbarPrompt.instance=document.createElement("extensible-toolbar-prompt"),document.body.appendChild(window.ExtensibleToolbarPrompt.instance)),window.ExtensibleToolbarPrompt.instance);