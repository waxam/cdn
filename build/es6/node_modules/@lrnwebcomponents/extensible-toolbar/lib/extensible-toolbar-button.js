import{html,PolymerElement}from"../../../@polymer/polymer/polymer-element.js";import"../../../@polymer/paper-button/paper-button.js";import"../../../@polymer/paper-tooltip/paper-tooltip.js";import"../../../@polymer/iron-a11y-keys/iron-a11y-keys.js";import"../../../@polymer/iron-icons/iron-icons.js";import"./extensible-toolbar-button-styles.js";class ExtensibleToolbarButton extends PolymerElement{static get template(){return html`
      <style include="extensible-toolbar-button-styles">
        :host .toolbar-button {
          min-width: var(--extensible-toolbar-button-min-width);
          height: var(--extensible-toolbar-button-height);
          margin: var(--extensible-toolbar-button-margin);
          padding: var(--extensible-toolbar-button-padding);
        }
      </style>
      <iron-a11y-keys
        id="a11y"
        target="[[__a11y]]"
        keys="enter"
        on-keys-pressed="_handleButton"
      >
      </iron-a11y-keys>
      <paper-button
        id="button"
        class="toolbar-button"
        disabled$="[[disabled]]"
        controls$="[[controls]]"
        on-click="_handleButton"
        tabindex="0"
        toggled$="[[toggled]]"
      >
        <iron-icon id="icon" aria-hidden icon$="[[__icon]]"></iron-icon>
        <span id="label" class$="[[labelStyle]]">[[__label]]</span>
      </paper-button>
      <paper-tooltip id="tooltip" aria-hidden for="button"
        >[[__label]]</paper-tooltip
      >
    `}static get properties(){return{collapsedUntil:{name:"collapsedUntil",type:String,value:"xs",reflectToAttribute:!0},controls:{name:"controls",type:String},disabled:{name:"disabled",type:Boolean,value:!1},icon:{name:"icon",type:String,value:null},label:{name:"label",type:String,value:null},labelStyle:{name:"labelStyle",type:String,computed:"_labelStyle(icon,showTextLabel)",readOnly:!0},shortcutKeys:{name:"shortcutKeys",type:String,value:null},showTextLabel:{name:"showTextLabel",type:Boolean,value:!1},toggled:{name:"toggled",type:Boolean,value:!1,notify:!0},toggledIcon:{name:"toggledIcon",type:String,value:null},toggledLabel:{name:"toggledLabel",type:String,value:null},__label:{name:"__label",type:String,computed:"_getLabel(toggled,label,toggledLabel)",notify:!0},__icon:{name:"__icon",type:String,computed:"_getIcon(toggled,icon,toggledIcon)",notify:!0}}}static get tag(){return"extensible-toolbar-button"}ready(){super.ready();this.addEventListener("keypress",function(e){e.preventDefault()})}connectedCallback(){super.connectedCallback(),this.__a11y=this.$.button}disconnectedCallback(){super.disconnectedCallback()}buttonAction(){this.dispatchEvent(new CustomEvent("button-action",{bubbles:!0,cancelable:!0,composed:!0,detail:this}))}_handleButton(e){e.preventDefault(),console.log("_handleButton",e),this.buttonAction()}_getLabel(toggled,label,toggledLabel){return toggled&&null!==toggledLabel?toggledLabel:label}_getIcon(toggled,icon,toggledIcon){return toggled&&null!==toggledIcon?toggledIcon:icon}_keysPressed(e){e.preventDefault(),this._handleButton(e)}_labelStyle(icon,showTextLabel){return null!=icon&&""!==icon&&!1===showTextLabel?"offscreen":null}}window.customElements.define(ExtensibleToolbarButton.tag,ExtensibleToolbarButton);export{ExtensibleToolbarButton};