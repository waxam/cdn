import{html,PolymerElement}from"../../@polymer/polymer/polymer-element.js";import{AbsolutePositionBehavior}from"../absolute-position-behavior/absolute-position-behavior.js";import"../responsive-utility/responsive-utility.js";import"./lib/extensible-toolbar-styles.js";import"./lib/extensible-toolbar-group.js";import"./lib/extensible-toolbar-button.js";import"./lib/extensible-toolbar-more-button.js";import"./lib/extensible-toolbar-button-styles.js";import"../../@polymer/iron-icons/iron-icons.js";import"../../@polymer/iron-icons/editor-icons.js";import"../../@polymer/iron-icons/image-icons.js";import"../md-extra-icons/md-extra-icons.js";class ExtensibleToolbar extends AbsolutePositionBehavior{static get template(){return html`
      <style>
        :host {
          display: block;
        }
        :host([hidden]) {
          display: none;
        }
        :host #toolbar {
          width: 100%;
          display: flex;
          opacity: 1;
          z-index: 1;
          margin: 0;
          align-items: stretch;
          flex-wrap: wrap;
          justify-content: flex-start;
          background-color: var(--extensible-toolbar-bg);
          border: var(--extensible-toolbar-border);
          font-size: 12px;
          transition: all 0.5s;
          @apply --extensible-toolbar;
        }
        :host #toolbar[aria-hidden] {
          visibility: hidden;
          opacity: 0;
          height: 0;
        }
        :host #toolbar .toolbar-group {
          display: flex;
          flex: 1 1 auto;
          flex-wrap: nowrap;
          justify-content: flex-start;
          align-items: stretch;
          padding: 0 3px;
          @apply --extensible-toolbar-group;
        }
        :host #toolbar .toolbar-group:not(:last-of-type) {
          margin-right: 3px;
          border-right: var(--extensible-toolbar-border);
          @apply --extensible-toolbar-divider;
        }
        :host #toolbar .button {
          display: flex;
          flex: 0 0 auto;
          align-items: stretch;
        }
        :host #toolbar #morebutton {
          flex: 1 0 auto;
          justify-content: flex-end;
        }

        :host([responsive-size="xs"]) #morebutton[collapse-max="xs"],
        :host([responsive-size="sm"]) #morebutton[collapse-max*="s"],
        :host([responsive-size="md"]) #morebutton:not([collapse-max*="l"]),
        :host([responsive-size="lg"]) #morebutton:not([collapse-max="xl"]),
        :host([responsive-size="xl"]) #morebutton,
        :host([responsive-size="xs"])
          #toolbar:not([aria-expanded])
          *[collapsed-until*="m"],
        :host([responsive-size="xs"])
          #toolbar:not([aria-expanded])
          *[collapsed-until*="l"],
        :host([responsive-size="sm"])
          #toolbar:not([aria-expanded])
          *[collapsed-until="md"],
        :host([responsive-size="sm"])
          #toolbar:not([aria-expanded])
          *[collapsed-until*="l"],
        :host([responsive-size="md"])
          #toolbar:not([aria-expanded])
          *[collapsed-until*="l"],
        :host([responsive-size="lg"])
          #toolbar:not([aria-expanded])
          *[collapsed-until="xl"] {
          display: none;
        }
      </style>
      <style
        include="extensible-toolbar-styles extensible-toolbar-button-styles"
      ></style>
      <div
        id="toolbar"
        aria-live="polite"
        aria-hidden$="[[!controls]]"
        aria-expanded$="[[!collapsed]]"
      >
        <extensible-toolbar-more-button
          id="morebutton"
          auto$="[[floating]]"
          class="button"
          collapse-max="[[__collapseMax]]"
          controls="toolbar"
          fit-to-visible-bounds
          for$="[[controls]]"
          icon$="[[moreIcon]]"
          label$="[[moreLabel]]"
          show-text-label$="[[moreShowTextLabel]]"
          label-toggled$="[[moreLabelToggled]]"
          position="[[_getPosition(positionBelow)]]"
          toggled$="[[!collapsed]]"
          on-click="_toggleMore"
        >
        </extensible-toolbar-more-button>
      </div>
    `}static get properties(){return{buttons:{name:"buttons",type:"Array",computed:"_getButtons(config)"},collapsed:{name:"collapsed",type:"Boolean",value:!0},config:{name:"config",type:"Object",value:[]},controls:{name:"controls",type:"String",value:null},editor:{name:"editor",type:"Object",value:null},floating:{name:"floating",type:"Boolean",value:!1,reflectToAttribute:!0},hidden:{name:"hidden",type:"Boolean",value:!1,reflectToAttribute:!0},moreIcon:{name:"moreIcon",type:"String",value:"more-vert"},moreLabel:{name:"moreLabel",type:"String",value:"More Buttons"},moreLabelToggled:{name:"moreLabelToggled",type:"String",value:"Fewer Buttons"},moreShowTextLabel:{name:"moreShowTextLabel",type:"Boolean",value:!1},positionBelow:{name:"positionBelow",type:"Boolean",value:!1,reflectToAttribute:!0},responsiveSize:{name:"responsiveSize",type:"String",value:"xs",reflectToAttribute:!0},sticky:{name:"sticky",type:"Boolean",value:!1,reflectToAttribute:!0},__collapseMax:{name:"__collapseMax",type:"String",value:"xs"},__shortcutKeys:{name:"__shortcutKeys",type:"Array",value:[]}}}static get tag(){return"extensible-toolbar"}connectedCallback(){super.connectedCallback();window.ResponsiveUtility.requestAvailability(),this.addEventListener("button-action",e=>{this.dispatchEvent(new CustomEvent("toolbar-action",{detail:{toolbar:this,button:e.detail}}))}),window.dispatchEvent(new CustomEvent("responsive-element",{detail:{element:this,attribute:"responsive-size",relativeToParent:!0}}))}_addButton(child,parent){console.log("_addButton",child,parent);let button=document.createElement(child.type),keys=button.shortcutKeys;for(var key in this.set(`__shortcutKeys.${keys}`,button),child)button[key]=child[key];return button.setAttribute("class","button"),parent.appendChild(button),button}_addGroup(child,parent){console.log("_addGroup",child,parent);let group=document.createElement(child.type);for(var key in group.setAttribute("class","toolbar-group"),child)"buttons"!==key&&(group[key]=child[key]);return parent.appendChild(group),group}_getButtons(config){let root=this,toolbar=this.$.toolbar,max=0,sizes=["xs","sm","md","lg","xl"],temp=[];return toolbar.innerHTML="",this.set("__shortcutKeys",[]),config.forEach(item=>{if("extensible-toolbar-group"===item.type){let group=this._addGroup(item,toolbar);max=Math.max(max,sizes.indexOf(item.collapsedUntil)),item.buttons.forEach(button=>{max=Math.max(max,sizes.indexOf(button.collapsedUntil)),temp.push(root._addButton(button,group))}),toolbar.appendChild(group)}else max=Math.max(max,sizes.indexOf(item.collapsedUntil)),temp.push(root._addButton(item,toolbar));this.__collapseMax=sizes[max],toolbar.appendChild(this.$.morebutton)}),temp}_getPosition(positionBelow){return positionBelow?"bottom":"top"}_handleShortcutKeys(e){let key=e.key;e.shiftKey&&(key="shift+"+key),e.altKey&&(key="alt+"+key),("MacIntel"===window.navigator.platform&&e.metaKey||e.ctrlKey)&&(key="ctrl+"+key),this.__shortcutKeys[key]&&this.__shortcutKeys[key]._keysPressed(e)}_toggleMore(){this.collapsed=!this.collapsed}}window.customElements.define(ExtensibleToolbar.tag,ExtensibleToolbar);export{ExtensibleToolbar};