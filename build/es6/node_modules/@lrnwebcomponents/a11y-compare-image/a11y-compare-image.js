import{LitElement as e,html as t,css as i}from"../../lit-element/lit-element.js";class a11yCompareImage extends e{static get styles(){return[i`
        :host {
          display: inline-flex;
          margin: 15px 0;
        }
        :host([hidden]) {
          display: none !important;
        }
        figure {
          margin: 0;
        }
        #container,
        #container > div {
          margin: 0;
          padding: 0;
        }
        #container,
        #input {
          position: relative;
        }
        /* Added background-size: cover to adjust the bottom layer to match top in first example */
        #container {
          background-size: cover;
          background-repeat: no-repeat;
        }

        #layer {
          top: 0;
          left: 0;
          position: absolute;
          height: 100%;
          opacity: var(--a11y-compare-image-opacity, 1);
          width: var(--a11y-compare-image-width, 50%);
          background-size: cover;
          background-position-x: 0%;
          background-repeat: no-repeat;
        }
        #placeholder {
          opacity: 0;
        }

        #bottom {
          width: 100%;
        }
        #slider {
          top: 0;
          left: 0;
          padding-top: 10px;
          position: absolute;
          width: calc(100% + 32px);
          margin: -15px 0 0 -16px;
        }
        .marker {
          top: 6px;
          position: absolute;
          width: 1px;
          outline: 2px solid #bbb;
          background-color: #bbb;
          padding-top: 10px;
        }
        ::slotted([slot="bottom"]) {
          max-width: 100%;
        }
      `]}constructor(){super(),this.opacity=!1,this.position=0,this.__markers=[],import("../../@polymer/iron-image/iron-image.js"),import("../../@polymer/paper-slider/paper-slider.js")}render(){return t`
      <figure>
        <figcaption>
          <slot name="heading"></slot>
          <div id="description"><slot name="description"></slot></div>
        </figcaption>
        <div id="container" style="background-image: url(${this.__lower})">
          <div>
            <div id="placeholder">
              <slot id="bottom" name="bottom"></slot>
            </div>
            <slot name="top" hidden></slot>
            <div
              id="layer"
              style="background-image: url(${this.__upper})"
            ></div>
            <slot></slot>
          </div>
        </div>
        <div id="input">
          ${this.__markers.map(e=>t` <div class="marker" style="left: ${e}%;"></div> `)}
          <paper-slider id="slider" value="0"></paper-slider>
        </div>
      </figure>
    `}static get tag(){return"a11y-compare-image"}static get properties(){return{...super.properties,activeLayer:{type:Number,attribute:"active-layer",reflect:!0},opacity:{type:Boolean},position:{type:Number,attribute:"position",reflect:!0},__lower:{type:String},__upper:{type:String},__markers:{type:Array}}}firstUpdated(){let e=this.shadowRoot.querySelector("#slider");e.value=this.position||0,this._slide(),e.addEventListener("immediate-value-changed",e=>{this._slide()})}_slide(){let e=this.shadowRoot.querySelector("#container"),t=this.querySelectorAll("[slot=top],[slot=bottom]"),i=t.length-1,o=100/i,r=this.shadowRoot.querySelector("#slider"),a=Math.floor(r.immediateValue/o)||0;this.activeLayer=a+1;let s=o*a,p=r.immediateValue-s;this.position=100*p/o||0,this.__upper=t[a+1].src||t[a].src,this.__lower=t[a].src,i-1!=this.__markers.length&&this._updateMarkers(i),!1===this.opacity?(e.style.setProperty("--a11y-compare-image-width",this.position+"%"),e.style.setProperty("--a11y-compare-image-opacity",1)):(e.style.setProperty("--a11y-compare-image-width","100%"),e.style.setProperty("--a11y-compare-image-opacity",this.position/100))}_updateMarkers(e){if(this.__markers=[],0!=e){let t=100/e;for(let e=t;e<100;e+=t)this.__markers.push(e)}}}window.customElements.define(a11yCompareImage.tag,a11yCompareImage);export{a11yCompareImage};