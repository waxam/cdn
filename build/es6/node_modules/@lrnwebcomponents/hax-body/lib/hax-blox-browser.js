import{html,PolymerElement}from"../../../@polymer/polymer/polymer-element.js";import"../../../@polymer/polymer/lib/elements/dom-repeat.js";class HaxBloxBrowser extends PolymerElement{constructor(){super(),import("./hax-blox-browser-item.js"),document.body.addEventListener("hax-store-property-updated",this._haxStorePropertyUpdated.bind(this))}static get template(){return html`
      <style>
        :host {
          display: block;
        }
        hax-blox-browser-item {
          margin: 10px;
          -webkit-transition: 0.3s all linear;
          transition: 0.3s all linear;
        }
      </style>
      <dom-repeat items="[[__bloxList]]" as="blox">
        <template>
          <div class="blox-container">
            <hax-blox-browser-item
              index="[[blox.index]]"
              layout="[[blox.details.layout]]"
              title="[[blox.details.title]]"
              tag="[[blox.details.tag]]"
              icon="[[blox.details.icon]]"
              author="[[blox.details.author]]"
              teaser="[[blox.details.teaser]]"
              description="[[blox.details.description]]"
              examples="[[blox.details.examples]]"
              status="[[blox.details.status]]"
              blox="[[blox.blox]]"
            ></hax-blox-browser-item>
          </div>
        </template>
      </dom-repeat>
    `}static get tag(){return"hax-blox-browser"}static get properties(){return{bloxList:{type:Array,observer:"_bloxListChanged"},__bloxList:{type:Array}}}_haxStorePropertyUpdated(e){e.detail&&void 0!==e.detail.value&&e.detail.property&&(void 0!==this[e.detail.property]&&null!=this[e.detail.property]&&void 0!==this[e.detail.property].length&&this.set(e.detail.property,[]),this.set(e.detail.property,e.detail.value))}_bloxListChanged(newValue,oldValue){void 0!==newValue&&this.set("__bloxList",newValue)}}window.customElements.define(HaxBloxBrowser.tag,HaxBloxBrowser);export{HaxBloxBrowser};