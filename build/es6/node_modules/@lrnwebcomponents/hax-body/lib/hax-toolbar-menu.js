import{LitElement as t,html as e,css as o}from"../../../lit-element/lit-element.js";import"../../../@polymer/iron-icon/iron-icon.js";import"../../../@polymer/paper-item/paper-item.js";import"../../../@polymer/paper-listbox/paper-listbox.js";import"../../../@polymer/paper-menu-button/paper-menu-button.js";import"./hax-toolbar-item.js";class HaxToolbarMenu extends t{static get styles(){return[o`
        :host {
          display: block;
          box-sizing: border-box;
        }
        iron-icon {
          width: 10px;
        }
        paper-menu-button {
          margin: 0;
          padding: 0;
          text-transform: none;
          display: flex;
          min-width: unset;
        }
        paper-menu-button .label {
          font-size: 12px;
          margin-top: 4px;
        }

        paper-menu-button .button-inner {
          padding-top: 8px;
          text-align: center;
        }

        .flip-icon {
          transform: rotateY(180deg);
        }

        simple-tooltip {
          pointer-events: none;
        }
        paper-listbox {
          padding: 0;
        }
      `]}render(){return e`
      <paper-menu-button>
        <hax-toolbar-item
          id="button"
          ?mini="${this.mini}"
          ?action="${this.action}"
          slot="dropdown-trigger"
          icon="${this.icon}"
          .hidden="${!this.icon}"
          .class="${this.iconClass}"
          tooltip="${this.tooltip}"
        >
          <iron-icon icon="icons:expand-more"></iron-icon>
        </hax-toolbar-item>
        <paper-listbox
          id="listbox"
          slot="dropdown-content"
          .selected="${this.selected}"
          @selected-changed="${this.selectedChanged}"
        >
          <slot></slot>
        </paper-listbox>
      </paper-menu-button>
    `}selectedChanged(t){this.selected=t.detail.value}static get tag(){return"hax-toolbar-menu"}constructor(){super(),this.corner="",this.action=!1,this.tooltip="",this.tooltipDirection="",this.selected=0,setTimeout(()=>{this.addEventListener("click",this._menubuttonTap.bind(this))},0)}static get properties(){return{corner:{type:String,reflect:!0},mini:{type:Boolean,reflect:!0},action:{type:Boolean},icon:{type:String},tooltip:{type:String},tooltipDirection:{type:String,attribute:"tooltip-direction"},selected:{type:Number}}}updated(t){t.forEach((t,e)=>{"selected"==e&&(this.shadowRoot.querySelector("#button").focus(),this.dispatchEvent(new CustomEvent("selected-changed",{detail:this[e]})))})}_menubuttonTap(t){this.shadowRoot.querySelector("#listbox").style.display="inherit",this.selected=""}hideMenu(){this.shadowRoot.querySelector("#listbox").style.display="none",this.selected=""}}window.customElements.define(HaxToolbarMenu.tag,HaxToolbarMenu);export{HaxToolbarMenu};