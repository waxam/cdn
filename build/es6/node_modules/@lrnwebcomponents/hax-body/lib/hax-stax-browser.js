import{LitElement,html,css}from"../../../lit-element/lit-element.js";import"./hax-stax-browser-item.js";class HaxStaxBrowser extends LitElement{static get styles(){return[css`
        :host {
          display: block;
        }
        hax-stax-browser-item {
          margin: 10px;
          transition: 0.3s all linear;
        }
      `]}constructor(){super(),this.staxList=[],this.__staxList=[],document.body.addEventListener("hax-store-property-updated",this._haxStorePropertyUpdated.bind(this))}render(){return html`
      ${this.__staxList.map(stax=>html`
          <div class="stax-container">
            <hax-stax-browser-item
              .index="${stax.index}"
              .title="${stax.details.title}"
              .tag="${stax.details.tag}"
              .image="${stax.details.image}"
              .author="${stax.details.author}"
              .teaser="${stax.details.teaser}"
              .description="${stax.details.description}"
              .examples="${stax.details.examples}"
              .status="${stax.details.status}"
              .stax="${stax.stax}"
            ></hax-stax-browser-item>
          </div>
        `)}
    `}static get tag(){return"hax-stax-browser"}static get properties(){return{staxList:{type:Array},__staxList:{type:Array}}}_haxStorePropertyUpdated(e){e.detail&&void 0!==e.detail.value&&e.detail.property&&(void 0!==this[e.detail.property]&&null!=this[e.detail.property]&&void 0!==this[e.detail.property].length&&(this[e.detail.property]=[]),this[e.detail.property]=e.detail.value)}updated(changedProperties){changedProperties.forEach((oldValue,propName)=>{"staxList"==propName&&(this.__staxList=this[propName])})}}window.customElements.define(HaxStaxBrowser.tag,HaxStaxBrowser);export{HaxStaxBrowser};