import{LitElement as e,html as o,css as a}from"../../../lit-element/lit-element.js";import{winEventsElement as l}from"../../utils/utils.js";import"../../../@polymer/polymer/lib/elements/custom-style.js";class HaxTrayUpload extends(l(e)){static get styles(){return[a`
        :host {
          font-family: var(--simple-fields-font-family, sans-serif);
          line-height: var(--simple-fields-line-height, 22px);
          color: var(--simple-fields-color, black);
          background-color: var(--simple-fields-background-color, #fff);
        }
        vaadin-upload {
          --lumo-font-family: var(--simple-fields-font-family, sans-serif);
          --lumo-error-color: var(--simple-fields-error-color, #dd2c00);
          --lumo-primary-font-color: var(--simple-fields-color, black);
          --lumo-base-color: var(--simple-fields-background-color, #fff);
          --lumo-primary-contrast-color: var(
            --simple-fields-background-color,
            #fff
          );
          --lumo-primary-color: var(--simple-fields-color, black);
          --lumo-dark-primary-color: ar(--simple-fields-color, black);
          --lumo-light-primary-color: var(--simple-fields-color, black);
          --lumo-primary-text-color: var(--simple-fields-color, black);
          --lumo-body-text-color: var(--simple-fields-color, black);
          --lumo-header-text-color: var(--simple-fields-color, black);
          --lumo-secondary-text-color: var(--simple-fields-color, black);
          --lumo-disabled-text-color: var(--simple-fields-border-color, #999);
          color: var(--simple-fields-color, black);
          background-color: var(--simple-fields-background-color, #fff);
          padding: 16px !important;
          text-align: center;
        }
        vaadin-upload[dragover] {
          border-color: var(
            --hax-tray-panel-accent,
            var(--hax-contextual-action-hover-color)
          );
        }
        vaadin-upload-file {
          --disabled-text-color: var(--simple-fields-border-color, #999);
        }
        paper-button {
          text-transform: none;
          margin: 8px 0;
          color: var(--simple-colors-default-theme-grey-12, #000);
          background-color: var(--simple-colors-default-theme-grey-2, #eee);
          border: 1px solid var(--simple-colors-default-theme-grey-3, #dddddd);
          display: block;
          text-align: center;
        }
        paper-button:active,
        paper-button:focus,
        paper-button:hover {
          color: var(
            --hax-tray-panel-accent-text,
            var(--simple-colors-default-theme-grey-1, #fff)
          );
          background-color: var(
            --hax-tray-panel-accent,
            var(--hax-contextual-action-hover-color)
          );
          border-color: var(
            --hax-tray-panel-accent,
            var(--hax-contextual-action-hover-color)
          );
          transition: all 0.5ms ease-in-out;
        }
        .add-area-content-wrapper {
          padding: 0 4px;
        }
        .add-url-area,
        .add-upload-area {
          margin: 0;
        }
        .url-description {
          letter-spacing: 1px;
        }
      `]}static get tag(){return"hax-tray-upload"}constructor(){super(),this.__winEvents={"hax-app-picker-selection":"_haxAppPickerSelection","place-holder-file-drop":"_placeHolderFileDrop"},setTimeout(()=>{import("../../../@polymer/paper-button/paper-button.js"),import("../../simple-fields/lib/simple-fields-field.js"),import("../../../@vaadin/vaadin-upload/vaadin-upload.js")},0)}render(){return o`
      <custom-style>
        <style>
          @import url("https://fonts.googleapis.com/css?family=Noto+Serif");
          vaadin-upload {
              color: #ffffff;
              display: block;
            }
            --vaadin-upload-buttons-primary: {
              display: block;
              width: 100%;
              flex: unset;
              -webkit-flex: unset;
            }
            --vaadin-upload-button-add: {
              color: #000000;
              display: block;
              flex: unset;
              -webkit-flex: unset;
              text-align: center;
            }
            --vaadin-upload-drop-label: {
              color: #ffffff;
              display: block;
              padding: 8px;
            }
            --vaadin-upload-drop-label-dragover: {
              color: #ffffff;
            }
            --vaadin-upload-file-list: {
              padding: 8px;
              margin: 0;
              color: #ffffff;
            }
            --vaadin-upload-file: {
              color: #ffffff;
            }
          }
        </style>
      </custom-style>
      <div class="add-area-content-wrapper">
        <div class="add-url-area">
          <simple-fields-field
            id="url"
            label="URL"
            type="url"
            auto-validate=""
          ></simple-fields-field>
          <div class="url-description">
            Add an existing resource / link
          </div>
        </div>
        <div class="add-upload-area">
          <vaadin-upload
            @upload-before="${this._fileAboutToUpload}"
            @upload-response="${this._fileUploadResponse}"
            form-data-name="file-upload"
            id="fileupload"
          ></vaadin-upload>
        </div>
        <paper-button @click="${this.newAssetConfigure}" id="newassetconfigure"
          >Configure</paper-button
        >
      </div>
    `}newAssetConfigure(){let e={source:this.shadowRoot.querySelector("#url").value,title:this.shadowRoot.querySelector("#url").value},o=window.HaxStore.guessGizmoType(e),a=window.HaxStore.guessGizmo(o,e,!1,!0);a.length>0?1===a.length?void 0!==a[0].tag&&this.dispatchEvent(new CustomEvent("hax-insert-content",{bubbles:!0,cancelable:!0,composed:!0,detail:a[0]})):window.HaxStore.instance.haxAppPicker.presentOptions(a,o,"Pick how to present the "+o,"gizmo"):window.HaxStore.toast("Sorry, HAX doesn't know how to handle that type of link yet.")}_placeHolderFileDrop(e){window.HaxStore.instance.activePlaceHolder=e.detail.placeHolderElement,this.shadowRoot.querySelector("#fileupload")._onDrop(e.detail)}_fileUploadResponse(e){this.editExistingNode=!0;let o=JSON.parse(e.detail.xhr.response),a=this.__appUsed.connection.operations.add.resultMap,l={},t={};for(var r in void 0!==this._resolveObjectPath(a.item,o)&&(l=this._resolveObjectPath(a.item,o)),t.type=a.defaultGizmoType,a.gizmo)t[r]=this._resolveObjectPath(a.gizmo[r],l);void 0===t.url&&void 0!==t.source&&(t.url=t.source),void 0!==a.gizmo.type&&(t.type=this._resolveObjectPath(a.gizmo.type,l)),this.shadowRoot.querySelector("#url").value=t.url,this.newAssetConfigure()}_fileAboutToUpload(e){if(this.__allowUpload)this.__allowUpload=!1;else{e.preventDefault(),e.stopPropagation();let a={source:e.detail.file.name,type:e.detail.file.type};var o=window.HaxStore.guessGizmoType(a);let l=window.HaxStore.getHaxAppStoreTargets(o);1===l.length?this._haxAppPickerSelection({detail:l[0]}):0!==l.length?window.HaxStore.instance.haxAppPicker.presentOptions(l,o,"Where would you like to upload this "+o+"?","app"):window.HaxStore.toast("Sorry, you don't have a storage location that can handle "+o+" uploads!",5e3)}}_haxAppPickerSelection(e){let o=e.detail.connection;this.__appUsed=e.detail,this.shadowRoot.querySelector("#fileupload").method=o.operations.add.method;let a=o.protocol+"://"+o.url;"/"!=a.substr(a.length-1)&&(a+="/"),void 0!==o.operations.add.endPoint&&(a+=o.operations.add.endPoint),null!=window.HaxStore.instance.connectionRewrites.appendUploadEndPoint&&(a+="?"+window.HaxStore.instance.connectionRewrites.appendUploadEndPoint),null!=window.HaxStore.instance.connectionRewrites.appendJwt&&(a+="&"+window.HaxStore.instance.connectionRewrites.appendJwt+"="+localStorage.getItem(window.HaxStore.instance.connectionRewrites.appendJwt)),this.shadowRoot.querySelector("#fileupload").headers=o.headers,this.shadowRoot.querySelector("#fileupload").target=a,this.__allowUpload=!0,this.shadowRoot.querySelector("#fileupload").uploadFiles()}_resolveObjectPath(e,o){return e.split(".").reduce((function(e,o){return e?e[o]:null}),o||self)}}window.customElements.define(HaxTrayUpload.tag,HaxTrayUpload);export{HaxTrayUpload};