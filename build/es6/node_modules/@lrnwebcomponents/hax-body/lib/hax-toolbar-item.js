import{LitElement,html,css}from"../../../lit-element/lit-element.js";import"../../simple-colors/lib/simple-colors-polymer.js";import"../../../@polymer/paper-button/paper-button.js";import"../../simple-tooltip/simple-tooltip.js";class HaxToolbarItem extends LitElement{static get styles(){return[css`
        :host {
          display: flex;
          box-sizing: border-box;
          height: 36px;
          width: 36px;
        }
        :host([large]),
        :host([mini]) {
          height: unset;
          width: unset;
        }
        :host([disabled]) {
          pointer-events: none;
          opacity: 0.5;
        }
        :host([menu]) {
          width: 100%;
          position: relative;
          display: -ms-flexbox;
          display: -webkit-flex;
          display: flex;
          -ms-flex-direction: row;
          -webkit-flex-direction: row;
          flex-direction: row;
          -webkit-justify-content: flex-start;
          justify-content: flex-start;
          -webkit-font-smoothing: antialiased;
          font-size: 16px;
          font-weight: 400;
          line-height: 24px;
        }
        :host([menu]) paper-button {
          -webkit-justify-content: flex-start;
          justify-content: flex-start;
        }
        #label {
          padding-left: 5px;
        }
        paper-button {
          display: flex;
          align-items: center;
          background-color: var(
            --hax-toolbar-item-bg,
            var(--hax-color-bg-accent, white)
          );
          color: var(--hax-toolbar-item-color, --hax-color-text);
          min-width: 0;
          margin: 0;
          text-transform: none;
          padding: 0;
          border-radius: 0;
          font-size: 12px;
          transition: 0.2s all, 0 height;
          height: 36px;
          width: 36px;
          min-width: unset;
          --paper-button-ink-color: var(
            --hax-toolbar-item-color,
            --hax-color-accent1
          );
        }
        :host(:not([disabled])) paper-button:active,
        :host(:not([disabled])) paper-button:hover,
        :host(:not([disabled])) paper-button:focus {
          color: var(--hax-color-text-active);
          outline: 1px solid var(--hax-color-accent1);
          z-index: 2;
        }
        :host([default]) paper-button {
          background: black;
        }
        :host([dark]:not([disabled])) paper-button {
          background-color: var(--hax-color-text);
          color: var(--hax-color-bg-accent);
        }
        :host([dark]:not([disabled])) paper-button:hover {
          background-color: var(--hax-color-bg-accent);
          color: var(--hax-color-text);
        }
        :host([dark]) paper-button:active {
          background: var(--hax-color-bg-accent);
          color: var(--hax-color-text);
        }
        iron-icon {
          width: 20px;
          height: 20px;
          padding: 0;
          margin: 0;
        }
        :host([mini]) iron-icon {
          width: 16px;
          height: 16px;
        }
        :host([mini]) paper-button {
          border-radius: 50%;
          width: 18px;
          height: 18px;
          padding: 1px;
          border: 1px solid var(--hax-color-border-outline);
        }
        :host([large][light]) paper-button {
          background-color: #aaaaaa;
          color: #eeeeee;
        }
        :host([large]) paper-button {
          border-radius: 0;
          width: unset;
          padding: 0px;
          border: 0px;
        }
        :host([mini]:not([disabled])) paper-button:active,
        :host([mini]:not([disabled])) paper-button:hover,
        :host([mini]:not([disabled])) paper-button:focus {
          outline: unset;
          border: 1px solid var(--hax-color-accent1);
        }
        :host([menu]) paper-button {
          padding: 0 8px;
          width: 100%;
          height: 36px;
        }
        :host([menu]:not([disabled])) paper-button:hover {
          background-color: #d3d3d3;
          color: #000000;
        }
        .flip-icon {
          transform: rotateY(180deg);
        }
        simple-tooltip {
          --simple-tooltip-background: #000000;
          --simple-tooltip-opacity: 1;
          --simple-tooltip-text-color: #ffffff;
          --simple-tooltip-delay-in: 0;
          --simple-tooltip-duration-in: 100ms;
          --simple-tooltip-duration-out: 0;
          --simple-tooltip-border-radius: 0;
          --simple-tooltip-font-size: 14px;
        }
      `]}render(){return html`
      <paper-button
        .disabled="${this.disabled}"
        id="btn"
        tabindex="0"
        .title="${this.tooltip}"
      >
        <iron-icon
          icon="${this.icon}"
          ?hidden="${""==this.icon}"
        ></iron-icon>
        <span id="label" ?hidden="${""==this.label}"
          >${this.label}</span
        >
        <slot></slot>
      </paper-button>
      <simple-tooltip
        for="btn"
        ?hidden="${""==this.tooltip}"
        id="tooltip"
        offset="10"
        position="${this.tooltipDirection}"
      >
        ${this.tooltip}
      </simple-tooltip>
    `}static get tag(){return"hax-toolbar-item"}constructor(){super(),this.corner="",this.large=!1,this.disabled=!1,this.dark=!1,this.menu=!1,this.mini=!1,this.icon="",this.label="",this.tooltip="",this.tooltipDirection="top",this.default=!1}updated(changedProperties){changedProperties.forEach((oldValue,propName)=>{"height"==propName&&this.shadowRoot&&(this.shadowRoot.querySelector("#btn").style.height=this[propName])})}static get properties(){return{corner:{type:String,reflect:!0},height:{type:String},disabled:{type:Boolean,reflect:!0},dark:{type:Boolean,reflect:!0},menu:{type:Boolean,reflect:!0},mini:{type:Boolean,reflect:!0},large:{type:Boolean,reflect:!0},icon:{type:String},label:{type:String},tooltip:{type:String},tooltipDirection:{type:String,attribute:"tooltip-direction"},default:{type:Boolean,reflect:!0}}}}window.customElements.define(HaxToolbarItem.tag,HaxToolbarItem);export{HaxToolbarItem};