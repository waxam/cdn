import{LitElement as t,html as e,css as o}from"../../../lit/index.js";import{SimpleToolbarButtonBehaviors as s}from"../../simple-toolbar/lib/simple-toolbar-button.js";import{HaxButton as i}from"./hax-ui-styles.js";const HaxToolbarItemBehaviors=function(t){return class extends(s(t)){static get tag(){return"hax-toolbar-item"}constructor(){super(),this.danger=!1,this.feature=!1,this.menu=!1}static get properties(){return{...super.properties,danger:{type:Boolean,reflect:!0},eventName:{type:String,reflect:!0,attribute:"event-name"},feature:{type:Boolean,reflect:!0},toggledTooltip:{type:String},tooltip:{type:String}}}get buttonTemplate(){return this.toggles?e` <button
              id="button"
              aria-pressed="${this.isToggled?"true":"false"}"
              class="simple-toolbar-button"
              ?disabled="${this.disabled}"
              ?controls="${this.controls}"
              @click="${this._handleClick}"
              @keydown="${this._handleKeys}"
              @mousedown="${this._handleMousedown}"
              tabindex="0"
              part="button"
            >
              ${this.iconTemplate} ${this.labelTemplate}
            </button>
            ${this.tooltipTemplate}`:e` <button
              id="button"
              class="simple-toolbar-button"
              ?disabled="${this.disabled}"
              ?controls="${this.controls}"
              @click="${this._handleClick}"
              @keydown="${this._handleKeys}"
              @mousedown="${this._handleMousedown}"
              tabindex="0"
              part="button"
            >
              ${this.iconTemplate} ${this.labelTemplate}
            </button>
            ${this.tooltipTemplate}`}static get simpleButtonThemeStyles(){return i}static get simpleButtonCoreStyles(){return super.simpleButtonCoreStyles}static get simpleButtonLayoutStyles(){return super.simpleButtonLayoutStyles}static get styles(){return[...super.styles,o`
          :host(:hover),
          :host(:focus-within) {
            z-index: var(--hax-ui-focus-z-index, 1001) !important;
          }
        `]}_handleClick(t){}_handleKeys(t){}_handleMousedown(t){}}};class HaxToolbarItem extends(HaxToolbarItemBehaviors(t)){}window.customElements.define(HaxToolbarItem.tag,HaxToolbarItem);export{HaxToolbarItem,HaxToolbarItemBehaviors};