import{html,Polymer}from"../../../@polymer/polymer/polymer-legacy.js";import{dom}from"../../../@polymer/polymer/lib/legacy/polymer.dom.js";import"../../../@polymer/app-layout/app-drawer/app-drawer.js";import"../../../@polymer/paper-icon-button/paper-icon-button.js";import"../../../@polymer/iron-icons/iron-icons.js";import"../../../@polymer/iron-icons/editor-icons.js";import"../../../@polymer/iron-icons/device-icons.js";import"../../../@polymer/iron-icons/hardware-icons.js";import"../../../@polymer/iron-icons/communication-icons.js";import"../../../@polymer/iron-icons/social-icons.js";import"../../../@polymer/iron-icons/av-icons.js";import"../../../@polymer/iron-icons/maps-icons.js";import"../../simple-colors/simple-colors.js";import"./hax-panel-item.js";import"./hax-shared-styles.js";Polymer({_template:html`
    <style include="simple-colors hax-shared-styles">
      :host {
        display: block;
        position: absolute;
        z-index: 1000000;
      }
      :host *[hidden] {
        display: none;
      }
      app-drawer {
        z-index: 100001;
        height: 40px;
        padding: 8px 16px;
        left: 0;
        top: 0;
        align-items: center;
        touch-action: auto;
        visibility: hidden;
        opacity: 0;
        display: flex;
        --app-drawer-width: 100%;
        --app-drawer-content-container: {
          align-items: center;
          width: 100%;
          left: 0;
          right: 0;
          background-color: var(--hax-color-bg);
          border: 1px solid var(--hax-color-bg-accent);
          padding: 0 16px;
          display: flex;
          touch-action: auto;
          overflow-x: auto;
          overflow: visible !important;
          -webkit-overflow-scrolling: touch;
          white-space: nowrap;
        }
      }
      hax-panel-item {
        margin: 8px 4px;
      }
      hax-panel-item[right] {
        float: right;
      }
      #haxcancelbutton {
        margin-right: 48px;
      }
      :host([align="right"]) app-drawer {
        right: 0;
        left: unset;
      }
      :host([edit-mode]) app-drawer {
        visibility: visible;
        transition: 0.3s ease opacity;
        opacity: 1;
        right: 0;
        left: 0;
        top: 0;
      }

      #button {
        position: fixed;
        top: 0;
        left: 0;
        visibility: visible;
        z-index: 10000;
        transition: all 0.3s ease;
        margin: 0;
        border-top-left-radius: 0;
      }
      :host([edit-mode]) #button {
        visibility: hidden;
        opacity: 0;
      }
      #button:hover {
        opacity: 1;
      }
      :host([align="right"]) #button {
        right: 0;
        left: unset;
        border-top-right-radius: 0;
        border-top-left-radius: unset;
      }
      .active-op-name {
        display: none;
      }
      :host([edit-mode]) .active-op-name {
        display: flex;
        top: 0;
        right: 0;
        z-index: 1000000;
        position: fixed;
        font-size: 14px;
        font-weight: bold;
        padding: 16px 28px 16px 16px;
        line-height: 24px;
        height: 24px;
        min-width: 120px;
        justify-content: space-evenly;
        background-color: var(--hax-color-bg-accent);
        color: var(--hax-color-text);
        vertical-align: middle;
      }
      @media screen and (max-width: 600px) {
        :host([edit-mode]) hax-panel-item {
          margin: 8px 2px;
        }
        :host([edit-mode]) .hide-small {
          display: none;
        }
        :host([edit-mode]) app-drawer {
          padding: 0;
        }
      }
      @media screen and (max-width: 800px) {
        :host([edit-mode]) #haxcancelbutton {
          margin-right: 2px;
        }
        :host([edit-mode]) .active-op-name {
          display: none;
        }
      }
    </style>
    <div hidden$="[[hidePanelOps]]">
      <hax-panel-item
        dark
        large
        data-opened$="[[editMode]]"
        on-tap="_clickEditButton"
        icon="create"
        id="button"
        edged="[[align]]"
        label="[[__tipText]]"
      ></hax-panel-item>
    </div>
    <app-drawer
      id="drawer"
      opened="{{editMode}}"
      disable-swipe
      persistent
      transition-duration="300"
      align="[[align]]"
    >
      <hax-panel-item
        hidden$="[[hidePanelOps]]"
        on-tap="_clickSaveButton"
        icon="save"
        id="haxsavebutton"
        label="[[__tipText]]"
        event-name="save"
        voice-command="save content"
      ></hax-panel-item>
      <hax-panel-item
        hidden$="[[hidePanelOps]]"
        icon="cancel"
        id="haxcancelbutton"
        label="Cancel"
        event-name="cancel"
        voice-command="cancel hax"
      ></hax-panel-item>
      <hax-panel-item
        icon="image:add-to-photos"
        label="Add"
        event-name="hax-manager-open"
        value="0"
      ></hax-panel-item>
      <hax-panel-item
        icon="search"
        label="Find"
        event-name="hax-manager-open"
        value="1"
      ></hax-panel-item>
      <hax-panel-item
        icon="hardware:toys"
        label="Make"
        event-name="hax-manager-open"
        value="2"
      ></hax-panel-item>
      <hax-panel-item
        icon="view-quilt"
        label="Layouts"
        event-name="hax-blox-picker-open"
        voice-command="insert block"
      ></hax-panel-item>
      <hax-panel-item
        icon="view-agenda"
        label="Templates"
        event-name="hax-stax-picker-open"
        voice-command="insert stack"
      ></hax-panel-item>
      <hax-panel-item
        icon="editor:text-fields"
        label="Paragraph"
        event-name="text"
        voice-command="insert text"
        class="hide-small"
      ></hax-panel-item>
      <hax-panel-item
        icon="editor:title"
        label="Heading"
        event-name="header"
        voice-command="insert heading"
        class="hide-small"
      ></hax-panel-item>
      <hax-panel-item
        icon="editor:space-bar"
        label="Divider"
        event-name="divider"
        voice-command="insert divider"
        class="hide-small"
      ></hax-panel-item>
      <hax-panel-item
        icon="image:transform"
        label="Placeholder"
        event-name="placeholder"
        voice-command="insert placeholder"
        class="hide-small"
      ></hax-panel-item>
      <hax-panel-item
        hidden$="[[hideExportButton]]"
        on-tap="_htmlExportDialog"
        icon="code"
        label="Source view"
      ></hax-panel-item>
      <slot></slot>
      <hax-panel-item
        right
        hidden$="[[hidePreferencesButton]]"
        on-tap="_preferencesDialog"
        icon="settings"
        label="Preferences"
      ></hax-panel-item>
    </app-drawer>
    <div class="active-op-name">[[activeOperationName]]</div>
  `,is:"hax-panel",listeners:{"hax-item-selected":"_processItemEvent"},observers:["_globalPreferencesChanged(globalPreferences.*)"],properties:{light:{type:Boolean},align:{type:String,reflectToAttribute:!0,value:"left"},editMode:{type:Boolean,reflectToAttribute:!0,observer:"_editModeChanged"},hideExportButton:{type:Boolean,value:!1},haxDeveloperMode:{type:Boolean,value:!1},activeOperationName:{type:String},hidePreferencesButton:{type:Boolean,value:!1},hidePanelOps:{type:Boolean,value:!1},globalPreferences:{type:Object}},attached:function(){this.fire("hax-register-panel",this);document.body.addEventListener("hax-store-property-updated",this._haxStorePropertyUpdated.bind(this));document.body.addEventListener("hax-active-hover-name",this._activeNameChange.bind(this));document.body.addEventListener("hax-panel-operation",this._processItemEvent.bind(this))},detached:function(){document.body.removeEventListener("hax-store-property-updated",this._haxStorePropertyUpdated.bind(this));document.body.removeEventListener("hax-active-hover-name",this._activeNameChange.bind(this));document.body.removeEventListener("hax-panel-operation",this._processItemEvent.bind(this))},_activeNameChange:function(e){this.activeOperationName=e.detail},_globalPreferencesChanged:function(value){if(typeof value!==typeof void 0){if(null!=value.value&&typeof value.value.haxShowExportButton!==typeof void 0){this.hideExportButton=!value.value.haxShowExportButton}if(null!=value.value&&typeof value.value.haxDeveloperMode!==typeof void 0){this.haxDeveloperMode=value.value.haxDeveloperMode}}},_haxStorePropertyUpdated:function(e){if(e.detail&&typeof e.detail.value!==typeof void 0&&e.detail.property){if("object"===typeof e.detail.value){this.set(e.detail.property,null)}this.set(e.detail.property,e.detail.value)}},_processItemEvent:function(e){let detail=e.detail;switch(detail.eventName){case"open-panel":this._clickButton();break;case"cancel":this.toggle();this.fire("hax-cancel",detail);break;case"text":detail.tag="p";detail.content="";this.fire("hax-insert-content",detail);break;case"divider":detail.tag="hr";detail.content="";detail.properties={style:"width:100%;"};this.fire("hax-insert-content",detail);break;case"header":detail.tag="h2";detail.content="Header";this.fire("hax-insert-content",detail);break;case"placeholder":detail.tag="place-holder";detail.content="";detail.properties={style:"width:50%;"};this.fire("hax-insert-content",detail);break;case"image":detail.tag="img";detail.content="";detail.properties={src:pathFromUrl(decodeURIComponent(import.meta.url))+window.HaxStore.instance.defaults.image.src,alt:window.HaxStore.instance.defaults.image.alt,style:"width:100%;"};this.fire("hax-insert-content",detail);break;case"iframe":detail.tag="iframe";detail.content="";detail.properties={src:window.HaxStore.instance.defaults.iframe.src,height:"400px",width:"100%",style:"width:100%;"};this.fire("hax-insert-content",detail);break;case"blockquote":detail.tag="blockquote";detail.content="";this.fire("hax-insert-content",detail);break;case"hax-manager-open":window.HaxStore.write("activeHaxElement",{},this);window.HaxStore.instance.haxManager.resetManager(parseInt(detail.value));window.HaxStore.instance.haxManager.toggleDialog(!1);break;case"hax-stax-picker-open":window.HaxStore.instance.haxStaxPicker.toggleDialog();break;case"hax-blox-picker-open":window.HaxStore.instance.haxBloxPicker.toggleDialog();break;case"undo":document.execCommand("undo");break;case"redo":document.execCommand("redo");break;default:break;}},_editModeChanged:function(newValue){if(typeof newValue!==typeof void 0&&newValue){this.__tipText="Save";this.$.button.icon="save"}else{this.__tipText="Edit";this.$.button.icon="create"}},_clickEditButton:function(){this.toggle()},_clickSaveButton:function(e){this.toggle();this.fire("hax-save",e.detail)},_htmlExportDialog:function(){window.HaxStore.instance.haxExport.toggleDialog()},_preferencesDialog:function(){window.HaxStore.instance.haxPreferences.toggleDialog()},toggle:function(){window.HaxStore.write("editMode",!this.editMode,this);this.$.drawer.opened=this.editMode;if(!this.$.drawer.opened){window.HaxStore.instance.closeAllDrawers()}}});