import{winEventsElement}from"../../utils/utils.js";class HaxPlateContext extends(winEventsElement(HTMLElement)){constructor(delayRender=!1){super(),this.__winEvents={"hax-store-property-updated":"_haxStorePropertyUpdated"},this.tag=HaxPlateContext.tag,this.template=document.createElement("template"),this.attachShadow({mode:"open"}),delayRender||this.render(),setTimeout(()=>{import("../../../@polymer/paper-item/paper-item.js"),import("./hax-context-item-menu.js"),import("./hax-context-item.js")},0)}static get tag(){return"hax-plate-context"}get html(){return'\n    <style>\n    :host {\n      display: block;\n      margin-top: -2px;\n    }\n    hax-context-item {\n      display: block;\n    }\n    hax-context-item[large] {\n      display: inline-block;\n      margin:0;\n      padding:0;\n    }\n    hax-context-item-menu {\n      --hax-context-item-menu-height: 28px;\n    }\n    .area {\n      display: flex;\n      visibility: visible;\n      opacity: .8;\n    }\n    .area {\n      opacity: 1;\n    }\n    .paddle {\n      width: unset;\n      height: unset;\n      visibility: visible;\n      opacity: .9;\n    }\n    .paddle:hover {\n      opacity: 1;\n    }\n    paper-item {\n      background-color: var(--hax-contextual-action-color);\n      -webkit-justify-content: flex-start;\n      justify-content: flex-start;\n      height: 24px;\n      padding: 0 4px;\n      min-height: 24px;\n      font-size: 10px;\n      color: white;\n    }\n    #drag hax-context-item:hover,\n    paper-item:hover {\n      cursor: pointer;\n      color: black;\n    }\n    iron-icon {\n      padding: 0 2px;\n      width: 16px;\n      height: 16px;\n    }\n    :host(.hax-context-pin-top) .area {\n      position: fixed;\n      top: 40px;\n      margin-left: -30px;\n      flex-direction: column;\n    }\n    </style>\n    <div class="area" id="area">\n      <hax-context-item-menu\n        mini\n        id="drag"\n        action\n        icon="hax:arrow-all"\n        label="Drag"\n        draggable="true"\n        selected-value="0"\n        reset-on-select>\n      <hax-context-item\n        action\n        mini\n        icon="hardware:keyboard-arrow-up"\n        label="Move up"\n        event-name="hax-plate-up"\n        direction="left"\n        ></hax-context-item>\n      <hax-context-item\n        action\n        mini\n        icon="hardware:keyboard-arrow-down"\n        label="Move down"\n        event-name="hax-plate-down"\n        direction="left"\n        ></hax-context-item>\n    </hax-context-item-menu>\n      <hax-context-item\n      mini\n      action\n      id="right"\n      class="paddle"\n      icon="hax:table-column-remove"\n      label="Add column"\n      event-name="hax-plate-create-right"\n    ></hax-context-item>\n    <hax-context-item\n      mini\n      action\n      class="paddle"\n      icon="hax:table-column-plus-after"\n      label="Remove column"\n      event-name="hax-plate-remove-right"\n      id="rightremove"\n    ></hax-context-item>\n  <hax-context-item\n    mini\n    action\n    label="Duplicate"\n    icon="icons:content-copy"\n    event-name="hax-plate-duplicate"\n    ></hax-context-item>\n  <hax-context-item\n    mini\n    action\n    icon="delete"\n    label="Remove"\n    event-name="hax-plate-delete"\n  ></hax-context-item>\n  </div>\n  '}_haxStorePropertyUpdated(e){setTimeout(()=>{e.detail&&void 0!==e.detail.value&&e.detail.property&&null!=this.getAttribute("on-screen")&&["activeNode","activeContainerNode"].includes(e.detail.property)&&this.__updatePlatePosition()},10)}__updatePlatePosition(){setTimeout(()=>{let active=window.HaxStore.instance.activeNode,right=this.shadowRoot.querySelector("#right"),rightremove=this.shadowRoot.querySelector("#rightremove");window.HaxStore.instance.activeContainerNode&&(active=window.HaxStore.instance.activeContainerNode),right.disabled=!1,rightremove.disabled=!1,active&&"GRID-PLATE"==active.tagName?"1-1-1-1-1-1"==active.layout&&(right.disabled=!0):rightremove.disabled=!0},100)}render(){this.shadowRoot.innerHTML=null,this.template.innerHTML=this.html,window.ShadyCSS&&window.ShadyCSS.prepareTemplate(this.template,this.tag),this.shadowRoot.appendChild(this.template.content.cloneNode(!0))}connectedCallback(){super.connectedCallback(),setTimeout(()=>{this.shadowRoot.querySelector("#drag").addEventListener("dragstart",this._dragStart),this.shadowRoot.querySelector("#drag").addEventListener("dragend",this._dragEnd)},0)}disconnectedCallback(){this.shadowRoot.querySelector("#drag").removeEventListener("dragstart",this._dragStart),this.shadowRoot.querySelector("#drag").removeEventListener("dragend",this._dragEnd),super.disconnectedCallback()}_dragEnd(e){window.HaxStore.instance._lockContextPosition=!1;let children=window.HaxStore.instance.activeHaxBody.children;for(var i in children)void 0!==children[i].classList&&(children[i].classList.remove("hax-mover","hax-hovered","hax-moving","grid-plate-active-item"),children[i].removeEventListener("click",this._clickPlace))}_dragStart(e){let target=window.HaxStore.instance.activeNode;window.HaxStore.instance.__dragTarget=target,window.HaxStore.instance._lockContextPosition=!0,target.classList.add("hax-moving"),e.dataTransfer&&(e.dataTransfer.dropEffect="move",e.dataTransfer.setDragImage(target,0,0)),e.stopPropagation(),e.stopImmediatePropagation(),setTimeout(()=>{if(!window.HaxStore.instance.activeHaxBody.openDrawer&&window.HaxStore.instance.editMode){let children=window.HaxStore.instance.activeHaxBody.children;for(var i in children)children[i].classList&&target!==children[i]&&(children[i].classList.add("hax-mover"),children[i].addEventListener("click",this._clickPlace))}},10)}}window.customElements.define(HaxPlateContext.tag,HaxPlateContext);export{HaxPlateContext};