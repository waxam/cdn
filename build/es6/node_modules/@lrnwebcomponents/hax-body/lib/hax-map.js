import{html as e,css as t}from"../../../lit-element/lit-element.js";import{SimpleColors as i}from"../../simple-colors/simple-colors.js";class HaxMap extends i{static get styles(){return[...super.styles,t`
        :host {
          display: block;
        }
        iron-icon:not(:defined),
        paper-button:not(:defined),
        paper-dialog:not(:defined) {
          display: none;
        }
        #dialog {
          z-index: 100000;
          margin-top: 56px;
        }
        #closedialog {
          top: 6px;
          right: 0;
          position: absolute;
          padding: 8px;
          margin: 0;
          background-color: var(--hax-color-menu-heading-bg, #eeeeee);
          color: var(--hax-color-menu-heading-color, black);
          width: 40px;
          height: 40px;
          min-width: unset;
        }
        .title {
          position: relative;
          padding: 16px;
          outline: 0;
          font-weight: 600;
          text-align: left;
          margin: 0;
          background-color: var(--hax-color-menu-heading-bg, #eeeeee);
          color: var(--hax-color-menu-heading-color, black);
          font-size: 18px;
          line-height: 18px;
          font-family: "Noto Serif", serif;
        }
        .container {
          text-align: left;
          padding: 16px;
          min-width: 300px;
          overflow-y: scroll;
          max-height: 50vh;
        }
        #reportghissue {
          color: #81a3a9;
          font-size: 18px;
          padding: 16px;
          font-style: italic;
        }
        ul {
          list-style: none;
          padding: 0;
          margin: 0;
        }
        ul iron-icon {
          padding: 0 4px;
        }
        a {
          font-size: 30px;
          line-height: 30px;
          text-decoration: none;
          color: black;
          padding: 4px;
        }
        a:focus,
        a:hover,
        a:active {
          cursor: pointer;
          font-weight: bold;
        }
      `]}constructor(){super(),this.elementList=[],this.title="Content map",setTimeout(()=>{import("../../../@polymer/iron-icon/iron-icon.js"),import("../../../@polymer/paper-button/paper-button.js"),import("../../../@polymer/paper-dialog/paper-dialog.js")},0)}updated(e){e.forEach((e,t)=>{if("opened"===t){let e=window.HaxStore.htmlToHaxElements(window.HaxStore.instance.activeHaxBody.haxToContent()),t=[];for(var i=0;i<e.length;i++){let o=window.HaxStore.instance.haxSchemaFromTag(e[i].tag);t.push({icon:o.gizmo.icon,name:o.gizmo.title})}this.elementList=[...t]}})}render(){return e`
      <paper-dialog
        id="dialog"
        ?opened="${this.opened}"
        @opened-changed="${this.openedChanged}"
      >
        <h3 class="title">
          <iron-icon icon="maps:map"></iron-icon> ${this.title}
        </h3>
        <paper-button id="closedialog" @click="${this.closeEvent}">
          <iron-icon icon="icons:cancel" title="Close dialog"></iron-icon>
        </paper-button>
        <div class="container">
          <ul>
            ${this.elementList.map((t,i)=>e`
                <li>
                  <a @click="${this.scrollInMap}" data-index="${i}"
                    ><iron-icon
                      data-index="${i}"
                      icon="${t.icon}"
                    ></iron-icon
                    >${t.name}</a
                  >
                </li>
              `)}
          </ul>
        </div>
      </paper-dialog>
    `}scrollInMap(e){var t=null;if((t=e.path&&e.path[0]?e.path[0]:e.originalTarget?e.originalTarget:e.target).getAttribute("data-index")){let e=window.HaxStore.instance.activeHaxBody.children[parseInt(t.getAttribute("data-index"))];e.scrollIntoView({behavior:"smooth",block:"start",inline:"center"}),e.classList.add("blinkfocus"),setTimeout(()=>{e.classList.remove("blinkfocus")},800)}}openedChanged(e){e.detail.value||window.HaxStore.instance.openDrawer!==this||window.HaxStore.write("openDrawer",!1,this)}closeEvent(e){this.opened=!1}static get tag(){return"hax-map"}static get properties(){return{title:{type:String},opened:{type:Boolean},elementList:{type:Array}}}firstUpdated(e){this.dispatchEvent(new CustomEvent("hax-register-core-piece",{bubbles:!0,cancelable:!0,composed:!0,detail:{piece:"haxMap",object:this}}))}open(){this.opened=!0}close(){this.opened=!1}}window.customElements.define(HaxMap.tag,HaxMap);export{HaxMap};