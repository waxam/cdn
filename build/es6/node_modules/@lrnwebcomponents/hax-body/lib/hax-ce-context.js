import{LitElement as t,html as e,css as a}from"../../../lit-element/lit-element.js";import{winEventsElement as i}from"../../utils/utils.js";class HaxCeContext extends(i(t)){static get styles(){return[a`
        :host *[hidden] {
          display: none;
        }
        :host {
          display: block;
        }
        hax-context-item {
          margin: 0;
        }
        :host(.hax-context-pin-top) hax-toolbar {
          position: fixed;
          top: 40px;
          flex-direction: column;
        }
      `]}constructor(){super(),this.__winEvents={"hax-store-property-updated":"_haxStorePropertyUpdated"},this.haxProperties={},setTimeout(()=>{import("./hax-context-item.js"),import("./hax-toolbar.js")},0)}_haxStorePropertyUpdated(t){t.detail&&void 0!==t.detail.value&&t.detail.property&&("activeNode"!==t.detail.property&&"activeContainerNode"!==t.detail.property||setTimeout(()=>{this._computeValues()},0))}render(){return e`
      <hax-toolbar hide-more>
        <hax-context-item
          mini
          action
          more
          slot="prefix"
          icon="${this.activeTagIcon}"
          label="${this.activeTagName}, click to change"
          ?disabled="${this.disableTransform}"
          event-name="hax-transform-node"
        ></hax-context-item>
        <slot slot="primary"></slot>
      </hax-toolbar>
    `}static get tag(){return"hax-ce-context"}static get properties(){return{disableTransform:{type:Boolean},activeTagIcon:{type:String},activeTagName:{type:String}}}_computeValues(){let t=window.HaxStore.instance;null!=t.activeNode?t.isTextElement(t.activeNode)||("GRID-PLATE"==t.activeNode.tagName?(this.disableTransform=!0,this.activeTagName="Grid",this.activeTagIcon="hax:3/3/3/3"):(this.disableTransform=!t.activeHaxBody.canTansformNode(t.activeNode),t.activeGizmo&&(this.activeTagName=t.activeGizmo.title,this.activeTagIcon=t.activeGizmo.icon))):(this.activeTagName="",this.activeTagIcon="")}}window.customElements.define(HaxCeContext.tag,HaxCeContext);export{HaxCeContext};