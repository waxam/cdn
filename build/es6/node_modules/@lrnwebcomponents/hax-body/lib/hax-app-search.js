import{html,PolymerElement}from"../../../@polymer/polymer/polymer-element.js";import"../../../@polymer/iron-ajax/iron-ajax.js";import"../../simple-colors/simple-colors.js";import"../../../@polymer/iron-list/iron-list.js";class HaxAppSearch extends PolymerElement{constructor(){super(),import("../../../@polymer/paper-input/paper-input.js"),import("../../../@polymer/paper-card/paper-card.js"),import("../../../@polymer/paper-styles/paper-styles.js"),import("../../hexagon-loader/hexagon-loader.js"),import("./hax-app-search-inputs.js"),import("./hax-app-search-result.js"),document.body.addEventListener("hax-store-property-updated",this._haxStorePropertyUpdated.bind(this)),document.body.addEventListener("hax-app-search-values-changed",this._searchValuesEvent.bind(this))}static get template(){return html`
      <style include="simple-colors-shared-styles">
        :host {
          display: block;
        }
        paper-button.item-wrapper {
          margin: 0;
          padding: 0;
        }
        paper-card {
          padding: 0;
          margin: 8px;
          width: 240px;
          font-size: 12px;
          --paper-card-header: {
            max-height: 160px;
          }
        }
        @media screen and (min-width: 800px) {
          paper-card {
            font-size: 14px;
          }
        }
        hexagon-loader {
          height: 100%;
          justify-content: center;
          margin: 0 auto -200px;
          z-index: 1000;
          position: relative;
          transition: 0.3s linear opacity, 0.3s linear visibility;
          width: calc(100% - 32px);
          opacity: 0;
          visibility: visible;
        }
        hexagon-loader[loading] {
          opacity: 1;
        }
        .card-content {
          padding: 16px;
        }
        .card-content p {
          padding: 0;
          margin: 0;
        }
        #itemlist {
          min-height: 172px;
          border: 1px solid #222222;
        }
        hax-app-search-inputs {
          min-height: 150px;
          padding: 0 16px;
        }
        hax-app-pagination {
          min-height: 32px;
          font-size: 12.8px;
          display: none;
          justify-content: flex-end;
          justify-content: center;
        }
      </style>

      <iron-ajax
        auto="[[auto]]"
        id="request"
        method="[[method]]"
        url="[[requestEndPoint]]"
        handle-as="json"
        headers="[[headers]]"
        params="[[requestParams]]"
        last-response="{{requestData}}"
        hidden=""
        loading="{{loading}}"
        debounce-duration="300"
      ></iron-ajax>
      <hax-app-search-inputs
        id="searchinput"
        label="[[label]]"
        schema="{{searchSchema}}"
        values="{{searchValues}}"
      ></hax-app-search-inputs>
      <hax-app-pagination
        id="pagerbottom"
        request-data="[[requestData]]"
        pagination="[[pagination]]"
      ></hax-app-pagination>
      <hexagon-loader
        size="small"
        loading$="[[loading]]"
        color="#0085ba"
        aria-roledescription="Loading"
      ></hexagon-loader>
      <iron-list
        grid
        id="itemlist"
        items="[[media]]"
        as="resultData"
        hidden$="[[loading]]"
      >
        <template>
          <hax-app-search-result
            result-data="[[resultData]]"
          ></hax-app-search-result>
        </template>
      </iron-list>
    `}static get tag(){return"hax-app-search"}static get properties(){return{activeApp:{type:Object,observer:"_resetAppSearch"},auto:{type:Boolean,value:!1},searchSchema:{type:Object},searchValues:{type:Object,value:{}},headers:{type:Object,value:{}},method:{type:String,value:"GET"},loading:{type:Boolean,value:!1,observer:"_loadingChanged"},requestData:{type:Object,value:{},observer:"_requestDataChanged"},media:{type:Array,value:[],observer:"_mediaChanged"}}}_searchValuesEvent(e){if(void 0!==e.detail){var requestParams=this.requestParams;for(var property in e.detail)requestParams[property]=e.detail[property];this.set("requestParams",{}),this.set("requestParams",requestParams)}}_resetAppSearch(newValue,oldValue){if(null!=newValue){let app=newValue;var requestParams={};this.label=app.details.title,this.auto=!1,this.set("media",[]),void 0!==app.connection.data&&(requestParams=app.connection.data),void 0!==app.connection.operations.browse.data&&(requestParams=Object.assign(requestParams,app.connection.operations.browse.data)),this.set("method",app.connection.operations.browse.method),this.set("headers",{}),void 0!==app.connection.headers&&this.set("headers",app.connection.headers),this.set("requestParams",{}),this.set("requestParams",requestParams);var requestEndPoint=app.connection.protocol+"://"+app.connection.url;"/"!=requestEndPoint.substr(requestEndPoint.length-1)&&(requestEndPoint+="/"),void 0!==app.connection.operations.browse.endPoint&&(requestEndPoint+=app.connection.operations.browse.endPoint),this.set("requestEndPoint",requestEndPoint),this.set("searchSchema",{});var searchSchema={properties:{}};void 0!==app.connection.operations.browse.search&&(searchSchema.properties=app.connection.operations.browse.search,this.set("searchSchema",searchSchema)),this.resultMap=app.connection.operations.browse.resultMap,this.set("pagination",{}),void 0!==app.connection.operations.browse.pagination&&this.set("pagination",app.connection.operations.browse.pagination),void 0!==app.connection.auto?this.auto=app.connection.auto:this.auto=!0}}_haxStorePropertyUpdated(e){e.detail&&void 0!==e.detail.value&&e.detail.property&&this.set(e.detail.property,e.detail.value)}_requestDataChanged(newValue,oldValue){if(typeof newValue!={}&&void 0!==oldValue){let media=[],map=this.resultMap,data=[];if(void 0!==this._resolveObjectPath(map.items,newValue)?data=this._resolveObjectPath(map.items,newValue):null!=newValue&&(data=newValue),null!=data){for(var i=0;i<data.length;i++){if(media[i]={title:this._resolveObjectPath(map.preview.title,data[i]),details:this._resolveObjectPath(map.preview.details,data[i]),type:map.defaultGizmoType,map:{}},void 0!==media[i].details&&null!=media[i].details&&(media[i].details=media[i].details.replace(/(<([^>]+)>)/gi,"")),map.preview.id.constructor===Object){let tmp=this._resolveObjectPath(map.preview.id.property,data[i]);"split"===map.preview.id.op&&(tmp=tmp.split(map.preview.id.delimiter),media[i].id=tmp[map.preview.id.position])}else media[i].id=this._resolveObjectPath(map.preview.id,data[i]);for(var prop in void 0!==map.preview.image?media[i].image=this._resolveObjectPath(map.preview.image,data[i]):void 0!==map.image?media[i].image=map.image:media[i].image="",map.gizmo)if("_url_source"===prop){let _id="";_id=void 0!==media[i].map.__id?media[i].map.__id:this._resolveObjectPath(map.gizmo.id,data[i]),media[i].map.source=map.gizmo._url_source.replace("<%= id %>",_id)}else if(map.gizmo[prop].constructor===Object){let tmp=this._resolveObjectPath(map.gizmo[prop].property,data[i]);"split"===map.gizmo[prop].op&&(tmp=tmp.split(map.gizmo[prop].delimiter),media[i].map[prop]=tmp[map.gizmo[prop].position],"id"===prop&&(media[i].map.__id=media[i].map[prop]))}else media[i].map[prop]=this._resolveObjectPath(map.gizmo[prop],data[i]);void 0===media[i].map.url&&void 0!==media[i].map.source&&(media[i].map.url=media[i].map.source),void 0!==map.gizmo.type&&(media[i].type=this._resolveObjectPath(map.gizmo.type,data[i]))}this.set("media",[]),this.set("media",media)}}}_loadingChanged(newValue,oldValue){newValue&&(this.set("media",[]),this.notifyPath("media.*"),setTimeout(()=>{this.shadowRoot.querySelector("#itemlist").dispatchEvent(new CustomEvent("iron-resize",{bubbles:!0,cancelable:!0,composed:!0,detail:!0}))},1e3))}_mediaChanged(newValue,oldValue){void 0!==oldValue&&setTimeout(()=>{this.shadowRoot.querySelector("#itemlist").dispatchEvent(new CustomEvent("iron-resize",{bubbles:!0,cancelable:!0,composed:!0,detail:!0}))},325)}_resolveObjectPath(path,obj){return path.split(".").reduce(function(prev,curr){return prev?prev[curr]:null},obj||self)}}window.customElements.define(HaxAppSearch.tag,HaxAppSearch);export{HaxAppSearch};