import{html,css}from"../../../lit-element/lit-element.js";import{SimpleColors}from"../../simple-colors/simple-colors.js";import"../../../@polymer/iron-ajax/iron-ajax.js";import{winEventsElement}from"../../utils/utils.js";import"../../../@polymer/polymer/lib/elements/custom-style.js";class HaxAppSearch extends(winEventsElement(SimpleColors)){static get styles(){return[...super.styles,css`
        :host {
          display: block;
        }
        paper-button.item-wrapper {
          margin: 0;
          padding: 0;
        }
        paper-card {
          padding: 0;
          margin: 8px;
          width: 240px;
          font-size: 12px;
        }
        @media screen and (min-width: 800px) {
          paper-card {
            font-size: 14px;
          }
        }
        hexagon-loader {
          display: none;
          justify-content: center;
          width: 100%;
          z-index: 1000;
          position: absolute;
          --hexagon-color: var(--hax-color-bg-accent, #0085ba);
        }
        hexagon-loader[loading] {
          display: block;
          opacity: 0.8;
        }
        .card-content {
          padding: 16px;
        }
        .card-content p {
          padding: 0;
          margin: 0;
        }
        #itemlist {
          min-height: 172px;
          border: 1px solid #222222;
        }
        hax-app-search-inputs {
          min-height: 150px;
          padding: 0 16px;
        }
        hax-app-pagination {
          min-height: 32px;
          font-size: 12.8px;
          display: none;
          justify-content: flex-end;
          justify-content: center;
        }
      `]}constructor(){super(),this.__winEvents={"hax-store-property-updated":"_haxStorePropertyUpdated"},this.auto=!1,this.headers={},this.method="GET",this.loading=!1,this.requestData={},this.media=[],this.resultMap={},import("../../../@polymer/paper-input/paper-input.js"),import("../../../@polymer/paper-card/paper-card.js"),import("../../../@polymer/paper-styles/paper-styles.js"),import("../../hexagon-loader/hexagon-loader.js"),import("./hax-app-search-inputs.js"),import("./hax-app-search-result.js")}render(){return html`
      <custom-style>
        <style>
          paper-card {
            --paper-card-header: {
              max-height: 160px;
            }
          }
        </style>
      </custom-style>
      <iron-ajax
        id="request"
        handle-as="json"
        @last-response-changed="${this.requestDataChanged}"
        @loading-changed="${this._loadingChanged}"
        debounce-duration="200"
      ></iron-ajax>
      <hax-app-search-inputs
        id="searchinput"
        .label="${this.label}"
        .schema="${this.searchSchema}"
        @search-values-changed="${this._searchValuesChanged}"
      ></hax-app-search-inputs>
      <hax-app-pagination
        id="pagerbottom"
        .request-data="${this.requestData}"
        .pagination="${this.pagination}"
      ></hax-app-pagination>
      <hexagon-loader
        size="medium"
        item-count="4"
        ?loading="${this.loading}"
        aria-roledescription="Loading"
      ></hexagon-loader>
      <div id="itemlist">
        ${this.media.map(resultData=>html`
            <hax-app-search-result
              image="${resultData.image}"
              title="${resultData.title}"
              details="${resultData.details}"
              .map="${resultData.map}"
              type="${resultData.type}"
            ></hax-app-search-result>
          `)}
      </div>
    `}requestDataChanged(e){this.requestData=e.detail.value}updated(changedProperties){changedProperties.forEach((oldValue,propName)=>{["auto","method","headers"].includes(propName)&&(this.shadowRoot.querySelector("#request")[propName]=this[propName]),"requestEndPoint"==propName&&(this.shadowRoot.querySelector("#request").url=this[propName]),"requestParams"==propName&&(this.shadowRoot.querySelector("#request").params=this[propName]),"activeApp"==propName&&this._resetAppSearch(this[propName],oldValue),"requestData"==propName&&this._requestDataChanged(this[propName],oldValue)})}static get tag(){return"hax-app-search"}static get properties(){return{activeApp:{type:Object},auto:{type:Boolean},searchSchema:{type:Object},headers:{type:Object},method:{type:String},loading:{type:Boolean},requestData:{type:Object},media:{type:Array},requestEndPoint:{type:String},requestParams:{type:Object},resultMap:{type:Object}}}_searchValuesChanged(e){let requestParams=this.requestParams;for(let property in e.detail)requestParams[property]=e.detail[property];this.requestParams={...this.requestParams}}_resetAppSearch(newValue,oldValue){if(null!=newValue){let app=newValue;var requestParams={};this.label=app.details.title,this.auto=!1,this.media=[],void 0!==app.connection.data&&(requestParams=app.connection.data),void 0!==app.connection.operations.browse.data&&(requestParams=Object.assign(requestParams,app.connection.operations.browse.data)),this.method=app.connection.operations.browse.method,this.headers={},void 0!==app.connection.headers&&(this.headers=app.connection.headers),this.requestParams={},this.requestParams=requestParams;var requestEndPoint=app.connection.protocol+"://"+app.connection.url;"/"!=requestEndPoint.substr(requestEndPoint.length-1)&&(requestEndPoint+="/"),void 0!==app.connection.operations.browse.endPoint&&(requestEndPoint+=app.connection.operations.browse.endPoint),this.requestEndPoint=requestEndPoint,this.searchSchema={};var searchSchema={properties:{}};void 0!==app.connection.operations.browse.search&&(searchSchema.properties=app.connection.operations.browse.search,this.searchSchema=searchSchema),this.resultMap=app.connection.operations.browse.resultMap,this.pagination={},void 0!==app.connection.operations.browse.pagination&&(this.pagination=app.connection.operations.browse.pagination),void 0!==app.connection.auto?this.auto=app.connection.auto:this.auto=!0}}_haxStorePropertyUpdated(e){e.detail&&void 0!==e.detail.value&&e.detail.property&&(this[e.detail.property]=e.detail.value)}_requestDataChanged(newValue,oldValue){if(this.resultMap&&this.resultMap.items&&typeof newValue!={}&&void 0!==oldValue){let media=[],map=this.resultMap,data=[];if(void 0!==this._resolveObjectPath(map.items,newValue)?data=this._resolveObjectPath(map.items,newValue):null!=newValue&&(data=newValue),null!=data){for(var i=0;i<data.length;i++){if(media[i]={title:this._resolveObjectPath(map.preview.title,data[i]),details:this._resolveObjectPath(map.preview.details,data[i]),type:map.defaultGizmoType,map:{}},void 0!==media[i].details&&null!=media[i].details&&(media[i].details=media[i].details.replace(/(<([^>]+)>)/gi,"")),map.preview.id.constructor===Object){let tmp=this._resolveObjectPath(map.preview.id.property,data[i]);"split"===map.preview.id.op&&(tmp=tmp.split(map.preview.id.delimiter),media[i].id=tmp[map.preview.id.position])}else media[i].id=this._resolveObjectPath(map.preview.id,data[i]);for(var prop in void 0!==map.preview.image?media[i].image=this._resolveObjectPath(map.preview.image,data[i]):void 0!==map.image?media[i].image=map.image:media[i].image="",map.gizmo)if("_url_source"===prop){let _id="";_id=void 0!==media[i].map.__id?media[i].map.__id:this._resolveObjectPath(map.gizmo.id,data[i]),media[i].map.source=map.gizmo._url_source.replace("<%= id %>",_id)}else if(map.gizmo[prop].constructor===Object){let tmp=this._resolveObjectPath(map.gizmo[prop].property,data[i]);"split"===map.gizmo[prop].op&&(tmp=tmp.split(map.gizmo[prop].delimiter),media[i].map[prop]=tmp[map.gizmo[prop].position],"id"===prop&&(media[i].map.__id=media[i].map[prop]))}else media[i].map[prop]=this._resolveObjectPath(map.gizmo[prop],data[i]);void 0===media[i].map.url&&void 0!==media[i].map.source&&(media[i].map.url=media[i].map.source),void 0!==map.gizmo.type&&(media[i].type=this._resolveObjectPath(map.gizmo.type,data[i]))}this.media=[...media]}}}_loadingChanged(e){this.loading=e.detail.value}_resolveObjectPath(path,obj){return path.split(".").reduce((function(prev,curr){return prev?prev[curr]:null}),obj||self)}}window.customElements.define(HaxAppSearch.tag,HaxAppSearch);export{HaxAppSearch};