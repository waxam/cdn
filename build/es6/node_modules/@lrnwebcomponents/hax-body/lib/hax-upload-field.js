import{html,PolymerElement}from"../../../@polymer/polymer/polymer-element.js";import"../../simple-colors/simple-colors.js";import"../../simple-picker/simple-picker.js";import"./hax-shared-styles.js";class HaxUploadField extends PolymerElement{constructor(){super(),import("../../../@polymer/paper-input/paper-input.js"),import("../../../@polymer/paper-icon-button/paper-icon-button.js"),import("../../../@vaadin/vaadin-upload/vaadin-upload.js")}static get template(){return html`
      <style include="hax-shared-styles">
        :host {
          display: block;
          visibility: visible;
          transition: 0.3s all ease;
          box-sizing: border-box;
          pointer-events: all;
          overflow: visible;
          --simple-camera-snap-width: 300px;
          --simple-camera-snap-height: calc(300px * 9 / 16);
          --simple-camera-snap-color: var(--eco-json-form-color, #222);
          --simple-camera-snap-background: var(--eco-json-form-bg, white);
          --simple-camera-snap-border-radius: 2px;
          --lumo-font-family: var(
            --eco-json-form-font-family,
            var(--paper-font-caption_-_font-family, unset)
          );
          --lumo-base-color: var(
            --eco-json-form-bg,
            var(--primary-background-color, #fff)
          );
          --lumo-primary-contrast-color: var(
            --eco-json-form-bg,
            var(--primary-background-color, #fff)
          );
          --lumo-primary-color: var(
            --eco-json-form-active-color,
            var(--primary-color, #000)
          );
          --lumo-primary-text-color: var(
            --eco-json-form-color,
            var(--primary-text-color, #222)
          );
          --lumo-body-text-color: var(
            --eco-json-form-color,
            var(--primary-text-color, #222)
          );
          --lumo-header-text-color: var(
            --eco-json-form-color,
            var(--primary-text-color, #222)
          );
          --lumo-secondary-text-color: var(
            --eco-json-form-faded-color,
            var(--secondary-text-color, #888)
          );
          --lumo-disabled-text-color: var(
            --eco-json-form-faded-color,
            var(--secondary-text-color, #888)
          );
          background-color: var(
            --eco-json-form-bg,
            var(--primary-background-color, #fff)
          );
          --simple-picker-float-label-active-color: var(
            --eco-json-form-active-color,
            var(--primary-color, #000)
          );
          --simple-picker-float-label-faded-color: var(
            --eco-json-form-faded-color,
            var(--secondary-text-color, #888)
          );
          --simple-picker-background-color: var(
            --eco-json-form-bg,
            var(--primary-background-color, #fff)
          );
          --simple-picker-border-color: transparent;
          --simple-picker-sample-focus: {
            transition: all 0.5s;
            border: none;
          }
        }
        :host #legend {
          transition: all 0.5s;
          color: var(
            --eco-json-form-faded-color,
            var(--secondary-text-color, #888)
          );
        }
        :host(:focus-within) #legend {
          color: var(--eco-json-form-active-color, var(--primary-color, #000));
        }
        :host #fieldset {
          border-radius: 2px;
          transition: all 0.5s;
          border: 1px solid
            var(--eco-json-form-faded-color, var(--secondary-text-color, #888));
        }
        :host #fieldset > div {
          display: flex;
          align-items: center;
          justify-content: space-between;
        }
        :host #fieldset > div > *:not(#picker) {
          flex: 1 1 auto;
        }
        #picker {
          margin-bottom: 0;
          margin-right: 5px;
        }
        vaadin-upload {
          padding: 0;
          margin: 0;
        }
        simple-camera-snap {
          position: relative;
          --simple-camera-snap-button-container: {
            position: absolute;
            bottom: 2px;
            z-index: 5;
          }
          --simple-camera-snap-button: {
            border-radius: 100%;
            opacity: 0.7;
          }
          @apply --hax-upload-camera;
        }
      </style>
      <fieldset id="fieldset">
        <legend id="legend" hidden$="[[!label]]">[[label]]</legend>
        <div>
          <simple-picker
            id="picker"
            aria-label="Source..."
            required
            value="{{option}}"
            options="[[options]]"
          >
          </simple-picker>
          <paper-input
            id="url"
            hidden$="[[_isHidden(option,'url')]]"
            value="{{value}}"
            label="URL"
            type="url"
            auto-validate=""
          ></paper-input>
          <vaadin-upload
            capture
            form-data-name="file-upload"
            hidden$="[[_isHidden(option,'fileupload')]]"
            id="fileupload"
          ></vaadin-upload>
          <div id="camerahole" hidden$="[[_isHidden(option,'selfie')]]"></div>
        </div>
      </fieldset>
    `}static get properties(){return{label:{type:String,value:null},value:{type:String,notify:!0},option:{type:String},options:{type:Array}}}_isHidden(option,ui){return option!==ui}_fileAboutToUpload(e){if(this.__allowUpload)this.__allowUpload=!1;else{e.preventDefault(),e.stopPropagation();let values={source:e.detail.file.name,type:e.detail.file.type};var type=window.HaxStore.guessGizmoType(values);let targets=window.HaxStore.getHaxAppStoreTargets(type);1===targets.length?this._haxAppPickerSelection({detail:targets[0]}):0!==targets.length?window.HaxStore.instance.haxAppPicker.presentOptions(targets,type,"Where would you like to upload this "+type+"?","app"):window.HaxStore.toast("Sorry, you don't have a storage location that can handle "+type+" uploads!",5e3)}}_fileUploadResponse(e){let response=JSON.parse(e.detail.xhr.response),map=this.__appUsed.connection.operations.add.resultMap,data={},item={};for(var prop in void 0!==this._resolveObjectPath(map.item,response)&&(data=this._resolveObjectPath(map.item,response)),item.type=map.defaultGizmoType,map.gizmo)item[prop]=this._resolveObjectPath(map.gizmo[prop],data);void 0===item.url&&void 0!==item.source&&(item.url=item.source),void 0!==map.gizmo.type&&(item.type=this._resolveObjectPath(map.gizmo.type,data)),this.shadowRoot.querySelector("#url").value=item.url}_haxAppPickerSelection(e){let connection=e.detail.connection;this.__appUsed=e.detail,this.shadowRoot.querySelector("#fileupload").method=connection.operations.add.method;let requestEndPoint=connection.protocol+"://"+connection.url;"/"!=requestEndPoint.substr(requestEndPoint.length-1)&&(requestEndPoint+="/"),void 0!==connection.operations.add.endPoint&&(requestEndPoint+=connection.operations.add.endPoint),null!=window.HaxStore.instance.connectionRewrites.appendUploadEndPoint&&(requestEndPoint+="?"+window.HaxStore.instance.connectionRewrites.appendUploadEndPoint),null!=window.HaxStore.instance.connectionRewrites.appendJwt&&(requestEndPoint+="&"+window.HaxStore.instance.connectionRewrites.appendJwt+"="+localStorage.getItem(window.HaxStore.instance.connectionRewrites.appendJwt)),this.shadowRoot.querySelector("#fileupload").headers=connection.headers,this.shadowRoot.querySelector("#fileupload").target=requestEndPoint,this.__allowUpload=!0,this.shadowRoot.querySelector("#fileupload").uploadFiles()}connectedCallback(){super.connectedCallback(),navigator.mediaDevices?this.options=[[{alt:"URL",icon:"icons:link",value:"url"}],[{alt:"Upload",icon:"icons:file-upload",value:"fileupload"}],[{alt:"Camera",icon:"image:photo-camera",value:"selfie"}]]:(this.options=[[{alt:"URL",icon:"icons:link",value:"url"}],[{alt:"Upload",icon:"icons:file-upload",value:"fileupload"}]],this.shadowRoot.querySelector("#camerahole").style.display="none"),this.option="fileupload",this.shadowRoot.querySelector("#fileupload").addEventListener("upload-before",this._fileAboutToUpload.bind(this)),this.shadowRoot.querySelector("#fileupload").addEventListener("upload-response",this._fileUploadResponse.bind(this)),this.shadowRoot.querySelector("#picker").addEventListener("change",e=>{e&&e.detail&&"selfie"===e.detail.value&&this._takeSelfie(e)}),this.shadowRoot.querySelector("#camerahole").addEventListener("simple-camera-snap-image",this.__newPhotoShowedUp.bind(this)),document.body.addEventListener("hax-app-picker-selection",this._haxAppPickerSelection.bind(this))}disconnectedCallback(){document.body.removeEventListener("hax-app-picker-selection",this._haxAppPickerSelection.bind(this)),super.disconnectedCallback()}__newPhotoShowedUp(e){let file=new File([e.detail.raw],"headshot"+e.timeStamp+".jpg");this.shadowRoot.querySelector("#fileupload")._addFile(file)}_takeSelfie(e){this.camera||(import("../../simple-login/lib/simple-camera-snap.js"),this.camera=document.createElement("simple-camera-snap"),this.camera.autoplay=!0,this.shadowRoot.querySelector("#camerahole").appendChild(this.camera))}_resolveObjectPath(path,obj){return path.split(".").reduce(function(prev,curr){return prev?prev[curr]:null},obj||self)}}window.customElements.define("hax-upload-field",HaxUploadField);export{HaxUploadField};