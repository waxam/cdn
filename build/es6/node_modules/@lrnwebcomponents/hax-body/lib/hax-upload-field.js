import{html,PolymerElement}from"../../../@polymer/polymer/polymer-element.js";import"../../simple-colors/simple-colors.js";import"./hax-shared-styles.js";class HaxUploadField extends PolymerElement{constructor(){super(),import("../../../@polymer/paper-input/paper-input.js"),import("../../../@polymer/paper-icon-button/paper-icon-button.js"),import("../../../@vaadin/vaadin-upload/vaadin-upload.js")}static get template(){return html`
      <style include="hax-shared-styles">
        :host {
          display: block;
          justify-content: flex-start;
          visibility: visible;
          transition: 0.3s all ease;
          box-sizing: border-box;
          pointer-events: all;
        }
        vaadin-upload {
          --primary-color: var(--hax-color-accent1);
          --primary-font-color: #ffffff;
          --dark-primary-color: #ffffff;
          --light-primary-color: var(--hax-color-accent1);
          --error-color: darkred;
          padding: 0;
          margin: 0;
          border: none;
          --vaadin-upload-button-add-wrapper: {
            border: none;
            background-color: var(--hax-color-accent1);
            color: #ffffff;
            display: block;
          }
          --vaadin-upload-buttons-primary: {
            display: block;
            width: 100%;
            flex: unset;
            -webkit-flex: unset;
          }
          --vaadin-upload-button-add: {
            color: #000000;
            display: block;
            flex: unset;
            -webkit-flex: unset;
            text-align: center;
          }
          --vaadin-upload-drop-label: {
            color: #ffffff;
            display: block;
            padding: 0;
            margin: 0;
          }
          --vaadin-upload-drop-label-dragover: {
            color: #ffffff;
          }
          --vaadin-upload-file-list: {
            padding: 0;
            margin: 0;
            color: #ffffff;
          }
          --vaadin-upload-file: {
            color: #ffffff;
          }
        }
        vaadin-upload[dragover] {
          border-color: #396;
        }
        vaadin-upload-file {
          --disabled-text-color: #222222;
        }
        paper-input {
          color: var(--hax-color-text);
        }
      </style>
      <paper-input
        id="url"
        value="{{value}}"
        label="URL"
        type="url"
        auto-validate=""
      ></paper-input>
      <vaadin-upload
        capture
        form-data-name="file-upload"
        id="fileupload"
      ></vaadin-upload>
      <paper-icon-button icon="image:photo-camera" id="selfie"></paper-icon-button>
      <div id="camerahole"></div>
    `}static get properties(){return{value:{type:String,notify:!0}}}_fileAboutToUpload(e){if(this.__allowUpload)this.__allowUpload=!1;else{e.preventDefault(),e.stopPropagation();let values={source:e.detail.file.name,type:e.detail.file.type};var type=window.HaxStore.guessGizmoType(values);let targets=window.HaxStore.getHaxAppStoreTargets(type);1===targets.length?this._haxAppPickerSelection({detail:targets[0]}):0!==targets.length?window.HaxStore.instance.haxAppPicker.presentOptions(targets,type,"Where would you like to upload this "+type+"?","app"):window.HaxStore.toast("Sorry, you don't have a storage location that can handle "+type+" uploads!",5e3)}}_fileUploadResponse(e){let response=JSON.parse(e.detail.xhr.response),map=this.__appUsed.connection.operations.add.resultMap,data={},item={};for(var prop in void 0!==this._resolveObjectPath(map.item,response)&&(data=this._resolveObjectPath(map.item,response)),item.type=map.defaultGizmoType,map.gizmo)item[prop]=this._resolveObjectPath(map.gizmo[prop],data);void 0===item.url&&void 0!==item.source&&(item.url=item.source),void 0!==map.gizmo.type&&(item.type=this._resolveObjectPath(map.gizmo.type,data)),this.shadowRoot.querySelector("#url").value=item.url}_haxAppPickerSelection(e){let connection=e.detail.connection;this.__appUsed=e.detail,this.shadowRoot.querySelector("#fileupload").method=connection.operations.add.method;let requestEndPoint=connection.protocol+"://"+connection.url;"/"!=requestEndPoint.substr(requestEndPoint.length-1)&&(requestEndPoint+="/"),void 0!==connection.operations.add.endPoint&&(requestEndPoint+=connection.operations.add.endPoint),null!=window.HaxStore.instance.connectionRewrites.appendUploadEndPoint&&(requestEndPoint+="?"+window.HaxStore.instance.connectionRewrites.appendUploadEndPoint),null!=window.HaxStore.instance.connectionRewrites.appendJwt&&(requestEndPoint+="&"+window.HaxStore.instance.connectionRewrites.appendJwt+"="+localStorage.getItem(window.HaxStore.instance.connectionRewrites.appendJwt)),this.shadowRoot.querySelector("#fileupload").headers=connection.headers,this.shadowRoot.querySelector("#fileupload").target=requestEndPoint,this.__allowUpload=!0,this.shadowRoot.querySelector("#fileupload").uploadFiles()}connectedCallback(){super.connectedCallback(),this.shadowRoot.querySelector("#fileupload").addEventListener("upload-before",this._fileAboutToUpload.bind(this)),this.shadowRoot.querySelector("#fileupload").addEventListener("upload-response",this._fileUploadResponse.bind(this)),this.shadowRoot.querySelector("#selfie").addEventListener("click",this._takeSelfie.bind(this)),this.shadowRoot.querySelector("#camerahole").addEventListener("simple-camera-snap-image",this.__newPhotoShowedUp.bind(this)),document.body.addEventListener("hax-app-picker-selection",this._haxAppPickerSelection.bind(this))}disconnectedCallback(){this.shadowRoot.querySelector("#fileupload").removeEventListener("upload-before",this._fileAboutToUpload.bind(this)),this.shadowRoot.querySelector("#fileupload").removeEventListener("upload-response",this._fileUploadResponse.bind(this)),this.shadowRoot.querySelector("#selfie").removeEventListener("click",this._takeSelfie.bind(this)),this.shadowRoot.querySelector("#camerahole").removeEventListener("simple-camera-snap-image",this.__newPhotoShowedUp.bind(this)),this.shadowRoot.querySelector("#fileupload").removeEventListener("upload-response",this._fileUploadResponse.bind(this)),document.body.removeEventListener("hax-app-picker-selection",this._haxAppPickerSelection.bind(this)),super.disconnectedCallback()}__newPhotoShowedUp(e){this.shadowRoot.querySelector("#fileupload")._addFile(e.detail)}_takeSelfie(e){this.camera||(import("../../simple-login/lib/simple-camera-snap.js"),this.camera=document.createElement("simple-camera-snap"),this.shadowRoot.querySelector("#camerahole").appendChild(this.camera))}_resolveObjectPath(path,obj){return path.split(".").reduce(function(prev,curr){return prev?prev[curr]:null},obj||self)}}window.customElements.define("hax-upload-field",HaxUploadField);export{HaxUploadField};