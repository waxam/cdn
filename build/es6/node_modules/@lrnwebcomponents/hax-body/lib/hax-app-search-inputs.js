import{LitElement as e,html as t,css as a}from"../../../lit-element/lit-element.js";import"../../simple-fields/simple-fields.js";import{HaxSchematizer as s,HaxElementizer as l}from"../../hax-body-behaviors/lib/HAXFields.js";class HaxAppSearchInputs extends e{static get styles(){return[a`
        :host {
          display: block;
        }
        simple-fields {
          color: var(--hax-color-text, #000000);
        }
        .search-label {
          font-size: 24px;
          color: var(--hax-color-text, #000000);
          font-weight: bold;
          margin: 0;
          padding: 0;
        }
      `]}updated(e){super.updated()&&super.updated(e),e.forEach((e,t)=>{"label"==t&&(this.shadowRoot.querySelector("#form").value={})})}constructor(){super(),this.label="app"}render(){return t`
      <div class="search-label">Search ${this.label}</div>
      <simple-fields
        id="form"
        .schema="${this.schema}"
        .schematizer="${s}"
        .elementizer="${l}"
        @value-changed="${this.searchValuesChanged}"
      ></simple-fields>
    `}searchValuesChanged(e){"string"!=typeof e.detail.value&&this.dispatchEvent(new CustomEvent("search-values-changed",{detail:e.detail.value}))}static get tag(){return"hax-app-search-inputs"}static get properties(){return{label:{type:String},schema:{type:Object}}}}window.customElements.define(HaxAppSearchInputs.tag,HaxAppSearchInputs);export{HaxAppSearchInputs};