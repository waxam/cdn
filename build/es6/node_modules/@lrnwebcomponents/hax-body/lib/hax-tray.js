import{LitElement as e,html as t,css as a}from"../../../lit-element/lit-element.js";import{winEventsElement as i,camelCaseToDash as o,wipeSlot as s,nodeToHaxElement as n,haxElementToNode as l,normalizeEventPath as r}from"../../utils/utils.js";import{HaxSchematizer as c,HaxElementizer as d}from"../../hax-body-behaviors/lib/HAXFields.js";import{SimpleTourFinder as p}from"../../simple-popover/lib/SimpleTourFinder.js";import{HAXStore as h}from"./hax-store.js";import{autorun as m,toJS as u}from"../../../mobx/dist/mobx.esm.js";import"../../simple-fields/simple-fields.js";import"../../simple-popover/simple-popover.js";import"../../simple-icon/lib/simple-icon-lite.js";import"../../simple-icon/lib/simple-icons.js";import"../../hax-iconset/lib/simple-hax-iconset.js";import"../../a11y-collapse/lib/a11y-collapse-group.js";import"../../a11y-collapse/a11y-collapse.js";import"./hax-tray-upload.js";import"./hax-gizmo-browser.js";import"./hax-app-browser.js";import"./hax-stax-browser.js";import"./hax-map.js";import"./hax-preferences-dialog.js";class HaxTray extends(p(i(e))){static get tag(){return"hax-tray"}constructor(){super(),this.tourName="hax",this.__winEvents={"can-redo-changed":"_redoChanged","can-undo-changed":"_undoChanged","hax-drop-focus-event":"_expandSettingsPanel"},this._initial=!0,this.activeValue={settings:{layout:{__position:"hax-align-left",__scale:100},configure:{},advanced:{}}},this.collapsed=!1,this.activeTab="item-0",this.activeSchema=[],this.canUndo=!1,this.canRedo=!1,this.elementAlign="right",this.activeTagName="Select an element to configure",this.activeTagIcon="icons:settings",this.traySizeIcon="hax:arrow-expand-right",this.__setup=!1,this.__tipText="Edit",setTimeout(()=>{import("./hax-tray-button.js"),this.addEventListener("hax-tray-button-click",this._processTrayEvent.bind(this))},0),m(()=>{this.activeGizmo=u(h.activeGizmo)}),m(()=>{this.activeNode=u(h.activeNode)}),m(()=>{this.globalPreferences=u(h.globalPreferences)}),m(()=>{this.editMode=u(h.editMode)})}_expandSettingsPanel(e){this.shadowRoot.querySelector("#settingscollapse").expand()}_redoChanged(e){this.canRedo=e.detail.value}_undoChanged(e){this.canUndo=e.detail.value}static get styles(){return[a`
        :host {
          font-family: var(--simple-fields-font-family, sans-serif);
          display: block;
          z-index: 100000000;
          position: absolute;
          transition: 0.2s all ease-in-out;
          --hax-contextual-action-text-color: var(
            --simple-colors-default-theme-grey-1,
            #fff
          );
          --hax-contextual-action-color: var(
            --simple-colors-default-theme-grey-12,
            #009dc7
          );
          --hax-contextual-action-hover-color: var(
            --simple-colors-default-theme-grey-8,
            #009dc7
          );
          --simple-fields-accent-color: var(
            --simple-colors-default-theme-cyan-8,
            #007999
          );
          --a11y-tabs-focus-color: var(
            --hax-contextual-action-hover-color,
            var(--simple-colors-default-theme-grey-8, #009dc7)
          );
        }
        .wrapper {
          color: var(--hax-color-text, #000000);
          position: fixed;
          top: 0;
          background-color: transparent;
          font-size: 20px;
          width: var(---hax-tray-width, 300px);
          transition: 0.2s all ease-in-out;
          opacity: 0;
          visibility: hidden;
          pointer-events: none;
        }
        :host([edit-mode]) .wrapper {
          opacity: 1;
          visibility: visible;
          right: 0;
          pointer-events: all;
        }
        #addcollapse {
          --hax-tray-panel-accent-text: var(
            --simple-colors-default-theme-grey-1,
            #fff
          );
          --hax-tray-panel-accent: var(
            --simple-colors-default-theme-purple-8,
            #8a009b
          );
          --simple-fields-accent-color: var(
            --simple-colors-default-theme-purple-8,
            #8a009b
          );
        }
        #settingscollapse {
          --hax-tray-panel-accent-text: var(
            --simple-colors-default-theme-grey-1,
            #fff
          );
          --hax-tray-panel-accent: var(
            --simple-colors-default-theme-green-8,
            #00762e
          );
          --simple-fields-accent-color: var(
            --simple-colors-default-theme-green-8,
            #00762e
          );
          --simple-fields-margin: 4px;
          --simple-fields-font-size: 12px;
        }
        #searchapps {
          --hax-tray-panel-accent-text: var(
            --simple-colors-default-theme-grey-1,
            #fff
          );
          --hax-tray-panel-accent: var(
            --simple-colors-default-theme-cyan-8,
            #007999
          );
          --simple-fields-accent-color: var(
            --simple-colors-default-theme-cyan-8,
            #007999
          );
        }
        :host([edit-mode][collapsed]) a11y-collapse-group {
          right: -100vw;
        }
        :host([element-align="left"]) .wrapper {
          left: -1000px;
        }
        :host([element-align="right"]) .wrapper {
          right: -1000px;
        }
        :host([edit-mode][element-align="left"]) .wrapper {
          left: 0;
        }
        :host([edit-mode][element-align="right"]) .wrapper {
          right: 0;
        }
        :host([edit-mode][element-align="left"]) #toggle-tray-size {
          --hax-tray-button-rotate: rotate(-180deg);
        }
        /** default is right so lets support left too */
        :host([edit-mode][element-align="left"][collapsed])
          a11y-collapse-group {
          right: unset;
          left: -100vw;
        }
        :host([edit-mode][element-align="left"]) .ops,
        :host([edit-mode][element-align="left"]) .quick,
        :host([edit-mode][element-align="left"]) .quick-buttons {
          flex-direction: row-reverse;
        }
        :host([element-align="left"]) #toggle-element-align {
          --hax-tray-button-rotate: rotate(-90deg) scaleX(-1) !important;
        }
        :host([element-align="right"]) #toggle-element-align {
          --hax-tray-button-rotate: rotate(90deg) !important;
        }
        simple-popover {
          --simple-popover-max-height: 50vh;
        }
        hax-tray-button,
        a11y-collapse,
        a11y-collapse-group,
        hax-app-browser,
        hax-gizmo-browser {
          transition: 0.2s all ease-in-out;
          visibility: visible;
        }
        hax-tray-button:not(:defined),
        a11y-collapse:not(:defined),
        a11y-collapse-group:not(:defined),
        hax-app-browser:not(:defined),
        hax-gizmo-browser:not(:defined) {
          visibility: hidden;
        }
        *[hidden] {
          display: none;
        }
        :host([element-align="right"]) a11y-collapse-group {
          margin: 0 -350px 0 0;
          right: 0;
        }
        :host([element-align="left"]) a11y-collapse-group {
          margin: 0 0 0 -350px;
          left: 0;
        }
        :host([edit-mode][element-align="left"]) a11y-collapse-group,
        :host([edit-mode][element-align="right"]) a11y-collapse-group {
          position: absolute;
          margin: 0;
          top: 32;
        }
        a11y-collapse-group {
          position: fixed;
          font-size: 16px;
          margin: 0;
          background-color: var(--simple-colors-default-theme-grey-1, #fff);
        }
        a11y-collapse {
          font-size: 12px;
          font-weight: normal;
          --a11y-tabs-content-padding: 0;
          width: calc(var(---hax-tray-width, 300px) - 2px);
          --a11y-collapse-heading-color: var(
            --simple-colors-default-theme-grey-7,
            #666
          );
          --a11y-collapse-heading-background-color: var(
            --simple-colors-default-theme-grey-2,
            #eee
          );
          --a11y-collapse-padding-top: 0px;
          --a11y-collapse-padding-right: 0px;
          --a11y-collapse-padding-bottom: 0px;
          --a11y-collapse-padding-left: 0px;
          --a11y-collapse-border: 1px solid
            var(--simple-colors-default-theme-grey-3, #dddddd);
          --a11y-collapse-border-between: 1px solid
            var(--simple-colors-default-theme-grey-3, #dddddd);
          transition: all 0.5ms ease-in-out;
          border-left: 3px solid
            var(--simple-colors-default-theme-grey-3, #dddddd);
        }
        a11y-collapse:not([expanded]) div[slot="content"] {
          display: none;
        }
        a11y-collapse div[slot="heading"] {
          cursor: pointer;
          font-size: 16px;
        }
        a11y-collapse:hover {
          --a11y-collapse-heading-color: var(
            --hax-tray-panel-accent,
            var(--simple-colors-default-theme-grey-12, #000)
          );
          --a11y-collapse-heading-background-color: var(
            --hax-tray-panel-accent-text,
            var(--simple-colors-default-theme-grey-1, #fff)
          );
        }
        a11y-collapse:hover {
          border-left: 3px solid
            var(
              --hax-tray-panel-accent,
              var(--hax-contextual-action-hover-color)
            );
        }
        a11y-collapse[expanded],
        a11y-collapse[expanded]:hover {
          --a11y-collapse-heading-color: var(
            --hax-tray-panel-accent,
            var(--hax-contextual-action-hover-color)
          );
          --a11y-collapse-heading-background-color: var(
            --hax-tray-panel-accent-text,
            var(--simple-colors-default-theme-grey-1)
          );
        }
        a11y-collapse[disabled] {
          --a11y-collapse-heading-color: var(
            --simple-colors-default-theme-grey-7,
            #666
          ) !important;
          --a11y-collapse-heading-background-color: var(
            --simple-colors-default-theme-grey-2,
            #eee
          ) !important;
          cursor: not-allowed;
        }
        a11y-collapse[disabled] div[slot="heading"] {
          cursor: not-allowed !important;
          opacity: 0.6;
        }
        #settingscollapse div[slot="content"] {
          padding: 0;
          margin: 0;
        }
        a11y-collapse[expanded] div[slot="content"] {
          min-height: 300px;
          max-height: 70vh;
          overflow: auto;
        }
        simple-icon-lite {
          margin-right: 8px;
        }
        .quick-buttons {
          width: var(---hax-tray-width, 300px);
          display: flex;
          color: var(--simple-colors-default-theme-grey-12, #000);
          background-color: var(--simple-colors-default-theme-grey-4, #bbb);
          justify-content: space-between;
          transition: all 0.5ms ease-in-out;
        }
        .quick-buttons hax-tray-button {
          --hax-tray-panel-accent-text: var(
            --simple-colors-default-theme-cyan-8,
            #007999
          );
          --hax-tray-panel-accent: var(
            --simple-colors-default-theme-grey-1,
            #fff
          );
        }

        #button,
        .quick-buttons #haxsavebutton {
          --hax-quick-button-accent: var(
            --simple-colors-default-theme-cyan-8,
            #007999
          );
          --hax-tray-panel-accent: var(
            --simple-colors-default-theme-cyan-7,
            #009dc7
          );
          --hax-quick-button-accent-text: var(
            --simple-colors-default-theme-grey-1,
            #fff
          );
          --hax-tray-panel-accent-text: var(
            --simple-colors-default-theme-grey-1,
            #fff
          );
        }
        .quick-buttons #haxcancelbutton {
          --hax-quick-button-accent: var(
            --simple-colors-default-theme-red-8,
            #ac0000
          );
          --hax-tray-panel-accent: var(
            --simple-colors-default-theme-red-7,
            #ee0000
          );
          --hax-quick-button-accent-text: var(
            --simple-colors-default-theme-grey-1,
            #fff
          );
          --hax-tray-panel-accent-text: var(
            --simple-colors-default-theme-grey-1,
            #fff
          );
        }
        .quick-buttons .ops {
          display: flex;
          justify-content: flex-start;
        }
        .quick-buttons .quick {
          display: flex;
          justify-content: flex-end;
        }
        div[slot="heading"] {
          margin: 0;
          padding: 10px;
        }
        :host([element-align="right"]) #button {
          right: 0;
        }
        :host([element-align="left"]) #button {
          left: 0;
        }

        #button {
          position: fixed;
          top: 0;
          border: 1px solid black;
          box-shadow: 0 5px 5px 1px rgba(0, 0, 0, 0.2);
          visibility: visible;
          z-index: 1000;
          margin: 0;
        }
        :host([edit-mode]) #button {
          visibility: hidden;
          opacity: 0;
        }
        #button:hover {
          opacity: 1;
        }
        .active-op-name {
          display: inline-flex;
          vertical-align: text-bottom;
          padding: 4px 2px;
          max-width: 60px;
          font-size: 11px;
          overflow: hidden;
          text-align: center;
          color: white;
        }
        /** This is mobile layout for controls */
        @media screen and (max-width: 800px) {
          .ops,
          .quick,
          .quick-buttons {
            flex-direction: row-reverse;
          }
          .wrapper {
            top: 0;
            left: 0;
            right: 0;
            margin: 0 !important;
          }
          .quick-buttons {
            position: relative;
            z-index: 1;
          }
          #toggle-element-align {
            display: none;
          }
          #toggle-tray-size {
            --hax-tray-button-rotate: rotate(-90deg) !important;
          }
          :host([edit-mode][collapsed]) a11y-collapse-group {
            top: -200vh;
            left: unset !important;
            right: unset !important;
          }
        }
        @media screen and (max-width: 600px) {
          :host([edit-mode]) .hide-small {
            display: none;
          }
        }
      `]}render(){return t`
      ${this.hidePanelOps?"":t`
            <hax-tray-button
              voice-command="edit page"
              .data-opened="${this.editMode}"
              @click="${this._clickEditButton}"
              icon="create"
              id="button"
              dark
              accent-color="white"
              label="${this.__tipText}"
            ></hax-tray-button>
          `}
      <div class="wrapper">
        <div class="quick-buttons">
          <div class="ops">
            ${this.hidePanelOps?"":t`
                  <hax-tray-button
                    mini
                    @click="${this._clickSaveButton}"
                    icon="save"
                    id="haxsavebutton"
                    label="${this.__tipText}"
                    event-name="save"
                    accent-color="white"
                    voice-command="save (content)(page)"
                    color-meaning
                  ></hax-tray-button>
                  <hax-tray-button
                    mini
                    icon="cancel"
                    id="haxcancelbutton"
                    accent-color="white"
                    label="Cancel"
                    event-name="cancel"
                    voice-command="cancel"
                    color-meaning
                  ></hax-tray-button>
                `}
            <hax-tray-button
              mini
              voice-command="toggle menu"
              id="toggle-tray-size"
              event-name="toggle-tray-size"
              icon="${this.traySizeIcon}"
              label="${this.traySizeText}"
              data-simple-tour-stop
            >
              <div data-stop-title>Menu placement</div>
              <div data-stop-content>Expand or collapse the menu visually.</div>
            </hax-tray-button>
            <hax-tray-button
              mini
              voice-command="toggle alignment"
              id="toggle-element-align"
              event-name="toggle-element-align"
              icon="image:photo-size-select-small"
              label="${this.menuAlignName}"
              data-simple-tour-stop
            >
              <div data-stop-title>Menu alignment</div>
              <div data-stop-content>
                Change which side of the screen the menu is affixed to visually.
              </div>
            </hax-tray-button>
          </div>
          <div class="quick">
            <slot name="tray-buttons-pre"></slot>
            <hax-tray-button
              mini
              id="exportbtn"
              icon="code"
              label="View page source"
              voice-command="view (page) source"
              data-simple-tour-stop
              data-stop-title="label"
            >
              <div data-stop-content>
                Every change you make in HAX is ultimately writing HTML. Know
                HTML? Awesome, pop open the source view and make any changes you
                like. HTML is always behind the scenes ensuring that content is
                portable, well formatted and easy to read.
              </div>
            </hax-tray-button>
            <hax-tray-button
              mini
              event-name="start-tour"
              icon="help"
              label="Take a tour"
              voice-command="start tour"
            ></hax-tray-button>
            <hax-tray-button
              mini
              icon="icons:undo"
              ?disabled="${!this.canUndo}"
              label="Undo previous action"
              event-name="undo"
              voice-command="undo"
              class="hide-small"
              data-simple-tour-stop
              data-stop-title="label"
            >
              <div slot="tour" data-stop-content>
                Undo the previous operation in the content, whether typing or
                adding a widget.
              </div>
            </hax-tray-button>
            <hax-tray-button
              mini
              icon="icons:redo"
              ?disabled="${!this.canRedo}"
              label="Redo previous action"
              event-name="redo"
              voice-command="redo"
              class="hide-small"
              data-simple-tour-stop
              data-stop-title="label"
            >
              <div slot="tour" data-stop-content>
                Redo the last action that you hit Undo on.
              </div>
            </hax-tray-button>
            <hax-tray-button
              mini
              event-name="open-map"
              icon="maps:map"
              id="mapbtn"
              label="Content map"
              voice-command="open map"
              data-simple-tour-stop
              data-stop-title="label"
            >
              <div data-stop-content>
                This is a simple list of all the block areas of the page that
                are clickable to jump through items quickly as well as review
                some simple overview stats.
              </div>
            </hax-tray-button>
            <simple-popover for="mapbtn" auto hidden>
              <hax-map></hax-map>
            </simple-popover>
            <hax-tray-button
              mini
              ?hidden="${this.hidePreferencesButton}"
              id="prefbtn"
              event-name="open-preferences"
              icon="settings"
              label="Advanced settings"
              voice-command="open preferences"
              data-simple-tour-stop
              data-stop-title="label"
            >
              <div data-stop-content>
                Some advanced options for developers and experimental purposes.
              </div>
            </hax-tray-button>
            <simple-popover for="prefbtn" auto hidden>
              <hax-preferences-dialog></hax-preferences-dialog>
            </simple-popover>
          </div>
        </div>
        <a11y-collapse-group accordion radio>
          <slot name="tray-collapse-pre"></slot>
          <a11y-collapse id="settingscollapse" accordion data-simple-tour-stop>
            <div slot="heading" data-stop-title>
              <simple-icon-lite icon="${this.activeTagIcon}"></simple-icon-lite>
              ${this.activeTagName}
            </div>
            <div slot="tour" data-stop-content>
              Settings panel changes contextually based on the item you are
              currently working on. If you select a paragraph in the page, it
              will change to a P tag and show settings specific to that element.
              Same for video-player's, meme's, images, tables; litereally
              anything!
            </div>
            <div slot="content">
              <simple-fields
                id="settingsform"
                disable-responsive
              ></simple-fields>
            </div>
          </a11y-collapse>
          <a11y-collapse
            id="addcollapse"
            accordion
            data-simple-tour-stop
            @expand="${this._refreshAddData}"
          >
            <div slot="heading" data-stop-title>
              <simple-icon-lite icon="hax:add"></simple-icon-lite> Add Content
            </div>
            <div slot="tour" data-stop-content>
              When you want to add any content to the page from text, to images,
              to anything more advanced; you can always find items to add under
              the Add content menu. Click to expand, then either drag and drop
              items into the page or click and have them placed near whatever
              you are actively working on.
            </div>
            <div slot="content">
              <hax-gizmo-browser id="gizmobrowser"></hax-gizmo-browser>
              <h5>Templates</h5>
              <hax-stax-browser id="staxbrowser"></hax-stax-browser>
            </div>
          </a11y-collapse>
          <a11y-collapse id="searchapps" accordion data-simple-tour-stop>
            <div slot="heading" data-stop-title>
              <simple-icon-lite icon="hax:search-clear"></simple-icon-lite>
              Media browser
            </div>
            <div slot="tour" data-stop-content>
              Search for media and content anywhere that your copy of HAX has
              access to. Pick what to search, perform the search and then click
              or drag the item into the contnet.
            </div>
            <div slot="content">
              <hax-tray-upload></hax-tray-upload>
              <hax-app-browser id="appbrowser"></hax-app-browser>
            </div>
          </a11y-collapse>
          <slot name="tray-collapse-post"></slot>
        </a11y-collapse-group>
      </div>
    `}__simpleFieldsClick(e){try{this.activeTab=this.shadowRoot.querySelector("#settingsform").shadowRoot.querySelector("simple-fields").activeTab}catch(e){this.activeTab="item-0"}}_refreshAddData(e){this.shadowRoot.querySelector("#gizmobrowser").resetList(u(h.gizmoList)),this.shadowRoot.querySelector("#staxbrowser").staxList=[...u(h.staxList)]}_processTrayEvent(e){var t=r(e)[0];switch(e.detail.eventName){case"insert-stax":this.shadowRoot.querySelector("#settingscollapse").expand(),this.dispatchEvent(new CustomEvent("hax-insert-content-array",{bubbles:!0,cancelable:!0,composed:!0,detail:t.stax}));break;case"insert-tag":let a,i={tag:e.detail.value},o=h.haxSchemaFromTag(e.detail.value);if(t.getAttribute("data-demo-schema")&&o&&o.demoSchema&&o.demoSchema)a=o.demoSchema[0];else{let e=JSON.parse(t.getAttribute("event-properties")),o=t.getAttribute("event-content");null==e&&(e={}),null==o&&(o=""),a=h.haxElementPrototype(i,e,o)}this.shadowRoot.querySelector("#settingscollapse").expand(),this.dispatchEvent(new CustomEvent("hax-insert-content",{bubbles:!0,cancelable:!0,composed:!0,detail:a}));break;case"open-preferences":this.shadowRoot.querySelector("simple-popover[for='mapbtn']").hidden=!0,this.shadowRoot.querySelector("simple-popover[for='prefbtn']").hidden=!this.shadowRoot.querySelector("simple-popover[for='prefbtn']").hidden,this.shadowRoot.querySelector("hax-preferences-dialog").reloadPreferencesForm();break;case"toggle-element-align":this.elementAlign="right"===this.elementAlign?"left":"right";break;case"toggle-tray-size":this.collapsed=!this.collapsed;break;case"open-map":this.shadowRoot.querySelector("simple-popover[for='prefbtn']").hidden=!0,this.shadowRoot.querySelector("simple-popover[for='mapbtn']").hidden=!this.shadowRoot.querySelector("simple-popover[for='mapbtn']").hidden,this.shadowRoot.querySelector("hax-map").updateHAXMap();break;case"start-tour":window.SimpleTourManager.requestAvailability().startTour("hax");break;case"undo":h.activeHaxBody.undo();break;case"redo":h.activeHaxBody.redo();break;case"cancel":confirm("Changes have not been saved, Click OK to close HAX or Cancel to continue editing.")&&(h.editMode=!1,this.dispatchEvent(new CustomEvent("hax-cancel",{bubbles:!0,composed:!0,cancelable:!1,detail:e.detail})))}}static get properties(){return{...super.properties,__tipText:{type:String},menuAlignName:{type:String},offsetMargin:{type:String,attribute:"offset-margin"},collapsed:{type:Boolean,reflect:!0},traySizeIcon:{type:String},traySizeText:{type:String},activeValue:{type:Object},activeSchema:{type:Object},elementAlign:{type:String,reflect:!0,attribute:"element-align"},light:{type:Boolean,reflect:!0},canUndo:{type:Boolean,attribute:"can-undo"},canRedo:{type:Boolean,attribute:"can-redo"},hidePreferencesButton:{type:Boolean,reflect:!0,attribute:"hide-preferences-button"},hidePanelOps:{type:Boolean,reflect:!0,attribute:"hide-panel-ops"},globalPreferences:{type:Object},activeNode:{type:Object},activeTagIcon:{type:String},activeTagName:{type:String},activeGizmo:{type:Object},editMode:{type:Boolean,reflect:!0,attribute:"edit-mode"}}}firstUpdated(e){super.firstUpdated&&super.firstUpdated(e),this.__setup||(this.shadowRoot.querySelector("#settingsform").schematizer=c,this.shadowRoot.querySelector("#settingsform").elementizer=d,setTimeout(()=>{this.shadowRoot.querySelector(".wrapper").style.margin=this.offsetMargin},1e3),this.__setup=!0,this.shadowRoot.querySelector("#settingsform").addEventListener("click",this.__simpleFieldsClick.bind(this)),this.shadowRoot.querySelector("#settingsform").addEventListener("value-changed",this.__valueChangedEvent.bind(this)),this.dispatchEvent(new CustomEvent("hax-register-core-piece",{bubbles:!0,cancelable:!0,composed:!0,detail:{piece:"haxTray",object:this}})),this.dispatchEvent(new CustomEvent("hax-add-voice-command",{bubbles:!0,composed:!0,cancelable:!1,detail:{command:":name: (collapse)(open)(expand)(toggle) add content (menu)",context:this.shadowRoot.querySelector('#addcollapse div[slot="heading"]'),callback:"click"}})),this.dispatchEvent(new CustomEvent("hax-add-voice-command",{bubbles:!0,composed:!0,cancelable:!1,detail:{command:":name: (collapse)(open)(expand)(toggle) element settings (menu)",context:this.shadowRoot.querySelector('#settingscollapse div[slot="heading"]'),callback:"click"}})),this.dispatchEvent(new CustomEvent("hax-add-voice-command",{bubbles:!0,composed:!0,cancelable:!1,detail:{command:":name: (collapse)(open)(expand)(toggle) search (menu)",context:this.shadowRoot.querySelector('#searchapps div[slot="heading"]'),callback:"click"}})))}updated(e){super.updated&&super.updated(e),e.forEach((e,t)=>{"editMode"==t&&(this.editMode&&h.refreshActiveNodeForm(),this._editModeChanged(this.editMode)),"offsetMargin"==t&&setTimeout(()=>{this.shadowRoot.querySelector(".wrapper").style.margin=this.offsetMargin},0),"collapsed"==t&&(this[t]?(this.traySizeIcon="hax:arrow-expand-left",this.traySizeText="Expand",this.shadowRoot.querySelector("a11y-collapse-group").setAttribute("aria-disabled","true"),this.shadowRoot.querySelector("a11y-collapse-group").setAttribute("tabindex","-1"),this._editModeChanged(this.editMode)):(this.traySizeIcon="hax:arrow-expand-right",this.traySizeText="Collapse",this.shadowRoot.querySelector("a11y-collapse-group").removeAttribute("aria-disabled"),this.shadowRoot.querySelector("a11y-collapse-group").removeAttribute("tabindex"))),"elementAlign"==t&&("left"==this[t]?this.menuAlignName="Right align menu":this.menuAlignName="Left align menu"),"activeGizmo"==t&&(this.activeGizmo?(this.activeTagName=this.activeGizmo.title+" Settings",this.activeTagIcon=this.activeGizmo.icon,e||this.shadowRoot.querySelector("#settingscollapse").expanded||this.shadowRoot.querySelector('#settingscollapse div[slot="heading"]').click()):(this.activeTagName="Select an element",this.activeTagIcon="icons:settings",this.shadowRoot.querySelector("#addcollapse").expanded||this.shadowRoot.querySelector('#addcollapse div[slot="heading"]').click())),"activeNode"==t&&(this.activeNode&&this.activeNode.tagName?(this.shadowRoot.querySelector("#settingscollapse").disabled=!1,this.editMode&&h.refreshActiveNodeForm()):(this.activeTagName="Select an element to configure",this.activeTagIcon="icons:settings",this.shadowRoot.querySelector("#settingscollapse").disabled=!0))})}_setupForm(){let e=this.activeNode;if(this._initial=!0,this.activeValue={settings:{layout:{__position:"hax-align-left",__scale:100},configure:{},advanced:{}}},this.shadowRoot.querySelector("#settingsform").fields=[],this.shadowRoot.querySelector("#settingsform").value={},e.tagName&&h.elementList[e.tagName.toLowerCase()]){let a=h.elementList[e.tagName.toLowerCase()];for(var t in void 0===a.gizmo.title?this.humanName=e.tagName.replace("-"," ").toLowerCase():this.humanName=a.gizmo.title,this.activeHaxElement.properties)a.settings.configure.forEach(e=>{e.property===t&&(this.activeValue.settings.configure[t]=this.activeHaxElement.properties[t]),e.attribute===t&&(this.activeValue.settings.configure[t]=this.activeHaxElement.properties[t]),e.slot===t&&(this.activeValue.settings.configure[t]=this.activeHaxElement.properties[t])}),a.settings.advanced.forEach(e=>{e.property===t&&(this.activeValue.settings.advanced[t]=this.activeHaxElement.properties[t]),e.attribute===t&&(this.activeValue.settings.advanced[t]=this.activeHaxElement.properties[t]),e.slot===t&&(this.activeValue.settings.advanced[t]=this.activeHaxElement.properties[t])});let i=document.createElement("div");i.innerHTML=this.activeHaxElement.content,i.childNodes.forEach(e=>{1===e.nodeType&&"undefined"!==e.innerHTML&&(a.settings.configure.forEach(t=>{t.slot===e.getAttribute("slot")?this.activeValue.settings.configure[t.slot]=e.innerHTML:""!=t.slot||null!=e.getAttribute("slot")&&"null"!=e.getAttribute("slot")||(this.activeValue.settings.configure[t.slot]=e.innerHTML)}),a.settings.advanced.forEach(t=>{t.slot===e.getAttribute("slot")?this.activeValue.settings.advanced[t.slot]=e.innerHTML:""!=t.slot||null!=e.getAttribute("slot")&&"null"!=e.getAttribute("slot")||(this.activeValue.settings.advanced[t.slot]=e.innerHTML)}))}),""!=e.style.width?this.activeValue.settings.layout.__scale=e.style.width.replace("%",""):this.activeValue.settings.layout.__scale=100,"block"==e.style.display&&"0px auto"==e.style.margin&&"right"==e.style.float?this.activeValue.settings.layout.__position="hax-align-right":"block"==e.style.display&&"0px auto"==e.style.margin?this.activeValue.settings.layout.__position="hax-align-center":this.activeValue.settings.layout.__position="hax-align-left",this.activeHaxElement.properties.__scale=this.activeValue.settings.layout.__scale,this.activeHaxElement.properties.__position=this.activeValue.settings.layout.__position,a.settings.configure.forEach((e,t)=>{a.settings.configure[t].attribute&&(a.settings.configure[t].property=a.settings.configure[t].attribute),a.settings.configure[t].slot&&(a.settings.configure[t].property=a.settings.configure[t].slot)}),a.settings.advanced.forEach((e,t)=>{a.settings.advanced[t].attribute&&(a.settings.advanced[t].property=a.settings.advanced[t].attribute),a.settings.advanced[t].slot&&(a.settings.advanced[t].property=a.settings.advanced[t].slot)}),a.settings.layout=[],a.canPosition&&a.settings.layout.push({property:"__position",title:"Alignment",description:"Align content relative to other content",inputMethod:"select",value:this.activeValue.settings.layout.__position,options:{"hax-align-left":"Left","hax-align-center":"Center","hax-align-right":"Right"}}),a.canScale&&a.settings.layout.push({property:"__scale",title:"Width",description:"Scale and resize content",inputMethod:"slider",value:this.activeValue.settings.layout.__scale,min:a.canScale.min?a.canScale.min:12.5,max:a.canScale.max?a.canScale.max:100,step:a.canScale.step?a.canScale.step:12.5}),this.activeSchema=[{property:"settings",inputMethod:"tabs",properties:[]}];a.settings.configure.length>0?this.activeSchema[0].properties.push({property:"configure",title:"Configure",description:"Configure the element",properties:a.settings.configure}):this.activeSchema[0].properties.push({property:"configure",title:"Configure",description:"Configure the element",disabled:!0}),a.settings.layout.length>0?this.activeSchema[0].properties.push({property:"layout",title:"Layout",description:"Position the element relative to other items",properties:a.settings.layout}):this.activeSchema[0].properties.push({property:"layout",title:"Layout",description:"Position the element relative to other items",disabled:!0}),a.settings.advanced.length>0?this.activeSchema[0].properties.push({property:"advanced",title:"Advanced",description:"Advanced element settings",properties:a.settings.advanced}):this.activeSchema[0].properties.push({property:"advanced",title:"Advanced",description:"Advanced element settings",disabled:!0}),this.__activePropSchema=a,this.shadowRoot.querySelector("#settingsform").fields=this.activeSchema,this.shadowRoot.querySelector("#settingsform").value=this.activeValue}}_toArray(e){return null==e?[]:Object.keys(e).map((function(t){return e[t]}))}__valueChangedEvent(e){if(this.editMode&&e.detail.value&&e.detail.value.settings){let l=e.detail.value.settings,r={advanced:"advanced",configure:"configure",layout:"layout"};var t;for(let c in r)for(let r in l[c])if(t=!1,null==l[c][r]||l[c][r].readOnly)this.activeNode.removeAttribute(o(r));else{if("prefix"===r&&""!=l[c][r])this.activeNode.setAttribute("prefix",l[c][r]),t=!0;else if("layout"===c&&"__position"===r)t=!0,this._initial||(clearTimeout(this.__contextValueDebounce),this.__contextValueDebounce=setTimeout(()=>{this.dispatchEvent(new CustomEvent("hax-context-item-selected",{bubbles:!0,composed:!0,detail:{eventName:l[c][r],value:l[c][r]}}))},50));else if("layout"===c&&"__scale"===r)t=!0,this._initial||(clearTimeout(this.__contextSizeDebounce),this.__contextSizeDebounce=setTimeout(()=>{this.dispatchEvent(new CustomEvent("hax-context-item-selected",{bubbles:!0,composed:!0,detail:{eventName:"hax-size-change",value:l[c][r]}}))},50));else if(this.activeNode.hasOwnProperty(r)||this.activeNode.properties&&this.activeNode.properties.hasOwnProperty(r)||null!=l[c][r]&&l[c][r].constructor===Array||null!=l[c][r]&&l[c][r].constructor===Object)try{l[c][r].constructor===Array?this.activeNode[r]=[...l[c][r]]:l[c][r].constructor===Object?this.activeNode[r]={...l[c][r]}:this.activeNode[r]=l[c][r],t=!0}catch(e){console.warn(e),t=!1}else for(var a in this.__activePropSchema.settings[c])if(this.__activePropSchema.settings[c][a].slot==r){let e="span";this.__activePropSchema.settings[c][a].slotWrapper?e=this.__activePropSchema.settings[c][a].slotWrapper:"code-editor"===this.activeNode.tagName.toLowerCase()&&(e="template");var i=document.createElement(e);if(this.__activePropSchema.settings[c][a].slotAttributes)for(var n in this.__activePropSchema.settings[c][a].slotAttributes)i.setAttribute(n,this.__activePropSchema.settings[c][a].slotAttributes[n]);""!==this.__activePropSchema.settings[c][a].slot&&(i.slot=this.__activePropSchema.settings[c][a].slot),i.innerHTML=l[c][r];const o=i.cloneNode(!0);t=!0,h.isTextElement(this.activeNode)?this.activeNode.innerHTML=i.innerHTML:(s(this.activeNode,this.__activePropSchema.settings[c][a].slot),this.activeNode.appendChild(o))}if(!t)try{!0===l[c][r]?this.activeNode.setAttribute(o(r),o(r)):!1===l[c][r]||""===l[c][r]?this.activeNode.removeAttribute(o(r)):this.activeNode.setAttribute(o(r),l[c][r])}catch(e){console.warn(e),console.warn(r,l[c][r])}}}setTimeout(()=>{this._initial&&(this._initial=!1)},51)}_editModeChanged(e){e?(this.__tipText="Save",this.shadowRoot.querySelector("#button").icon="save"):(this.__tipText="Edit",this.shadowRoot.querySelector("#button").icon="create")}_clickEditButton(e){h.editMode=!0,window.dispatchEvent(new CustomEvent("simple-modal-hide",{bubbles:!0,cancelable:!0,detail:{}}))}_clickSaveButton(e){h.editMode=!1,this.dispatchEvent(new CustomEvent("hax-save",{bubbles:!0,cancelable:!0,composed:!0,detail:e.detail})),window.dispatchEvent(new CustomEvent("simple-modal-hide",{bubbles:!0,cancelable:!0,detail:{}}))}}window.customElements.define(HaxTray.tag,HaxTray);export{HaxTray};