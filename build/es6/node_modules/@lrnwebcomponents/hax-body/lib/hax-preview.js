import{html,PolymerElement}from"../../../@polymer/polymer/polymer-element.js";import{dom}from"../../../@polymer/polymer/lib/legacy/polymer.dom.js";import{wipeSlot}from"./haxutils.js";import"../../../@polymer/iron-media-query/iron-media-query.js";import"../../simple-colors/simple-colors.js";import"./hax-shared-styles.js";class HaxPreview extends PolymerElement{constructor(){super(),import("../../../@polymer/paper-card/paper-card.js"),import("../../../@polymer/paper-tabs/paper-tabs.js"),import("../../../@polymer/paper-tabs/paper-tab.js"),import("../../../@polymer/paper-button/paper-button.js"),import("../../../@polymer/iron-icons/iron-icons.js"),import("../../../@vaadin/vaadin-split-layout/vaadin-split-layout.js"),import("../../eco-json-schema-form/eco-json-schema-form.js"),import("../../code-editor/code-editor.js"),import("../../../@polymer/paper-input/paper-textarea.js"),import("../../../app-datepicker/app-datepicker.js"),import("../../../@polymer/paper-toggle-button/paper-toggle-button.js"),import("./hax-upload-field.js"),import("../../simple-picker/simple-picker.js"),import("../../simple-icon-picker/simple-icon-picker.js"),import("../../paper-input-flagged/paper-input-flagged.js"),document.body.addEventListener("hax-store-property-updated",this._haxStorePropertyUpdated.bind(this))}static get template(){return html`
      <style include="simple-colors-shared-styles">
        hax-shared-styles">
                :host {
                  display: block;
                  background-color: #ffffff;
                  overflow: hidden;
                }
                iron-icon:not(:defined),
                paper-button:not(:defined) {
                  display: none;
                }
                paper-card.form-wrapper {
                  margin: 0;
                  padding: 0 16px 80px 16px;
                  width: 100%;
                  min-height: 160px;
                  background-color: transparent;
                  overflow: auto;
                  height: 100%;
                }

                vaadin-split-layout {
                  display: flex;
                  justify-content: space-around;
                  height: 100%;
                }
                eco-json-schema-object {
                  width: 50%;
                }

                .vaadin-split-layout-panel {
                  flex: 1 1 auto;
                  width: 100%;
                  flex-wrap: nowrap;
                  margin: 0;
                  height: 100%;
                  overflow: hidden;
                }
                #form {
                  --eco-json-schema-object-form: {
                    display: block !important;
                  }
                }
                #preview {
                  padding: 16px;
                  color: #000000;
                  background-color: white;
                  max-height: 63vh;
                  overflow: scroll;
                }
                #preview ::slotted(*) {
                  float: unset !important;
                  margin: unset !important;
                  width: unset !important;
                  position: unset !important;
                  top: unset !important;
                  left: unset !important;
                  right: unset !important;
                  bottom: unset !important;
                }
                .preview-text {
                  font-size: 14px;
                  color: var(--hax-color-text);
                  font-style: italic;
                  width: 100%;
                  height: 24px;
                  border-bottom: 1px solid var(--hax-color-border-outline);
                  text-align: center;
                  padding: 8px 0;
                  box-sizing: content-box;
                }
                .preview-text iron-icon {
                  margin: 0 8px;
                  display: inline-block;
                }
                .preview-text-bottom {
                  border-bottom: unset;
                  border-top: 1px solid var(--hax-color-border-outline);
                }
                @media screen and (max-width: 550px) {
                  .hide-on-mobile {
                    opacity: 0;
                    visibility: hidden;
                    position: absolute;
                    left: -9999px;
                  }
                }

                #modetabs {
                  height: 64px;
                  padding: 0px;
                  margin: 16px 0 0 0;
                  box-sizing: content-box;
                  color: var(--hax-color-text);
                  text-align: center;
                  background-color: transparent;
                  border-bottom: 1px solid var(--hax-color-border-outline);
                  display: block;
                  justify-content: space-evenly;
                  --paper-tabs-selection-bar-color: var(--hax-color-accent1);
                  --paper-tabs: {
                    background: transparent;
                  }
                }

                #modetabs paper-tab {
                  display: inline-flex;
                  height: 100%;
                  --paper-tab-ink: var(--hax-color-accent1);
                  --paper-tab: {
                    font-size: 16px;
                  }
                }
                #modetabs paper-tab paper-button {
                  min-width: unset;
                  width: 100%;
                  background-color: var(--hax-preview-button-bg, white);
                  color: var(--hax-preview-button-color, black);
                }
                .preview-buttons {
                  height: 64px;
                  padding: 0px;
                  color: var(--hax-color-text);
                  border-bottom: 1px solid var(--hax-color-border-outline);
                  background-color: transparent;
                  margin: 16px 0 0 0;
                  text-align: center;
                  box-sizing: content-box;
                }
                eco-json-schema-object {
                  color: var(--hax-text-color);
                  --eco-json-schema-object-form : {
                    -ms-flex: unset;
                    -webkit-flex: unset;
                    flex: unset;
                    -webkit-flex-basis: unset;
                    flex-basis: unset;
                  }
                }
                .preview-buttons paper-button {
                  min-width: unset;
                  width: 40%;
                  color: var(--hax-preview-button-color, black);
                  display: inline-block;
                  background-color: var(--hax-preview-button-bg, white);
                }
                .vaadin-layout-width {
                  min-width: 30%;
                  width: 50%;
                  max-width: 70%;
                }
                .vaadin-layout-height {
                  min-height: 40%;
                  height: 50%;
                  max-height: 60%;
                }
      </style>
      <vaadin-split-layout class="panel-wrapper" orientation="[[orientation]]">
        <div
          id="ppanel1"
          class$="vaadin-split-layout-panel vaadin-layout-[[orientationDirection]]"
        >
          <div class="preview-buttons">
            <paper-button id="insert" raised on-click="insert"
              >[[editTitle]]</paper-button
            >
            <paper-button id="cancel" raised on-click="cancel"
              >Cancel</paper-button
            >
          </div>
          <div class="preview-text">
            <iron-icon icon="icons:arrow-drop-down"></iron-icon
            ><iron-icon icon="icons:arrow-drop-down"></iron-icon
            ><iron-icon icon="icons:arrow-drop-down"></iron-icon>[[humanName]]
            preview<iron-icon icon="icons:arrow-drop-down"></iron-icon
            ><iron-icon icon="icons:arrow-drop-down"></iron-icon
            ><iron-icon icon="icons:arrow-drop-down"></iron-icon>
          </div>
          <div id="preview"><slot></slot></div>
          <div class="preview-text preview-text-bottom">
            <iron-icon icon="icons:arrow-drop-up"></iron-icon
            ><iron-icon icon="icons:arrow-drop-up"></iron-icon
            ><iron-icon icon="icons:arrow-drop-up"></iron-icon>end
            preview<iron-icon icon="icons:arrow-drop-up"></iron-icon
            ><iron-icon icon="icons:arrow-drop-up"></iron-icon
            ><iron-icon icon="icons:arrow-drop-up"></iron-icon>
          </div>
        </div>
        <div
          id="ppanel2"
          class$="vaadin-split-layout-panel vaadin-layout-[[orientationDirection]]"
        >
          <paper-tabs
            hidden\$="[[!haspreviewNode]]"
            id="modetabs"
            selected="{{modeTab}}"
            attr-for-selected="data-mode"
          >
            <paper-tab id="configurebutton" data-mode="configure"
              ><paper-button raised="" noink=""
                >Configure</paper-button
              ></paper-tab
            >
            <paper-tab id="advancedbutton" data-mode="advanced"
              ><paper-button raised="" noink=""
                >Advanced</paper-button
              ></paper-tab
            >
          </paper-tabs>
          <paper-card class="form-wrapper">
            <eco-json-schema-object
              id="form"
              schema="[[schema]]"
              value="{{value}}"
            ></eco-json-schema-object>
          </paper-card>
        </div>
      </vaadin-split-layout>
      <iron-media-query
        query="[[_computeMediaQuery(responsiveWidth)]]"
        on-query-matches-changed="_onQueryMatchesChanged"
      ></iron-media-query>
    `}static get tag(){return"hax-preview"}static get observers(){return["_valueChanged(value.*)"]}static get properties(){return{responsiveWidth:{type:String,value:"800px"},orientation:{type:String,value:"horizontal"},orientationDirection:{type:String,value:"width"},previewNode:{type:Object,value:{},notify:!0,observer:"_previewNodeChanged"},value:{type:Object,notify:!0,value:{}},modeTab:{type:String,value:"configure",observer:"_editorModeChanged"},editTitle:{type:String,value:"Update"},activeHaxElement:{type:Object,notify:!0,observer:"_activeHaxElementChanged"},haspreviewNode:{type:Boolean,computed:"_computedHasPreviewNode(previewNode)"},schema:{type:Object,value:{schema:{}}},advancedForm:{type:Boolean,value:!1},canEditSource:{type:Boolean,computed:"_computedEditSource(formKey)"},formKey:{type:String,computed:"_computedFormKey(advancedForm)",observer:"_formKeyChanged"},humanName:{type:String}}}_onQueryMatchesChanged(e){e.detail.value?(this.orientation="vertical",this.orientationDirection="height"):(this.orientation="horizontal",this.orientationDirection="width")}_computeMediaQuery(responsiveWidth){return"(max-width: "+responsiveWidth+")"}cancel(e){window.HaxStore.instance.haxManager.cancel(e)}insert(e){window.HaxStore.instance.haxManager.insertHaxElement(e)}_computedHasPreviewNode(previewNode){return void 0!==previewNode.tagName}_computedEditSource(newValue,oldValue){return void 0===newValue||void 0===this.previewNode.tagName||!window.HaxStore.instance.elementList[this.previewNode.tagName.toLowerCase()]||window.HaxStore.instance.elementList[this.previewNode.tagName.toLowerCase()].canEditSource}_computedFormKey(advanced){return advanced?"advanced":"configure"}_formKeyChanged(newValue,oldValue){if(void 0!==oldValue){var schema={};if(void 0!==this.previewNode&&void 0!==this.previewNode.tagName&&void 0!==window.HaxStore.instance.elementList[this.previewNode.tagName.toLowerCase()]){let element=this.activeHaxElement,props=window.HaxStore.instance.elementList[this.previewNode.tagName.toLowerCase()];for(var property in schema="function"==typeof this.previewNode.getHaxJSONSchemaType?window.HaxStore.instance.getHaxJSONSchema(newValue,props,this.previewNode):window.HaxStore.instance.getHaxJSONSchema(newValue,props),element.properties)if(element.properties.hasOwnProperty(property)){if(void 0!==schema.properties[property])if(schema.properties[property].value=element.properties[property],void 0!==schema.properties[property].component&&schema.properties[property].component.properties&&(schema.properties[property].component.properties.value=element.properties[property]),"prefix"==property||null==element.properties[property]||element.properties[property].readOnly)"prefix"===property?this.previewNode.setAttribute("prefix",element.properties[property]):console.warn(`${property} is busted some how`);else if("function"==typeof this.previewNode.set)try{this.previewNode.set(property,element.properties[property])}catch(e){console.warn(`${property} is busted some how`),console.warn(e)}else this.previewNode.setAttribute(property,element.properties[property]);this.set("value."+property,element.properties[property]),this.notifyPath("value."+property)}var slotsApplied=!1;for(var prop in props.settings[newValue]){let previewNode=this.previewNode;if(void 0!==props.settings[this.formKey][prop].slot&&!slotsApplied)for(var i in slotsApplied=!0,dom(previewNode).getEffectiveChildNodes())void 0!==dom(previewNode).getEffectiveChildNodes()[i]&&1===dom(previewNode).getEffectiveChildNodes()[i].nodeType&&dom(previewNode).getEffectiveChildNodes()[i].slot===props.settings[this.formKey][prop].slot&&void 0!==dom(previewNode).getEffectiveChildNodes()[i].innerHTML&&(schema.properties[props.settings[this.formKey][prop].slot].value=dom(previewNode).getEffectiveChildNodes()[i].innerHTML,this.set("value."+props.settings[this.formKey][prop].slot,dom(previewNode).getEffectiveChildNodes()[i].innerHTML),this.notifyPath("value."+props.settings[this.formKey][prop].slot))}}this.set("schema",{}),this.set("schema",schema)}}_haxStorePropertyUpdated(e){e.detail&&void 0!==e.detail.value&&e.detail.property&&"activeHaxElement"==e.detail.property&&(this.set(e.detail.property,{}),this.set(e.detail.property,e.detail.value))}_previewNodeChanged(newValue,oldValue){if(void 0!==oldValue&&newValue!=oldValue&&void 0!==newValue.tagName&&void 0!==window.HaxStore.instance.elementList[newValue.tagName.toLowerCase()]){const element=this.activeHaxElement;let props=window.HaxStore.instance.elementList[newValue.tagName.toLowerCase()],schema={};for(var property in schema="function"==typeof newValue.getHaxJSONSchemaType?window.HaxStore.instance.getHaxJSONSchema(this.formKey,props,newValue):window.HaxStore.instance.getHaxJSONSchema(this.formKey,props),void 0===props.gizmo.title?this.humanName=newValue.tagName.replace("-"," ").toLowerCase():this.humanName=props.gizmo.title,element.properties)if(element.properties.hasOwnProperty(property)){if(void 0!==schema.properties[property]&&(schema.properties[property].value=element.properties[property],void 0!==schema.properties[property].component&&schema.properties[property].component.properties&&(schema.properties[property].component.properties.value=element.properties[property])),null!=element.properties[property]&&!element.properties[property].readOnly)if("slot"===property)property="data-hax-slot",element.properties[property]=element.properties.slot,delete element.properties.slot,null!=element.properties[property]&&newValue.setAttribute("data-hax-slot",element.properties[property]);else if("prefix"===property)newValue.setAttribute("prefix",element.properties[property]);else if("function"==typeof newValue.set)try{newValue.set(property,element.properties[property])}catch(e){console.warn(e)}else newValue.setAttribute(property,element.properties[property]);this.set("value."+property,element.properties[property]),this.notifyPath("value."+property)}for(var property in newValue)newValue.hasOwnProperty(property)&&void 0!==schema.properties[property]&&void 0!==newValue[property].value&&null!==newValue[property].value&&(schema.properties[property].value=newValue.properties[property].value,void 0!==schema.properties[property].component&&schema.properties[property].component.properties&&(schema.properties[property].component.properties.value=newValue.properties[property].value),this.set("value."+property,newValue.properties[property].value),this.notifyPath("value."+property));for(var prop in props.settings[this.formKey])if(void 0!==props.settings[this.formKey][prop].slot)for(var i in dom(newValue).getEffectiveChildNodes())void 0!==dom(newValue).getEffectiveChildNodes()[i]&&1===dom(newValue).getEffectiveChildNodes()[i].nodeType&&dom(newValue).getEffectiveChildNodes()[i].slot===props.settings[this.formKey][prop].slot&&void 0!==dom(newValue).getEffectiveChildNodes()[i].innerHTML&&(schema.properties[props.settings[this.formKey][prop].slot].value=dom(newValue).getEffectiveChildNodes()[i].innerHTML,this.set("value."+props.settings[this.formKey][prop].slot,dom(newValue).getEffectiveChildNodes()[i].innerHTML),this.notifyPath("value."+props.settings[this.formKey][prop].slot));this.set("schema",{}),this.set("schema",schema)}}_activeHaxElementChanged(newValue,oldValue){if(void 0!==newValue){let preview=dom(this);if(wipeSlot(preview,"*"),this.set("previewNode",{}),this.modeTab="configure",newValue&&null!=newValue&&0!=newValue.length&&newValue.tag){var frag=document.createElement(newValue.tag);frag.innerHTML=newValue.content;var newNode=frag.cloneNode(!0);newNode.setAttribute("hax-preview-mode","hax-preview-mode"),null!=newNode.getAttribute("slot")&&(newNode.setAttribute("data-hax-slot",newNode.getAttribute("slot")),newNode.removeAttribute("slot")),preview.appendChild(newNode),this.set("previewNode",newNode)}}else this.modeTab="advanced",this.set("previewNode",{})}_valueChanged(valueChange){var node=this.previewNode;if(void 0!==node.tagName&&void 0!==window.HaxStore.instance.elementList[node.tagName.toLowerCase()])for(var path in valueChange.base){var propSettings=window.HaxStore.instance.elementList[node.tagName.toLowerCase()].settings[this.formKey].filter(n=>void 0!==n.attribute?n.attribute===path:void 0!==n.property?n.property===path:void 0!==n.slot?n.slot===path:void 0);if(propSettings.length>0){var propData=propSettings.pop();if(propData.attribute){let attributeName=window.HaxStore.camelToDash(propData.attribute);!0===valueChange.base[path]?node.setAttribute(attributeName,attributeName):!1===valueChange.base[path]?node.removeAttribute(attributeName):"inner-text"===attributeName?(node.innerText=valueChange.base[path],node.removeAttribute("innertext")):null!==valueChange.base[path]&&"null"!==valueChange.base[path]&&node.setAttribute(attributeName,valueChange.base[path]),this.set("element.properties."+propData.attribute,valueChange.base[path]),this.notifyPath("element.properties."+propData.attribute)}else if(propData.property)!0===valueChange.base[path]||!1===valueChange.base[path]?node[propData.property]=valueChange.base[path]:null!=valueChange.base[path]&&valueChange.base[path].indexSplices&&valueChange.base[path].indexSplices[0]?"function"==typeof node.set?(node.set(propData.property,valueChange.base[path].indexSplices[0].object),node.notifyPath(propData.property+".*")):node[propData.property]=valueChange.base[path].indexSplices[0].object:null!=valueChange.base[path]&&valueChange.base[path].constructor===Array?"function"==typeof node.set?node.set(propData.property,window.HaxStore.toArray(valueChange.base[path])):node[propData.property]=window.HaxStore.toArray(valueChange.base[path]):"function"==typeof node.set?node.set(propData.property,valueChange.base[path]):node[propData.property]=valueChange.base[path],this.set("element.properties."+propData.property,valueChange.base[path]),this.notifyPath("element.properties."+propData.property);else if(void 0!==propData.slot){let slotTag="span";propData.slotWrapper?slotTag=propData.slotWrapper:"code-editor"===node.tagName.toLowerCase()&&(slotTag="template");var tmpel=document.createElement(slotTag);if(propData.slotAttributes)for(var attr in propData.slotAttributes)tmpel.setAttribute(attr,propData.slotAttributes[attr]);""!==propData.slot&&(tmpel.slot=propData.slot),tmpel.innerHTML=valueChange.base[path];const cloneIt=tmpel.cloneNode(!0);window.HaxStore.instance.isTextElement(node)?node.innerHTML=tmpel.innerHTML:(wipeSlot(node,propData.slot),dom(node).appendChild(cloneIt)),this.set("element.content","<template>"+cloneIt.outerHTML+"</template>"),this.notifyPath("element.content")}}}}_editorModeChanged(mode){mode&&(this.advancedForm="advanced"===mode)}}window.customElements.define(HaxPreview.tag,HaxPreview);export{HaxPreview};