import{html,Polymer}from"@polymer/polymer/polymer-legacy.js";import{dom}from"@polymer/polymer/lib/legacy/polymer.dom.js";import"@polymer/paper-toggle-button/paper-toggle-button.js";import"@polymer/paper-card/paper-card.js";import"@polymer/paper-tabs/paper-tabs.js";import"@polymer/paper-tabs/paper-tab.js";import"@polymer/paper-button/paper-button.js";import"@polymer/paper-input/paper-textarea.js";import"@polymer/iron-icons/iron-icons.js";import"@vaadin/vaadin-split-layout/vaadin-split-layout.js";import"@lrnwebcomponents/eco-json-schema-form/eco-json-schema-form.js";import"@lrnwebcomponents/eco-json-schema-form/lib/eco-json-schema-object.js";import"@lrnwebcomponents/code-editor/code-editor.js";import"@lrnwebcomponents/app-datepicker/app-datepicker.js";import"@lrnwebcomponents/paper-icon-picker/paper-icon-picker.js";import"@lrnwebcomponents/paper-input-flagged/paper-input-flagged.js";import"@lrnwebcomponents/simple-colors/simple-colors.js";Polymer({_template:html`
    <custom-style>
      <style is="custom-style" include="simple-colors">
        :host {
          display: block;
          background-color: rgba(0, 0, 0, 0.6);
        }
        paper-card.form-wrapper {
          margin: 0;
          padding: 8px;
          width: 100%;
          min-height: 160px;
          background-color: transparent;
        }

        vaadin-split-layout {
          display: flex;
          justify-content: space-around;
          height: 100%;
          --vaadin-split-layout-splitter: {
            background-color: #ffffff;
          }
        }
        eco-json-schema-object {
          width: 50%;
        }

        .vaadin-split-layout-panel {
          flex: 1 1 auto;
          width: 100%;
          flex-wrap: nowrap;
          margin: 0;
          height: 100%;
        }
        #form {
          --eco-json-schema-object-form: {
            display: block !important;
          }
        }
        #preview {
          padding: 16px;
          color: #000000;
          background-color: #ffffff;
        }
        #preview ::slotted(*) {
          float: unset !important;
          float: unset !important;
          margin: unset !important;
          width: unset !important;
        }
        .preview-text {
          font-size: 14px;
          font-family: sans-serif;
          color: #ffffff;
          font-style: italic;
          width: 100%;
          height: 24px;
          border-bottom: 1px solid #ffffff;
          text-align: center;
          padding: 8px 0;
          box-sizing: content-box;
        }
        .preview-text iron-icon {
          margin: 0 8px;
          display: inline-block;
        }
        .preview-text-bottom {
          border-bottom: unset;
          border-top: 1px solid #ffffff;
        }
        @media screen and (max-width: 550px) {
          .hide-on-mobile {
            opacity: 0;
            visibility: hidden;
            position: absolute;
            left: -9999px;
          }
        }

        #modetabs {
          height: 80px;
          border-bottom: 1px #e5e5e5 solid;
          display: block;
          justify-content: space-evenly;
          --paper-tabs-selection-bar-color: var(
            --simple-colors-default-theme-light-green-1
          );
          --paper-tabs: {
            background: transparent;
          }
        }

        #modetabs paper-tab {
          display: inline-flex;
          height: 100%;
          --paper-tab-ink: var(--simple-colors-default-theme-light-green-1);
          --paper-tab: {
            font-size: 16px;
          }
        }
        #modetabs paper-tab paper-button {
          min-width: unset;
          width: 100%;
          height: 100%;
        }
        .human-name {
          width: 100%;
          text-align: center;
          font-size: 16px;
        }
        .preview-buttons {
          height: 64px;
          padding: 0px;
          color: #222222;
          border-bottom: 1px var(--hax-manager-steps-color) solid;
          background-color: transparent;
          margin: 16px 0 0 0;
          text-align: center;
          box-sizing: content-box;
        }
        eco-json-schema-object {
          color: white;
          --eco-json-schema-object-form : {
            -ms-flex: unset;
            -webkit-flex: unset;
            flex: unset;
            -webkit-flex-basis: unset;
            flex-basis: unset;
          }
          --paper-icon-button: {
            background-color: rgba(0, 0, 0, 0.9) !important;
            border-radius: 50%;
          }
          --code-pen-title-color: #ffffff;
          --paper-checkbox-size: 22px;
          --paper-checkbox-unchecked-color: var(
            --simple-colors-blue-grey-background1
          );
          --paper-checkbox-checked-color: var(
            --simple-colors-light-green-foreground3
          );
          --paper-checkbox-checked-ink-color: #ffffff;
          --paper-checkbox-unchecked-ink-color: #ffffff;
          --paper-checkbox-label-color: var(
            --simple-colors-blue-grey-background1
          );
          --paper-checkbox-label-checked-color: var(
            --simple-colors-accent-background1
          );
          --paper-checkbox-label: {
            font-size: 22px;
            line-height: 32px;
          }
          --paper-input-container-invalid-color: var(
            --simple-colors-red-foreground3
          );
          --secondary-text-color: #ffffff;
          --primary-text-color: #ffffff;
          --primary-color: #ffffff;
          --paper-input-container-input-color: #ffffff;
          --paper-input-container-color: #ffffff !important;
          --paper-input-container-focus-color: var(
            --simple-colors-default-theme-light-green-1
          ) !important;
          --paper-listbox-color: #000000;
        }
        .preview-buttons paper-button {
          min-width: unset;
          width: 40%;
          color: #000000;
          display: inline-block;
          background-color: var(--simple-colors-default-theme-light-green-1);
        }
      </style>
    </custom-style>
    <vaadin-split-layout class="panel-wrapper">
      <!-- critique panel -->
      <div class="vaadin-split-layout-panel">
        <div class="preview-buttons">
          <paper-button id="insert" raised on-click="insert"
            >[[editTitle]]</paper-button
          >
          <paper-button id="cancel" raised on-click="cancel"
            >Cancel</paper-button
          >
        </div>
        <div class="preview-text">
          <iron-icon icon="icons:arrow-drop-down"></iron-icon
          ><iron-icon icon="icons:arrow-drop-down"></iron-icon
          ><iron-icon icon="icons:arrow-drop-down"></iron-icon>[[humanName]]
          preview<iron-icon icon="icons:arrow-drop-down"></iron-icon
          ><iron-icon icon="icons:arrow-drop-down"></iron-icon
          ><iron-icon icon="icons:arrow-drop-down"></iron-icon>
        </div>
        <div id="preview"></div>
        <div class="preview-text preview-text-bottom">
          <iron-icon icon="icons:arrow-drop-up"></iron-icon
          ><iron-icon icon="icons:arrow-drop-up"></iron-icon
          ><iron-icon icon="icons:arrow-drop-up"></iron-icon>end
          preview<iron-icon icon="icons:arrow-drop-up"></iron-icon
          ><iron-icon icon="icons:arrow-drop-up"></iron-icon
          ><iron-icon icon="icons:arrow-drop-up"></iron-icon>
        </div>
      </div>
      <div class="vaadin-split-layout-panel">
        <paper-tabs
          hidden\$="[[!haspreviewNode]]"
          id="modetabs"
          selected="{{modeTab}}"
          attr-for-selected="data-mode"
        >
          <paper-tab id="configurebutton" data-mode="configure"
            ><paper-button raised="" noink=""
              >Configure</paper-button
            ></paper-tab
          >
          <paper-tab id="advancedbutton" data-mode="advanced"
            ><paper-button raised="" noink="">Advanced</paper-button></paper-tab
          >
        </paper-tabs>
        <paper-card class="form-wrapper">
          <eco-json-schema-object
            id="form"
            schema="[[schema]]"
            value="{{value}}"
          ></eco-json-schema-object>
        </paper-card>
      </div>
    </vaadin-split-layout>
  `,is:"hax-preview",observers:["_valueChanged(value.*, formKey)"],properties:{previewNode:{type:Object,value:{},observer:"_previewNodeChanged"},value:{type:Object,notify:!0,value:{}},modeTab:{type:String,value:"configure",observer:"_editorModeChanged"},editTitle:{type:String,value:"Update"},element:{type:Object,observer:"_elementChanged"},haspreviewNode:{type:Boolean,computed:"_computedHasPreviewNode(previewNode)"},schema:{type:Object,value:{schema:{}}},advancedForm:{type:Boolean,value:!1},canEditSource:{type:Boolean,computed:"_computedEditSource(formKey)"},formKey:{type:String,computed:"_computedFormKey(advancedForm)",observer:"_formKeyChanged"},humanName:{type:String}},cancel:function(a){window.HaxStore.instance.haxManager.cancel(a)},insert:function(a){window.HaxStore.instance.haxManager.insertHaxElement(a)},_computedHasPreviewNode:function(a){return typeof a.tagName!=="undefined"},_computedEditSource:function(a){return typeof a!=="undefined"&&"undefined"!==typeof this.previewNode.tagName&&window.HaxStore.instance.elementList[this.previewNode.tagName.toLowerCase()]?window.HaxStore.instance.elementList[this.previewNode.tagName.toLowerCase()].canEditSource:!0},_computedFormKey:function(a){return a?"advanced":"configure"},_formKeyChanged:function(a,b){if(typeof b!==typeof void 0){var c={};if(typeof this.previewNode!=="undefined"&&typeof this.previewNode.tagName!=="undefined"&&typeof window.HaxStore.instance.elementList[this.previewNode.tagName.toLowerCase()]!=="undefined"){let h=this.element,j=window.HaxStore.instance.elementList[this.previewNode.tagName.toLowerCase()];for(var d in c="function"===typeof this.previewNode.getHaxJSONSchemaType?window.HaxStore.instance.getHaxJSONSchema(a,j,this.previewNode):window.HaxStore.instance.getHaxJSONSchema(a,j),h.properties)if(h.properties.hasOwnProperty(d)){if("undefined"!==typeof c.properties[d]&&(c.properties[d].value=h.properties[d],"undefined"!==typeof c.properties[d].component&&(c.properties[d].component.properties.value=h.properties[d]),null!=h.properties[d]&&!h.properties[d].readOnly))try{this.previewNode.set(d,h.properties[d])}catch(k){console.log(k)}this.set("value."+d,h.properties[d])}for(var f in j.settings[a]){let k=this.previewNode;if(typeof j.settings[this.formKey][f].slot!=="undefined")for(var g in dom(k).getEffectiveChildNodes())"undefined"!==typeof dom(k).getEffectiveChildNodes()[g]&&1===dom(k).getEffectiveChildNodes()[g].nodeType&&dom(k).getEffectiveChildNodes()[g].slot===j.settings[this.formKey][f].slot&&"undefined"!==typeof dom(k).getEffectiveChildNodes()[g].innerHTML&&(c.properties[j.settings[this.formKey][f].slot].value=dom(k).getEffectiveChildNodes()[g].innerHTML,this.set("value."+j.settings[this.formKey][f].slot,dom(k).getEffectiveChildNodes()[g].innerHTML))}}this.set("schema",{}),this.set("schema",c)}},_previewNodeChanged:function(a,b){if(typeof b!==typeof void 0&&a!=b&&"undefined"!==typeof a.tagName&&"undefined"!==typeof window.HaxStore.instance.elementList[a.tagName.toLowerCase()]){let g=this.element,h=window.HaxStore.instance.elementList[a.tagName.toLowerCase()],j={};for(var c in j="function"===typeof a.getHaxJSONSchemaType?window.HaxStore.instance.getHaxJSONSchema(this.formKey,h,a):window.HaxStore.instance.getHaxJSONSchema(this.formKey,h),this.humanName="undefined"===typeof h.gizmo.title?a.tagName.replace("-"," ").toLowerCase():h.gizmo.title,g.properties)if(g.properties.hasOwnProperty(c)){if("undefined"!==typeof j.properties[c]&&(j.properties[c].value=g.properties[c],"undefined"!==typeof j.properties[c].component&&(j.properties[c].component.properties.value=g.properties[c])),null!=g.properties[c]&&!g.properties[c].readOnly)try{a.set(c,g.properties[c])}catch(k){}this.set("value."+c,g.properties[c])}for(var c in a)a.hasOwnProperty(c)&&"undefined"!==typeof j.properties[c]&&"undefined"!==typeof a[c].value&&null!==a[c].value&&(j.properties[c].value=a.properties[c].value,"undefined"!==typeof j.properties[c].component&&(j.properties[c].component.properties.value=a.properties[c].value),this.set("value."+c,a.properties[c].value));for(var d in h.settings[this.formKey])if("undefined"!==typeof h.settings[this.formKey][d].slot)for(var f in dom(a).getEffectiveChildNodes())"undefined"!==typeof dom(a).getEffectiveChildNodes()[f]&&1===dom(a).getEffectiveChildNodes()[f].nodeType&&dom(a).getEffectiveChildNodes()[f].slot===h.settings[this.formKey][d].slot&&"undefined"!==typeof dom(a).getEffectiveChildNodes()[f].innerHTML&&(j.properties[h.settings[this.formKey][d].slot].value=dom(a).getEffectiveChildNodes()[f].innerHTML,this.set("value."+h.settings[this.formKey][d].slot,dom(a).getEffectiveChildNodes()[f].innerHTML));this.set("schema",{}),this.set("schema",j)}},_elementChanged:function(a){if(typeof a!=="undefined"&&0<Object.keys(a).length){let f=this.$.preview;if(window.HaxStore.wipeSlot(f,"*"),this.set("previewNode",{}),this.modeTab="configure",null!=a&&0!=a.length){var c=document.createElement(a.tag);c.innerHTML=a.content;var d=c.cloneNode(!0);f.appendChild(d),setTimeout(()=>{this.set("previewNode",d)},100)}}else this.modeTab="advanced",this.set("previewNode",{})},_valueChanged:function(){let a=this.previewNode;if(typeof a.tagName!==typeof void 0&&typeof window.HaxStore.instance.elementList[a.tagName.toLowerCase()]!==typeof void 0){let d=window.HaxStore.instance.elementList[a.tagName.toLowerCase()];for(var b in d.settings[this.formKey])if(d.settings[this.formKey].hasOwnProperty(b)&&typeof d.settings[this.formKey][b].property!==typeof void 0&&typeof this.value[d.settings[this.formKey][b].property]!==typeof void 0)!0===this.value[d.settings[this.formKey][b].property]?a[d.settings[this.formKey][b].property]=!0:!1===this.value[d.settings[this.formKey][b].property]?a[d.settings[this.formKey][b].property]=!1:null!=this.value[d.settings[this.formKey][b].property]&&this.value[d.settings[this.formKey][b].property].constructor===Array?a.set(d.settings[this.formKey][b].property,window.HaxStore.toArray(this.value[d.settings[this.formKey][b].property])):null!=this.value[d.settings[this.formKey][b].property]&&this.value[d.settings[this.formKey][b].property].constructor===Object?a.set(d.settings[this.formKey][b].property,this.value[d.settings[this.formKey][b].property]):a.set(d.settings[this.formKey][b].property,this.value[d.settings[this.formKey][b].property]),this.set("element.properties."+d.settings[this.formKey][b].property,this.value[d.settings[this.formKey][b].property]);else if(d.settings[this.formKey].hasOwnProperty(b)&&typeof d.settings[this.formKey][b].attribute!==typeof void 0&&typeof this.value[d.settings[this.formKey][b].attribute]!==typeof void 0){let f=window.HaxStore.camelToDash(d.settings[this.formKey][b].attribute);!0===this.value[d.settings[this.formKey][b].attribute]?a.setAttribute(f,f):!1===this.value[d.settings[this.formKey][b].attribute]?a.removeAttribute(f):"inner-text"===f?(a.innerText=this.value[d.settings[this.formKey][b].attribute],a.removeAttribute("innertext")):null!==this.value[d.settings[this.formKey][b].attribute]&&"null"!==this.value[d.settings[this.formKey][b].attribute]&&a.setAttribute(f,this.value[d.settings[this.formKey][b].attribute]),"inner-text"!==f&&null!==this.value[d.settings[this.formKey][b].attribute]&&"null"!==this.value[d.settings[this.formKey][b].attribute]&&this.set("element.properties."+d.settings[this.formKey][b].attribute,this.value[d.settings[this.formKey][b].attribute])}else if(typeof d.settings[this.formKey][b].slot!==typeof void 0&&typeof this.value[d.settings[this.formKey][b].slot]!==typeof void 0){let f="span";"code-editor"===a.tagName.toLowerCase()&&(f="template");var c=document.createElement(f);""!==d.settings[this.formKey][b].slot&&(c.slot=d.settings[this.formKey][b].slot),c.innerHTML=this.value[d.settings[this.formKey][b].slot],window.HaxStore.wipeSlot(a,d.settings[this.formKey][b].slot),dom(a).appendChild(c),this.set("element.content","<template>"+c.innerHTML+"</template>")}else;}},_editorModeChanged:function(a){a&&("advanced"===a?this.advancedForm=!0:this.advancedForm=!1)}});