import{html,PolymerElement}from"../../../@polymer/polymer/polymer-element.js";import"../../simple-colors/simple-colors.js";import"./hax-shared-styles.js";class HaxAppSearchResult extends PolymerElement{constructor(){super(),import("../../../@polymer/iron-image/iron-image.js"),import("../../../@polymer/paper-button/paper-button.js"),import("../../../@polymer/paper-styles/paper-styles.js")}static get template(){return html`
      <style include="hax-shared-styles">
        :host {
          display: inline-flex;
          width: 50%;
          background-color: var(--hax-color-bg-accent);
          color: var(--hax-color-text);
        }
        paper-button.button {
          margin: 0;
          padding: 7px;
          height: 168px;
          border-radius: 0;
          width: 100%;
          border: 1px solid var(--hax-color-border-outline);
          justify-content: flex-start;
          background-image: none;
          text-align: unset;
          display: flex;
        }
        paper-button:hover,
        paper-button:focus,
        paper-button:active {
          outline: 2px solid var(--hax-color-bg-accent1);
        }
        .detail-wrapper {
          padding: 0 8px;
          display: inline-block;
          height: 100%;
          width: calc(80% - 16px);
          overflow: hidden;
          font-family: "Noto Serif", serif;
        }
        .title {
          font-size: 16px;
          font-weight: bold;
          text-transform: none;
          padding-bottom: 4px;
        }
        .details {
          height: 100px;
          overflow: hidden;
          font-size: 12px;
          line-height: 16px;
          padding: 0;
          margin: 0;
          text-transform: none;
        }
        .image {
          display: inline-flex;
          height: 152px;
          width: 20%;
          background-color: lightgray;
        }
        @media screen and (max-width: 1000px) {
          :host {
            width: 100%;
          }
          .title {
            font-size: 12px;
          }
          .image {
            min-width: 160px;
            width: 160px;
          }
          .details {
            font-size: 10px;
          }
        }
        @media screen and (max-width: 600px) {
          .details {
            font-size: 8px;
          }
        }
      </style>

      <paper-button on-click="_itemSelected" class="button">
        <iron-image
          alt=""
          class="image"
          src="[[resultData.image]]"
          preload=""
          fade=""
          sizing="cover"
        ></iron-image>
        <div class="detail-wrapper">
          <div class="title">[[resultData.title]]</div>
          <div class="details">[[resultData.details]]</div>
        </div>
      </paper-button>
    `}static get tag(){return"hax-app-search-result"}static get properties(){return{resultData:{type:Object}}}_itemSelected(e){var map=this.resultData.map,gizmoType=this.resultData.type;null!==gizmoType&&""!==gizmoType||void 0===map.source||(gizmoType=window.HaxStore.guessGizmoType(map.source));let haxElements=window.HaxStore.guessGizmo(gizmoType,map);haxElements.length>0?1===haxElements.length?void 0!==haxElements[0].tag&&window.HaxStore.write("activeHaxElement",haxElements[0],this):window.HaxStore.instance.haxAppPicker.presentOptions(haxElements,gizmoType,"How would you like to display this "+gizmoType+"?","gizmo"):window.HaxStore.toast("Sorry, I don't know how to handle that link yet.")}}window.customElements.define(HaxAppSearchResult.tag,HaxAppSearchResult);export{HaxAppSearchResult};