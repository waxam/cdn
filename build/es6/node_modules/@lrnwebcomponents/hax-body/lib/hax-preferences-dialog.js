import{html as e,css as t}from"../../../lit-element/lit-element.js";import{SimpleColors as i}from"../../simple-colors/simple-colors.js";import{winEventsElement as o}from"../../utils/utils.js";import{HaxSchematizer as s,HaxElementizer as a}from"../../hax-body-behaviors/lib/HAXFields.js";class HaxPreferencesDialog extends(o(i)){static get styles(){return[...super.styles,t`
        :host {
          display: block;
        }
        iron-icon:not(:defined),
        paper-button:not(:defined),
        paper-dialog:not(:defined) {
          display: none;
        }
        #dialog {
          z-index: 100000;
          margin-top: 56px;
        }
        #closedialog {
          top: 6px;
          right: 0;
          position: absolute;
          padding: 8px;
          margin: 0;
          background-color: var(--hax-color-menu-heading-bg, #eeeeee);
          color: var(--hax-color-menu-heading-color, black);
          width: 40px;
          height: 40px;
          min-width: unset;
        }
        .title {
          position: relative;
          padding: 16px;
          outline: 0;
          font-weight: 600;
          text-align: left;
          margin: 0;
          background-color: var(--hax-color-menu-heading-bg, #eeeeee);
          color: var(--hax-color-menu-heading-color, black);
          font-size: 18px;
          line-height: 18px;
          font-family: "Noto Serif", serif;
        }
        .pref-container {
          text-align: left;
          padding: 16px;
        }
        #reportghissue {
          color: #81a3a9;
          font-size: 18px;
          padding: 16px;
          font-style: italic;
        }
      `]}constructor(){super(),this.__winEvents={"hax-store-property-updated":"_haxStorePropertyUpdated"},this.ghLink="https://github.com/elmsln/issues/issues/new?body=URL%20base:%20"+window.location.pathname+"&title=[hax] Bug%20report%20from%20preference%20panel",this.title="Advanced settings",this.schema=[{property:"haxRayMode",title:"X-Ray vision",description:"Visualizes the HTML tag powering the area of the page",inputMethod:"boolean",value:!1},{property:"haxVoiceCommands",title:"Voice commands",description:"Experimental: Voice based control system",inputMethod:"boolean",value:!1}],this.schemaValues={haxRayMode:!1,haxVoiceCommands:!1},setTimeout(()=>{import("../../../@polymer/iron-icon/iron-icon.js"),import("../../../@polymer/paper-button/paper-button.js"),import("../../simple-fields/simple-fields.js"),import("../../../@polymer/paper-dialog/paper-dialog.js")},0)}updated(e){e.forEach((e,t)=>{"preferences"==t&&(this._preferencesChanged(this[t]),this.dispatchEvent(new CustomEvent(`${t}-changed`,{detail:{value:this[t]}})))})}render(){return e`
      <paper-dialog
        id="dialog"
        ?opened="${this.opened}"
        @opened-changed="${this.openedChanged}"
      >
        <h3 class="title">
          <iron-icon icon="icons:settings"></iron-icon> ${this.title}
        </h3>
        <paper-button id="closedialog" @click="${this.closeEvent}">
          <iron-icon icon="icons:cancel" title="Close dialog"></iron-icon>
        </paper-button>
        <div style="height: 100%; overflow: auto;" class="pref-container">
          <simple-fields
            id="settingsform"
            .schematizer="${s}"
            .elementizer="${a}"
          >
          </simple-fields>
        </div>
        <a
          href="${this.ghLink}"
          rel="noopener"
          id="reportghissue"
          target="_blank"
          >Report an issue with HAX</a
        >
      </paper-dialog>
    `}openedChanged(e){e.detail.value||window.HaxStore.instance.openDrawer!==this||window.HaxStore.write("openDrawer",!1,this)}closeEvent(e){this.opened=!1}static get tag(){return"hax-preferences-dialog"}static get properties(){return{ghLink:{type:String},title:{type:String},schema:{type:Object},preferences:{type:Object},opened:{type:Boolean}}}firstUpdated(e){this.shadowRoot.querySelector("#settingsform").fields=[...this.schema],this.shadowRoot.querySelector("#settingsform").value={...this.schemaValues},this.shadowRoot.querySelector("#settingsform").addEventListener("value-changed",this.__valueChangedEvent.bind(this)),this.dispatchEvent(new CustomEvent("hax-register-core-piece",{bubbles:!0,cancelable:!0,composed:!0,detail:{piece:"haxPreferences",object:this}}))}_haxStorePropertyUpdated(e){e.detail&&void 0!==e.detail.value&&e.detail.property&&"globalPreferences"===e.detail.property&&e.detail.owner!==this&&(this.preferences={...e.detail.value})}_preferencesChanged(e){this.schema&&window.HaxStore.ready&&window.HaxStore.write("globalPreferences",e,this)}__valueChangedEvent(e){e.detail.value&&(this.preferences={...e.detail.value})}open(){this.opened=!0,this.shadowRoot.querySelector("#settingsform").fields=[...this.schema],this.shadowRoot.querySelector("#settingsform").value={...this.schemaValues}}close(){this.opened=!1}}window.customElements.define(HaxPreferencesDialog.tag,HaxPreferencesDialog);export{HaxPreferencesDialog};