import{LitElement as t,html as e,css as i}from"../../../lit-element/lit-element.js";import"./hax-toolbar-item.js";import"../../simple-icon/lib/simple-icon-lite.js";import{HAXStore as n}from"./hax-store.js";class HaxContextItem extends t{constructor(){super(),this.haxUIElement=!0,this.simple=!1,this.danger=!1,this.light=!1,this.action=!1,this.large=!1,this.disabled=!1,this.more=!1,this.mini=!1,this.menu=!1,this.direction="top",this.icon="editor:text-fields",this.iconClass="",this.label="",this.eventName="button",this.inputMethod=null,this.propertyToBind=null,this.slotToBind=null,this.default=!1,this.value=""}static get styles(){return[i`
        :host {
          display: inline-flex;
        }
        simple-icon-lite {
          width: 10px;
        }
        :host([menu]) {
          display: flex;
        }
      `]}render(){return e`
      <hax-toolbar-item
        ?simple="${this.simple}"
        ?disabled="${this.disabled}"
        ?light="${this.light}"
        ?circle="${this.circle}"
        ?danger="${this.danger}"
        ?action="${this.action}"
        ?mini="${this.mini}"
        ?large="${this.large}"
        id="button"
        .height="${this.height}"
        icon="${this.icon}"
        ?hidden="${!this.icon}"
        icon-class="${this.iconClass}"
        @mousedown="${this._storeSelection}"
        @click="${this._fireEvent}"
        tooltip="${this.label}"
        tooltip-direction="${this.direction}"
        ?default="${this.default}"
        ?menu="${this.menu}"
      >
        ${this.more&&!this.disabled?e` <simple-icon-lite icon="hax:expand-more"></simple-icon-lite> `:""}
        <slot></slot>
      </hax-toolbar-item>
    `}static get tag(){return"hax-context-item"}static get properties(){return{light:{type:Boolean},simple:{type:Boolean,reflect:!0},circle:{type:Boolean},danger:{type:Boolean},more:{type:Boolean},action:{type:Boolean},height:{type:String},disabled:{type:Boolean,reflect:!0},mini:{type:Boolean},menu:{type:Boolean},direction:{type:String},icon:{type:String,reflect:!0},iconClass:{type:String,reflect:!0,attribute:"icon-class"},label:{type:String,reflect:!0},eventName:{type:String,reflect:!0,attribute:"event-name"},inputMethod:{type:String,reflect:!0,attribute:"input-method"},propertyToBind:{type:String,reflect:!0,attribute:"property-to-bind"},slotToBind:{type:String,reflect:!0,attribute:"slot-to-bind"},description:{type:String,reflect:!0},large:{type:Boolean,reflect:!0},default:{type:Boolean},value:{type:String}}}_storeSelection(t){this.disabled||(n._tmpSelection=n.getSelection())}_fireEvent(t){this.disabled||this.dispatchEvent(new CustomEvent("hax-context-item-selected",{bubbles:!0,cancelable:!0,composed:!0,detail:{target:this,eventName:this.eventName,value:this.value}}))}}window.customElements.define(HaxContextItem.tag,HaxContextItem);export{HaxContextItem};