import{LitElement as t,html as e,css as a}from"../../lit-element/lit-element.js";class LoremData extends t{static get styles(){return[a`
        :host {
          display: block;
          font-size: var(--lorem-data-FontSize, 14px);
          line-height: var(--lorem-data-LineHeight, 160%);
          color: var(--lorem-data-Color, #95989a);
        }
        :host([hidden]) {
          display: none;
        }
        #threads {
          background-color: var(--lorem-data-threads-BackgroundColor, #eaeaea);
          padding: 1px;
          width: calc(100% - 2px);
          margin: var(--lorem-data-threads-Margin, 0);
        }
        #new-thread {
          background-color: var(
            --lorem-data-new-thread-BackgroundColor,
            var(--lorem-data-threads-BackgroundColor, #eaeaea)
          );
          padding: 2px 1px;
          width: calc(100% - 2px);
          margin: var(
            --lorem-data-new-thread-Margin,
            var(--lorem-data-threads-Margin, 0)
          );
        }
        .thread:focus-within,
        #new-thread:focus-within {
          border-left: var(
            --lorem-data-thread-focus-BorderLeft,
            4px solid blue
          );
        }
        #new-thread:focus-within {
          border-left: var(--lorem-data-new-thread-focus-BorderLeft);
        }
        .thread > *,
        #new-thread > * {
          background-color: var(--lorem-data-comment-BackgroundColor, #fff);
        }
        .comment {
          margin: 1px 1px 0;
          padding: var(--lorem-data-comment-Padding, 10px) 0;
        }
        .reply-form {
          margin: 0;
          width: calc(
            100% -
              var(
                --lorem-data-reply-indent,
                calc(2 * var(--lorem-data-comment-Padding, 10px))
              )
          );
        }
        .reply-form,
        .comment-reply {
          margin-left: var(
            --lorem-data-reply-indent,
            calc(2 * var(--lorem-data-comment-Padding, 10px))
          );
        }
        .comment-header {
          display: flex;
          align-items: stretch;
          justify-content: space-between;
          margin-bottom: var(--lorem-data-comment-Padding, 10px);
        }
        .comment-header,
        .comment-body {
          padding: 0 var(--lorem-data-comment-Padding, 10px);
        }
        lrndesign-avatar {
          margin-right: var(--lorem-data-comment-Padding, 10px);
        }
        .comment-header > div {
          display: flex;
          flex-direction: column;
          justify-content: space-evenly;
          align-items: flex-start;
          flex: 1 1 auto;
        }
        .comment-name {
          margin: 0;
          font-size: var(
            --lorem-data-name-FontSize,
            calc(1.1 * var(--lorem-data-FontSize, 14px))
          );
          font-weight: var(--lorem-data-name-FontWeight, bold);
          font-family: var(--lorem-data-name-FontFamily);
          color: var(--lorem-data-name-Color, #4b4b4b);
        }
        .comment-date {
          margin: 0;
          font-size: var(
            --lorem-data-date-FontSize,
            calc(0.8 * var(--lorem-data-FontSize, 14px))
          );
          font-weight: var(--lorem-data-date-FontWeight, normal);
          font-family: var(--lorem-data-date-FontFamily);
          color: var(--lorem-data-date-Color, var(--lorem-data-Color, #95989a));
        }
        .comment-body {
          font-size: var(--lorem-data-FontSize, 14px);
        }
      `]}render(){return e`
      <slot name="before-discussion"></slot>
      ${this.latest?"":this.threads}
      <div id="new-thread">
        <slot name="before-new-thread"></slot>
        <lorem-data-form
          button-label="${this.commentButtonLabel||"Submit"}"
          class="comment-form"
          @comment-demo="${this._handleDemo}"
          @comment-submitted="${this._handleSubmit}"
          ?demo="${this.demo}"
          field="${this.map.body||"body"}"
          .icon="${this.commentIcon}"
          ?hidden="${this.hidden}"
          ?disabled="${this.disabled}"
          .submit="${this._getPath(this.submit,this.params)}"
          textarea-label="${this.commentTextareaLabel||"Enter comment"}"
        >
        </lorem-data-form>
        <slot name="after-new-thread"></slot>
      </div>
      ${this.latest?this.threads:""}
      <slot name="after-discussion"></slot>
    `}get threads(){return e`
      <div id="threads">
        <div class="thread" ?hidden="${!this.__loading}">
          ${this.loadingText}
        </div>
        ${this.sortData(this.__data).map(t=>e`
            <div class="thread">
              ${this.getComment(t)}
              ${(t.replies||[]).map(e=>this.getComment(e,t.id))}
              <lorem-data-form
                button-label="${this.replyButtonLabel||"Reply"}"
                class="reply-form"
                @comment-demo="${this._handleDemo}"
                @comment-submitted="${this._handleSubmit}"
                ?demo="${this.demo}"
                field="${this.map.replyBody||this.map.body||"body"}"
                ?disabled="${this.disabled}"
                ?hidden="${this.hidden}"
                .icon="${this.replyIcon}"
                .submit="${this._getPath(this.submit,this._getThreadParams(t.id))}"
                textarea-label="${this.replyTextareaLabel||"Enter reply"}"
                .thread="${t.id}"
              >
              </lorem-data-form>
            </div>
          `)}
      </div>
    `}getComment(t,a){return e`
      <div
        aria-describedby="${a||""}"
        class="comment ${a?"comment-reply":""}"
        id="comment-${t.id}"
      >
        <div class="comment-header">
          <lrndesign-avatar
            .accent-color="${t.color}"
            .label="${t.firstName} ${t.lastName}"
            .src="${t.avatar}"
            two-chars
          >
          </lrndesign-avatar>
          <div>
            <p class="comment-name">${t.firstName} ${t.lastName}</p>
            <p class="comment-date">${this._getDate(t.date)}</p>
          </div>
        </div>
        <div class="comment-body">
          ${(t.body||"").split(/[\r\n]+/).map(t=>e`
                <p>${t}</p>
              `)}
        </div>
      </div>
    `}static get tag(){return"lorem-data"}static get properties(){return{latest:{type:Boolean,attribute:"latest",reflect:!0},commentButtonLabel:{type:String,attribute:"comment-button-label"},commentTextareaLabel:{type:String,attribute:"comment-textarea-label"},commentIcon:{type:String,attribute:"comment-icon"},data:{type:Object},dateLocale:{type:String},dateFormat:{type:Object},demo:{type:Boolean},loadingText:{type:String,attribute:"loading-text"},map:{type:Object},params:{type:Object},replyButtonLabel:{type:String,attribute:"reply-button-label",reflect:!0},replyTextareaLabel:{type:String,attribute:"reply-textarea-label",reflect:!0},replyIcon:{type:String,attribute:"reply-icon",reflect:!0},source:{type:String},submit:{type:String},__data:{type:Array},__loading:{type:Boolean}}}constructor(){super(),this.latest=!1,this.data=[],this.dateLocale="en-US",this.dateFormat={year:"numeric",month:"long",day:"numeric",hour:"numeric",minute:"2-digit"},this.demo=!1,this.map={},this.params={},this.submit=window.location.href,this.__data=[],this.__loading=!1,import("../lrndesign-avatar/lrndesign-avatar.js"),import("../../@polymer/iron-icon/iron-icon.js"),import("../../@polymer/iron-icons/iron-icons.js"),import("./lib/lorem-data-form.js")}updated(t){super.updated&&super.updated(t),t.forEach((t,e)=>{["params","source"].includes(e)&&this.source&&(this.__loading=!0,this.fetchDiscussion())})}sortData(t){return t.sort((t,e)=>this.latest?t.date-e.date:e.date-t.date)}_handleRawData(t){return this.__loading=!1,this._getArray(t||[]).filter(t=>!this._getMap(t,"thread","replyThread")).map(e=>{let a=this._getMap(e,"id"),r=this._getMap(e,"replies")||(t||[]).filter(t=>this._getMap(t,"thread","replyThread")===a);return{id:a,firstName:this._getMap(e,"firstName"),lastName:this._getMap(e,"lastName"),avatar:this._getMap(e,"avatar"),body:this._getMap(e,"body"),color:this._getMap(e,"color"),date:this._getMap(e,"date"),replies:this._getArray(r).map(t=>({id:this._getMap(t,"id","replyId"),thread:this._getMap(t,"thread","replyThread")||a,firstName:this._getMap(t,"firstName","replyFirstName"),lastName:this._getMap(t,"lastName","replyLastName"),avatar:this._getMap(t,"avatar","replyAvatar"),body:this._getMap(t,"body","replyBody"),color:this._getMap(t,"color","replyColor"),date:this._getMap(t,"date","replyDate")}))}})}_getMap(t,e,a,r){return t[this._mapProp(e,a,r)]}_mapProp(t,e,a){let r=this.map||{};return e=e||t,r[a=a||e]||r[e]||t}_handleSubmit(t){this.fetchDiscussion()}_handleDemo(t){if(t.detail&&t.detail.textarea){let e={},a=this.__data;if(e.id=`comment-${Date.now()}`,e.firstName="DEMO",e.lastName="USER",e.date=this._getDate(new Date),e.body=t.detail.textarea.value,t.detail.thread){let r=a.filter(e=>e.id===t.detail.thread),i=r?r[0]:void 0;e.thread=t.detail.thread,i?i.replies=[...i.replies,e]:a.push(e)}else e.replies=[],a.push(e);this.__data=[],this.__data=a,t.detail.textarea.value=""}}fetchDiscussion(){fetch(this._getPath(this.source,this.params)).then(t=>t.json()).then(t=>this.__data=this._handleRawData(t))}_getArray(t){return"array"==typeof t?t:Object.keys(t||{}).map(e=>{let a=t[e];return a.id=e,a})}_getDate(t){let e="string"==typeof this.dateFormat?JSON.parse(this.dateFormat):this.dateFormat;return t&&new Date(t)?new Date(t).toLocaleString(this.dateLocale,e):""}_getThreadParams(t){let e=this.params;return e[this._mapProp("id")]=t,e}_getPath(t,e){let a=Object.keys(e||{}).map(t=>`${encodeURI(t)}=${encodeURI(e[t])}`).join("&");return a?`${t}?${a}`:t}}window.customElements.define(LoremData.tag,LoremData);export{LoremData};