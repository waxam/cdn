import{html,PolymerElement}from"../../@polymer/polymer/polymer-element.js";import{afterNextRender}from"../../@polymer/polymer/lib/utils/render-status.js";import{HAXWiring}from"../hax-body-behaviors/lib/HAXWiring.js";import{pathFromUrl}from"../../@polymer/polymer/lib/utils/resolve-url.js";import"../es-global-bridge/es-global-bridge.js";import"../../@polymer/iron-ajax/iron-ajax.js";import"../../@polymer/polymer/lib/elements/dom-repeat.js";class RssItems extends PolymerElement{static get template(){return html`
<style>:host([hidden]) {
  display: none;
}
:host {
  display: flex;
  flex-wrap: wrap;
  flex-direction: row;
  align-items: flex-start;
  justify-content: space-between;
  @apply --rss-items;
}

:host * {
  box-sizing: border-box;
}

h3,
p {
  margin: 0;
}

a {
  color: var(--primary-color, inherit);
  text-decoration: none;
}

article {
  margin-bottom: 2em;

  @apply --rss-items-article;
}

.thumbnail-container {
  display: block;
  overflow: hidden;
  width: 100%;
  height: 180px;

  @apply --rss-items-thumbnail-container;
}

.thumbnail {
  width: 100%;
  height: 100%;
  transition: transform .5s ease-out;

  @apply --rss-items-thumbnail;
}

.thumbnail-container:hover .thumbnail,
.thumbnail-container:focus .thumbnail {
  transform: scale3d(1.3, 1.3, 1);

  @apply --rss-items-thumbnail-hover;
}

.title {
  min-height: 3em;
  margin: 1em 0 .5em;

  @apply --rss-items-title;
}

.excerpt {
  min-height: 6em;
  margin: .5em 0 2em;

  @apply --rss-items-excerpt;
}

@media (max-width: 599px) {
  .title,
  .excerpt {
    min-height: 0;
  }
}

@media (min-width: 600px) {
  article {
    flex: 1 1 40%;
    margin-right: 2em;

    @apply --rss-items-article-mq-m-up;
  }

  article:nth-of-type(2n),
  article:last-of-type {
    margin-right: 0;
  }
}

@media (min-width: 900px) {
  article {
    flex: 1 1 30%;

    @apply --rss-items-article-mq-l-up;
  }

  article:nth-of-type(2n) {
    margin-right: 2em;
  }

  article:nth-of-type(3n) {
    margin-right: 0;
  }
}</style>
<iron-ajax id="rssajax" url="[[url]]" handle-as="xml" last-response="{{xml}}"></iron-ajax>
<dom-repeat items="[[items]]">
  <template>
  <article>
    <a class="thumbnail-container" href="[[item.link]]" title="[[item.title]]">
      <iron-image class="thumbnail" src="[[item.imageSrc]]" alt="[[item.title]]" sizing="cover"></iron-image>
    </a>
    <a href="[[item.link]]" title="[[item.title]]">
      <span class="title">[[_truncateText(item.title, maxTitleLength)]]</span>
    </a>
    <div class="excerpt">[[_truncateText(item.excerpt, maxExcerptLength)]]</div>
    <template is="dom-if" if="[[showReadMore]]">
      <a tabindex="-1" href="[[item.link]]" class="read-more" title="[[item.title]]">[[readMoreAnchorText]]
        <paper-icon-button icon="icons:arrow-forward" class="read-more-icon" alt="[[readMoreImageAlt]]"></paper-icon-button>
      </a>
    </template>
  </article>
  </template>
</dom-repeat>`}static get haxProperties(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"Rss feed",description:"visualize RSS items",icon:"communication:rss-feed",color:"orange",groups:["RSS"],handles:[{type:"rss",source:"source"}],meta:{author:"btopro",owner:"The Pennsylvania State University"}},settings:{quick:[],configure:[{property:"url",title:"Feed URL",description:"URL to the XML feed",inputMethod:"textfield"},{property:"max",title:"Max items",description:"Max number of feed items to display",inputMethod:"number"}],advanced:[]}}}static get properties(){let props={auto:{type:Boolean,value:!1},items:{type:Array,notify:!0},max:{type:Number,value:10,observer:"_maxChanged"},maxExcerptLength:{type:Number,value:100},maxTitleLength:{type:Number,value:50},readMoreAnchorText:{type:Boolean,value:"Read more"},readMoreImageAlt:{type:Boolean,value:"Icono de flecha"},showReadMore:{type:Boolean,value:!1},url:{type:String,observer:"_urlChanged"},xml:{type:Object,observer:"xmlToItems"}};return super.properties&&(props=Object.assign(props,super.properties)),props}static get tag(){return"rss-items"}initRequest(){this.shadowRoot.querySelector("#rssajax").generateRequest()}_maxChanged(newValue){newValue&&this.xmlToItems(this.xml)}xmlToItems(newValue){if(newValue){var json=(new X2JS).xml2json(newValue),items=json.rss?json.rss.channel.item:json.channel.item;items=void 0===this.max?items:items.splice(0,this.max),this.items=this._parseItems(items)}}_urlChanged(newValue){newValue&&this._x2js&&this.__ready&&this.initRequest()}_parseItems(items){return items.map(function(item){return item.excerpt=this._getItemExcerpt(item),item.imageSrc=this._getItemImageScr(item),item}.bind(this))}_getItemExcerpt(item){var element=document.createElement("div");return element.innerHTML=item.description,element.textContent.trim()}_getItemImageScr(item){if(item.thumbnail&&item.thumbnail._url)return item.thumbnail._url;var element=document.createElement("div");return element.innerHTML=item.description,(element.querySelector("img")||{}).src||""}_truncateText(text,maxLength){if(text)return maxLength&&text.length>maxLength?text.substr(0,maxLength)+"...":text}constructor(){super(),import("../../@polymer/iron-image/iron-image.js"),import("../../@polymer/paper-icon-button/paper-icon-button.js"),import("../../@polymer/iron-icons/iron-icons.js");const location=`${pathFromUrl(decodeURIComponent(import.meta.url))}lib/x2js.js`;window.ESGlobalBridge.requestAvailability(),window.ESGlobalBridge.instance.load("x2js",location),window.addEventListener("es-bridge-x2js-loaded",this._x2jsLoaded.bind(this))}_x2jsLoaded(e){this._x2js=!0,this.__ready&&(this.auto?this.shadowRoot.querySelector("#rssajax").auto=this.auto:this.initRequest())}connectedCallback(){super.connectedCallback(),this.__ready=!0,afterNextRender(this,function(){this.HAXWiring=new HAXWiring,this.HAXWiring.setup(RssItems.haxProperties,RssItems.tag,this),this._x2js&&(this.auto?this.shadowRoot.querySelector("#rssajax").auto=this.auto:this.initRequest())})}disconnectedCallback(){window.removeEventListener(`es-bridge-${name}-loaded`,this._x2jsLoaded.bind(this)),super.disconnectedCallback()}}window.customElements.define(RssItems.tag,RssItems);export{RssItems};