import{html as t,LitElement as e}from"../../../lit-element/lit-element.js";import{render as i}from"../../../lit-html/lib/render.js";import{unsafeHTML as s}from"../../../lit-html/directives/unsafe-html.js";import"./simple-popover-manager.js";class SimpleTour extends e{constructor(){super(),this.stacks={},this.orientation="lr",this.active=null,this.tourInfo={},this.activeElementDelay=500,this.stop=-1,window.addEventListener("simple-tour-register",this.registerNewTourEvent.bind(this)),window.addEventListener("simple-tour-create-tour-stop",this.createTourStopEvent.bind(this))}registerNewTourEvent(t){this.registerNewTour(t.detail)}registerNewTour(t){return this.stacks[t.key]||(this.stacks[t.key]=[]),this.tourInfo[t.key]||(this.tourInfo[t.key]=t),this.stacks[t.key]}createTourStopEvent(t){this.createTourStop(t.detail.name,t.detail.target,t.detail.title,t.detail.description)}createTourStop(t,e,i,s){let o=new TourStop;return o.target=e,o.title=i,o.description=s,this.addStops(t,[o]),o}removeTarget(t,e){let i=[];this.stacks[t].forEach((t,s)=>{t.target===e&&i.push(s)}),i.forEach(e=>{this.stacks[t].splice(e,1)})}addStops(t,e){this.stacks[t]||(this.stacks[t]=[]),this.stacks[t]=this.stacks[t].concat(e)}hasNext(){return this.stop<this.stacks[this.active].length-1}hasPrev(){return this.stop>0}nextStop(t){this.stop<this.stacks[this.active].length&&(this.stop+=1)}prevStop(t){this.stop>0&&(this.stop-=1)}startTour(t){this.active=t}stopTour(t){window.SimplePopoverManager.requestAvailability().setPopover(this,this,!1,this.orientation),this.stop=-1,this.active=null}tourButtons(){return t` <h3>
        ${this.tourInfo[this.active].name}
        <span style="margin-left:16px"
          >${this.stop+1}/${this.stacks[this.active].length}</span
        >
      </h3>
      <button
        @click="${this.prevStop.bind(this)}"
        ?disabled="${!this.hasPrev()}"
      >
        Previous
      </button>
      <button
        @click="${this.nextStop.bind(this)}"
        ?disabled="${!this.hasNext()}"
      >
        Next</button
      ><button @click="${this.stopTour.bind(this)}">Stop tour</button>`}scrollHere(t){"function"==typeof t.scrollIntoViewIfNeeded?t.scrollIntoViewIfNeeded(!0):t.scrollIntoView({behavior:"smooth",inline:"center"})}managerReset(){this.stopTour()}updated(e){e.forEach((e,o)=>{if("active"==o&&this.active&&(this.stop=0),"stop"==o&&-1!=this.stop||"active"==o&&this.active){i(document.createElement("div"),window.SimplePopoverManager.requestAvailability());let e=t`${this.tourButtons()}
          <h3>
            ${s("<span>"+this.stacks[this.active][this.stop].title+"</span>")}
          </h3>
          ${s("<p>"+this.stacks[this.active][this.stop].description+"</p>")}${this.tourInfo[this.active].style?s("<style>"+this.tourInfo[this.active].style+"</style>"):""}`;i(e,window.SimplePopoverManager.requestAvailability()),window.SimplePopoverManager.requestAvailability().setPopover(this,this.stacks[this.active][this.stop].target,!0,this.orientation),this.scrollHere(this.stacks[this.active][this.stop].target);let o=this.stacks[this.active][this.stop].target,r=this.stacks[this.active][this.stop].target.getAttribute("part");o.setAttribute("part","simple-tour-active"),setTimeout(()=>{null==r||"simple-tour-active"==r?o.removeAttribute("part"):o.setAttribute("part",r)},this.activeElementDelay)}})}static get properties(){return{stop:{type:Number},active:{type:String},stacks:{type:Object},activeElementDelay:{type:Number}}}}class TourStop{constructor(){this.target=null,this.title="Title",this.description="<p>Description</p>"}}customElements.define("simple-tour",SimpleTour);export{SimpleTour,TourStop};window.SimpleTourManager=window.SimpleTourManager||{},window.SimpleTourManager.requestAvailability=()=>(window.SimpleTourManager.instance||(window.SimpleTourManager.instance=document.createElement("simple-tour"),document.body.appendChild(window.SimpleTourManager.instance)),window.SimpleTourManager.instance);export const SimpleTourManager=window.SimpleTourManager.requestAvailability();