import{html as e,LitElement as t,render as i}from"../../../lit/index.js";import{unsafeHTML as o}from"../../../lit/directives/unsafe-html.js";import"./simple-popover-manager.js";class SimplePopoverSelection extends t{constructor(){super(),this.disabled=!1}openedToggle(e){this.disabled||(this.opened=!this.opened)}openedChanged(t){if(t){let t=document.createElement("div");i(t,window.SimplePopoverManager.requestAvailability());let r,n=this.querySelectorAll('[slot="options"]');for(var l in 1===n.length&&n[0].children&&1===n[0].children.length&&"SLOT"===n[0].children[0].tagName&&(n=n[0].children[0].assignedNodes({flatten:!0})),n)if(n[l].cloneNode&&n[l].tagName){let e=n[l].cloneNode(!0);e.removeAttribute("slot"),t.appendChild(e)}if(this.querySelector('[slot="style"]')){let i=this.querySelector('[slot="style"]').cloneNode(!0),l=document.createElement("style");l.innerHTML=i.innerHTML,r=e`${o(t.innerHTML)}${o(l.outerHTML)}`}else r=e`${o(t.innerHTML)}`;i(r,window.SimplePopoverManager.requestAvailability()),setTimeout((()=>{let e=window.SimplePopoverManager.requestAvailability().querySelectorAll("*");for(var t in e)e[t].addEventListener&&e[t].addEventListener("click",this.itemSelect.bind(this));window.SimplePopoverManager.requestAvailability().querySelector("[data-simple-popover-selection-active]")?window.SimplePopoverManager.requestAvailability().querySelector("[data-simple-popover-selection-active]").focus():window.SimplePopoverManager.requestAvailability()&&window.SimplePopoverManager.requestAvailability().querySelector(":first-child")&&window.SimplePopoverManager.requestAvailability().querySelector(":first-child").focus()}),0)}window.SimplePopoverManager.requestAvailability().setPopover(this,this.querySelector('[slot="button"]'),t)}managerReset(){this.opened=!1}updated(e){e.forEach(((e,t)=>{"opened"==t&&this.shadowRoot&&this.openedChanged(this[t])}))}itemSelect(e){this.dispatchEvent(new CustomEvent("simple-popover-selection-changed",{bubbles:!0,detail:e.target})),this.opened=!1,setTimeout((()=>{window.SimplePopoverManager.requestAvailability().setPopover(this,this.querySelector('[slot="button"]'),!1),this.querySelector('[slot="button"]').focus()}),0)}static get properties(){return{opened:{type:Boolean,reflect:!0},disabled:{type:Boolean,reflect:!0}}}firstUpdated(){this.addEventListener("click",this.openedToggle.bind(this))}render(){return e`<slot name="button"></slot>`}}customElements.define("simple-popover-selection",SimplePopoverSelection);export{SimplePopoverSelection};