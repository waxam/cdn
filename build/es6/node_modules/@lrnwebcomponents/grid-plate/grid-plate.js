import{LitElement as e,html as t,css as i}from"../../lit-element/lit-element.js";import"../responsive-utility/responsive-utility.js";class GridPlateLayoutOptions{constructor(){this.resizeTimer=null,this.activeItem=null,this.layouts={1:{columnLayout:"1: full width",xs:["100%"],sm:["100%"],md:["100%"],lg:["100%"],xl:["100%"]},"1-1":{columnLayout:"2: equal width",xs:["100%","100%"],sm:["50%","50%"],md:["50%","50%"],lg:["50%","50%"],xl:["50%","50%"]},"2-1":{columnLayout:"2: wide & narrow",xs:["100%","100%"],sm:["50%","50%"],md:["66.6666667%","33.3333337%"],lg:["66.6666667%","33.3333337%"],xl:["66.6666667%","33.3333337%"]},"1-2":{columnLayout:"2: narrow & wide",xs:["100%","100%"],sm:["50%","50%"],md:["33.3333333%","66.6666667%"],lg:["33.3333333%","66.6666667%"],xl:["33.3333333%","66.6666667%"]},"3-1":{columnLayout:"2: wider & narrower",xs:["100%","100%"],sm:["50%","50%"],md:["75%","25%"],lg:["75%","25%"],xl:["75%","25%"]},"1-3":{columnLayout:"2: narrower & wider",xs:["100%","100%"],sm:["50%","50%"],md:["25%","75%"],lg:["25%","75%"],xl:["25%","75%"]},"1-1-1":{columnLayout:"3: equal width",xs:["100%","100%","100%"],sm:["100%","100%","100%"],md:["33.3333333%","33.3333333%","33.3333333%"],lg:["33.3333333%","33.3333333%","33.3333333%"],xl:["33.3333333%","33.3333333%","33.3333333%"]},"2-1-1":{columnLayout:"3: wide, narrow, and narrow",xs:["100%","100%","100%"],sm:["100%","50%","50%"],md:["50%","25%","25%"],lg:["50%","25%","25%"],xl:["50%","25%","25%"]},"1-2-1":{columnLayout:"3: narrow, wide, and narrow",xs:["100%","100%","100%"],sm:["100%","100%","100%"],md:["25%","50%","25%"],lg:["25%","50%","25%"],xl:["25%","50%","25%"]},"1-1-2":{columnLayout:"3: narrow, narrow, and wide",xs:["100%","100%","100%"],sm:["50%","50%","100%"],md:["25%","25%","50%"],lg:["25%","25%","50%"],xl:["25%","25%","50%"]},"1-1-1-1":{columnLayout:"4: equal width",xs:["100%","100%","100%","100%"],sm:["50%","50%","50%","50%"],md:["25%","25%","25%","25%"],lg:["25%","25%","25%","25%"],xl:["25%","25%","25%","25%"]},"1-1-1-1-1":{columnLayout:"5: equal width",xs:["100%","100%","100%","100%","100%"],sm:["50%","50%","50%","50%","50%"],md:["20%","20%","20%","20%","20%"],lg:["20%","20%","20%","20%","20%"],xl:["20%","20%","20%","20%","20%"]},"1-1-1-1-1-1":{columnLayout:"6: equal width",xs:["100%","100%","100%","100%","100%","100%"],sm:["50%","50%","50%","50%","50%","50%"],md:["33.3333333%","33.3333333%","33.3333333%","33.3333333%","33.3333333%","33.3333333%"],lg:["16.6666667%","16.6666667%","16.6666667%","16.6666667%","16.6666667%","16.6666667%"],xl:["16.6666667%","16.6666667%","16.6666667%","16.6666667%","16.6666667%","16.6666667%"]}},this.options={};let e=Object.keys(this.layouts);for(let t=1;t<e.length;t++)this.options[e[t]]=this.layouts[e[t]].columnLayout}}class GridPlate extends e{static get styles(){return[i`
        :host {
          display: block;
          --grid-plate-row-margin: 0px;
          --grid-plate-row-padding: 0px;
          --grid-plate-item-margin: 15px;
          --grid-plate-editable-border-color: var(
            --simple-colors-default-theme-cyan-7,
            #009dc7
          );
          --grid-plate-active-border-color: var(
            --simple-colors-default-theme-cyan-7,
            #3b97e3
          );
          --grid-plate-target-background-color: var(
            --simple-colors-default-theme-cyan-2,
            #9beaff
          );
          --grid-plate-possible-target-background-color: transparent;
          --grid-plate-selected-background-color: #ffffff;
          --grid-plate-arrow-color: #ffffff;
          --grid-plate-arrow-color-hover: #000000;
          --grid-plate-arrow-bg: var(
            --simple-colors-default-theme-cyan-7,
            #3b97e3
          );
        }
        :host .row {
          width: 100%;
          display: flex;
          flex-wrap: wrap;
          justify-content: space-between;
          align-items: stretch;
          margin: var(--grid-plate-row-margin);
          padding: var(--grid-plate-row-padding);
        }
        :host .column {
          width: 100%;
          flex: 0 0 auto;
        }
        :host([edit-mode]) .column {
          min-height: 150px;
          transition: 0.2s color linear, 0.2s background-color linear,
            0.2s outline linear;
        }
        :host([edit-mode]) {
          min-height: 150px;
        }
        :host([edit-mode]) .column {
          outline: 1px solid var(--grid-plate-editable-border-color);
        }
        :host .column:empty[style="min-height: unset;"] {
          display: none;
          outline: none;
        }
        :host([edit-mode]) .column[style="min-height: unset;"]:not(:empty) {
          display: block;
          opacity: 0.4;
        }
        :host([edit-mode])
          .column[style="min-height: unset;"]:not(:empty):hover {
          opacity: 1;
        }
        :host([edit-mode])
          .column[style="min-height: unset;"]:not(:empty):before {
          margin: var(--grid-plate-item-margin);
          color: red;
          font-size: 14px;
          font-weight: bold;
          padding: 0px;
        }
        :host .column ::slotted(*) {
          margin: var(--grid-plate-item-margin);
          padding: var(--grid-plate-item-margin);
          max-width: calc(100% - 60px);
          max-width: -webkit-fill-available;
          transition: 0.2s color linear, 0.2s background-color linear,
            0.2s outline linear;
        }
        :host([edit-mode]) .column ::slotted(img) {
          display: block;
        }
        :host([edit-mode]) .column ::slotted(.grid-plate-active-item) {
          outline: 1px solid var(--grid-plate-active-border-color);
          background-color: var(--grid-plate-selected-background-color);
        }
        :host([edit-mode]) .column ::slotted(ol.grid-plate-active-item),
        :host([edit-mode]) .column ::slotted(ul.grid-plate-active-item) {
          outline-offset: 8px;
        }
        :host([edit-mode]) .column ::slotted(*:focus),
        :host([edit-mode]) .column ::slotted(*:hover),
        :host([edit-mode]) .column ::slotted(*:active) {
          outline: 2px solid var(--grid-plate-editable-border-color);
        }
        :host([edit-mode]) .column ::slotted(ol:focus),
        :host([edit-mode]) .column ::slotted(ol:hover),
        :host([edit-mode]) .column ::slotted(ol:active),
        :host([edit-mode]) .column ::slotted(ul:focus),
        :host([edit-mode]) .column ::slotted(ul:hover),
        :host([edit-mode]) .column ::slotted(ul:active) {
          outline-offset: 8px;
        }
        :host([edit-mode]) .column ::slotted(*.hax-mover):before {
          outline: 1px solid var(--grid-plate-editable-border-color);
          background-color: var(--grid-plate-possible-target-background-color);
          content: " ";
          width: 100%;
          display: block;
          position: relative;
          margin: -30px 0 0 0;
          z-index: 2;
          height: 30px;
        }
        :host([edit-mode]) .column ::slotted(img.hax-mover) {
          outline: 1px solid var(--grid-plate-editable-border-color);
          background-color: var(--grid-plate-possible-target-background-color);
        }
        :host([edit-mode]) .column.hax-mover {
          outline: 1px solid var(--grid-plate-editable-border-color);
        }
        :host([edit-mode]) #bodycontainer ::slotted(*.hax-moving) {
          outline: 1px solid var(--hax-body-active-border-color);
          background-color: #eeeeee;
        }
        :host([edit-mode]) .column.hax-mover {
          content: "Double click to create a paragraph here";
          background-color: var(--grid-plate-possible-target-background-color);
        }
        :host([edit-mode]) .column ::slotted(img.hax-hovered),
        :host([edit-mode]) .column ::slotted(*.hax-hovered):before {
          background-color: var(
            --grid-plate-target-background-color
          ) !important;
          outline: solid 2px var(--grid-plate-active-border-color);
        }
        :host([edit-mode]) .column.hax-hovered {
          background-color: var(
            --grid-plate-target-background-color
          ) !important;
          outline: solid 2px var(--grid-plate-active-border-color);
          z-index: 2;
        }
        paper-icon-button {
          display: none;
          position: absolute;
          margin: 0;
          padding: 0;
          outline: none;
          width: 20px;
          height: 20px;
          color: var(--grid-plate-arrow-color);
          opacity: 1;
          background-color: var(--grid-plate-arrow-bg);
          border-radius: none;
          box-sizing: content-box !important;
          z-index: 2;
          min-width: unset;
          transition: 0.2s color linear, 0.2s background-color linear;
        }
        paper-icon-button:hover {
          opacity: 1;
          visibility: visible;
          color: var(--grid-plate-arrow-color-hover);
        }
        #drag {
          cursor: move;
        }
        paper-icon-button[disabled] {
          opacity: 0.5;
        }
        paper-icon-button[disabled]:focus,
        paper-icon-button[disabled]:hover {
          cursor: not-allowed;
        }
        paper-icon-button.active {
          display: block;
        }

        .button-holding-pen {
          position: relative;
        }
        .button-holding-pen[hidden] {
          display: none;
        }
      `]}constructor(){super(),this.droppable=!1,this.ignoreHax=!1,this.hideOps=!1,this.breakpointSm=900,this.breakpointMd=1200,this.breakpointLg=1500,this.breakpointXl=1800,this.columns=6,this.disableResponsive=!1,this.editMode=!1,window.HaxStore&&window.HaxStore.instance&&(this.editMode=window.HaxStore.instance.editMode),this.layout="1-1",this.layouts=(new GridPlateLayoutOptions).layouts,this.responsiveSize="xs",setTimeout(()=>{import("../../@polymer/paper-icon-button/paper-icon-button.js"),import("../../@polymer/iron-icons/hardware-icons.js"),import("../hax-iconset/hax-iconset.js"),this.addEventListener("focusin",this._focusIn.bind(this)),this.addEventListener("dragenter",this.dragEnterGrid.bind(this))},0),window.ResponsiveUtility.requestAvailability()}render(){return t`
      ${this.hideOps?"":t`
            <div class="button-holding-pen">
              <paper-icon-button
                class="direction"
                icon="hax:arrow-all"
                title="Drag"
                draggable="true"
                id="drag"
                @dragstart="${this.dragStart}"
                @dragend="${this.dragEnd}"
              >
              </paper-icon-button>
              <paper-icon-button
                class="direction"
                icon="hardware:keyboard-arrow-up"
                title="Move up"
                id="up"
                @click="${this.moveActiveElement}"
              >
              </paper-icon-button>
              <paper-icon-button
                class="direction"
                icon="hardware:keyboard-arrow-right"
                title="Move right"
                id="right"
                @click="${this.moveActiveElement}"
              >
              </paper-icon-button>
              <paper-icon-button
                class="direction"
                icon="hardware:keyboard-arrow-down"
                title="Move down"
                id="down"
                @click="${this.moveActiveElement}"
              >
              </paper-icon-button>
              <paper-icon-button
                class="direction"
                icon="hardware:keyboard-arrow-left"
                title="Move left"
                id="left"
                @click="${this.moveActiveElement}"
              >
              </paper-icon-button>
            </div>
          `}
      <div class="row">
        <div
          class="column"
          id="col1"
          data-label="column 1"
          .style="${this._getColumnWidth(0,this.__columnWidths)}"
        >
          <slot name="col-1"></slot>
        </div>
        <div
          class="column"
          id="col2"
          data-label="column 2"
          .style="${this._getColumnWidth(1,this.__columnWidths)}"
        >
          <slot name="col-2"></slot>
        </div>
        <div
          class="column"
          id="col3"
          data-label="column 3"
          .style="${this._getColumnWidth(2,this.__columnWidths)}"
        >
          <slot name="col-3"></slot>
        </div>
        <div
          class="column"
          id="col4"
          data-label="column 4"
          .style="${this._getColumnWidth(3,this.__columnWidths)}"
        >
          <slot name="col-4"></slot>
        </div>
        <div
          class="column"
          id="col5"
          data-label="column 5"
          .style="${this._getColumnWidth(4,this.__columnWidths)}"
        >
          <slot name="col-5"></slot>
        </div>
        <div
          class="column"
          id="col6"
          data-label="column 6"
          .style="${this._getColumnWidth(5,this.__columnWidths)}"
        >
          <slot name="col-6"></slot>
        </div>
      </div>
    `}static get tag(){return"grid-plate"}validateElementSlot(e){return["col-1","col-2","col-3","col-4","col-5","col-6"].includes(e.getAttribute("slot"))}connectedCallback(){super.connectedCallback(),this.observer=new MutationObserver(e=>{e.forEach(e=>{this.editMode&&(e.addedNodes.forEach(e=>{e.tagName&&(null!=e.getAttribute("slot")&&this.validateElementSlot(e)||e.setAttribute("slot","col-1"),setTimeout(()=>{e.addEventListener("drop",this.dropEvent.bind(this)),e.addEventListener("dragenter",this.dragEnter.bind(this)),e.addEventListener("dragleave",this.dragLeave.bind(this)),e.addEventListener("dragend",this.dragEnd.bind(this)),e.addEventListener("dragover",(function(e){e.preventDefault()})),"IMG"===e.tagName&&e.setAttribute("draggable",!1),e.setAttribute("tabindex",0)},50))}),e.removedNodes.forEach(e=>{e.tagName&&(e.removeEventListener("drop",this.dropEvent.bind(this)),e.removeEventListener("dragenter",this.dragEnter.bind(this)),e.removeEventListener("dragleave",this.dragLeave.bind(this)),e.removeEventListener("dragover",(function(e){e.preventDefault()})),"IMG"===e.tagName&&e.removeAttribute("draggable"),e.removeAttribute("tabindex"))}))})}),this.observer.observe(this,{childList:!0}),window.addEventListener("keydown",this._onKeyDown.bind(this)),window.addEventListener("hax-store-property-updated",this._haxStorePropertyUpdated.bind(this)),window.addEventListener("load",this.resize.bind(this)),window.addEventListener("resize",this.resizeListener.bind(this))}resizeListener(e){this.activeItem&&(clearTimeout(this.resizeTimer),this.resizeTimer=setTimeout(()=>{this.positionArrows(this.activeItem)},50))}_onKeyDown(e){if(this.editMode&&this.getAttribute("contenteditable"))switch(e.key){case"Enter":if(window.HaxStore&&window.HaxStore.instance&&window.HaxStore.instance.isTextElement(this.activeItem))return!0;this.hideOps||this.shadowRoot.querySelector("#right").focus();break;case"Escape":this.activeItem=null}}firstUpdated(e){window.dispatchEvent(new CustomEvent("responsive-element",{detail:{element:this,attribute:"responsive-size",relativeToParent:!1,sm:this.breakpointSm,md:this.breakpointMd,lg:this.breakpointLg,xl:this.breakpointXl}}));for(var t=1;t<=this.columns;t++)if(void 0!==this.shadowRoot.querySelector("#col"+t)){let e=this.shadowRoot.querySelector("#col"+t);e.addEventListener("drop",this.dropEvent.bind(this)),e.addEventListener("dragenter",this.dragEnter.bind(this)),e.addEventListener("dragleave",this.dragLeave.bind(this)),e.addEventListener("dragover",(function(e){e.preventDefault()}))}this.__columnWidths=this._getColumnWidths(this.responsiveSize,this.layout,this.layouts,this.disableResponsive)}disconnectedCallback(){window.removeEventListener("keydown",this._onKeyDown.bind(this)),window.removeEventListener("hax-store-property-updated",this._haxStorePropertyUpdated.bind(this)),window.removeEventListener("load",this.resize.bind(this)),window.removeEventListener("resize",this.resizeListener.bind(this)),this.observer.disconnect(),super.disconnectedCallback()}static get haxProperties(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"Grid layout",description:"Simple card in a cool retro design",icon:"hax:3/3/3/3",color:"grey",groups:["Layout"],handles:[],meta:{author:"ELMS:LN",owner:"The Pennsylvania State University"}},settings:{quick:[],configure:[{property:"layout",title:"Column Layout",description:"Style to present these items (may change for small screens)",inputMethod:"select",options:(new GridPlateLayoutOptions).options},{property:"disableResponsive",title:"Disable responsive",description:"Check box to force layout to stick regardless of screen breakpoins",inputMethod:"boolean"}],advanced:[{property:"breakpointSm",title:"Small Breakpoint",description:"Anything less than this number (in pixels) will render with the smallest version of this layout",inputMethod:"textfield",validationType:"number"},{property:"breakpointMd",title:"Medium Breakpoint",description:"Anything less than this number (in pixels) will render with the small version of this layout",inputMethod:"textfield",validationType:"number"},{property:"breakpointLg",title:"Large Breakpoint",description:"Anything less than this number (in pixels) will render with the medium version of this layout.",inputMethod:"textfield",validationType:"number"},{property:"breakpointXl",title:"Extra-Large Breakpoint",description:"Anything less than this number (in pixels) will render with the large version of this layout. Anything greater than or equal to this number will display with the maximum number of columns for this layout.",inputMethod:"textfield",validationType:"number"}]},saveOptions:{unsetAttributes:["grid-plate-active-item","edit-mode","active-item","layouts","columns","options","droppable","ignorehax","hideops","activeitem","responsive-width","hide-ops"]}}}static get properties(){return{hideOps:{type:Boolean,attribute:"hide-ops"},droppable:{type:Boolean,reflect:!0},ignoreHax:{type:Boolean,attribute:"ignore-hax"},breakpointSm:{type:Number,attribute:"breakpoint-sm"},breakpointMd:{type:Number,attribute:"breakpoint-md"},breakpointLg:{type:Number,attribute:"breakpoint-lg"},breakpointXl:{type:Number,attribute:"breakpoint-xl"},columns:{type:Number,reflect:!0},disableResponsive:{type:Boolean,attribute:"disable-responsive"},editMode:{reflect:!0,type:Boolean,attribute:"edit-mode"},layout:{type:String,reflect:!0},layouts:{type:Object},responsiveSize:{type:String,reflect:!0,attribute:"responsive-size"},activeItem:{type:Object,attribute:"active-item"},__columnWidths:{type:String}}}updated(e){e.forEach((e,t)=>{switch(["responsiveSize","layout","layouts","disableResponsive"].includes(t)&&(this.__columnWidths=this._getColumnWidths(this.responsiveSize,this.layout,this.layouts,this.disableResponsive)),t){case"droppable":this._droppableChanged(this[t],e);break;case"editMode":this._editModeChanged(this[t],e),this.resize();break;case"activeItem":this._activeItemChanged(this[t],e);break;case"__columnWidths":this.resize();break;case"disableResponsive":this.dispatchEvent(new CustomEvent("disable-responsive-changed",{detail:this[t]}))}})}resize(){window.dispatchEvent(new Event("resize"))}preProcessHaxInsertContent(e){return delete e.properties.activeItem,e}_droppableChanged(e){e&&(this.editMode=!0)}canMoveSlot(e,t){let i=t?-1:1,o=this.shadowRoot.querySelectorAll(".column").length,r=e.getAttribute("slot").split("-"),a=parseInt(r[1])+i;return a>=1&&a<=o}moveSlot(e,t){let i=t?-1:1,o=e.getAttribute("slot").split("-"),r=parseInt(o[1])+i;e.setAttribute("slot","col-"+r)}canMoveOrder(e,t){let i=e.getAttribute("slot"),o=this.shadowRoot.querySelector(`slot[name='${i}']`).assignedNodes({flatten:!0}),r=null,a=0;for(var s in o)e===o[s]&&(a=s);return t&&parseInt(a)-1>=0?r=o[parseInt(a)-1]:!t&&parseInt(a)+1<=o.length-1&&(r=o[parseInt(a)+1]),null!=r}moveOrder(e,t=!0){let i=e.getAttribute("slot"),o=this.shadowRoot.querySelector(`slot[name='${i}']`).assignedNodes({flatten:!0}),r=null,a=0;for(var s in o)e===o[s]&&(a=s);t?(r=o[parseInt(a)-1],this.insertBefore(this.activeItem,r)):(r=o[parseInt(a)+1],this.insertBefore(r,this.activeItem))}moveActiveElement(e){switch(e.target.id){case"up":this.moveOrder(this.activeItem,!0);break;case"down":this.moveOrder(this.activeItem,!1);break;case"left":this.moveSlot(this.activeItem,!0);break;case"right":this.moveSlot(this.activeItem,!1)}this.activeItem&&"function"==typeof this.activeItem.focus&&(this.positionArrows(this.activeItem),this.activeItem.focus()),this.__sortChildren()}_activeItemChanged(e,t){this.querySelectorAll(".grid-plate-active-item").forEach(e=>{e.classList.remove("grid-plate-active-item")}),void 0!==e&&null!=e?(e.classList.add("grid-plate-active-item"),this.positionArrows(e)):null==e&&this.positionArrows(e),void 0!==t&&null!=t&&t.blur()}_getColumnWidths(e="sm",t="1-1",i,o){if(i){let r=i[t],a=!1!==o?"xl":e,s={12:"1","8/4":"2-1","6/6":"1-1","4/8":"1-2","4/4/4":"1-1-1","3/3/3/3":"1-1-1-1"}[t];if(void 0!==r&&void 0!==r[a])return i[t][a];if(void 0!==i[s]&&void 0!==i[s][a])return i[s][a];if(void 0!==i["1-1"])return i["1-1"][a]}}_getColumnWidth(e,t){return void 0!==t&&void 0!==t[e]?"width:"+t[e]:"min-height: unset"}_getColumns(e){return e.length}_focusIn(e){if(this.editMode){var t=e.target;t.parentNode===this&&(this.activeItem=t)}}positionArrows(e,t=!1){if(!this.hideOps)if(null==e)this.shadowRoot.querySelectorAll(".direction").forEach(e=>{t?"drag"!=e.id&&e.classList.remove("active"):e.classList.remove("active")});else{this.shadowRoot.querySelectorAll(".direction").forEach(e=>{e.classList.add("active")}),this.shadowRoot.querySelector("#up").disabled=!this.canMoveOrder(e,!0),this.shadowRoot.querySelector("#down").disabled=!this.canMoveOrder(e,!1),this.shadowRoot.querySelector("#left").disabled=!this.canMoveSlot(e,!0),this.shadowRoot.querySelector("#right").disabled=!this.canMoveSlot(e,!1);let t=this.getBoundingClientRect(),i=e.getBoundingClientRect(),o=i.top-t.top,r=i.left-t.left;this.shadowRoot.querySelector("#up").style.top=o-10+"px",this.shadowRoot.querySelector("#down").style.top=o+i.height-10+"px",this.shadowRoot.querySelector("#left").style.top=o+i.height/2-10+"px",this.shadowRoot.querySelector("#right").style.top=o+i.height/2-10+"px",this.shadowRoot.querySelector("#drag").style.top=o-10+"px",this.shadowRoot.querySelector("#drag").style.left=r-10+"px",this.shadowRoot.querySelector("#up").style.left=r+i.width/2-10+"px",this.shadowRoot.querySelector("#down").style.left=r+i.width/2-10+"px",this.shadowRoot.querySelector("#left").style.left=r-10+"px",this.shadowRoot.querySelector("#right").style.left=r+i.width-10+"px"}}_editModeChanged(e,t){if(e&&!t){let e=this.children;for(var i in e)e[i].tagName&&(e[i].addEventListener("drop",this.dropEvent.bind(this)),e[i].addEventListener("dragenter",this.dragEnter.bind(this)),e[i].addEventListener("dragleave",this.dragLeave.bind(this)),e[i].addEventListener("dragover",(function(e){e.preventDefault()})),"IMG"===e[i].tagName&&e[i].setAttribute("draggable",!1),e[i].setAttribute("tabindex",0))}else if(!e&&t){this.activeItem=null;let e=this.children;for(var i in e)void 0!==e[i].tagName&&(e[i].removeEventListener("drop",this.dropEvent.bind(this)),e[i].removeEventListener("dragenter",this.dragEnter.bind(this)),e[i].removeEventListener("dragleave",this.dragLeave.bind(this)),e[i].removeEventListener("dragover",(function(e){e.preventDefault()})),"IMG"===e[i].tagName&&e[i].removeAttribute("draggable"),e[i].removeAttribute("tabindex"))}}dragEnterGrid(e){const t=this.children;for(var i in t)t[i].classList&&t[i]!==this.activeItem&&t[i].classList.add("hax-mover");for(var o=1;o<=this.columns;o++)void 0!==this.shadowRoot.querySelector("#col"+o)&&this.shadowRoot.querySelector("#col"+o).classList.add("hax-mover")}dragEnter(e){this.editMode&&(e.preventDefault(),e.target&&e.target.classList&&e.target.classList.add("hax-hovered"))}dragLeave(e){this.editMode&&e.target&&e.target.classList&&e.target.classList.remove("hax-hovered")}__sortChildren(){try{let e=Array.prototype.reduce.call(this.children,(function(e,t){return t.slot&&e.push(t),e}),[]);e=e.sort((function(e,t){return parseInt(e.getAttribute("slot").split("-")[1])<parseInt(t.getAttribute("slot").split("-")[1])?-1:1})),e.forEach(e=>{e.parentNode===this&&this.appendChild(e)})}catch(e){console.warn(e)}}dropEvent(e){if(this.editMode){var t=this.activeItem;if(this.__dragTarget&&(t=this.__dragTarget),window.HaxStore&&window.HaxStore.ready&&window.HaxStore.instance.__dragTarget&&(t=window.HaxStore.instance.__dragTarget,window.HaxStore.instance.__dragTarget=null),setTimeout(()=>{let e=this.querySelectorAll(".hax-mover, .hax-hovered, .hax-moving, .grid-plate-active-item");for(var t in e)void 0!==e[t].classList&&e[t].classList.remove("hax-mover","hax-hovered","hax-moving");for(var i=1;i<=this.columns;i++)void 0!==this.shadowRoot.querySelector("#col"+i)&&this.shadowRoot.querySelector("#col"+i).classList.remove("hax-mover","hax-hovered","hax-moving");if(window.HaxStore&&window.HaxStore.ready){let e=window.HaxStore.instance.activeHaxBody.children;for(var t in e)e[t].classList&&e[t].classList.remove("hax-mover","hax-hovered","hax-moving")}this.__sortChildren()},100),t===this)return e.preventDefault(),e.stopPropagation(),e.stopImmediatePropagation(),!1;var i=e.target;if(t&&void 0!==i&&null!=i.getAttribute("slot")&&i.parentNode&&t!==i)t.setAttribute("slot",i.getAttribute("slot")),i.parentNode.insertBefore(t,i),e.preventDefault(),e.stopPropagation(),e.stopImmediatePropagation();else if(t&&"DIV"===i.tagName&&i.classList.contains("column")){var o=i.id.replace("col","");t.setAttribute("slot","col-"+o),this.appendChild(t),e.preventDefault(),e.stopPropagation(),e.stopImmediatePropagation()}setTimeout(()=>{window.HaxStore&&window.HaxStore.ready&&window.HaxStore.instance&&t&&t.parentNode&&"GRID-PLATE"===t.parentNode.tagName&&(window.HaxStore.write("activeNode",t,this),window.HaxStore.write("activeContainerNode",t.parentNode,this),setTimeout(()=>{window.HaxStore.instance.activeHaxBody.positionContextMenus(t,t.parentNode)},10)),this.positionArrows(null),this.activeItem=null},0)}}dragStart(e){if(this.editMode){if(window.HaxStore&&window.HaxStore.ready){let e=window.HaxStore.instance.activeHaxBody.children;for(var t in e)e[t].classList&&e[t].classList.add("hax-mover");window.HaxStore.instance.__dragTarget=this.activeItem}else this.__dragTarget=this.activeItem;this.activeItem.classList.add("hax-moving"),e.dataTransfer.dropEffect="move",e.dataTransfer.setDragImage(this.activeItem,0,0),e.stopPropagation(),e.stopImmediatePropagation();const o=this.children;for(var t in o)o[t].classList&&o[t]!==this.activeItem&&o[t].classList.add("hax-mover");for(var i=1;i<=this.columns;i++)void 0!==this.shadowRoot.querySelector("#col"+i)&&this.shadowRoot.querySelector("#col"+i).classList.add("hax-mover")}}dragEnd(e){this.editMode&&setTimeout(()=>{let e=this.querySelectorAll(".hax-mover, .hax-hovered, .hax-moving, .grid-plate-active-item");for(var t in e)void 0!==e[t].classList&&e[t].classList.remove("hax-mover","hax-hovered","hax-moving");for(var i=1;i<=this.columns;i++)void 0!==this.shadowRoot.querySelector("#col"+i)&&this.shadowRoot.querySelector("#col"+i).classList.remove("hax-mover","hax-hovered","hax-moving")},100)}_haxStorePropertyUpdated(e){e.detail&&void 0!==e.detail.value&&e.detail.property&&("object"==typeof e.detail.value&&(this[e.detail.property]=null),"editMode"===e.detail.property&&this.ignoreHax||(this.hideOps=!0,this[e.detail.property]=e.detail.value))}}window.customElements.define(GridPlate.tag,GridPlate);export{GridPlate};