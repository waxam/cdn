/**
 * @license MIT, see License.md for full text.
 */
import{LitElement as e,html as t,css as o}from"../../lit-element/lit-element.js";import{oneDark as i}from"./lib/themes/one-dark.js";import{hljs as r}from"./lib/highlightjs/highlight.js";import{javascript as n}from"./lib/highlightjs/languages/javascript.js";import{yaml as s}from"./lib/highlightjs/languages/yaml.js";import{jsonLang as a}from"./lib/highlightjs/languages/json.js";import{xml as d}from"./lib/highlightjs/languages/xml.js";r.registerLanguage("javascript",n),r.registerLanguage("json",a),r.registerLanguage("yaml",s),r.registerLanguage("xml",d),window.hljs=r;class CodeSample extends e{static get styles(){return[o`
        :host {
          display: block;
        }

        :host([hidden]),
        [hidden] {
          display: none;
        }

        pre {
          margin: 0;
        }

        pre,
        code {
          font-family: var(
            --code-sample-font-family,
            Operator Mono,
            Inconsolata,
            Roboto Mono,
            monaco,
            consolas,
            monospace
          );
          font-size: var(--code-sample-font-size, 0.875rem);
        }

        .hljs {
          padding: 0 1.25rem;
          line-height: var(--code-sample-line-height, 1.3);
        }

        .demo:not(:empty) {
          padding: var(--code-sample-demo-padding, 0 0 1.25rem);
        }

        #code-container {
          position: relative;
        }

        button {
          background: var(--code-sample-copy-button-bg-color, #e0e0e0);
          border: none;
          cursor: pointer;
          display: block;
          position: absolute;
          right: 0;
          top: 0;
          text-transform: uppercase;
        }
      `]}render(){return t`
      <div id="theme"></div>
      <div id="demo" class="demo"></div>
      <slot></slot>
      <div id="code-container">
        <button
          type="button"
          ?hidden="${!this.copyClipboardButton}"
          id="copyButton"
          title="Copy to clipboard"
          @click="${this._copyToClipboard}"
        >
          Copy
        </button>
        <pre id="code"></pre>
      </div>
    `}static get haxProperties(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"Code sample",description:"A sample of code highlighted in the page",icon:"icons:code",color:"blue",groups:["Code","Development"],meta:{author:"kuscamara"}},settings:{quick:[],configure:[{slot:"",slotWrapper:"template",slotAttributes:{"preserve-content":"preserve-content"},title:"Source",description:"The URL for this video.",inputMethod:"code-editor"},{property:"copyClipboardButton",title:"Copy to clipboard button",description:"button in top right that says copy to clipboard",inputMethod:"boolean"}],advanced:[]},saveOptions:{unsetAttributes:["theme"]}}}static get properties(){return{...super.properties,copyClipboardButton:{type:Boolean,attribute:"copy-clipboard-button"},theme:{type:String},type:{type:String}}}static get tag(){return"code-sample"}constructor(){super(),this._observer=null,this.theme=i,this.copyClipboardButton=!1}firstUpdated(){this._updateContent()}connectedCallback(){super.connectedCallback(),this.querySelector("template")?(this._observer=new MutationObserver(e=>{this.shadowRoot&&this._updateContent()}),this._observer.observe(this,{attributes:!0,childList:!0,subtree:!0})):this.childNodes.length&&console.error("<code-sample>:","content must be provided inside a <template> tag")}disconnectedCallback(){this._observer&&(this._observer.disconnect(),this._observer=null),super.disconnectedCallback()}updated(e){e.forEach((e,t)=>{"theme"==t&&this._themeChanged(this[t])})}_themeChanged(e){if(e&&this._themeCanBeChanged(e)){for(;this.shadowRoot.querySelector("#theme").childNodes>0;)this.shadowRoot.querySelector("#theme").removeChild(this.shadowRoot.querySelector("#theme").firstChild);this.shadowRoot.querySelector("#theme").appendChild(document.importNode(e.content,!0))}}_themeCanBeChanged(e){if("TEMPLATE"===e.tagName)return!0;console.error("<code-sample>:","theme must be a template")}_updateContent(){this._code&&this._code.parentNode.removeChild(this._code);let e=this._getCodeTemplate();e||(e=document.createElement("template"),e.setAttribute("preserve-content","preserve-content"),this.appendChild(e)),this._highlight(e.innerHTML)}_getCodeTemplate(){const e=this.children;return[].filter.call(e,e=>e.nodeType===Node.ELEMENT_NODE)[0]}_highlight(e){this._code=document.createElement("code"),this.type&&this._code.classList.add(this.type),this._code.innerHTML=this._entitize(this._cleanIndentation(e)),this.shadowRoot.querySelector("#code").appendChild(this._code),r.highlightBlock(this._code)}_cleanIndentation(e){const t=e.match(/\s*\n[\t\s]*/);return e.replace(new RegExp(t,"g"),"\n")}_entitize(e){return String(e).replace(/&lt;/g,"<").replace(/&gt;/g,">").replace(/=""/g,"").replace(/=&gt;/g,"=>").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;")}_copyToClipboard(e){const t=e.target,o=this._textAreaWithClonedContent();o.select();try{document.execCommand("copy",!1),t.textContent="Done"}catch(e){console.error(e),t.textContent="Error"}o.remove(),setTimeout(()=>{t.textContent="Copy"},1e3)}_textAreaWithClonedContent(){const e=document.createElement("textarea");return document.body.appendChild(e),e.value=this._cleanIndentation(this._getCodeTemplate().innerHTML),e}}window.customElements.define(CodeSample.tag,CodeSample);export{CodeSample};