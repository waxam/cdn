import{html,Polymer}from"../../../@polymer/polymer/polymer-legacy.js";import*as async from"../../../@polymer/polymer/lib/utils/async.js";import"../../../@polymer/iron-ajax/iron-ajax.js";import"../../../@polymer/iron-list/iron-list.js";import"../../../@polymer/iron-form-element-behavior/iron-form-element-behavior.js";import"../../../@polymer/app-layout/app-layout.js";import"../../../@polymer/app-layout/app-toolbar/app-toolbar.js";import"../../simple-toast/simple-toast.js";import"../../simple-modal/simple-modal.js";import"../../../@polymer/paper-input/paper-input.js";import"../../../@polymer/paper-button/paper-button.js";import"../../../@polymer/paper-dropdown-menu/paper-dropdown-menu.js";import"../../../@polymer/paper-item/paper-item.js";import"../../../@polymer/paper-listbox/paper-listbox.js";import"../../lrnsys-button/lrnsys-button.js";import"../../grafitto-filter/grafitto-filter.js";import"../../dropdown-select/dropdown-select.js";import"../lrnsys-comment.js";Polymer({_template:html`
    <style>
      :host {
        display: block;
      }
      app-toolbar {
        padding: 0;
      }
      app-toolbar > *:not(:last-child) {
        margin-right: 10px;
      }
      .comment-button {
        min-width: 125px;
      }
    </style>
    <!-- Load all comments on load of element -->
    <iron-ajax
      auto
      url="[[sourcePath]]"
      handle-as="json"
      method="[[opsRequestMethod.list]]"
      last-response="{{comments}}"
    ></iron-ajax>
    <!-- Create stub-comment -->
    <iron-ajax
      id="ajaxcreatestub"
      url="[[createStubUrl]]"
      method="[[opsRequestMethod.create]]"
      body="[[activeComment.id]]"
      on-response="_updateReply"
      handle-as="json"
      last-response="{{newComment}}"
    ></iron-ajax>
    <!-- Update comment -->
    <iron-ajax
      id="ajaxupdaterequest"
      url="[[reqUrl]]"
      method="[[opsRequestMethod.update]]"
      body="[[activeComment]]"
      content-type="application/json"
      handle-as="json"
      on-response="_handleUpdateResponse"
    ></iron-ajax>
    <!-- Delete comment -->
    <iron-ajax
      id="ajaxdeleterequest"
      url="[[reqUrl]]"
      method="[[opsRequestMethod.delete]]"
      body="[[activeComment]]"
      content-type="application/json"
      handle-as="json"
      on-response="_handleDeleteResponse"
    ></iron-ajax>
    <!-- Like comment -->
    <iron-ajax
      id="ajaxlikerequest"
      url="[[reqUrl]]"
      method="[[opsRequestMethod.like]]"
      body="[[activeComment]]"
      content-type="application/json"
      handle-as="json"
      on-response="_handleLikeResponse"
    ></iron-ajax>
    <app-toolbar>
      <lrnsys-button
        class="comment-button"
        raised=""
        on-click="handleTopReply"
        id="leavecomment"
        hover-class="blue white-text"
        label="Add Comment"
      ></lrnsys-button>
      <dropdown-select
        id="filtertype"
        label="Filter Comments by"
        value="attributes.body"
      >
        <paper-item value="attributes.body">Body</paper-item>
        <paper-item value="relationships.author.data.name"
          >User Name</paper-item
        >
      </dropdown-select>
      <paper-input
        label="Filter Text"
        id="filtercomments"
        aria-controls="filteredcomments"
        value=""
        always-float-label=""
      ></paper-input>
    </app-toolbar>
    <grafitto-filter
      id="filteredcomments"
      items\$="[[_toArray(comments.data)]]"
      where=""
      as="filtered"
      like=""
    >
      <template>
        <iron-list id="commentlist" items="[[filtered]]" as="item">
          <template>
            <lrnsys-comment
              comment="{{item}}"
              hover-class="blue white-text"
            ></lrnsys-comment>
          </template>
        </iron-list>
      </template>
    </grafitto-filter>
  `,is:"lrnsys-comment-list",listeners:{"comment-save":"handleSave","comment-editing":"handleEditing","comment-reply":"handleReply","comment-like":"handleLike","comment-delete-dialog":"handleDeleteDialog"},properties:{csrfToken:{type:String},opsRequestMethod:{type:Object,value:{list:"GET",create:"POST",update:"PUT",delete:"DELETE",like:"PATCH"}},activeComment:{type:Object,notify:!0},newComment:{type:Object,notify:!0},comments:{type:Object,notify:!0},sourcePath:{type:String,notify:!0},commentOpsBase:{type:String,notify:!0},createStubUrl:{type:String,notify:!0},reqUrl:{type:String,notify:!0,computed:"_computeCommentOpsUrl(activeComment, commentOpsBase, csrfToken)"}},attached:function(){window.SimpleModal.requestAvailability();async.microTask.run(()=>{if(this.$.filteredcomments.querySelector("iron-list")){this.$.filteredcomments.querySelector("iron-list").fire("iron-resize")}window.dispatchEvent(new Event("resize"))});this.$.filtercomments.addEventListener("value-changed",e=>{this.$.filteredcomments.like=e.target.value});this.$.filtertype.addEventListener("change",e=>{this.$.filtercomments.value="";this.$.filteredcomments.where=e.detail.value;this.$.filteredcomments.like=""})},detached:function(){this.$.filtercomments.removeEventListener("value-changed",e=>{this.$.filteredcomments.like=e.target.value});this.$.filtertype.removeEventListener("change",e=>{this.$.filtercomments.value="";this.$.filteredcomments.where=e.detail.value;this.$.filteredcomments.like=""})},_computeCommentOpsUrl:function(activeComment,commentOpsBase,csrfToken){if(typeof activeComment!==typeof void 0){return commentOpsBase+"/"+activeComment.id+"?token="+csrfToken}},handleLike:function(e){this.activeComment=e.detail.comment;this.$.ajaxlikerequest.generateRequest()},_handleLikeResponse:function(){},handleDeleteDialog:function(e){this.activeComment=e.detail.comment;let c=document.createElement("p"),t=document.createTextNode("Are you sure you want to delete your comment?");c.appendChild(t);let b=document.createElement("div");b.classList.add("buttons");let pb=document.createElement("paper-button");pb.setAttribute("dialog-dismiss","dialog-dismiss");t=document.createTextNode("Decline");pb.appendChild(t);b.appendChild(pb);let pb2=document.createElement("paper-button");pb2.setAttribute("dialog-confirm","dialog-confirm");pb2.setAttribute("autofocus","autofocus");pb2.addEventListener("click",this._handleDeleteConfirm.bind(this));t=document.createTextNode("Accept");pb2.appendChild(t);b.appendChild(pb2);const evt=new CustomEvent("simple-modal-show",{bubbles:!0,cancelable:!0,detail:{title:"Delete comment",elements:{content:c,buttons:b},invokedBy:e.detail.target,clone:!1}});this.dispatchEvent(evt)},handleEditing:function(){const evt=new CustomEvent("simple-toast-show",{bubbles:!0,cancelable:!0,detail:{text:"Be awesome to each other",duration:4e3}});this.dispatchEvent(evt)},handleTopReply:function(){this.set("newComment",[]);this.set("activeComment",[]);this.$.ajaxcreatestub.generateRequest()},handleReply:function(e){this.set("newComment",[]);this.activeComment=e.detail.comment;this.$.ajaxcreatestub.generateRequest()},_updateReply:function(){var comment=this.activeComment,comments=this.comments.data;this.newComment=this.newComment.data;if(0==comments.length){comments.push(this.newComment)}else if(typeof comment.id==typeof void 0){comments.push(this.newComment)}else{for(var index=0;index<comments.length;index++){if(comments[index].id==comment.id){comments.splice(index+1,0,this.newComment)}}}this.activeComment=this.newComment;this.set("comments.data",[]);this.set("comments.data",comments);this.notifyPath("comments.data")},_handleDeleteConfirm:function(){this.$.ajaxdeleterequest.generateRequest()},_handleDeleteResponse:function(){for(var comment=this.activeComment,comments=this.comments.data,index=0;index<comments.length;index++){if(comments[index].id==comment.id){comments.splice(index,1);this.set("activeComment",[]);this.set("comments.data",[]);this.set("comments.data",comments);this.notifyPath("comments.data");const evt=new CustomEvent("simple-toast-show",{bubbles:!0,cancelable:!0,detail:{text:"Comment deleted",duration:4e3}});this.dispatchEvent(evt);return!0}}},handleSave:function(e){this.activeComment=e.detail.comment;this.$.ajaxupdaterequest.generateRequest()},_handleUpdateResponse:function(){const evt=new CustomEvent("simple-toast-show",{bubbles:!0,cancelable:!0,detail:{text:"Comment saved!",duration:4e3}});this.dispatchEvent(evt)},_toArray:function(obj){return Object.keys(obj).map(function(key){return obj[key]})}});