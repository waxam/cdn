/**
 * Copyright 2020 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */
import{LitElement as e,html as t,css as i}from"../../lit/index.js";import{normalizeEventPath as n}from"../utils/utils.js";class PageContentsMenu extends e{static get styles(){return[i`
        :host {
          display: block;
        }
        :host([is-empty][hide-if-empty]) {
          display: none;
        }
        :host([hidden]) {
          display: none;
        }
        [hidden] {
          display: none;
        }
        :host([mobile]) .wrapper,
        :host([mobile]) .header,
        :host([mobile]) .header .svg {
          padding: 0;
          margin: 0;
        }
        .wrapper {
          display: inline-block;
          padding: 8px;
        }
        .header {
          display: flex;
          color: var(--page-contents-menu-heading-color, #9daab6);
          padding: 0 24px 0 0;
          margin: 0 0 8px 0;
        }
        .header .svg {
          padding-right: 6px;
          display: inline-flex;
          color: var(--page-contents-menu-link, #74818d);
        }
        svg {
          width: 1em;
          height: 1em;
          vertical-align: middle;
        }
        .header .label {
          align-items: center;
          display: inline-flex;
          font-size: var(--page-contents-menu-heading-font-size, 10px);
          font-weight: var(--page-contents-menu-heading-font-weight, 700);
          padding: 0;
          margin: 0;
          font-family: Content-font, Roboto, sans-serif;
          line-height: 1;
          letter-spacing: 1.2px;
          text-transform: uppercase;
        }

        .contents {
          margin: 0;
          padding: 0;
          list-style-type: none;
          overflow-y: auto;
          max-height: 50vh;
        }
        .item {
          margin: 0;
          display: block;
          padding: 0;
          overflow: hidden;
          white-space: nowrap;
          text-overflow: ellipsis;
        }
        .link {
          font-family: Content-font, Roboto, sans-serif;
          line-height: 1.5;
          display: flex;
          padding: 4px 16px 4px 24px;
          font-size: var(--page-contents-menu-link-font-size, 12px);
          text-decoration: none;
          font-weight: var(--page-contents-menu-link-font-weight, 500);
          color: var(--page-contents-menu-link, #74818d);
          cursor: pointer;
          margin: 0;
          align-items: center;
          vertical-align: middle;
          -webkit-box-align: center;
          overflow: hidden;
          white-space: nowrap;
          text-overflow: ellipsis;
        }
        .link:hover,
        .link:focus,
        .link:active {
          text-decoration: underline;
          color: var(--page-contents-menu-link-hover, rgb(56, 132, 255));
        }
        .link:focus {
          outline: 1px solid var(--page-contents-menu-link, black);
          outline-offset: 4px;
        }
        .indent-1 {
          padding-left: 0px;
        }
        .indent-2 {
          padding-left: 16px;
        }
        .indent-3,
        .indent-4,
        .indent-5,
        .indent-6 {
          padding-left: 32px;
        }
        .active {
          font-weight: bold;
          border-left: black 2px solid;
        }
      `]}render(){return t`
      <section class="wrapper" role="navigation">
        <div class="header">
          <a
            class="svg"
            @click="${this.toggleSettings}"
            @keypress="${this.keyToggle}"
            id="popovertarget"
            aria-label="${this.label}"
          >
            <svg
              preserveAspectRatio="xMidYMid meet"
              height="1em"
              width="1em"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 24 24"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke="currentColor"
              class="icon-7f6730be--text-3f89f380"
            >
              <g>
                <line x1="21" y1="10" x2="7" y2="10"></line>
                <line x1="21" y1="6" x2="3" y2="6"></line>
                <line x1="21" y1="14" x2="3" y2="14"></line>
                <line x1="21" y1="18" x2="7" y2="18"></line>
              </g>
            </svg>
          </a>
          <simple-tooltip
            for="popovertarget"
            offset="32"
            ?hidden="${!this.mobile||!this.hideSettings}"
          >
            ${this.label}
          </simple-tooltip>
          ${this.mobile?"":t` <h2 class="label">${this.label}</h2> `}
        </div>
        ${this.mobile?t`
              <simple-popover
                class="dropdown pull-left font-settings js-toolbar-action settings-container"
                ?hidden="${this.hideSettings}"
                position="${this.position}"
                auto
              >
                <ol class="contents">
                  ${this.items.map(((e,t)=>this.renderItem(e,t)))}
                </ol>
              </simple-popover>
            `:t`
              <ol class="contents">
                ${this.items.map(((e,t)=>this.renderItem(e,t)))}
              </ol>
            `}
      </section>
    `}keyToggle(e){["Enter","Space"].includes(e.key)&&this.toggleSettings(e)}keyScroll(e){"Enter"==e.key&&this.scrollToObject(e)}toggleSettings(e){this.mobile&&(this.hideSettings=!this.hideSettings)}scrollToObject(e){var t=n(e)[0];if(t.getAttribute("data-index")){e.preventDefault(),e.stopPropagation(),e.stopImmediatePropagation();let i=this.contentContainer.querySelector("#"+this.items[parseInt(t.getAttribute("data-index"))].id);void 0!==window.safari?i.scrollIntoView():i.scrollIntoView({behavior:"smooth",block:"start",inline:"nearest"}),window.history.pushState({},null,t.getAttribute("href")),this.hideSettings=!0}}renderItem(e,i){return null==e.link&&e.id?t`
        <li class="item">
          <a
            class="link indent-${e.indent} ${e.active}"
            tabindex="0"
            @click="${this.scrollToObject}"
            @keypress="${this.keyScroll}"
            data-index="${i}"
            >${e.title}</a
          >
        </li>
      `:t`
      <li class="item">
        <a
          class="link indent-${e.indent} ${e.active}"
          href="${e.link}"
          @click="${this.scrollToObject}"
          @keypress="${this.keyScroll}"
          data-index="${i}"
          >${e.title}</a
        >
      </li>
    `}static get properties(){return{contentContainer:{type:Object},relationship:{type:String},items:{type:Array},position:{type:String},mobile:{type:Boolean,reflect:!0},label:{type:String},hideSettings:{type:Boolean},hideIfEmpty:{type:Boolean,attribute:"hide-if-empty",reflect:!0},isEmpty:{type:Boolean,attribute:"is-empty",reflect:!0}}}static get tag(){return"page-contents-menu"}constructor(){super(),this.relationship=null,this.fallbackText={},this.items=[],this.isEmpty=!0,this.hideIfEmpty=!1,this.position="left",this.contentContainer=null,this.mobile=!1,this.scrollPolling=200,this.hideSettings=!0,this.label="Contents",window.addEventListener("click",this.checkMenuOpen.bind(this)),this.hierarchyTags=["h1","h2","h3","h4","h5","h6"]}checkMenuOpen(e){var t=n(e)[0];!this.mobile||this.hideSettings||!t.includes||t.includes(this.__toggleTarget)||t.includes(this.shadowRoot.querySelector("simple-popover"))||(this.hideSettings=!0)}firstUpdated(e){super.firstUpdated&&super.firstUpdated(e),"parent"==this.relationship?this.contentContainer=this.parentElement:"next"==this.relationship?this.contentContainer=this.nextElementSibling:"previous"==this.relationship&&(this.contentContainer=this.previousElementSibling),setTimeout((()=>{this.updateMenu()}),1e3)}updated(e){super.updated&&super.updated(e),e.forEach(((e,t)=>{"items"==t&&this[t]&&this[t].length>0&&setTimeout((()=>{this.scrollFinished()}),0),"contentContainer"==t&&this._contentContainerChanged(this[t]),"mobile"==t&&(this[t]?(import("../simple-popover/simple-popover.js").then((e=>{setTimeout((()=>{this.__toggleTarget=this.shadowRoot.querySelector("#popovertarget"),this.__toggleTarget.setAttribute("tabindex","0"),this.shadowRoot.querySelector("simple-popover").target=this.__toggleTarget}),0)})),import("../simple-tooltip/simple-tooltip.js")):e&&!this[t]&&this.__toggleTarget.removeAttribute("tabindex"))}))}updateMenu(){const e=this.hierarchyTags;let t=[];for(var i=0;i<this.contentContainer.childNodes.length;i++){let n=this.contentContainer.childNodes[i];if(void 0!==n.tagName&&e.includes(n.tagName.toLowerCase())){let e=n.innerText;""==n.innerText&&this.fallbackText[n.tagName.toLowerCase()]&&(e=this.fallbackText[n.tagName.toLowerCase()]);let i={title:e,link:n.id?document.location.pathname+"#"+n.id:null,id:n.id,indent:parseInt(n.tagName.toLowerCase().replace("h","")),active:""};t.push(i)}}0===t.length?this.isEmpty=!0:this.isEmpty=!1,this.items=[...t]}_applyScrollDetect(){clearTimeout(this.__debounce),this.__debounce=setTimeout((()=>{this.scrollFinished()}),this.scrollPolling)}scrollFinished(){if(this.items){let e=!1,t=window.innerHeight||document.documentElement.clientHeight;if(this.items.forEach(((i,n)=>{try{let i=this.contentContainer.querySelector("#"+this.items[n].id).getBoundingClientRect().top-100,s=0;s=n!==this.items.length-1?this.contentContainer.querySelector("#"+this.items[n+1].id).getBoundingClientRect().top-100:t,i<=t&&s>0&&!e?(e=!0,this.items[n].active="active"):this.items[n].active=""}catch(e){console.log(e)}})),!e&&this.items&&this.items.length>0)try{this.contentContainer.querySelector("#"+this.items[0].id).getBoundingClientRect().top>=t?this.items[0].active="active":this.items[this.items.length-1].active="active"}catch(e){console.log(e)}this.requestUpdate()}}_contentContainerChanged(e){e&&e.childNodes&&e.childNodes.length>0&&this.updateMenu()}connectedCallback(){super.connectedCallback&&super.connectedCallback(),window.addEventListener("scroll",this._applyScrollDetect.bind(this))}disconnectedCallback(){window.removeEventListener("scroll",this._applyScrollDetect.bind(this)),super.disconnectedCallback&&super.disconnectedCallback()}}customElements.define(PageContentsMenu.tag,PageContentsMenu);export{PageContentsMenu};