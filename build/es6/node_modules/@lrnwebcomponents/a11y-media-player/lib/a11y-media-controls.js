import{html,PolymerElement}from"../../../@polymer/polymer/polymer-element.js";import{A11yMediaBehaviors}from"./a11y-media-behaviors.js";import"../../../@polymer/paper-menu-button/paper-menu-button.js";import"../../../@polymer/paper-listbox/paper-listbox.js";import"../../../@polymer/paper-item/paper-item.js";import"../../../@polymer/paper-icon-button/paper-icon-button.js";import"../../../@polymer/paper-toggle-button/paper-toggle-button.js";import"../../dropdown-select/dropdown-select.js";import"../../../@polymer/paper-slider/paper-slider.js";import"../../../@polymer/paper-tooltip/paper-tooltip.js";import"./a11y-media-button.js";export{A11yMediaControls};class A11yMediaControls extends A11yMediaBehaviors{static get properties(){return{compactControls:{name:"compactControls",type:Boolean,computed:"_getCompactControls(responsiveSize)"},fixedHeight:{type:Boolean,value:!1},fullscreen:{name:"fullscreen",type:Boolean,value:!1},fullscreenButton:{name:"fullscreenButton",type:Boolean,value:!1,nofity:!0},hasCaptions:{name:"hasCaptions",type:Boolean,value:!1,notify:!0},hideTranscript:{name:"hideTranscript",type:Boolean,value:!1},hideTranscriptButton:{type:Boolean,computed:"_hideTranscriptButton(noTranscriptToggle,compactControls)"},muteUnmute:{name:"muteUnmute",type:Object},noPrinting:{type:Boolean,computed:"_noPrinting(standAlone,fixedHeight)"},noTranscriptToggle:{type:Boolean,computed:"_noTranscriptToggle(standAlone,fixedHeight,hasTranscript)"},responsiveSize:{name:"responsiveSize",type:String,notify:!0,value:"xs",reflectToAttribute:!0}}}static get tag(){return"a11y-media-controls"}constructor(){super()}static get template(){return html`
      <style is="custom-style" include="simple-colors-shared-styles">
        :host {
          display: block;
          width: 100%;
          max-width: 100%;
          height: 44px;
          max-height: 44px;
          position: relative;
          color: var(--a11y-media-color);
          --primary-text-color: var(--a11y-media-settings-menu-color);
          --paper-menu-button-dropdown-background: var(--a11y-media-settings-menu-bg-color);
          --paper-listbox-background-color: var(--a11y-media-settings-menu-bg-color);
          --paper-listbox-color: var(--a11y-media-settings-menu-color);
          --paper-listbox: {
            padding: 0;
          };
          --paper-menu-button: {
            background-color: var(--a11y-media-settings-menu-bg-color);
            color: var(--a11y-media-settings-menu-color);
          };
          --paper-menu-button-dropdown: {
            background-color: var(--a11y-media-settings-menu-bg-color);
            color: var(--a11y-media-settings-menu-color);
            margin-top: 0 !important;
            margin-bottom: 0 !important;
          };
          --paper-item-selected: {
            color: var(--a11y-media-settings-menu-hover-color);
          };
          --paper-item-focused: {
            color: var(--a11y-media-settings-menu-hover-color);
          };
        }
        :host > #controls-left {
          position: absolute;
          left: 0;
          min-width: 200px;
        }
        :host > #controls-right {
          position: absolute;
          right: 0;
          top: -2px;
        }
        :host paper-menu-button,
        :host dropdown-select {
          padding: 0;
        }
        :host paper-icon-button {
          background-color: var(--a11y-media-settings-menu-bg-color);
          color: var(--a11y-media-settings-menu-color);
        }
        :host paper-icon-button:active,
        :host paper-icon-button:focus,
        :host paper-icon-button:hover {
          background-color: var(--a11y-media-settings-menu-bg-color);
          color: var(--a11y-media-settings-menu-color);
        }
        :host paper-item {
          min-height: 40;
        }
        :host paper-slider {
          @apply --a11y-media-slider;
        }
        :host .play-status,
        :host paper-icon-button {
          border: none;
          position: relative;
        }
        :host .play-status {
          font-size: 85%;
        }
        :host .play-status.control-bar {
          padding: 8px 13px 8px;
        }
        :host([hide-play-status]) .play-status {
          display: none;
        }
        :host .setting {
          display: flex;
          justify-content: space-between;
          align-items: center;
          width: 100%;
        }
        :host .setting-text {
          min-width: 125px;
        }
        :host .setting-control {
          max-width: 100px;
        }
        :host .setting-slider {
          width: 130px;
          margin-left: -15px;
          margin-right: -15px;
          @apply --a11y-media-slider;
        }
        :host #speed {
          --paper-slider-knob-start-color: var(--a11y-media-accent-color);
          --paper-slider-knob-start-border-color: var(--a11y-media-accent-color);
          --paper-slider-knob-end-color: var(--a11y-media-accent-color);
          --paper-slider-knob-end-border-color: var(--a11y-media-accent-color);
        }
        :host #showvolume {
          display: inline;
          position: relative;
        }
        :host #volume {
          z-index: 1;
          position: absolute;
          left: 30px;
          top: -5px;
          width: 0;
          overflow: hidden;
          transition: width 0.5s;
          z-index: 3;
          background-color: var(--a11y-media-bg-color);
          --paper-slider-knob-end-color: var(--a11y-media-accent-color);
          --paper-slider-knob-end-border-color: var(--a11y-media-accent-color);

        }
        :host #volume:active,
        :host #volume:focus,
        :host #volume:hover,
        :host #volume.focus,
        :host #showvolume:active #volume,
        :host #showvolume:focus #volume,
        :host #showvolume:hover #volume {
          overflow: visible;
          width: 100px;
        }
        :host([responsive-size="xs"]) #volume:active,
        :host([responsive-size="xs"]) #volume:focus,
        :host([responsive-size="xs"]) #volume:hover,
        :host([responsive-size="xs"]) #volume.focus,
        :host([responsive-size="xs"]) #showvolume:active #volume,
        :host([responsive-size="xs"]) #showvolume:focus #volume,
        :host([responsive-size="xs"]) #showvolume:hover #volume {
          top: -35px
          border-radius: 4px;
        }
        :host .sr-only {
          position: absolute;
          left: -99999;
          top: 0;
          height: 0;
          width: 0;
          overflow: hidden;
        }
      </style>
      <div id="controls-left">
        <a11y-media-button
          action$="[[playPause.action]]"
          icon$="[[playPause.icon]]"
          label$="[[playPause.label]]"
          on-click="_onButtonTap"
        ></a11y-media-button>
        <a11y-media-button
          action="rewind"
          disabled$="[[disableSeek]]"
          hidden$="[[compactControls]]"
          icon$="[[_getLocal('rewind','icon')]]"
          label$="[[_getLocal('rewind','label')]]"
          on-click="_onButtonTap"
        ></a11y-media-button>
        <a11y-media-button
          action="forward"
          disabled$="[[disableSeek]]"
          hidden$="[[compactControls]]"
          icon$="[[_getLocal('forward','icon')]]"
          label$="[[_getLocal('forward','label')]]"
          on-click="_onButtonTap"
        ></a11y-media-button>
        <a11y-media-button
          action="restart"
          disabled$="[[disableSeek]]"
          hidden$="[[compactControls]]"
          icon$="[[_getLocal('restart','icon')]]"
          label$="[[_getLocal('restart','label')]]"
          on-click="_onButtonTap"
        ></a11y-media-button>
        <div id="showvolume">
          <a11y-media-button
            id="mute"
            action$="[[muteUnmute.action]]"
            icon$="[[muteUnmute.icon]]"
            label$="[[muteUnmute.label]]"
            on-click="_onButtonTap"
          ></a11y-media-button>
          <paper-slider
            id="volume"
            aria-labelledby="volume-slider-label"
            label$="[[volumeLabel]]"
            min="0"
            max="100"
            on-change="_onSettingsChanged"
            pin
            step="10"
            value$="[[volume]]"
          ></paper-slider>
        </div>
        <span aria-live="polite" class="play-status control-bar">
          <span id="statbar"></span>
        </span>
      </div>
      <div id="controls-right">
        <a11y-media-button
          action="captions"
          disabled$="[[!hasCaptions]]"
          hidden$="[[!hasCaptions]]"
          icon$="[[_getLocal('captions','icon')]]"
          label$="[[_getLocal('captions','label')]]"
          on-click="_onButtonTap"
          toggle$="[[cc]]"
        >
        </a11y-media-button>
        <a11y-media-button
          action="transcript"
          controls="transcript"
          disabled$="[[hideTranscriptButton]]"
          hidden$="[[hideTranscriptButton]]"
          icon$="[[_getLocal('transcript','icon')]]"
          label$="[[_getLocal('transcript','label')]]"
          on-click="_onButtonTap"
          toggle$="[[hideTranscript]]"
        >
        </a11y-media-button>
        <a11y-media-button
          action="print"
          disabled$="[[noPrinting]]"
          hidden$="[[noPrinting]]"
          icon$="[[_getLocal('print','icon')]]"
          label="[[_getLocal('print','label')]]"
          on-click="_handlePrintClick"
        >
        </a11y-media-button>
        <a11y-media-button
          action="download"
          disabled$="[[noPrinting]]"
          hidden$="[[noPrinting]]"
          icon$="[[_getLocal('download','icon')]]"
          label="[[_getLocal('download','label')]]"
          on-click="_handleDownloadClick"
        >
        </a11y-media-button>
        <template is="dom-if" if="[[fullscreenButton]]">
          <a11y-media-button
            action="fullscreen"
            hidden$="[[audioNoThumb]]"
            icon$="[[_getLocal('fullscreen','icon')]]"
            label$="[[_getLocal('fullscreen','label')]]"
            on-click="_onButtonTap"
            toggle$="[[fullscreen]]"
            step="1"
          >
          </a11y-media-button>
        </template>
        <paper-menu-button
          id="settings"
          allow-outside-scroll
          horizontal-align="right"
          ignore-select
          on-change="_onSettingsChanged"
          on-iron-activate="_handleSettingsActivate"
          on-iron-select="_handleSettingsSelect"
          vertical-align="bottom"
        >
          <paper-icon-button
            action="settings"
            alt$="[[_getLocal('settings','label')]]"
            icon$="[[_getLocal('settings','icon')]]"
            slot="dropdown-trigger"
          >
          </paper-icon-button>
          <paper-listbox id="settingslist" slot="dropdown-content">
            <paper-item hidden$="[[!hasCaptions]]">
              <div class="setting">
                <div class="setting-text">
                  [[_getLocal('captions','label')]]
                </div>
                <div class="setting-control">
                  <dropdown-select
                    id="tracks"
                    disabled$="[[!hasCaptions]]"
                    no-label-float
                    on-change="_handleTrackChange"
                    value
                  >
                    <paper-item value=""
                      >[[_getLocal('captions','off')]]</paper-item
                    >
                    <template is="dom-repeat" items="{{tracks}}" as="option">
                      <paper-item value$="{{option.value}}"
                        >{{option.text}}</paper-item
                      >
                    </template>
                  </dropdown-select>
                </div>
              </div>
            </paper-item>
            <paper-item hidden$="[[noTranscriptToggle]]">
              <div class="setting">
                <div id="transcript-label" class="setting-text">
                  [[_getLocal('transcript','label')]]
                </div>
                <div class="setting-control">
                  <paper-toggle-button
                    id="transcript-toggle"
                    aria-labelledby="transcript-label"
                    checked$="[[!hideTranscript]]"
                    controls="transcript"
                    disabled$="[[noTranscriptToggle]]"
                  >
                  </paper-toggle-button>
                </div>
              </div>
            </paper-item>
            <paper-item>
              <div class="setting">
                <div id="loop-label" class="setting-text">
                  [[_getLocal('loop','label')]]
                </div>
                <div class="setting-control">
                  <paper-toggle-button
                    id="loop"
                    aria-labelledby="loop-label"
                    checked$="[[loop]]"
                  ></paper-toggle-button>
                </div>
              </div>
            </paper-item>
            <paper-item>
              <div class="setting">
                <div id="speed-label" class="setting-text">
                  [[_getLocal('speed','label')]]
                </div>
                <div class="setting-control">
                  <paper-slider
                    id="speed"
                    aria-labelledby="speed-label"
                    class="setting-slider"
                    min="0.5"
                    max="4"
                    pin
                    step="0.5"
                    tab-index="-1"
                    value$="[[playbackRate]]"
                  ></paper-slider>
                </div>
              </div>
            </paper-item>
          </paper-listbox>
        </paper-menu-button>
        <paper-tooltip for="settings">
          [[_getLocal('settings','label')]]
        </paper-tooltip>
      </div>
    `}connectedCallback(){super.connectedCallback();this._addResponsiveUtility({element:this,attribute:"responsive-size",relativeToParent:!0,sm:300,md:600,lg:900,xl:1200})}ready(){super.ready();let root=this;root.$.mute.$.button.onfocus=function(){root.$.volume.classList.add("focus")},root.$.mute.$.button.onblur=function(){root.$.volume.classList.remove("focus")}}setStatus(status){this.$.statbar.innerText=status}setTracks(tracks){this.set("tracks",[]),this.set("tracks",tracks.slice(0))}_getCompactControls(responsiveSize){return this._testAttribute(responsiveSize,"xs")||this._testAttribute(responsiveSize,"sm")}_handleTrackChange(e){let root=this;null!==root.__selectedTrack&&(""!==e.detail.value?(root.dispatchEvent(new CustomEvent("select-track",{detail:{control:root,value:e.detail.value}})),root.dispatchEvent(new CustomEvent("toggle-cc",{detail:{control:root,value:!0}}))):root.dispatchEvent(new CustomEvent("toggle-cc",{detail:{control:root,value:!1}})))}_handleSettingsSelect(e){}_handleSettingsActivate(e){}_onButtonTap(e){this.dispatchEvent(new CustomEvent("controls-change",{detail:e.detail})),this.$.settings.close()}_onSettingsChanged(e){this.dispatchEvent(new CustomEvent("controls-change",{detail:e.target})),this.$.settings.close()}_hideTranscriptButton(noTranscriptToggle,compactControls){return noTranscriptToggle||compactControls}_noPrinting(standAlone,fixedHeight){return standAlone||!fixedHeight}_noTranscriptToggle(standAlone,fixedHeight,hasTranscript){return standAlone||fixedHeight||!hasTranscript}}window.customElements.define(A11yMediaControls.tag,A11yMediaControls);