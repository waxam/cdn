import{html,Polymer}from"../../@polymer/polymer/polymer-legacy.js";import"../es-global-bridge/es-global-bridge.js";import{pathFromUrl}from"../../@polymer/polymer/lib/utils/resolve-url.js";let ChartistRender=Polymer({_template:html`
    <style>
      :host {
        display: block;
      }
    </style>
    <div id="chart" chart$="[[__chartId]]" class$="ct-chart [[scale]]"></div>
  `,is:"chartist-render",listeners:{tap:"makeChart"},properties:{id:{type:String,value:"chart"},type:{type:String,value:"bar"},scale:{type:String,observer:"makeChart"},chartTitle:{type:String,value:null,observer:"makeChart"},chartDesc:{type:String,value:"",observer:"makeChart"},data:{type:Object,value:null,observer:"makeChart"},options:{type:Object,value:null,observer:"makeChart"},responsiveOptions:{type:Array,value:[],observer:"makeChart"},showTable:{type:Boolean,value:!1,observer:"makeChart"}},created:function(){const name="chartist",basePath=pathFromUrl(decodeURIComponent(import.meta.url));window.addEventListener(`es-bridge-${name}-loaded`,this._chartistLoaded.bind(this));window.ESGlobalBridge.requestAvailability();window.ESGlobalBridge.instance.load(name,`${basePath}lib/chartist/dist/chartist.min.js`)},_chartistLoaded:function(){this.__chartistLoaded=!0;if(this.__chartId){this._chartReady()}},attached:function(){this.__chartId=this._getUniqueId("chartist-render-");if(this.__chartistLoaded){this._chartReady()}},_checkReady:function(){let root=this;setInterval(root._chartReady,500)},_chartReady:function(){let container=this.$.chart;if(null!==container){this.fire("chartist-render-ready",this);if(null!==this.data)this.makeChart();clearInterval(this._checkReady)}},makeChart:function(){let root=this,chart;if(this.__chartistLoaded&&this.__chartId&&null!==root.data&&null!==this.$.chart){if("bar"==root.type){chart=Chartist.Bar(this.$.chart,root.data,root.options,root.responsiveOptions)}else if("line"==root.type){chart=Chartist.Line(this.$.chart,root.data,root.options,root.responsiveOptions)}else if("pie"==root.type){chart=Chartist.Pie(this.$.chart,root.data,root.options,root.responsiveOptions)}root.fire("chartist-render-draw",chart);chart.on("created",()=>{root.addA11yFeatures(chart.container.childNodes[0])});return chart}else{return null}},addA11yFeatures:function(svg){let desc=this.data.labels!==void 0&&null!==this.data.labels?this.chartDesc+this.makeA11yTable(svg):this.chartDesc;this._addA11yFeature(svg,"desc",desc);this._addA11yFeature(svg,"title",this.chartTitle);svg.setAttribute("aria-labelledby",this.__chartId+"-chart-title "+this.__chartId+"-chart-desc")},makeA11yTable:function(){let title=null!==this.chartTitle?this.chartTitle:"A "+this.type+" chart.",table=["<table summary=\"Each column is a series of data, and the first column is the data label.\">","<caption>"+title+"</caption>","<tbody>"];for(var i=0;i<this.data.labels.length;i++){table.push("<tr><th scope=\"row\">"+this.data.labels[i]+"</th>");if("pie"==this.type){table.push("<td>"+this.data.series[i]+"</td>")}else{for(var j=0;j<this.data.series.length;j++){table.push("<td>"+this.data.series[j][i]+"</td>")}}table.push("</tr>")}table.push("</tbody></table>");return table.join("")},_addA11yFeature:function(svg,tag,html){let el=document.createElement(tag),first=svg.childNodes[0];el.innerHTML=html;el.setAttribute("id",this.__chartId+"-chart-"+tag);svg.insertBefore(el,first)},_getUniqueId(prefix){let id=prefix+Date.now();return id}});export{ChartistRender};