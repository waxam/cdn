import{LitElement as t,html as e,css as o}from"../../../lit-element/lit-element.js";import{ImgPanZoom as i}from"../../img-pan-zoom/img-pan-zoom.js";import"../../es-global-bridge/es-global-bridge.js";class ImgViewViewer extends i{static get styles(){return[...super.styles,o`
        :host {
          display: block;
          height: var(--img-view-viewer-height, 500px);
        }
        :host([hidden]),
        *[hidden] {
          display: none !important;
        }
        .sr-only {
          position: absolute;
          left: -9999999px;
          width: 0;
          overflow: hidden;
        }
        #container {
          display: flex;
          flex-direction: column;
          align-items: stretch;
          justify-content: space-between;
          height: 100%;
          background-color: var(--img-view-viewer-backgroundColor, white);
          color: var(--img-view-viewer-color, black);
        }
        #container > * {
          flex: 1 1 auto;
          border: 1px solid var(--img-view-viewer-borderColor, #ddd);
        }
        .misc-item,
        .button-group {
          display: flex;
          align-items: stretch;
          justify-content: center;
        }
        .misc-item {
          align-items: center;
          padding: 5px;
        }
        #top,
        #bottom {
          margin: 0;
          flex: 0 0 auto;
        }
        #top > *,
        #bottom > * {
          margin: 0;
        }
        #top > *:not(:first-child),
        #bottom > *:not(:first-child) {
          border-left: 1px solid var(--img-view-viewer-borderColor, #ddd);
        }
        button {
          border: none;
          background-color: transparent;
        }
        button.flex-grow {
          flex: 1 0 auto;
        }
        button p {
          display: flex;
          align-items: center;
          justify-content: flex-start;
        }
        button.icon-right p {
          flex-direction: row-reverse;
          justify-content: end;
        }
        button[aria-pressed="true"] {
          background-color: var(
            --img-view-viewer-toggled-backgroundColor,
            #eee
          );
        }
        button:focus,
        button:hover,
        #viewer:focus-within {
          outline: 1px solid blue;
          z-index: 2;
        }
        simple-tooltip:not(:defined) {
          display: none;
        }
        #placeholder {
          position: relative;
          max-height: 0;
          overflow: visible;
        }
        #info {
          position: absolute;
          bottom: 0;
          right: 0;
          padding: 5px;
          background-color: var(--img-view-viewer-backgroundColor, white);
          border: 1px solid var(--img-view-viewer-borderColor, #ddd);
        }
        table {
          border-collapse: collapse;
        }
        th,
        td {
          padding: 2px 5px;
          line-height: 140%;
          border-top: 1px solid var(--img-view-viewer-borderColor, #ddd);
        }
        th {
          font-weight: normal;
          text-align: left;
        }
        kbd {
          border-radius: 2px;
          padding: 1px 3px;
          font-family: sans-serif;
          font-size: 80%;
          background: var(--img-view-viewer-toggled-backgroundColor, #eee);
          border: 1px solid var(--img-view-viewer-borderColor, #ddd);
        }
        input[type="number"] {
          border: 1px solid var(--img-view-viewer-borderColor, #ddd);
        }
      `]}constructor(){if(super(),this.minZoomImageRatio=1,this.maxZoomPixelRatio=3,this.__screenfullLoaded=!1,import("../../../@polymer/iron-icon/iron-icon.js"),import("../../../@polymer/iron-icons/iron-icons.js"),import("../../../@polymer/iron-icons/image-icons.js"),import("../../simple-tooltip/simple-tooltip.js"),"object"==typeof screenfull)this._onScreenfullLoaded();else{const t=`${this.pathFromUrl(decodeURIComponent(import.meta.url))}screenfull/dist/screenfull.js`;window.ESGlobalBridge.requestAvailability(),window.ESGlobalBridge.instance.load("screenfullLib",t),window.addEventListener("es-bridge-screenfullLib-loaded",this._onScreenfullLoaded)}}disconnectedCallback(){window.removeEventListener("es-bridge-screenfullLib-loaded",this._onScreenfullLoaded),super.disconnectedCallback()}render(){return e`
      <!-- Only preload regular images -->
      ${this.dzi?"":e`
            ${this.hideSpinner||this.loaded?"":e`
                  <hexagon-loader
                    ?loading=${this.loading||!this.loaded}
                    item-count="4"
                    size="small"
                  ></hexagon-loader>
                `}
            <img-loader
              loaded="${this.loaded}"
              @loaded-changed="${this.loadedChangedEvent}"
              ?loading="${this.loading}"
              @loading-changed="${this.loadingChangedEvent}"
              @page="${t=>this.page=t.page}"
              src="${this.src}"
              described-by="${this.describedBy||""}"
            ></img-loader>
          `}

      <!-- Openseadragon -->
      <div id="container">
        ${this.getToolbars(this.defaultToolbars,this.toolbars,"top")}
        <div>
          <div id="viewer"></div>
        </div>
        <div id="placeholder">
          <div id="info" ?hidden="${!this.info}">
            ${this.info}
          </div>
        </div>
        ${this.getToolbars(this.defaultToolbars,this.toolbars,"bottom")}
      </div>
    `}static get tag(){return"img-view-viewer"}static get properties(){return{...super.properties,figures:{type:Array},infoToggled:{type:Boolean,attribute:"info-mode",reflect:!0},kbdToggled:{type:Boolean,attribute:"keyboard-help-mode",reflect:!0},toolbars:{type:Object,attribute:"toolbars",reflect:!0},__screenfullLoaded:{type:Boolean}}}getToolbars(t,e,o="bottom"){let i=e||t,r=i&&i[o]?i[o]:{id:o,contents:""};return this._item(r)}get homebutton(){return{id:"homebutton",icon:"home",text:"return image to home position"}}get fullscreenbutton(){return{id:"fullscreenbutton",icon:"fullscreen",toggleProp:"fullscreenToggled",text:e`
        toggle fullscreen
      `}}get fullscreenEnabled(){let t=/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);return"object"==typeof screenfull&&!t}get navigatorbutton(){return{id:"navigatorbutton",icon:"picture-in-picture",toggleProp:"navigatorToggled",text:"toggle nav window"}}get infobutton(){return{id:"infobutton",icon:"info-outline",toggleProp:"infoToggled",text:"toggle information"}}get kbdbutton(){return{id:"kbdbutton",icon:"help-outline",toggleProp:"kbdToggled",text:"toggle keyboard shorcuts help",details:e`
        <table>
          <caption>
            Keyboard Shortcuts
          </caption>
          <tbody>
            <tr>
              <th scope="row">pan up</th>
              <td><kbd>w</kbd> or <kbd>&uarr;</kbd></td>
            </tr>
            <tr>
              <th scope="row">pan down</th>
              <td><kbd>s</kbd> or <kbd>&darr;</kbd></td>
            </tr>
            <tr>
              <th scope="row">pan left</th>
              <td><kbd>a</kbd> or <kbd>&larr;</kbd></td>
            </tr>
            <tr>
              <th scope="row">pan right</th>
              <td><kbd>d</kbd> or <kbd>&rarr;</kbd></td>
            </tr>
            <tr>
              <th scope="row">home</th>
              <td><kbd>0</kbd></td>
            </tr>
            <tr>
              <th scope="row">zoom out</th>
              <td><kbd>-</kbd> or <kbd>_</kbd></td>
            </tr>
            <tr>
              <th scope="row">zoom in</th>
              <td><kbd>+</kbd> or <kbd>=</kbd></td>
            </tr>
            <tr>
              <th scope="row">rotate clockwise</th>
              <td><kbd>r</kbd></td>
            </tr>
            <tr>
              <th scope="row">rotate counterclockwise</th>
              <td><kbd>shift+r</kbd></td>
            </tr>
          </tbody>
        </table>
      `}}get flipbutton(){return{id:"flipbutton",icon:"image:flip",text:"flip horizontal",toggleProp:"flipToggled"}}get rotategroup(){return{id:"rotategroup",type:"toolbar-group",contents:[this.rotateccwbutton,this.rotatecwbutton]}}get rotateccwbutton(){return{id:"rotateccwbutton",icon:"image:rotate-left",text:"rotate counterclockwise"}}get rotatecwbutton(){return{id:"rotatecwbutton",icon:"image:rotate-right",text:"rotate clockwise"}}get pangroup(){return{id:"pangroup",type:"toolbar-group",contents:[this.panleftbutton,this.panupbutton,this.pandownbutton,this.panrightbutton]}}get panleftbutton(){return{id:"panleftbutton",icon:"arrow-back",text:"pan left"}}get panupbutton(){return{id:"panupbutton",icon:"arrow-upward",text:"pan up"}}get pandownbutton(){return{id:"pandownbutton",icon:"arrow-downward",text:"pan down"}}get panrightbutton(){return{id:"panrightbutton",icon:"arrow-forward",text:"pan right"}}get zoomgroup(){return{id:"zoomgroup",type:"toolbar-group",contents:[this.zoominbutton,this.zoomoutbutton]}}get zoominbutton(){return{id:"zoominbutton",icon:"zoom-in",text:"zoom in"}}get zoomoutbutton(){return{id:"zoomoutbutton",icon:"zoom-out",text:"zoom out"}}get prevbutton(){return{id:"prevbutton",showText:!0,icon:"chevron-left",text:"prev",flexGrow:!0}}get nextbutton(){return{id:"nextbutton",icon:"chevron-right",iconRight:!0,text:"next",showText:!0,flexGrow:!0}}get tileSources(){return[this.src,...this.sources]}get prevDisabled(){return this.page<=0}get nextDisabled(){return this.page+1>=this.tileSources.length}get info(){return this.kbdToggled&&this.kbdbutton.details?this.kbdbutton.details:this.infoToggled&&this.figures&&this.figures[this.page]&&this.figures[this.page].info?this.figures[this.page].info:void 0}get pageXofY(){return`${(this.page||0)+1} of ${this.tileSources.length}`}get navXofY(){return{id:"navXofY",type:"misc-item",contents:e`
        <p>
          <input
            type="number"
            min="1"
            max="${this.tileSources.length}"
            value="${this.page+1}"
            @change="${this.goToPageXofY}"
          />
          of ${this.tileSources.length}
        </p>
      `}}get defaultToolbars(){return{bottom:{id:"bottom",type:"toolbar-group",contents:["prevbutton","rotategroup","zoomgroup","homebutton","pangroup","nextbutton"]}}}_item(t={}){return"string"==typeof t&&this[t]&&(t=this[t]),"object"!=typeof t?e`
        <div class="misc-item">${t}</div>
      `:t&&void 0===t.contents?this._button(t):this._group(t)}_group(t={}){return"string"==typeof t&&this[t]&&(t=this[t]),t?e`
          <div
            .id="${t.id||void 0}"
            class="button-group ${t.type||""}"
          >
            ${Array.isArray(t.contents)?(t.contents||[]).map(t=>this._item(t)):t.contents}
          </div>
        `:""}_button(t={}){return"string"==typeof t&&this[t]&&(t=this[t]),t?t.toggleProp&&this[t.toggleProp]?e`
          <button
            .id="${t.id||void 0}"
            ?hidden="${"navigatorbutton"===t.id&&!this.showNavigator||"infobutton"===t.id&&0===this.figures.length}"
            aria-pressed="${this[t.toggleProp]?"true":"false"}"
            class="${this._buttonClass(t)}"
            controls="container"
            @click="${e=>this._toolbarButtonClick(t.id,e)}"
          >
            ${this._buttonInner(t)}
          </button>
          ${this._tooltip(t)}
        `:e`
          <button
            .id="${t.id||void 0}"
            class="${this._buttonClass(t)}"
            controls="container"
            @click="${e=>this._toolbarButtonClick(t.id,e)}"
            ?disabled="${"prevbutton"===t.id&&this.prevDisabled||"nextbutton"===t.id&&this.nextDisabled}"
          >
            ${this._buttonInner(t)}
          </button>
          ${this._tooltip(t)}
        `:""}_buttonClass(t){return`${t.iconRight?"icon-right":""}${t.flexGrow?" flex-grow":""}`}_buttonInner(t){return t?e`
          <p>
            <iron-icon aria-hidden="true" icon="${t.icon}"></iron-icon>
            <span class="${t.icon&&!t.showText?"sr-only":""}"
              >${t.text}</span
            >
          </p>
        `:""}_tooltip(t){return t&&t.id?e`
          <simple-tooltip for="${t.id}">${t.text}</simple-tooltip>
        `:""}updated(t){super.updated&&super.updated(t),t.forEach((t,e)=>{})}firstUpdated(){if(!this.src&&0===this.sources.length&&this.figures.length>0){let t=this.figures.map(t=>t.src);this.src=t[0],this.sources=t.slice(1)}super.firstUpdated&&super.firstUpdated(changedProperties),changedProperties.forEach((t,e)=>{})}_setFullscreen(t=this.fullscreenToggled){console.log("fullscreen stuff",t),this.fullscreenEnabled&&screenfull&&(t?screenfull.request(this.shadowRoot.querySelector("#container")):screenfull.exit(this.shadowRoot.querySelector("#container")))}_onScreenfullLoaded(){this.__screenfullLoaded=!0}toggleFullscreen(t){}_toolbarButtonClick(t,e){this.dispatchEvent(new CustomEvent("toolbar-button-click",{bubbles:!0,cancelable:!0,composed:!0,detail:{buttonId:t,eventType:e,viewer:this}})),"homebutton"===t&&this.resetZoom(),"panupbutton"===t&&this.pan(0,.2),"pandownbutton"===t&&this.pan(0,-.2),"panleftbutton"===t&&this.pan(.2,0),"panrightbutton"===t&&this.pan(-.2,0),"zoominbutton"===t&&this.zoomIn(.2),"zoomoutbutton"===t&&this.zoomOut(.2),"rotateccwbutton"===t&&this.rotate(-90),"rotatecwbutton"===t&&this.rotate(90),"navigatorbutton"===t&&(this.navigatorToggled=!this.navigatorToggled),"fullscreenbutton"===t&&(this.fullscreenToggled=!this.fullscreenToggled),"flipbutton"===t&&(this.flipToggled=!this.flipToggled),"infobutton"===t&&(this.kbdToggled=!1,this.infoToggled=!this.infoToggled),"kbdbutton"===t&&(this.infoToggled=!1,this.kbdToggled=!this.kbdToggled),"nextbutton"===t&&(this.page=Math.min(this.page+1,this.viewer.tileSources.length-1)),"prevbutton"===t&&(this.page=Math.max(0,this.page-1))}goToPageXofY(t){this._toolbarButtonClick("navXofY",t),this.page=t.path[0].value-1}}window.customElements.define(ImgViewViewer.tag,ImgViewViewer);export{ImgViewViewer};