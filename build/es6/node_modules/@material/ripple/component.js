/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
import*as e from"../../tslib/tslib.es6.js";import{MDCComponent as t}from"../base/component.js";import{applyPassive as n}from"../dom/events.js";import{matches as o}from"../dom/ponyfill.js";import{MDCRippleFoundation as i}from"./foundation.js";import*as r from"./util.js";var u=function(t){function MDCRipple(){var e=null!==t&&t.apply(this,arguments)||this;return e.disabled=!1,e}return e.__extends(MDCRipple,t),MDCRipple.attachTo=function(e,t){void 0===t&&(t={isUnbounded:void 0});var n=new MDCRipple(e);return void 0!==t.isUnbounded&&(n.unbounded=t.isUnbounded),n},MDCRipple.createAdapter=function(e){return{addClass:function(t){return e.root_.classList.add(t)},browserSupportsCssVars:function(){return r.supportsCssVariables(window)},computeBoundingRect:function(){return e.root_.getBoundingClientRect()},containsEventTarget:function(t){return e.root_.contains(t)},deregisterDocumentInteractionHandler:function(e,t){return document.documentElement.removeEventListener(e,t,n())},deregisterInteractionHandler:function(t,o){return e.root_.removeEventListener(t,o,n())},deregisterResizeHandler:function(e){return window.removeEventListener("resize",e)},getWindowPageOffset:function(){return{x:window.pageXOffset,y:window.pageYOffset}},isSurfaceActive:function(){return o(e.root_,":active")},isSurfaceDisabled:function(){return Boolean(e.disabled)},isUnbounded:function(){return Boolean(e.unbounded)},registerDocumentInteractionHandler:function(e,t){return document.documentElement.addEventListener(e,t,n())},registerInteractionHandler:function(t,o){return e.root_.addEventListener(t,o,n())},registerResizeHandler:function(e){return window.addEventListener("resize",e)},removeClass:function(t){return e.root_.classList.remove(t)},updateCssVariable:function(t,n){return e.root_.style.setProperty(t,n)}}},Object.defineProperty(MDCRipple.prototype,"unbounded",{get:function(){return Boolean(this.unbounded_)},set:function(e){this.unbounded_=Boolean(e),this.setUnbounded_()},enumerable:!0,configurable:!0}),MDCRipple.prototype.activate=function(){this.foundation_.activate()},MDCRipple.prototype.deactivate=function(){this.foundation_.deactivate()},MDCRipple.prototype.layout=function(){this.foundation_.layout()},MDCRipple.prototype.getDefaultFoundation=function(){return new i(MDCRipple.createAdapter(this))},MDCRipple.prototype.initialSyncWithDOM=function(){var e=this.root_;this.unbounded="mdcRippleIsUnbounded"in e.dataset},MDCRipple.prototype.setUnbounded_=function(){this.foundation_.setUnbounded(Boolean(this.unbounded_))},MDCRipple}(t);export{u as MDCRipple};