/**
 * @license
 * Copyright 2016 Google Inc.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
import*as t from"../../tslib/tslib.es6.js";import{MDCFoundation as o}from"./foundation.js";var n=function(){function MDCComponent(o,n){for(var e=[],i=2;i<arguments.length;i++)e[i-2]=arguments[i];this.root_=o,this.initialize.apply(this,t.__spread(e)),this.foundation_=void 0===n?this.getDefaultFoundation():n,this.foundation_.init(),this.initialSyncWithDOM()}return MDCComponent.attachTo=function(t){return new MDCComponent(t,new o({}))},MDCComponent.prototype.initialize=function(){for(var t=[],o=0;o<arguments.length;o++)t[o]=arguments[o]},MDCComponent.prototype.getDefaultFoundation=function(){throw new Error("Subclasses must override getDefaultFoundation to return a properly configured foundation class")},MDCComponent.prototype.initialSyncWithDOM=function(){},MDCComponent.prototype.destroy=function(){this.foundation_.destroy()},MDCComponent.prototype.listen=function(t,o,n){this.root_.addEventListener(t,o,n)},MDCComponent.prototype.unlisten=function(t,o,n){this.root_.removeEventListener(t,o,n)},MDCComponent.prototype.emit=function(t,o,n){var e;void 0===n&&(n=!1),"function"==typeof CustomEvent?e=new CustomEvent(t,{bubbles:n,detail:o}):(e=document.createEvent("CustomEvent")).initCustomEvent(t,n,!1,o),this.root_.dispatchEvent(e)},MDCComponent}();export{n as MDCComponent};export default n;