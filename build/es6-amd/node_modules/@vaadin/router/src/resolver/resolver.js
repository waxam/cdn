define(["exports","./path-to-regexp.js","./matchRoute.js","./resolveRoute.js","../utils.js"],(function(e,t,r,o,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0,t=babelHelpers.interopRequireDefault(t),r=babelHelpers.interopRequireDefault(r),o=babelHelpers.interopRequireDefault(o);class Resolver{constructor(e,t={}){if(Object(e)!==e)throw new TypeError("Invalid routes");this.baseUrl=t.baseUrl||"",this.errorHandler=t.errorHandler,this.resolveRoute=t.resolveRoute||o.default,this.context=Object.assign({resolver:this},t.context),this.root=Array.isArray(e)?{path:"",__children:e,parent:null,__synthetic:!0}:e,this.root.parent=null}getRoutes(){return[...this.root.__children]}setRoutes(e){(0,n.ensureRoutes)(e);const t=[...(0,n.toArray)(e)];this.root.__children=t}addRoutes(e){return(0,n.ensureRoutes)(e),this.root.__children.push(...(0,n.toArray)(e)),this.getRoutes()}removeRoutes(){this.setRoutes([])}resolve(e){const t=Object.assign({},this.context,(0,n.isString)(e)?{pathname:e}:e),o=(0,r.default)(this.root,this.__normalizePathname(t.pathname),this.baseUrl),s=this.resolveRoute;let l=null,i=null,a=t;function next(e,r=l.value.route,u){const h=null===u&&l.value.route;return l=i||o.next(h),i=null,e||!l.done&&function isChildRoute(e,t){let r=t;for(;r;)if(r=r.parent,r===e)return!0;return!1}(r,l.value.route)?l.done?Promise.reject((0,n.getNotFoundError)(t)):(a=Object.assign(a?{chain:a.chain?a.chain.slice(0):[]}:{},t,l.value),function updateChainForRoute(e,t){const{route:r,path:o}=t;if(r&&!r.__synthetic){const t={path:o,route:r};if(e.chain){if(r.parent){let t=e.chain.length;for(;t--&&e.chain[t].route&&e.chain[t].route!==r.parent;)e.chain.pop()}}else e.chain=[];e.chain.push(t)}}(a,l.value),Promise.resolve(s(a)).then(t=>null!=t&&t!==n.notFoundResult?(a.result=t.result||t,a):next(e,r,t))):(i=l,Promise.resolve(n.notFoundResult))}return t.next=next,Promise.resolve().then(()=>next(!0,this.root)).catch(e=>{const t=function generateErrorMessage(e){let t=`Path '${e.pathname}' is not properly resolved due to an error.`;const r=(e.route||{}).path;return r&&(t+=` Resolution had failed on route: '${r}'`),t}(a);if(e?console.warn(t):e=new Error(t),e.context=e.context||a,e instanceof DOMException||(e.code=e.code||500),this.errorHandler)return a.result=this.errorHandler(e),a;throw e})}static __createUrl(e,t){return new URL(e,t)}get __effectiveBaseUrl(){return this.baseUrl?this.constructor.__createUrl(this.baseUrl,document.baseURI||document.URL).href.replace(/[^\/]*$/,""):""}__normalizePathname(e){if(!this.baseUrl)return e;const t=this.__effectiveBaseUrl,r=this.constructor.__createUrl(e,t).href;return r.slice(0,t.length)===t?r.slice(t.length):void 0}}Resolver.pathToRegexp=t.default;var s=Resolver;e.default=s}));