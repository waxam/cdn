define(["exports","../../../@polymer/polymer/lib/utils/async.js","../../../@polymer/polymer/polymer-element.js"],(function(r,e,t){"use strict";Object.defineProperty(r,"__esModule",{value:!0}),r.SortMixin=void 0;r.SortMixin=r=>class SortMixin extends r{static get properties(){return{multiSort:{type:Boolean,value:!1},_sorters:{type:Array,value:function(){return[]}},_previousSorters:{type:Array,value:function(){return[]}}}}ready(){super.ready(),this.addEventListener("sorter-changed",this._onSorterChanged),window.ShadyDOM&&e.microTask.run(()=>{const r=this.querySelectorAll("vaadin-grid-sorter");Array.from(r).forEach(r=>{r instanceof t.PolymerElement&&r.dispatchEvent(new CustomEvent("sorter-changed",{bubbles:!0,composed:!0}))})})}_onSorterChanged(r){const e=r.target;this._removeArrayItem(this._sorters,e),e._order=null,this.multiSort?(e.direction&&this._sorters.unshift(e),this._sorters.forEach((r,e)=>r._order=this._sorters.length>1?e:null,this)):e.direction&&(this._sorters.forEach(r=>{r._order=null,r.direction=null}),this._sorters=[e]),r.stopPropagation(),this.dataProvider&&JSON.stringify(this._previousSorters)!==JSON.stringify(this._mapSorters())&&this.clearCache(),this._a11yUpdateSorters(),this._previousSorters=this._mapSorters()}_mapSorters(){return this._sorters.map(r=>({path:r.path,direction:r.direction}))}_removeArrayItem(r,e){const t=r.indexOf(e);t>-1&&r.splice(t,1)}}}));