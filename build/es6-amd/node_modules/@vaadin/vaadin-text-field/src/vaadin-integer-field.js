define(["exports","../../../@polymer/polymer/polymer-element.js","../../../@polymer/polymer/lib/elements/custom-style.js","./vaadin-number-field.js"],(function(e,t,n,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.IntegerFieldElement=void 0;
/**
  @license
  Copyright (c) 2019 Vaadin Ltd.
  This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
  */
const r=document.createElement("template");r.innerHTML='<dom-module id="vaadin-integer-field-template">\n\n  \n</dom-module>',document.head.appendChild(r.content);class IntegerFieldElement extends i.NumberFieldElement{static get is(){return"vaadin-integer-field"}static get version(){return"2.5.4"}static get properties(){return{pattern:String,preventInvalidInput:Boolean,minlength:Number,maxlength:Number}}ready(){super.ready(),this._enabledCharPattern="[-+\\d]"}_valueChanged(e,t){if(""!==e&&!this.__isInteger(e))return console.warn(`Trying to set non-integer value "${e}" to <vaadin-integer-field>.`+" Clearing the value."),void(this.value="");super._valueChanged(e,t)}_stepChanged(e,t){if(!this.__hasOnlyDigits(e))return console.warn(`Trying to set invalid step size "${e}",`+" which is not a positive integer, to <vaadin-integer-field>. Resetting the default value 1."),void(this.step=1);super._stepChanged(e,t)}__isInteger(e){return/^(-\d)?\d*$/.test(String(e))}__hasOnlyDigits(e){return/^\d*$/.test(String(e))}}e.IntegerFieldElement=IntegerFieldElement,window.customElements.define(IntegerFieldElement.is,IntegerFieldElement)}));