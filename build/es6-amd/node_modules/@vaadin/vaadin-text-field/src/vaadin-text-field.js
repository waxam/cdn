define(["exports","../../../@polymer/polymer/polymer-element.js","./vaadin-text-field-mixin.js","../../vaadin-element-mixin/vaadin-element-mixin.js","../../../@polymer/polymer/lib/utils/html-tag.js","../../vaadin-themable-mixin/vaadin-themable-mixin.js"],(function(e,t,i,l,a,n){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.TextFieldElement=void 0;
/**
  @license
  Copyright (c) 2017 Vaadin Ltd.
  This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
  */
class TextFieldElement extends((0,l.ElementMixin)((0,i.TextFieldMixin)((0,n.ThemableMixin)(t.PolymerElement)))){static get template(){return a.html`
    <style include="vaadin-text-field-shared-styles">
      /* polymer-cli linter breaks with empty line */
    </style>

    <div class="vaadin-text-field-container">

      <label part="label" on-click="focus" id="[[_labelId]]">[[label]]</label>

      <div part="input-field" id="[[_inputId]]">

        <slot name="prefix"></slot>

        <slot name="input">
          <input part="value">
        </slot>

        <div part="clear-button" id="clearButton" role="button" aria-label\$="[[i18n.clear]]"></div>
        <slot name="suffix"></slot>

      </div>

      <div part="error-message" id="[[_errorId]]" aria-live="assertive" aria-hidden\$="[[_getErrorMessageAriaHidden(invalid, errorMessage, _errorId)]]">[[errorMessage]]</div>

    </div>
`}static get is(){return"vaadin-text-field"}static get version(){return"2.5.4"}static get properties(){return{list:{type:String},pattern:{type:String},title:{type:String}}}}e.TextFieldElement=TextFieldElement,customElements.define(TextFieldElement.is,TextFieldElement)}));