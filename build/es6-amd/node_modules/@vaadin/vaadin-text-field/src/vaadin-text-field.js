define(["exports","../../../@polymer/polymer/polymer-element.js","./vaadin-text-field-mixin.js","../../vaadin-element-mixin/vaadin-element-mixin.js","../../../@polymer/polymer/lib/utils/html-tag.js","../../vaadin-themable-mixin/vaadin-themable-mixin.js"],function(_exports,_polymerElement,_vaadinTextFieldMixin,_vaadinElementMixin,_htmlTag,_vaadinThemableMixin){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.TextFieldElement=void 0;class TextFieldElement extends((0,_vaadinElementMixin.ElementMixin)((0,_vaadinTextFieldMixin.TextFieldMixin)((0,_vaadinThemableMixin.ThemableMixin)(_polymerElement.PolymerElement)))){static get template(){return _htmlTag.html`
    <style include="vaadin-text-field-shared-styles">
      /* polymer-cli linter breaks with empty line */
    </style>

    <div class="vaadin-text-field-container">

      <label part="label" on-click="focus" id="[[_labelId]]">[[label]]</label>

      <div part="input-field">

        <slot name="prefix"></slot>

        <slot name="input">
          <input part="value">
        </slot>

        <div part="clear-button" id="clearButton" role="button" aria-label="Clear"></div>
        <slot name="suffix"></slot>

      </div>

      <div part="error-message" id="[[_errorId]]" aria-live="assertive" aria-hidden\$="[[_getErrorMessageAriaHidden(invalid, errorMessage, _errorId)]]">[[errorMessage]]</div>

    </div>
`}static get is(){return"vaadin-text-field"}static get version(){return"2.3.7"}static get properties(){return{list:{type:String},pattern:{type:String},title:{type:String}}}}_exports.TextFieldElement=TextFieldElement,customElements.define(TextFieldElement.is,TextFieldElement)});