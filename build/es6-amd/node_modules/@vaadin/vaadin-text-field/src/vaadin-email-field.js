define(["exports", "../../../@polymer/polymer/polymer-element.js", "../../../@polymer/polymer/lib/elements/custom-style.js", "./vaadin-text-field.js", "../../../@polymer/polymer/lib/elements/dom-module.js", "../../../@polymer/polymer/lib/utils/html-tag.js"], function (_exports, _polymerElement, _customStyle, _vaadinTextField, _domModule, _htmlTag) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.EmailFieldElement = void 0;

  /**
  @license
  Copyright (c) 2018 Vaadin Ltd.
  This program is available under Apache License Version 2.0, available at https://vaadin.com/license/
  */
  const $_documentContainer = (0, _htmlTag.html)`<dom-module id="vaadin-email-field-template">
  <template>
    <style>
      :host([dir="rtl"]) [part="input-field"] {
        direction: ltr;
      }

      :host([dir="rtl"]) [part="value"]::placeholder {
        direction: rtl;
        text-align: left;
      }

      :host([dir="rtl"]) [part="input-field"] ::slotted(input)::placeholder {
        direction: rtl;
        text-align: left;
      }

      :host([dir="rtl"]) [part="value"]:-ms-input-placeholder,
      :host([dir="rtl"]) [part="input-field"] ::slotted(input):-ms-input-placeholder {
        direction: rtl;
        text-align: left;
      }
    </style>
  </template>
  
</dom-module>`;
  document.head.appendChild($_documentContainer.content);
  let memoizedTemplate;
  /**
   * `<vaadin-email-field>` is a Web Component for email field control in forms.
   *
   * ```html
   * <vaadin-email-field label="Email">
   * </vaadin-email-field>
   * ```
   *
   * ### Styling
   *
   * See vaadin-text-field.html for the styling documentation
   *
   * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)
   *
   * @extends TextFieldElement
   * @demo demo/index.html
   */

  class EmailFieldElement extends _vaadinTextField.TextFieldElement {
    static get is() {
      return 'vaadin-email-field';
    }

    static get version() {
      return '2.8.0';
    }

    static get template() {
      if (!memoizedTemplate) {
        // Clone the superclass template
        memoizedTemplate = super.template.cloneNode(true); // Retrieve this element's dom-module template

        const thisTemplate = _domModule.DomModule.import(this.is + '-template', 'template');

        const styles = thisTemplate.content.querySelector('style'); // Add the and styles to the text-field template

        memoizedTemplate.content.appendChild(styles);
      }

      return memoizedTemplate;
    }
    /** @protected */


    ready() {
      super.ready();
      this.inputElement.type = 'email';
      this.inputElement.autocapitalize = 'off';
    }
    /** @protected */


    _createConstraintsObserver() {
      // NOTE: pattern needs to be set before constraints observer is initialized
      this.pattern = '^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$';

      super._createConstraintsObserver();
    }

  }

  _exports.EmailFieldElement = EmailFieldElement;
  customElements.define(EmailFieldElement.is, EmailFieldElement);
});