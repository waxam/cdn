define(["exports","../../../@polymer/polymer/polymer-element.js","./extensible-toolbar-button.js","../../simple-picker/simple-picker.js","../../es-global-bridge/es-global-bridge.js"],function(_exports,_polymerElement,_extensibleToolbarButton,_simplePicker,_esGlobalBridge){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.ExtensibleToolbarPicker=void 0;class ExtensibleToolbarPicker extends _extensibleToolbarButton.ExtensibleToolbarButton{constructor(){super(),this.label="Insert link"}static get template(){return _polymerElement.html`
      <style include="extensible-toolbar-button-styles">
        :host {
          margin: var(--extensible-toolbar-button-margin);
          --simple-picker-option: {
            line-height: var(--simple-picker-option-size);
            height: var(--simple-picker-option-size);
            max-height: var(--simple-picker-option-size);
          }
        }
      </style>
      <simple-picker
        id="button"
        allow-null$="[[allowNull]]"
        class="toolbar-button"
        disabled$="[[super.disabled]]"
        controls$="[[super.controls]]"
        on-change="_pickerChange"
        tabindex="0"
        title-as-html$="[[titleAsHtml]]"
        options="[[options]]"
        value="{{value}}"
      >
        <span id="label" class$="[[super.labelStyle]]">[[__label]]</span>
      </simple-picker>
      <paper-tooltip id="tooltip" for="button">[[__label]]</paper-tooltip>
    `}static get properties(){return{allowNull:{name:"allowNull",type:Boolean,value:!1},command:{name:"command",type:String,value:"insertHTML"},icon:{name:"icon",type:String,value:null},options:{name:"options",type:Array,value:[],notify:!0},titleAsHtml:{name:"titleAsHtml",type:Boolean,value:!1},value:{name:"value",type:Object,value:null}}}static get tag(){return"extensible-toolbar-picker"}_isToggled(range){let selectors=this.options?[].concat(...this.options).map(option=>option.value).filter(option=>null!==option&&""!==option).join(","):null,parent=null!==range&&range.commonAncestorContainer?range.commonAncestorContainer.parentNode:null;return this.$.button.value="formatBlock"===this.command&&selectors&&parent&&null!==parent.closest(selectors)?parent.closest(selectors).tagName.toLowerCase():null,!1}_setOptions(){this.set("options",this._getPickerOptions(data,this.allowNull,this.icon))}_pickerChange(e){let val=this.$.button.value;e.preventDefault(),null!==val&&void 0!==this.range&&null!==this.range&&(this.commandVal=this.$.button.value,this.doTextOperation(),!0!==this.block&&(this.$.button.value=null,this.dispatchEvent(new CustomEvent("deselect",{detail:this}))))}_getOptionData(option){return{alt:option.alt,icon:option.icon,style:option.style,value:option.value}}_getPickerOptions(options=[],allowNull=!1,icon=null){let items=[],cols=Math.sqrt(options.length)<11?Math.ceil(Math.sqrt(options.length)):10;for(let i=0;i<options.length;i++){let row=Math.floor(i/cols),col=i-row*cols,data=this._getOptionData(options[i]);void 0!==items[row]&&null!==items[row]||(items[row]=[]),items[row][col]=data}return items}}_exports.ExtensibleToolbarPicker=ExtensibleToolbarPicker,window.customElements.define(ExtensibleToolbarPicker.tag,ExtensibleToolbarPicker)});