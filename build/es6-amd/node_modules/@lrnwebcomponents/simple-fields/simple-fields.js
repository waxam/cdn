define(["exports","../../@polymer/polymer/polymer-element.js","../hax-body-behaviors/lib/HAXWiring.js","../../@polymer/polymer/lib/mixins/mutable-data.js","../../@polymer/paper-toggle-button/paper-toggle-button.js","../../@polymer/paper-button/paper-button.js","../../@polymer/paper-input/paper-textarea.js","../../@polymer/iron-icons/iron-icons.js","../eco-json-schema-form/eco-json-schema-form.js","../eco-json-schema-form/lib/eco-json-schema-object.js","../code-editor/code-editor.js","../simple-picker/simple-picker.js","../simple-icon-picker/simple-icon-picker.js","../simple-colors/lib/simple-colors-picker.js","../paper-input-flagged/paper-input-flagged.js","../simple-colors/simple-colors.js"],function(_exports,_polymerElement,_HAXWiring,_mutableData,_paperToggleButton,_paperButton,_paperTextarea,_ironIcons,_ecoJsonSchemaForm,_ecoJsonSchemaObject,_codeEditor,_simplePicker,_simpleIconPicker,_simpleColorsPicker,_paperInputFlagged,_simpleColors){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.SimpleFields=void 0;class SimpleFields extends((0,_mutableData.MutableData)(_polymerElement.PolymerElement)){static get template(){return _polymerElement.html`
      <style>
        :host {
          display: block;
          background-color: #ffffff;
          overflow: hidden;
        }

        :host([hidden]) {
          display: none;
        }

        eco-json-schema-object {
          width: 50%;
        }
        eco-json-schema-object {
          color: var(--hax-text-color);
          --eco-json-form-color: var(--hax-text-color);
          --eco-json-schema-object-form : {
            -ms-flex: unset;
            -webkit-flex: unset;
            flex: unset;
            -webkit-flex-basis: unset;
            flex-basis: unset;
          }
        }
        eco-json-schema-object .hax-code-editor {
          padding: 0;
        }
      </style>
      <eco-json-schema-object
        id="schemaobject"
        autofocus$="[[autofocus]]"
        hide-line-numbers$="[[hideLineNumbers]]"
        on-form-changed="_formChanged"
        schema="[[__validatedSchema]]"
        value="{{value}}"
      ></eco-json-schema-object>
    `}static get haxProperties(){}static get properties(){let props={autofocus:{type:Boolean,value:!1},hideLineNumbers:{type:Boolean,value:!1},fields:{type:Array,value:[],observer:"_fieldsChanged"},value:{type:Object,notify:!0,value:{},observer:"_valueChanged"},__validatedSchema:{type:Array,value:{properties:{}}}};return super.properties&&(props=Object.assign(props,super.properties)),props}static get tag(){return"simple-fields"}connectedCallback(){super.connectedCallback(),this.HAXWiring=new _HAXWiring.HAXWiring,this.HAXWiring.setup(SimpleFields.haxProperties,SimpleFields.tag,this)}_formChanged(e){this.dispatchEvent(new CustomEvent("fields-changed",{bubbles:!0,cancelable:!0,composed:!0,detail:e.detail}))}_valueChanged(oldValue,newValue){JSON.stringify(oldValue)!==JSON.stringify(newValue)&&this._setValues()}_fieldsChanged(oldValue,newValue){JSON.stringify(oldValue)!==JSON.stringify(newValue)&&this._setValues()}_setValues(){let wiring=window.HAXWiring,schema=wiring._getHaxJSONSchemaProperty(this.fields,wiring);for(let prop in this.value)schema[prop]&&(schema[prop].value=this.value[prop]);this.__validatedSchema=null,this.__validatedSchema={properties:schema}}}_exports.SimpleFields=SimpleFields,window.customElements.define(SimpleFields.tag,SimpleFields)});