define(["exports","require","../../../lit-element/lit-element.js","./simple-fields-container.js"],(function(e,t,i,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.SimpleFieldsUri=void 0,t=babelHelpers.interopRequireWildcard(t);class SimpleFieldsUri extends r.SimpleFieldsContainer{static get tag(){return"simple-fields-uri"}static get styles(){return[...super.styles,i.css`
        fieldset {
          margin: 0;
          padding: 0;
          border: none;
        }
        option {
          border-radius: 0;
        }
        legend {
          padding-inline-start: unset;
          padding-inline-end: unset;
        }
        #options {
          display: var(--simple-fields-radio-option-display, flex);
          flex-wrap: var(--simple-fields-radio-option-flex-wrap, wrap);
        }
        .option {
          display: flex;
          flex-wrap: wrap;
          align-items: stretch;
          justify-content: space-between;
          margin: 0 var(--simple-fields-margin-small, 8px);
        }
        .option:first-of-type {
          margin: 0 var(--simple-fields-margin-small, 8px) 0 0;
        }
        .option:last-of-type {
          margin: 0 0 0 var(--simple-fields-margin-small, 8px);
        }
        .option:focus-within label {
          color: var(--simple-fields-accent, #003f7d);
          transition: color ease-in-out;
        }
        :host([type]) fieldset .border-bottom {
          display: block;
        }
        .box-input:focus {
          outline: none;
        }
        textarea {
          margin: 0;
          transition: height 0.5s ease-in-out;
          box-sizing: border-box;
          vertical-align: bottom;
        }
        select.field {
          width: 100%;
          border: none;
          background: transparent;
          border-radius: 0;
          transition: color ease-in-out;
        }
        select:focus,
        select:focus-within {
          outline: none;
        }
        input[type="range"] {
          width: 100%;
          height: calc(
            var(--simple-fields-font-size, 16px) +
              var(--simple-fields-line-height, 22px)
          );
          padding: 0;
          margin: 0;
          box-sizing: border-box;
          -webkit-appearance: none;
        }
        input[type="range"]:focus {
          outline: none;
        }
        input[type="range"]::-webkit-slider-runnable-track {
          width: 100%;
          height: 16px;
          cursor: pointer;
          background: var(--simple-fields-border-color-light, #ccc);
          border-radius: 8px;
          transition: all 0.5ms ease-in-out;
        }
        :host([error]) input[type="range"]::-webkit-slider-runnable-track {
          background: var(--simple-fields-faded-error-color, #ff997f);
          transition: all 0.5ms ease-in-out;
        }
        input[type="range"]::-webkit-slider-thumb {
          height: 20px;
          width: 20px;
          border-radius: 50%;
          background: var(--simple-fields-background-color, white);
          box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.6);
          cursor: pointer;
          -webkit-appearance: none;
          margin-top: -2px;
          transition: all 0.5ms ease-in-out;
        }
        input[type="range"][readonly]::-webkit-slider-thumb,
        input[type="range"][disabled]::-webkit-slider-thumb {
          cursor: not-allowed;
        }
        input[type="range"]:focus::-webkit-slider-thumb {
          background: var(--simple-fields-accent-color, #3f51b5);
          transition: all 0.5ms ease-in-out;
        }
        :host([error]) input[type="range"]::-webkit-slider-thumb {
          background: var(--simple-fields-error-color, #dd2c00);
          transition: all 0.5ms ease-in-out;
        }
        input[type="range"][readonly]::-webkit-slider-thumb,
        input[type="range"][disabled]::-webkit-slider-thumb {
          background: var(--simple-fields-border-color, #999);
          cursor: not-allowed;
          box-shadow: none;
          transition: all 0.5ms ease-in-out;
        }
        input[type="range"]::-moz-range-track {
          width: 100%;
          height: 16px;
          cursor: pointer;
          background: var(--simple-fields-border-color-light, #ccc);
          border-radius: 8px;
          transition: all 0.5ms ease-in-out;
        }
        input[type="range"][readonly]::-moz-range-track,
        input[type="range"][disabled]::-moz-range-track {
          cursor: not-allowed;
        }
        :host([error]) input[type="range"]::-moz-range-track {
          background: var(--simple-fields-faded-error-color, #ff997f);
          transition: all 0.5ms ease-in-out;
        }
        input[type="range"]::-moz-range-thumb {
          height: 20px;
          width: 20px;
          border-radius: 50%;
          background: var(--simple-fields-background-color, white);
          box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.6);
          cursor: pointer;
          transition: all 0.5ms ease-in-out;
        }
        input[type="range"]:focus::-moz-range-thumb {
          background: var(--simple-fields-accent-color, #3f51b5);
          transition: all 0.5ms ease-in-out;
        }
        :host([error]) input[type="range"]::-moz-range-thumb {
          background: var(--simple-fields-error-color, #dd2c00);
          transition: all 0.5ms ease-in-out;
        }
        input[type="range"][readonly]::-moz-range-thumb,
        input[type="range"][disabled]::-moz-range-thumb {
          background: var(--simple-fields-border-color, #999);
          cursor: not-allowed;
          box-shadow: none;
          transition: all 0.5ms ease-in-out;
        }
        input[type="range"]::-ms-track {
          width: 100%;
          height: 16px;
          cursor: pointer;
          background: transparent;
          border-color: transparent;
          color: transparent;
          transition: all 0.5ms ease-in-out;
        }
        input[type="range"][readonly]::-ms-track,
        input[type="range"][disabled]::-ms-track {
          cursor: not-allowed;
        }
        :host([error]) input[type="range"]::-ms-track {
          background: var(--simple-fields-faded-error-color, #ff997f);
          transition: all 0.5ms ease-in-out;
        }
        input[type="range"]::-ms-fill-lower {
          background: var(--simple-fields-border-color-light, #ccc);
          border-radius: 8px;
        }
        input[type="range"]::-ms-fill-upper {
          background: var(--simple-fields-border-color-light, #ccc);
          border-radius: 8px;
        }
        input[type="range"]::-ms-thumb {
          height: 20px;
          width: 20px;
          border-radius: 50%;
          background: var(--simple-fields-background-color, white);
          box-shadow: 0 1px 5px 0 rgba(0, 0, 0, 0.6);
          cursor: pointer;
        }
        input[type="range"][readonly]::-ms-thumb,
        input[type="range"][disabled]::-ms-thumb {
          cursor: not-allowed;
        }
        input[type="range"]:focus::-ms-thumb {
          background: var(--simple-fields-accent-color, #3f51b5);
        }
        :host([error]) input[type="range"]::-ms-thumb {
          background: var(--simple-fields-error-color, #dd2c00);
          transition: all 0.5ms ease-in-out;
        }
        input[type="range"][redonly]::-ms-thumb,
        input[type="range"][disabled]::-ms-thumb {
          background: var(--simple-fields-border-color, #999);
          cursor: not-allowed;
          box-shadow: none;
          transition: all 0.5ms ease-in-out;
        }
        input[type="range"]:focus::-ms-fill-lower {
          background: var(--simple-fields-border-color-light, #ccc);
        }
        input[type="range"]:focus::-ms-fill-upper {
          background: var(--simple-fields-border-color-light, #ccc);
        }
      `]}render(){return i.html`
      <fieldset>
        <legend class="label-main" ?hidden="${!this.label}">
          ${this.label}${this.error||this.required?"*":""}
        </legend>
        <simple-picker
          id="picker"
          aria-label="Source..."
          required
          .value="${this.option}"
          @value-changed="${this.optionChanged}"
          @change="${this.changed}"
          .options="${this.options}"
        >
        </simple-picker>
        <simple-fields-field
          id="url"
          ?hidden="${"url"!==this.option}"
          value="${this.value}"
          @value-changed="${this.valueChanged}"
          label="URL"
          type="url"
          auto-validate=""
        ></simple-fields-field>
        <vaadin-upload
          capture
          form-data-name="file-upload"
          ?hidden="${"fileupload"!==this.option}"
          id="fileupload"
          @upload-before="${this._fileAboutToUpload}"
          @upload-response="${this._fileUploadResponse}"
        ></vaadin-upload>
        <div
          id="camerahole"
          ?hidden="${"selfie"!==this.option||!navigator.mediaDevices||this.noCamera}"
        ></div>
        <div
          id="voicerecorder"
          ?hidden="${"audio"!==this.option||!navigator.mediaDevices||this.noVoiceRecord}"
        ></div>
      </fieldset>
    `}static get properties(){return{...super.properties,accept:{type:String},autofocus:{type:Boolean},capture:{type:String},dirname:{type:String},list:{type:String},max:{type:Number},min:{type:Number},multiple:{type:Boolean},noCamera:{type:Boolean,attribute:"no-camera"},noVoiceRecord:{type:Boolean,attribute:"no-voice-record"},option:{type:String},options:{type:Object},pattern:{type:String},patternMessage:{type:String},requiredMessage:{type:String}}}constructor(){super(),this.autocomplete="off",this.autofocus=!1,this.multiple=!1,this.readonly=!1,this.spellcheck=!1,this.id=this._generateUUID(),this.wrap=!1,this.options={},this.__winEvents={"hax-app-picker-selection":"_haxAppPickerSelection"},this.label=null,this.noCamera=!1,this.noVoiceRecord=!0,new Promise((e,i)=>t.default(["../../../@polymer/paper-input/paper-input.js"],e,i)),new Promise((e,i)=>t.default(["../../../@polymer/paper-icon-button/paper-icon-button.js"],e,i)),new Promise((e,i)=>t.default(["../../../@vaadin/vaadin-upload/vaadin-upload.js"],e,i)),new Promise((e,i)=>t.default(["../../simple-picker/lib/simple-picker-option.js"],e,i))}updated(e){e.forEach((e,t)=>{"id"!==t||this.id||(this.id=this._generateUUID()),this._getAttributes(this.type).includes(t)&&this._updateAttribute(t),"value"===t&&this.value!==e&&("select"!==this.type&&this.field&&this._updateAttribute("value"),this._fireValueChanged()),["counter","maxlength","type"].includes(t)&&["text","textarea"].includes(this.type)&&this._updateCount(),"type"===t&&this.type!==e&&this._updateField()})}_setInputOptions(){let e=[[{alt:"URL",icon:"icons:link",value:"url"}],[{alt:"Upload",icon:"icons:file-upload",value:"fileupload"}]];return navigator.mediaDevices&&!this.noCamera&&e.push([{alt:"Camera",icon:"image:photo-camera",value:"selfie"}]),navigator.mediaDevices&&this.noVoiceRecord,e}firstUpdated(e){super.firstUpdated&&super.firstUpdated(e),this.options=[...this._setInputOptions()],this.option=this.value?"url":"fileupload"}__newPhotoShowedUp(e){let t=new File([e.detail.raw],"headshot"+e.timeStamp+".jpg");this.shadowRoot.querySelector("#fileupload")._addFile(t)}__newAudioShowedUp(e){let t=new File([e.detail.value],"voice-memo"+e.timeStamp+".mp3");this.shadowRoot.querySelector("#fileupload")._addFile(t)}_takeSelfie(e){this.camera||(new Promise((e,i)=>t.default(["../../simple-login/lib/simple-camera-snap.js"],e,i)),this.camera=document.createElement("simple-camera-snap"),this.camera.autoplay=!0,this.camera.addEventListener("simple-camera-snap-image",this.__newPhotoShowedUp.bind(this)),this.shadowRoot.querySelector("#camerahole").appendChild(this.camera))}_voiceRecorder(e){this.voice||(new Promise((e,i)=>t.default(["../../voice-recorder/voice-recorder.js"],e,i)),this.voice=document.createElement("voice-recorder"),this.voice.addEventListener("voice-recorder-recording",this.__newAudioShowedUp.bind(this)),this.shadowRoot.querySelector("#voicerecorder").appendChild(this.voice))}_resolveObjectPath(e,t){return e.split(".").reduce((function(e,t){return e?e[t]:null}),t||self)}optionChanged(e){this.option=e.detail.value}changed(e){e&&e.detail&&"selfie"===e.detail.value&&this._takeSelfie(e),e&&e.detail&&"audio"===e.detail.value&&this._voiceRecorder(e)}valueChanged(e){this.value=e.detail.value}get slottedFieldObserver(){}get patternError(){return this.pattern&&""!==this.pattern&&this.value&&(this.multiple?this.value.filter(e=>!e.match(this.pattern)):!this.value.match(this.pattern))}validate(){!this.value&&this.required&&(this.error=!0,this.errorMessage=this.requiredMessage||"required")}_fireValueChanged(){this.dispatchEvent(new CustomEvent("value-changed",{bubbles:!0,cancelable:!0,composed:!0,detail:this}))}_observeAndListen(e=!0){e?(this.addEventListener("click",this.focus),this.addEventListener("focusout",this._onFocusout),this.addEventListener("focusin",this._onFocusin)):(this.removeEventListener("click",this.focus),this.removeEventListener("focusout",this._onFocusout),this.removeEventListener("focusin",this._onFocusin))}_updateAttribute(e){this.field&&this.type&&this[e]!==this.field.getAttribute(e)&&(this[e]?this.field.setAttribute(e,this[e]):this.field.removeAttribute(e,this[e]))}_updateField(){this.type=this._getValidType(this.type),this.field=this.shadowRoot&&this.shadowRoot.querySelector(this.fieldElementTag)?this.shadowRoot.querySelector(this.fieldElementTag):void 0,this._getAttributes(this.type).forEach(e=>this._updateAttribute(e)),"select"!==this.type&&this.field&&this._updateAttribute("value")}_generateUUID(){return"ss-s-s-s-sss".replace(/s/g,Math.floor(65536*(1+Math.random())).toString(16).substring(1))}}e.SimpleFieldsUri=SimpleFieldsUri,window.customElements.define(SimpleFieldsUri.tag,SimpleFieldsUri)}));