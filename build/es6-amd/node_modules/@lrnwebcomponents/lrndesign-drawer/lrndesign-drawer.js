define(["exports", "require", "../../@polymer/polymer/polymer-element.js"], function (_exports, _require, _polymerElement) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrndesignDrawer = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  /**
   * `lrndesign-drawer`
   * @element lrndesign-drawer
   * @demo demo/index.html
   */
  class LrndesignDrawer extends _polymerElement.PolymerElement {
    constructor() {
      super();
      new Promise((res, rej) => _require.default(["../../@polymer/app-layout/app-header/app-header.js"], res, rej));
      new Promise((res, rej) => _require.default(["../../@polymer/app-layout/app-drawer/app-drawer.js"], res, rej));
      new Promise((res, rej) => _require.default(["../../@polymer/paper-icon-button/paper-icon-button.js"], res, rej));
      new Promise((res, rej) => _require.default(["../simple-tooltip/simple-tooltip.js"], res, rej));
    }

    static get template() {
      return (0, _polymerElement.html)`
      <style>
        :host {
          display: block;
          --lrndesign-drawer-width: 30%;
        }
        app-header {
          z-index: 100;
        }
        app-drawer {
          --app-drawer-width: var(--lrndesign-drawer-width);
          --app-drawer-content-container: {
            padding: 16px;
            overflow-y: scroll;
            margin-top: 112px;
          }
        }
      </style>
      <app-header>
        <app-drawer opened="{{opened}}" align="{{align}}">
          <slot></slot>
        </app-drawer>
      </app-header>
      <paper-icon-button
        icon="[[icon]]"
        alt="[[alt]]"
        id="flyoutdrawer"
      ></paper-icon-button>
      <simple-tooltip for="flyoutdrawer">[[alt]]</simple-tooltip>
    `;
    }

    static get tag() {
      return "lrndesign-drawer";
    }

    static get properties() {
      return {
        /**
         * State for if it is currently open.
         */
        opened: {
          type: Boolean,
          value: false
        },

        /**
         * Icon to present for clicking.
         */
        icon: {
          type: String,
          value: "icon"
        },

        /**
         * Side of the screen to align the flyout (right or left)
         */
        align: {
          type: String,
          value: "left"
        },

        /**
         * Alt / hover text for this link
         */
        alt: {
          type: String,
          value: ""
        }
      };
    }
    /**
     * Initalize the flyout and ensure it's not open to start
     * while adding the click event to it.
     */


    ready() {
      super.ready();
      this.shadowRoot.querySelector("paper-icon-button").addEventListener("click", e => {
        this.opened = !this.opened;
      });
    }

  }

  _exports.LrndesignDrawer = LrndesignDrawer;
  window.customElements.define(LrndesignDrawer.tag, LrndesignDrawer);
});