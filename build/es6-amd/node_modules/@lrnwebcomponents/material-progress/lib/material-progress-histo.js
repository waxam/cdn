define(["exports","../../../@polymer/polymer/polymer-element.js","../../../@polymer/polymer/lib/legacy/class.js","./material-progress-behavior.js"],(function(e,t,r,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.MaterialProgressHisto=void 0;class MaterialProgressHisto extends((0,r.mixinBehaviors)([MaterialProgressBehaviorImpl],t.PolymerElement)){static get template(){return t.html`
      <style>
        #barsContainer {
          @apply --layout-vertical;
          @apply --material-progress-histo-style;
        }
        :host > #barsContainer > ::content > * {
          height: 0px;
        }
        :host > #barsContainer > ::content > .bar {
          border-radius: calc(var(--material-progress-bar-height) / 2);
        }
        :host > #barsContainer > ::content > .bar.visible:not(.last) {
          margin-bottom: 12px;
        }
        :host > #barsContainer > ::content > .bar.visible {
          min-width: var(--material-progress-bar-height);
        }
        :host > #barsContainer > ::content > .bar:not(.visible) > * {
          visibility: hidden;
        }
        :host > #barsContainer > ::content > * > span {
          margin: 0 calc(var(--material-progress-bar-height) * 1 / 3);
        }
      </style>
      <div id="barsContainer">
        <slot id="content" name=".bar[data-value]">
          <span>test</span>
        </slot>
      </div>
      <div class="legend" hidden\$="[[_legendNeeded]]">
        <template is="dom-repeat" items="[[_legendItems]]" as="l">
          <span style\$="color: [[l.color]];">[[l.label]]</span>
        </template>
      </div>
    `}static get tag(){return"material-progress-histo"}static get properties(){return{scaleToSum:{type:Boolean,value:!1,observer:"_refresh"}}}_getWidthForBar(e,t,r,a){var s=this.scaleToSum?t:r;return(s>0?Math.floor(e/s*1e4)/100:"0")+"%"}}e.MaterialProgressHisto=MaterialProgressHisto,window.customElements.define(MaterialProgressHisto.tag,MaterialProgressHisto)}));