define(["exports","../../../@polymer/polymer/polymer-element.js","../../../@polymer/polymer/lib/utils/render-status.js","../../../@polymer/polymer/lib/legacy/polymer.dom.js","../../../@polymer/polymer/lib/utils/async.js","../../../@polymer/iron-ajax/iron-ajax.js","../../../@polymer/paper-spinner/paper-spinner.js","../../hax-body/lib/haxutils.js"],function(_exports,_polymerElement,_renderStatus,_polymerDom,_async,_ironAjax,_paperSpinner,_haxutils){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.CMSToken=void 0;class CMSToken extends _polymerElement.PolymerElement{static get template(){return _polymerElement.html`
      <style>
        :host {
          display: inline;
          min-width: 112px;
          min-height: 112px;
          transition: 0.6s all ease;
          background-color: transparent;
        }

        paper-spinner {
          transition: 0.6s all ease;
          position: absolute;
          visibility: hidden;
          display: none;
          opacity: 0;
          height: 0;
          width: 0;
        }

        #replacementcontent {
          transition: 0.6s all ease;
          visibility: visible;
          opacity: 1;
          height: auto;
          width: auto;
        }

        :host([loading]) {
          text-align: center;
        }

        :host([loading]) paper-spinner {
          visibility: visible;
          opacity: 1;
          position: relative;
          height: 80px;
          width: 80px;
          padding: 16px;
          display: flex;
        }

        :host([loading]) #replacementcontent {
          opacity: 0;
          visibility: hidden;
          height: 0;
          width: 0;
        }
      </style>
      <iron-ajax
        id="tokenrequest"
        method="GET"
        params="[[bodyData]]"
        url="[[tokenEndPoint]]"
        handle-as="json"
        last-response="{{tokenData}}"
      ></iron-ajax>
      <paper-spinner active="[[loading]]"></paper-spinner>
      <span id="replacementcontent">
        <slot></slot>
      </span>
    `}static get tag(){return"cms-token"}static get properties(){return{loading:{type:Boolean,reflectToAttribute:!0,value:!1},token:{type:String,reflectToAttribute:!0},tokenEndPoint:{type:String},bodyData:{type:Object,computed:"_generateBodyData(token, _clickInvoked)",observer:"_tokenChanged"},_clickInvoked:{type:String,value:!1},tokenData:{type:String,observer:"_handleTokenResponse"},tokenPrefix:{type:String,value:"["},tokenSuffix:{type:String,value:"]"},_displayMode:{type:String,value:"full",observer:"_displayModeChanged"}}}_displayModeChanged(newValue,oldValue){void 0!==newValue&&""!=newValue&&void 0!==this.token&&(this.token=this.token.replace(oldValue,newValue))}_generateBodyData(token,$editingState){if(null!==token&&""!==token){return{token:`${this.tokenPrefix}${token}${this.tokenSuffix}`,cachedResponse:$editingState}}}_handleTokenResponse(newValue,oldValue){null!==newValue&&void 0!==newValue.content&&(null!=document.getElementById("cmstokenidtolockonto")&&(document.getElementById("cmstokenidtolockonto").setAttribute("href",newValue.editEndpoint),document.getElementById("cmstokenidtolockonto").innerHTML=newValue.editText,document.getElementById("cmstokenidtolockonto").addEventListener("click",this.__tokenClicked.bind(this))),(0,_haxutils.wipeSlot)((0,_polymerDom.dom)(this)),_async.microTask.run(()=>{let template=document.createElement("template");template.innerHTML=newValue.content,(0,_polymerDom.dom)(this).appendChild(document.importNode(template.content,!0)),this.loading=!1}))}_tokenChanged(newValue,oldValue){void 0===newValue||""===newValue||this.loading||(void 0===this.tokenEndPoint&&void 0!==window.cmstokenEndPoint&&(this.tokenEndPoint=window.cmstokenEndPoint),this.tokenEndPoint&&(this.loading=!0,_async.microTask.run(()=>{this.$.tokenrequest.generateRequest()})))}_windowVisibilityChanged(e){!this.loading&&this._clickInvoked&&(this.$.tokenrequest.generateRequest(),this._clickInvoked=!1)}__tokenClicked(e){this._clickInvoked=!0}connectedCallback(){if(super.connectedCallback(),void 0!==this.token&&null!==this.token&&""!==this.token){0!==(0,_polymerDom.dom)(this).getEffectiveChildNodes().length||this.loading||(void 0===this.tokenEndPoint&&void 0!==window.cmstokenEndPoint&&(this.tokenEndPoint=window.cmstokenEndPoint),this.tokenEndPoint&&(this.loading=!0,_async.microTask.run(()=>{this.$.tokenrequest.generateRequest()})))}(0,_renderStatus.afterNextRender)(this,function(){document.addEventListener("visibilitychange",this._windowVisibilityChanged.bind(this))})}disconnectedCallback(){document.removeEventListener("visibilitychange",this._windowVisibilityChanged.bind(this)),super.disconnectedCallback()}static get haxProperties(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"CMS Token",description:"CMS token rendered on the backend",icon:"icons:code",color:"light-blue",groups:["CMS"],handles:[{type:"cmstoken",token:"token"}],meta:{author:"LRNWebComponents"}},settings:{quick:[],configure:[{property:"token",title:"Token",description:"Token from our CMS",inputMethod:"textfield",icon:"editor:title"}],advanced:[]},saveOptions:{wipeSlot:!0,unsetAttributes:["loading","token-data","body-data","token-end-point"]}}}postProcessgetHaxJSONSchema(schema){let href="",slot="Edit";if(void 0!==this.tokenData)for(var i in href=this.tokenData.editEndpoint,slot=this.tokenData.editText,this.tokenData.schema)schema.properties[i]=this.tokenData.schema[i];return schema.properties.__editThis={type:"string",component:{name:"a",properties:{id:"cmstokenidtolockonto",href:href,target:"_blank"},slot:slot}},schema}}_exports.CMSToken=CMSToken,window.customElements.define(CMSToken.tag,CMSToken)});