define(["exports","require","../../lit-element/lit-element.js","../schema-behaviors/schema-behaviors.js"],(function(_exports,_require,_litElement,_schemaBehaviors){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.StopNote=void 0,_require=babelHelpers.interopRequireWildcard(_require);class StopNote extends((0,_schemaBehaviors.SchemaBehaviors)(_litElement.LitElement)){static get styles(){return[_litElement.css`
        :host {
          display: block;
          width: auto;
          --background-color: #f7f7f7;
          --accent-color: #d32f2f;
          margin-bottom: 20px;
        }

        iron-icon {
          height: 100px;
          width: 100px;
        }

        :host([icon="stopnoteicons:stop-icon"]) {
          --accent-color: #d8261c;
        }

        :host([icon="stopnoteicons:warning-icon"]) {
          --accent-color: #ffeb3b;
        }

        :host([icon="stopnoteicons:confirm-icon"]) {
          --accent-color: #81c784;
        }

        :host([icon="stopnoteicons:book-icon"]) {
          --accent-color: #21a3db;
        }

        .container {
          display: flex;
          width: auto;
        }

        .message_wrap {
          border-right: 7px solid var(--accent-color);
          padding: 10px 25px;
          flex: 1 1 auto;
          background-color: var(--background-color);
        }

        .main_message {
          font-size: 32px;
          margin-top: 10px;
        }

        .secondary_message {
          margin-top: 5px;
          font-size: 19.2px;
          float: left;
        }

        .link a {
          margin-top: 5px;
          font-size: 19.2px;
          float: left;
          clear: left;
          text-decoration: none;
          color: #2196f3;
        }

        .link a:hover {
          color: #1976d2;
        }

        .svg {
          display: flex;
          justify-content: center;
        }

        .svg_wrap {
          background-color: var(--accent-color);
          padding: 5px;
          width: auto;
        }
      `]}render(){return _litElement.html`
      <div class="container">
        <div class="svg_wrap">
          <div class="svg"><iron-icon icon="${this.icon}"></iron-icon></div>
        </div>
        <div class="message_wrap">
          <div class="main_message">${this.title}</div>
          <div class="secondary_message"><slot name="message"></slot></div>
          ${this.url?_litElement.html`
                <div class="link">
                  <a href="${this.url}" id="link">
                    More Information &gt;
                  </a>
                </div>
              `:""}
        </div>
      </div>
    `}static get tag(){return"stop-note"}constructor(){super(),new Promise((res,rej)=>_require.default(["../../@polymer/iron-icon/iron-icon.js"],res,rej)),new Promise((res,rej)=>_require.default(["./lib/stop-icon.js"],res,rej)),this.url=null,this.icon="stopnoteicons:stop-icon"}static get properties(){return{title:{type:String},url:{type:String},icon:{type:String}}}updated(changedProperties){changedProperties.forEach((oldValue,propName)=>{"url"==propName&&this._urlTarget(this[propName])})}_urlTarget(url){if(url){if(this._outsideLink(url)){let link=this.shadowRoot.querySelector("#link");link.setAttribute("target","_blank"),link.setAttribute("rel","noopener noreferrer")}}}_outsideLink(url){if(0!=url.indexOf("http"))return!1;var loc=location.href,path=location.pathname,root=loc.substring(0,loc.indexOf(path));return 0!=url.indexOf(root)}static get haxProperties(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"Stop Note",description:"A message to alert readers to specific directions.",icon:"icons:report",color:"orange",groups:["Video","Media"],handles:[{type:"text",title:"label"}],meta:{author:"ELMS:LN"}},settings:{quick:[{property:"title",title:"Title",description:"Enter title for stop-note.",inputMethod:"textfield",required:!0},{property:"url",title:"URL",description:"Enter an external url.",inputMethod:"textfield",required:!0}],configure:[{property:"title",title:"Title",description:"Enter title for stop-note.",inputMethod:"textfield",required:!0},{property:"url",title:"URL",description:"Enter an external url.",inputMethod:"haxupload",required:!0},{slot:"message",title:"Message",description:"Enter a message for stop-note.",inputMethod:"code-editor",required:!0},{property:"icon",title:"Action Icon",description:"Icon used for stop-note",inputMethod:"iconpicker",options:["stopnoteicons:stop-icon","stopnoteicons:warning-icon","stopnoteicons:confirm-icon","stopnoteicons:book-icon"]}],advanced:[]}}}}_exports.StopNote=StopNote,window.customElements.define(StopNote.tag,StopNote)}));