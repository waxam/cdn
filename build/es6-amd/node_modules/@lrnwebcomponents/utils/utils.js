define(["exports"],function(_exports){function objectValFromStringPos(o,s,r=null){for(var a=(s=(s=s.replace(/\[(\w+)\]/g,".$1")).replace(/^\./,"")).split("."),i=0,n=a.length;i<n;++i){var k=a[i];if(!o)return r;if(!(k in o))return r;o=o[k]}return o}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.encapScript=function encapScript(html){html&&"function"==typeof html.replace&&(html=(html=(html=(html=(html=(html=(html=(html=(html=html.replace(/<script[\s\S]*?>/gi,"&lt;script&gt;")).replace(/<\/script>/gi,"&lt;/script&gt;")).replace(/<hax[\s\S]*?>/gi,"")).replace(/<\/hax[\s\S]*?>/gi,"")).replace(/<h-a-x[\s\S]*?>/gi,"")).replace(/<\/h-a-x*?>/gi,"")).replace(/<style[\s\S]*?>/gi,"&lt;style&gt;")).replace(/<\/style>/gi,"&lt;/style&gt;")).replace(/<template[\s\S]*?>[\s\S]*?&lt;script[\s\S]*?&gt;[\s\S]*?&lt;\/script&gt;/gi,function(match,contents,offset,input_string){return match=(match=(match=(match=match.replace("&lt;script&gt;","<script>")).replace("&lt;/script&gt;","<\/script>")).replace("&lt;style&gt;","<style>")).replace("&lt;/style&gt;","</style>")}));return html},_exports.findTagsInHTML=function findTagsInHTML(html){let tags={},tag="";var matches=html.match(/<\/([a-z,0-9]*?)-(\S*?)>/g);for(var i in matches)tag=matches[i].replace("</","").replace(">",""),tags[tag]=tag;return tags},_exports.wipeSlot=function wipeSlot(element,slot="*"){if("*"===slot)for(;null!==element.firstChild;)element.removeChild(element.firstChild);else for(var i in element.childNodes)void 0!==element.childNodes[i]&&element.childNodes[i].slot===slot&&element.removeChild(element.childNodes[i])},_exports.stripMSWord=function stripMSWord(input){var output=input.split("\n\r").join("\n").split("\r").join("\n").split("\n\n").join("\n").split("\n\n").join("\n").split("\n\n").join("\n").split("\n").join(" ").replace(/( class=(")?Mso[a-zA-Z]+(")?)/g,"");output=(output=(output=output.replace(/<\!--(\s|.)*?-->/gim,"")).replace(/<\!(\s|.)*?>/gim,"")).replace(/<(\/)*(meta|link|html|head|body|span|font|br|\\\\?xml:|xml|st1:|o:|w:|m:|v:)(\s|.)*?>/gim,"");var badTags=["style","script","applet","embed","noframes","noscript"];for(var i in badTags){let tagStripper=new RegExp("<"+badTags[i]+"(s|.)*?"+badTags[i]+"(.*?)>","gim");output=output.replace(tagStripper,"")}for(var i in output=(output=(output=(output=(output=(output=(output=(output=(output=(output=(output=(output=(output=(output=(output=(output=(output=(output=(output=(output=output.replace(/ style='(\s|.)*?'/gim,"")).replace(/ align=.*? /g,"")).replace(/ start='.*?'/g,"")).replace(/ style="(\s|.)*?"/gim,"")).replace(/ data-editable="(\s|.)*?"/gim,"")).replace(/ data-hax-ray="(\s|.)*?"/gim,"")).replace(/ class=""/gim,"")).replace(/ class="hax-active"/gim,"")).replace(/ contenteditable="(\s|.)*?"/gim,"")).replace(/&nbsp;/gm," ")).replace(/<p><p>/gm,"<p>")).replace(/<p><p>/gm,"<p>")).replace(/<\/p><\/p>/gm,"</p>")).replace(/<\/p><\/p>/gm,"</p>")).replace(/<p>(\s*)<\/p>/gm," ")).replace(/<p><\/p>/gm,"")).replace(/<p>&nbsp;<\/p>/gm," ")).replace(/<p><br\/><\/p>/gm,"")).replace(/<p><br><\/p>/gm,"")).replace(/<\/p>(\s*)<p>/gm,"</p><p>"),badTags){let emptyTagRemove=new RegExp("<"+badTags[i]+"></"+badTags[i]+">","gi");output=output.replace(emptyTagRemove,"")}return output=output.trim()},_exports.varExists=function varExists(obj,path){if("__failedToFind__"!=objectValFromStringPos(obj,path,"__failedToFind__"))return!0;return!1},_exports.varGet=function varGet(obj,path,fallback=""){return objectValFromStringPos(obj,path,fallback)},_exports.objectValFromStringPos=objectValFromStringPos,_exports.getRange=function getRange(root){if(root.getSelection){const s=root.getSelection();return s.rangeCount?s.getRangeAt(0):null}const thisFrame=cachedRange.get(root);if(thisFrame)return thisFrame;const initialText=window.getSelection().toString(),result=internalGetShadowSelection(root),rs=result.range&&result.range.toString()||null;null!==rs&&rs!==initialText&&rs.replace(/\s/g,"")!==initialText.replace(/\s/g,"")&&(console.warn("invalid range, initial text:",initialText),console.warn("vs",rs,result.mode,result.range));return cachedRange.set(root,result.range),window.setTimeout(()=>{cachedRange.delete(root)},0),debug&&console.debug("getRange got",result),result.range},_exports.internalGetShadowSelection=internalGetShadowSelection,_exports.winEventsElement=void 0;_exports.winEventsElement=function(SuperClass){return class extends SuperClass{__applyWinEvents(status){if(this.__winEvents)for(var eName in this.__winEvents)window[`${status?"add":"remove"}EventListener`](eName,this[this.__winEvents[eName]].bind(this))}connectedCallback(){super.connectedCallback&&super.connectedCallback(),this.__applyWinEvents(!0)}disconnectedCallback(){this.__applyWinEvents(!1),super.disconnectedCallback&&super.disconnectedCallback()}}};const debug=!1,validNodeTypes=[Node.ELEMENT_NODE,Node.TEXT_NODE,Node.DOCUMENT_FRAGMENT_NODE];function findNode(s,parentNode,isLeft){const nodes=parentNode.childNodes||parentNode.children;if(!nodes)return parentNode;for(let i=0;i<nodes.length;++i){const childNode=nodes[isLeft?i:nodes.length-1-i];if(node=childNode,validNodeTypes.includes(node.nodeType)){if(debug&&console.debug("checking child",childNode,"IsLeft",isLeft),s.containsNode(childNode,!0))return s.containsNode(childNode,!1)?(debug&&console.info("found child",childNode),childNode):(debug&&console.info("descending child",childNode),findNode(s,childNode,isLeft));debug&&console.info(parentNode,"does NOT contain",childNode)}}var node;return parentNode}const addInternalListener=(()=>{if(document.createElement("div").attachShadow({mode:"open"}).getSelection)return document.addEventListener("selectionchange",ev=>{document.dispatchEvent(new CustomEvent("-shadow-selectionchange"))}),()=>{};let withinInternals=!1;const handlers=[];return document.addEventListener("selectionchange",ev=>{withinInternals||(document.dispatchEvent(new CustomEvent("-shadow-selectionchange")),withinInternals=!0,window.setTimeout(()=>{withinInternals=!1},0),handlers.forEach(fn=>fn(ev)))}),fn=>handlers.push(fn)})();let wasCaret=!1,resolveTask=null;function containsNextElement(s,node,walkForward){const start=node;for(;(node=walkFromNode(node,walkForward))&&node.contains(start););return!!node&&(node instanceof Element&&s.containsNode(node,!0))}function walkFromNode(node,walkForward){if(!walkForward)return node.previousSibling||node.parentNode||null;for(;node;){if(node.nextSibling)return node.nextSibling;node=node.parentNode}return null}function initialSpace(node){return node.nodeType!==Node.TEXT_NODE?0:/^\s*/.exec(node.textContent)[0].length}addInternalListener(ev=>{"Caret"===window.getSelection().type?wasCaret=!0:wasCaret&&!resolveTask&&(resolveTask=Promise.resolve(!0).then(()=>{wasCaret=!1,resolveTask=null}))});const cachedRange=new Map;const fakeSelectionNode=document.createTextNode("");function internalGetShadowSelection(root){const range=document.createRange(),s=window.getSelection();if(!s.containsNode(root.host,!0))return{range:null,mode:"none"};root.insertBefore(fakeSelectionNode,root.childNodes[0]);const includesBeforeRoot=s.containsNode(fakeSelectionNode);if(fakeSelectionNode.remove(),includesBeforeRoot)return{range:null,mode:"outside-before"};root.appendChild(fakeSelectionNode);const includesAfterRoot=s.containsNode(fakeSelectionNode);if(fakeSelectionNode.remove(),includesAfterRoot)return{range:null,mode:"outside-after"};const measure=()=>s.toString().length;s.toString();if("Caret"!==s.type&&"Range"!==s.type)throw new TypeError("unexpected type: "+s.type);s.type;const leftNode=findNode(s,root,!0);let rightNode,isNaturalDirection=void 0;if("Range"===s.type&&(rightNode=findNode(s,root,!1),isNaturalDirection=function getSelectionDirection(s,leftNode,rightNode){if("Range"!==s.type)return;const measure=()=>s.toString().length,initialSize=measure();if(debug&&console.info(`initial selection: "${s.toString()}"`),1===initialSize&&wasCaret&&leftNode===rightNode)return debug&&console.debug("resetting size=1"),s.extend(leftNode,0),void s.collapseToEnd();let updatedSize;return s.modify("extend","forward","character"),updatedSize=measure(),debug&&console.info(`forward selection: "${s.toString()}"`),updatedSize>initialSize||containsNextElement(s,rightNode,!0)?(debug&&console.info("got forward >, moving right"),s.modify("extend","backward","character"),!0):updatedSize<initialSize||!s.containsNode(leftNode)?(debug&&console.info("got forward <, moving left"),s.modify("extend","backward","character"),!1):(s.modify("extend","backward","character"),updatedSize=measure(),debug&&console.info(`backward selection: "${s.toString()}"`),updatedSize>initialSize||containsNextElement(s,leftNode,!1)?(debug&&console.info("got backwards >, moving left"),s.modify("extend","forward","character"),!1):updatedSize<initialSize||!s.containsNode(rightNode)?(debug&&console.info("got backwards <, moving right"),s.modify("extend","forward","character"),!0):void 0)}(s,leftNode,rightNode)),"Caret"===s.type){s.extend(leftNode,0);const at=measure();return s.collapseToEnd(),range.setStart(leftNode,at),range.setEnd(leftNode,at),{range:range,mode:"caret"}}if(void 0===isNaturalDirection){if("Range"!==s.type)throw new TypeError("unexpected type: "+s.type);return range.setStart(leftNode,0),range.setEnd(rightNode,rightNode.length),{range:range,mode:"all"}}const size=measure();let offsetLeft,offsetRight;const validRightLength=rightNode.length-function ignoredTrailingSpace(node){if(node.nodeType!==Node.TEXT_NODE)return 0;const trailingSpaceCount=/\s*$/.exec(node.textContent)[0].length;return trailingSpaceCount?trailingSpaceCount-1:0}(rightNode);return isNaturalDirection?(s.extend(leftNode,0),offsetLeft=measure()+initialSpace(leftNode),s.extend(rightNode,validRightLength),offsetRight=validRightLength-(measure()-size),s.extend(rightNode,offsetRight)):(s.extend(rightNode,validRightLength),offsetRight=validRightLength-measure(),s.extend(leftNode,0),offsetLeft=measure()-size+initialSpace(leftNode),s.extend(leftNode,offsetLeft)),debug&&(leftNode===rightNode?console.info("got string",leftNode.textContent.substr(offsetLeft,offsetRight-offsetLeft)):(console.info(">>> string",leftNode.textContent.substr(offsetLeft)),console.info("<<< string",rightNode.textContent.substr(0,offsetRight)))),range.setStart(leftNode,offsetLeft),range.setEnd(rightNode,offsetRight),{mode:isNaturalDirection?"right":"left",range:range}}});