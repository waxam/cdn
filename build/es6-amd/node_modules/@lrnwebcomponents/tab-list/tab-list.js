define(["exports","require","../../@polymer/polymer/polymer-element.js","../../@polymer/polymer/lib/utils/render-status.js","../hax-body-behaviors/lib/HAXWiring.js"],function(_exports,_require,_polymerElement,_renderStatus,_HAXWiring){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.TabList=void 0;_require=babelHelpers.interopRequireWildcard(_require);/**
 * `tab-list`
 * `A simple listing of tabed links / items`
 * @demo demo/index.html
 */class TabList extends _polymerElement.PolymerElement{constructor(){super();new Promise((res,rej)=>_require.default(["../../@polymer/paper-tabs/paper-tabs.js"],res,rej));new Promise((res,rej)=>_require.default(["../../@polymer/paper-tabs/paper-tab.js"],res,rej));new Promise((res,rej)=>_require.default(["../../@polymer/paper-button/paper-button.js"],res,rej));(0,_renderStatus.afterNextRender)(this,function(){this.HAXWiring=new _HAXWiring.HAXWiring;this.HAXWiring.setup(TabList.haxProperties,TabList.tag,this)})}static get template(){return _polymerElement.html`
      <style>
        :host {
          display: block;
          margin: 0 auto;
          list-style: none;
          display: block;
          padding: 16px;
          border-bottom: 1px solid black;
        }
        paper-tabs {
          align-items: center;
          justify-items: center;
        }
        paper-tab a {
          text-decoration: none;
          flex: unset;
          height: unset;
          width: 100%;
          text-align: center;
        }
        paper-button {
          text-transform: unset;
          width: 100%;
          display: block;
          min-width: unset;
          margin: 0;
          text-overflow: ellipsis;
          overflow: hidden;
        }
        @media screen and (max-width: 600px) {
          paper-tab {
            display: block;
          }
        }
      </style>
      <paper-tabs>
        <template is="dom-repeat" items="[[tabs]]" as="tab">
          <paper-tab>
            <a target="_blank" href="[[tab.link]]" tabindex="-1">
              <paper-button raised>[[tab.label]]</paper-button>
            </a>
          </paper-tab>
        </template>
      </paper-tabs>
    `}static get tag(){return"tab-list"}static get observers(){return["_valueChanged(tabs.*)"]}static get properties(){return{/**
       * List of tabs
       */tabs:{type:Array,value:[],notify:!0}}}/**
   * Notice an array has changed and update the DOM.
   */_valueChanged(e){for(var i in e.base){for(var j in e.base[i]){this.notifyPath("tabs."+i+"."+j)}}}static get haxProperties(){return{canScale:!1,canPosition:!1,canEditSource:!1,gizmo:{title:"Tabs",description:"A list of links as tabs.",icon:"icons:tab",color:"grey",groups:["Presentation","Links"],handles:[],meta:{author:"LRNWebComponents"}},settings:{quick:[],configure:[{property:"tabs",title:"Tabs",description:"Listing of tabs",inputMethod:"array",properties:[{property:"link",title:"Link",description:"link to go to",inputMethod:"textfield",required:!0},{property:"label",title:"Label",description:"text to place on the tab",inputMethod:"textfield",required:!0}]}],advanced:[]}}}}_exports.TabList=TabList;window.customElements.define(TabList.tag,TabList)});