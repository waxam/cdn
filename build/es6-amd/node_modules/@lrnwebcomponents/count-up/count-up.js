define(["exports","../../lit-element/lit-element.js","../intersection-element/lib/IntersectionElementSuper.js","../../countup.js/dist/countUp.min.js"],(function(_exports,_litElement,_IntersectionElementSuper,_countUpMin){Object.defineProperty(_exports,"__esModule",{value:!0}),Object.defineProperty(_exports,"CountUp",{enumerable:!0,get:function(){return _countUpMin.CountUp}}),_exports.CountUpElement=void 0;
/**
   * Copyright 2019 The Pennsylvania State University
   * @license Apache-2.0, see License.md for full text.
   */
class CountUpElement extends((0,_IntersectionElementSuper.IntersectionElementSuper)(_litElement.LitElement)){static get styles(){return[_litElement.css`
        :host {
          display: inline-flex;
          --count-up-color: #000000;
        }

        :host([hidden]) {
          display: none;
        }

        .wrapper {
          display: block;
          text-align: center;
          width: 100%;
          height: 100%;
        }

        #counter {
          color: var(--count-up-color);
          font-weight: var(--count-up-number-font-weight);
          font-size: var(--count-up-number-font-size);
        }
      `]}render(){return _litElement.html`
      <div class="wrapper">
        <slot name="prefix"></slot>
        <div id="counter"></div>
        <slot name="suffix"></slot>
      </div>
    `}static get haxProperties(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"Count up",description:"count up js wrapper with minimal styling",icon:"icons:android",color:"green",groups:["Up"],handles:[{type:"todo:read-the-docs-for-usage"}],meta:{author:"btopro",owner:"The Pennsylvania State University"}},settings:{quick:[],configure:[{property:"start",description:"",inputMethod:"textfield"},{property:"end",description:"",inputMethod:"textfield"},{property:"duration",description:"",inputMethod:"textfield"},{property:"noeasing",description:"",inputMethod:"boolean"},{property:"decimalplaces",description:"",inputMethod:"textfield"},{property:"separator",description:"",inputMethod:"textfield"},{property:"decimal",description:"",inputMethod:"textfield"},{property:"prefix",description:"",inputMethod:"textfield"},{property:"suffix",description:"",inputMethod:"textfield"}],advanced:[]}}}static get properties(){return{...super.properties,start:{type:Number},end:{type:Number},duration:{type:Number},noeasing:{type:Boolean},decimalplaces:{type:Number},separator:{type:String},decimal:{type:String},prefixtext:{type:String},suffixtext:{type:String},thresholds:{type:Array},rootMargin:{type:String,attribute:"root-margin"},ratio:{type:Number,reflect:!0},visibleLimit:{type:Number,reflect:!0,attribute:"visible-limit"},elementVisible:{type:Boolean}}}static get tag(){return"count-up"}constructor(){super(),this.start=0,this.end=100,this.duration=2.5,this.noeasing=!1,this.decimalplaces=0,this.separator=",",this.decimal=".",this.prefixtext=" ",this.suffixtext=" "}firstUpdated(){const options={startVal:this.start,decimalPlaces:this.decimalplaces,duration:this.duration,useEasing:!this.noeasing,separator:this.separator,decimal:this.decimal,prefix:this.prefixtext,suffix:this.suffixtext};this._countUp=new _countUpMin.CountUp(this.shadowRoot.querySelector("#counter"),this.end,options)}updated(propertiesChanged){propertiesChanged.forEach((oldValue,propName)=>{"elementVisible"==propName&&this[propName]&&this._countUp.start()})}}_exports.CountUpElement=CountUpElement,customElements.define(CountUpElement.tag,CountUpElement)}));