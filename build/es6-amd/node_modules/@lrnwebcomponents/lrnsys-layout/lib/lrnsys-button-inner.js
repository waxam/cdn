define(["exports","../../../@polymer/polymer/polymer-element.js","../../../@polymer/polymer/lib/elements/dom-if.js","../../paper-avatar/paper-avatar.js","../../lrn-icons/lrn-icons.js","../../../@polymer/iron-icons/iron-icons.js"],function(_exports,_polymerElement,_domIf,_paperAvatar,_lrnIcons,_ironIcons){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.LrnsysButtonInner=void 0;/**
 * `lrnsys-button-inner`
 */class LrnsysButtonInner extends _polymerElement.PolymerElement{static get template(){return _polymerElement.html`
      <style>
        :host {
          display: block;
        }
        :host > div > * {
          vertical-align: middle;
        }
        .text-label {
          margin-left: 8px;
        }
        .text-label-only {
          margin-left: 0;
        }
      </style>
      <div>
        <template is="dom-if" if="[[avatar]]">
          <paper-avatar src\$="[[avatar]]"></paper-avatar>
        </template>
        <template is="dom-if" if="[[icon]]">
          <lrn-icon icon="[[icon]]"></lrn-icon>
        </template>
        <template is="dom-if" if="[[text]]">
          <span class\$="[[_getTextLabelClass(avatar,icon)]]">[[text]]</span>
        </template>
      </div>
      <div><slot name="button"></slot><slot></slot></div>
    `}static get tag(){return"lrnsys-button-inner"}static get properties(){return{/**
       * Icon to present for clicking.
       */icon:{type:String},/**
       * Icon to present for clicking.
       */avatar:{type:String},/**
       * Text to present for clicking.
       */text:{type:String}}}/**
   * Find out if the text does not have an avatar or an icon to the left,
   * and add a class to remove the left margin.
   */_getTextLabelClass(avatar,icon){if(!avatar&&!icon){return"text-label-only"}return"text-label"}}_exports.LrnsysButtonInner=LrnsysButtonInner;window.customElements.define(LrnsysButtonInner.tag,LrnsysButtonInner)});