define(["exports","../../@polymer/polymer/polymer-element.js","../simple-colors/simple-colors.js"],function(_exports,_polymerElement,_simpleColors){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.FilteredImage=void 0;class FilteredImage extends _simpleColors.SimpleColors{static get template(){return _polymerElement.html`
      <style>
        :host {
          display: block;
        }
        :host([hidden]) {
          display: none;
        }
      </style>
      <style></style>
      <svg id="svg" viewBox$="[[viewBox]]">
        <rect id="rect" x="0" y="0"></rect>
        <filter id$="[[__id]]">
          <feColorMatrix
            id="matrix"
            type="matrix"
            values=" 1   0   0   0   0
               0   1   0   0   0
               0   0   1   0   0
               0   0   0   1   0 "
          />
        </filter>
        <image id="image" filter$="url(#[[__id]])" x="0" y="0"></image>
      </svg>
    `}static get haxProperties(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"Filtered image",description:"An image using an SVG filter. Can be used to make background images have more contrast with text.",icon:"icons:android",color:"green",groups:["Image"],handles:[{type:"todo:read-the-docs-for-usage"}],meta:{author:"nikkimk",owner:"The Pennsylvania State University"}},settings:{quick:[{property:"src",description:"",inputMethod:"textfield",required:!0,icon:"icons:link",validationType:"url"},{property:"alt",description:"",inputMethod:"alt",required:!0,icon:"icons:accessibility"}],configure:[{property:"src",description:"",inputMethod:"textfield",required:!0,icon:"icons:link",validationType:"url"},{property:"alt",description:"",inputMethod:"alt",required:!0,icon:"icons:accessibility"}],advanced:[]}}}static get properties(){let props={src:{name:"src",type:String,value:"",observer:"_srcChanged"},__id:{name:"__id",type:String,computed:"_getID(src,matrix)"},alt:{name:"alt",type:String,value:""},height:{name:"width",type:String,value:"",observer:"_heightChanged"},width:{name:"unset",type:String,value:"",observer:"_widthChanged"},viewBox:{name:"viewBox",type:String,computed:"_getViewBox(height,width)"},color:{name:"color",type:String,value:"#ffffff"},strength:{name:"strength",type:Number,value:1},contrast:{name:"contrast",type:Number,value:0},__matrix:{name:"matrix",type:Array,computed:"_getMatrix(color,contrast,strength)"}};return super.properties&&(props=Object.assign(props,super.properties)),props}static get tag(){return"filtered-image"}connectedCallback(){super.connectedCallback(),this._srcChanged()}_heightChanged(){let svg=this.$.svg,image=svg.querySelector("#image"),rect=svg.querySelector("#rect");svg.setAttribute("height",this.height),image.setAttribute("height",this.height),rect.setAttribute("height",this.height)}_widthChanged(){let svg=this.$.svg,image=svg.querySelector("#image"),rect=svg.querySelector("#rect");svg.setAttribute("width",this.width),image.setAttribute("width",this.width),rect.setAttribute("width",this.width)}_getViewBox(height,width){return`0 0 ${width} ${height}`}_srcChanged(){let image=this.$.svg.querySelector("#image");image.setAttribute("href",this.src),image.setAttribute("xlink:href",this.src)}_getMatrix(color,contrast,strength){let values=[[1,0,0,0,0],[0,1,0,0,0],[0,0,1,0,0],[0,0,0,1,0]],matrix=this.$.svg.querySelector("#matrix"),rgba=null;if(color.startsWith("#")&&color.length>6)7===color.length&&(color+="ff"),values[0][0]=parseInt(color.substring(1,3),16)/255,values[1][1]=parseInt(color.substring(3,5),16)/255,values[2][2]=parseInt(color.substring(5,7),16)/255,values[3][3]=parseInt(color.substring(7,9),16)/255;else if(color.startsWith("#"))4===color.length&&(color+="f"),values[0][0]=parseInt(color.substring(1,2)+color.substring(1,2),16)/255,values[1][1]=parseInt(color.substring(2,3)+color.substring(2,3),16)/255,values[2][2]=parseInt(color.substring(3,4)+color.substring(3,4),16)/255,values[3][3]=parseInt(color.substring(4,5)+color.substring(4,5),16)/255;else if(color.startsWith("rgb")){rgba=color.replace(/rgba?\(/g,"").replace(/\)/g,"").split(","),values[0][0]=parseInt(rgba[0]/255),values[1][1]=parseInt(rgba[1]/255),values[2][2]=parseInt(rgba[2]/255),values[3][3]=values[3][3]||"1"}if(0!==contrast&&(values[0][3]=values[0][0]*contrast/100,values[1][3]=values[1][1]*contrast/100,values[2][3]=values[2][2]*contrast/100),1!==strength){values[0][0]=values[0][0]+(1-strength)*(1-values[0][0]),values[1][1]=values[1][1]+(1-strength)*(1-values[1][1]),values[2][2]=values[2][2]+(1-strength)*(1-values[2][2])}return console.log(values),matrix.setAttribute("values",JSON.stringify(values).replace(/[,\[\]]/g," ")),values}_getID(src,matrix){return("svg"+Math.random()).replace(/0./g,"-")}}_exports.FilteredImage=FilteredImage,window.customElements.define(FilteredImage.tag,FilteredImage)});