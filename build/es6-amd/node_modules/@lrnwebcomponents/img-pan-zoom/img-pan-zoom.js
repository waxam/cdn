define(["exports","meta","require","../../lit-element/lit-element.js","../es-global-bridge/es-global-bridge.js"],(function(_exports,meta,_require,_litElement,_esGlobalBridge){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.ImgPanZoom=void 0,meta=babelHelpers.interopRequireWildcard(meta),_require=babelHelpers.interopRequireWildcard(_require);class ImgPanZoom extends _litElement.LitElement{static get styles(){return[_litElement.css`
        :host {
          display: block;
          position: relative;
          height: 500px;
        }
        #viewer {
          position: relative;
          height: 100%;
          width: 100%;
        }

        hexagon-loader {
          opacity: 0;
          display: block;
          transition: opacity 700ms;
          position: absolute;
          margin: auto;
          top: 0;
          left: 0;
          bottom: 0;
          right: 0;
          z-index: 1;
          height: 70px;
          width: 70px;
        }
        hexagon-loader[loading] {
          opacity: 1;
        }
      `]}render(){return _litElement.html`
      <!-- Only preload regular images -->
      ${this.dzi?"":_litElement.html`
            <hexagon-loader
              ?hidden="${this.hideSpinner}"
              ?loading=${this.loading}
              item-count="4"
              size="small"
            ></hexagon-loader>
            <img-loader
              loaded="${this.loaded}"
              @loaded-changed="${this.loadedChangedEvent}"
              ?loading="${this.loading}"
              @loading-changed="${this.loadingChangedEvent}"
              src="${this.src}"
            ></img-loader>
          `}

      <!-- Openseadragon -->
      <div id="viewer"></div>
    `}static get tag(){return"img-pan-zoom"}static get properties(){return{src:{type:String},dzi:{type:Boolean},fadeIn:{type:Boolean,attribute:"fade-in"},loading:{type:Boolean},hideSpinner:{type:Boolean,attribute:"hide-spinner"},loaded:{type:Boolean},showNavigationControl:{type:Boolean,attribute:"show-navigation-control"},showNavigator:{type:Boolean,attribute:"show-navigator"},zoomPerClick:{type:Number,attribute:"zoom-per-click"},zoomPerScroll:{type:Number,attribute:"zoom-per-scroll"},animationTime:{type:Number,attribute:"animation-time"},navPrevNextWrap:{type:Boolean,attribute:"nav-prev-next-wrap"},showRotationControl:{type:Boolean,attribute:"show-rotation-control"},minZoomImageRatio:{type:Number,attribute:"min-zoom-image-ratio"},maxZoomPixelRatio:{type:Number,attribute:"max-zoom-pixel-ratio"},constrainDuringPan:{type:Boolean,attribute:"constrain-during-pan"},visibilityRatio:{type:Number,attribute:"visibility-ratio"}}}pathFromUrl(url){return url.substring(0,url.lastIndexOf("/")+1)}constructor(){super(),this.loading=!1,this.dzi=!1,this.fadeIn=!0,this.hideSpinner=!1,this.showNavigationControl=!1,this.showNavigator=!1,this.zoomPerClick=2,this.zoomPerScroll=1.2,this.animationTime=1.2,this.navPrevNextWrap=!1,this.showRotationControl=!1,this.minZoomImageRatio=1,this.maxZoomPixelRatio=1.1,this.constrainDuringPan=!1,this.visibilityRatio=1,new Promise((res,rej)=>_require.default(["../hexagon-loader/hexagon-loader.js"],res,rej)),new Promise((res,rej)=>_require.default(["./lib/img-loader.js"],res,rej)),setTimeout(()=>{let location=`${this.pathFromUrl(decodeURIComponent(meta.url))}lib/openseadragon/build/openseadragon/openseadragon.min.js`;window.addEventListener("es-bridge-openseadragon-loaded",this._openseadragonLoaded.bind(this)),window.ESGlobalBridge.requestAvailability(),window.ESGlobalBridge.instance.load("openseadragon",location)},0)}updated(changedProperties){changedProperties.forEach((oldValue,propName)=>{"loading"==propName&&this.dispatchEvent(new CustomEvent("loading-changed",{detail:{value:this[propName]}})),"loaded"==propName&&(this._loadedChanged(this[propName],oldValue),this.dispatchEvent(new CustomEvent("loaded-changed",{detail:{value:this[propName]}})))})}_openseadragonLoaded(){this.__openseadragonLoaded=!0,this.dzi&&this._initOpenSeadragon()}connectedCallback(){super.connectedCallback(),this.animationConfig={fade:{name:"fade-in-animation",node:this.shadowRoot.querySelector("#viewer")}},setTimeout(()=>{this.dzi&&this.__openseadragonLoaded&&this._initOpenSeadragon()},0)}disconnectedCallback(){super.disconnectedCallback(),window.removeEventListener("es-bridge-openseadragon-loaded",this._openseadragonLoaded.bind(this))}_initOpenSeadragon(){setTimeout(()=>{var tileSources=this.src;this.dzi||(tileSources={type:"image",url:this.src,buildPyramid:!1}),this.viewer=new OpenSeadragon({element:this.shadowRoot.querySelector("#viewer"),visibilityRatio:this.visibilityRatio,constrainDuringPan:this.constrainDuringPan,showNavigationControl:this.showNavigationControl,showNavigator:this.showNavigator,zoomPerClick:this.zoomPerClick,zoomPerScroll:this.zoomPerScroll,animationTime:this.animationTime,navPrevNextWrap:this.navPrevNextWrap,showRotationControl:this.showRotationControl,minZoomImageRatio:this.minZoomImageRatio,maxZoomPixelRatio:this.maxZoomPixelRatio,tileSources:tileSources}),this.init=!0},100)}destroy(){this.viewer.destroy()}zoomIn(){var zoomTo=this.viewer.viewport.getZoom()+.7;zoomTo<this.viewer.viewport.getMaxZoom()&&this.viewer.viewport.zoomTo(zoomTo)}zoomOut(){var currentZoom=this.viewer.viewport.getZoom(),minZoom=this.viewer.viewport.getMinZoom(),zoomTo=currentZoom-.7;zoomTo>minZoom?this.viewer.viewport.zoomTo(zoomTo):minZoom!=currentZoom&&this.resetZoom()}resetZoom(){this.viewer.viewport.goHome()}_srcChanged(){this.dzi&&this.init&&this._addTiledImage()}loadedChangedEvent(e){this.loaded=e.detail.value}loadingChangedEvent(e){this.loading=e.detail.value}_loadedChanged(){this.loaded&&(this.init?this._addImage():this._initOpenSeadragon())}_addImage(){this.viewer.addSimpleImage({url:this.src,index:0,replace:!0})}_addTiledImage(){this.viewer.addTiledImage({tileSource:this.src,index:0,replace:!0})}}_exports.ImgPanZoom=ImgPanZoom,window.customElements.define(ImgPanZoom.tag,ImgPanZoom)}));