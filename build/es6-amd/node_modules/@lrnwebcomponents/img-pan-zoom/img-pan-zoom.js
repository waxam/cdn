define(["exports","meta","require","../../@polymer/polymer/polymer-element.js","../../@polymer/polymer/lib/utils/render-status.js","../../@polymer/polymer/lib/utils/resolve-url.js","../es-global-bridge/es-global-bridge.js","../../@polymer/polymer/lib/elements/dom-if.js"],function(_exports,meta,_require,_polymerElement,_renderStatus,_resolveUrl,_esGlobalBridge,_domIf){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.ImgPanZoom=void 0,meta=babelHelpers.interopRequireWildcard(meta),_require=babelHelpers.interopRequireWildcard(_require);class ImgPanZoom extends _polymerElement.PolymerElement{static get template(){return _polymerElement.html`
      <style>
        :host {
          display: block;
          position: relative;
          height: 500px;
        }
        #viewer {
          position: relative;
          height: 100%;
          width: 100%;
        }

        paper-spinner {
          opacity: 0;
          display: block;
          transition: opacity 700ms;
          position: absolute;
          margin: auto;
          top: 0;
          left: 0;
          bottom: 0;
          right: 0;
          z-index: 1;
          height: 70px;
          width: 70px;
          --paper-spinner-color: var(--img-pan-zoom-spinner-color, #2196f3);
          --paper-spinner-stroke-width: var(--img-pan-zoom-spinner-width, 5px);
          @apply --img-pan-zoom-spinner;
        }
        paper-spinner[active] {
          opacity: 1;
        }
      </style>

      <!-- Only preload regular images -->
      <template is="dom-if" if="[[!dzi]]">
        <paper-spinner
          hidden$="[[hideSpinner]]"
          active="[[loading]]"
        ></paper-spinner>
        <img-loader
          loaded="{{loaded}}"
          loading="{{loading}}"
          src="[[src]]"
        ></img-loader>
      </template>

      <!-- Openseadragon -->
      <div id="viewer"></div>
    `}static get tag(){return"img-pan-zoom"}static get properties(){return{src:{type:String},dzi:{type:Boolean,value:!1},fadeIn:{type:Boolean,value:!0},loading:{type:Boolean,notify:!0},hideSpinner:{type:Boolean,value:!1},loaded:{type:Boolean,notify:!0,observer:"_loadedChanged"},showNavigationControl:{type:Boolean,value:!1},showNavigator:{type:Boolean,value:!1},zoomPerClick:{type:Number,value:2},zoomPerScroll:{type:Number,value:1.2},animationTime:{type:Number,value:1.2},navPrevNextWrap:{type:Boolean,value:!1},showRotationControl:{type:Boolean,value:!1},minZoomImageRatio:{type:Number,value:1},maxZoomPixelRatio:{type:Number,value:1.1},constrainDuringPan:{type:Boolean,value:!1},visibilityRatio:{type:Number,value:1}}}constructor(){super(),new Promise((res,rej)=>_require.default(["../../@polymer/paper-spinner/paper-spinner.js"],res,rej)),new Promise((res,rej)=>_require.default(["./lib/img-loader.js"],res,rej));let location=`${(0,_resolveUrl.pathFromUrl)(decodeURIComponent(meta.url))}lib/openseadragon/build/openseadragon/openseadragon.min.js`;window.addEventListener("es-bridge-openseadragon-loaded",this._openseadragonLoaded.bind(this)),window.ESGlobalBridge.requestAvailability(),window.ESGlobalBridge.instance.load("openseadragon",location)}_openseadragonLoaded(){this.__openseadragonLoaded=!0,this.dzi&&this._initOpenSeadragon()}connectedCallback(){super.connectedCallback(),this.animationConfig={fade:{name:"fade-in-animation",node:this.shadowRoot.querySelector("#viewer")}},(0,_renderStatus.afterNextRender)(this,function(){this.dzi&&this.__openseadragonLoaded&&this._initOpenSeadragon()})}disconnectedCallback(){super.disconnectedCallback(),window.removeEventListener("es-bridge-openseadragon-loaded",this._openseadragonLoaded.bind(this))}_initOpenSeadragon(){setTimeout(()=>{var tileSources=this.src;this.dzi||(tileSources={type:"image",url:this.src,buildPyramid:!1}),this.viewer=new OpenSeadragon({element:this.shadowRoot.querySelector("#viewer"),visibilityRatio:this.visibilityRatio,constrainDuringPan:this.constrainDuringPan,showNavigationControl:this.showNavigationControl,showNavigator:this.showNavigator,zoomPerClick:this.zoomPerClick,zoomPerScroll:this.zoomPerScroll,animationTime:this.animationTime,navPrevNextWrap:this.navPrevNextWrap,showRotationControl:this.showRotationControl,minZoomImageRatio:this.minZoomImageRatio,maxZoomPixelRatio:this.maxZoomPixelRatio,tileSources:tileSources}),this.init=!0},100)}destroy(){this.viewer.destroy()}zoomIn(){var zoomTo=this.viewer.viewport.getZoom()+.7;zoomTo<this.viewer.viewport.getMaxZoom()&&this.viewer.viewport.zoomTo(zoomTo)}zoomOut(){var currentZoom=this.viewer.viewport.getZoom(),minZoom=this.viewer.viewport.getMinZoom(),zoomTo=currentZoom-.7;zoomTo>minZoom?this.viewer.viewport.zoomTo(zoomTo):minZoom!=currentZoom&&this.resetZoom()}resetZoom(){this.viewer.viewport.goHome()}_srcChanged(){this.dzi&&this.init&&this._addTiledImage()}_loadedChanged(){this.loaded&&(this.init?this._addImage():this._initOpenSeadragon())}_addImage(){this.viewer.addSimpleImage({url:this.src,index:0,replace:!0})}_addTiledImage(){this.viewer.addTiledImage({tileSource:this.src,index:0,replace:!0})}}_exports.ImgPanZoom=ImgPanZoom,window.customElements.define(ImgPanZoom.tag,ImgPanZoom)});