define(["exports","../../lit-element/lit-element.js","../simple-picker/simple-picker.js","../../@polymer/iron-meta/iron-meta.js"],(function(e,t,i,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.SimpleIconPicker=void 0;
/**
   * Copyright 2019 Penn State University
   * @license Apache-2.0, see License.md for full text.
   */
class SimpleIconPicker extends i.SimplePicker{static get styles(){return[...super.styles,t.css`
        :host(simple-icon-picker) #collapse {
          width: 300px;
        }
        :host(simple-icon-picker) .row {
          justify-content: flex-start;
        }
        :host(simple-icon-picker) simple-picker-option {
          flex: 0 0 auto;
        }
      `]}static get properties(){return{...super.properties,allowNull:{name:"allowNull",type:Boolean},icons:{name:"icons",type:Array},value:{name:"value",type:String,reflect:!0},optionsPerRow:{name:"optionsPerRow",type:Number},__iconList:{name:"__iconList",type:Array}}}static get tag(){return"simple-icon-picker"}constructor(){super(),this.hideOptionLabels=!0,this.allowNull=!1,this.icons=[],this.value=null,this.options=[],this.optionsPerRow=10}updated(e){super.updated&&super.updated(e),e.forEach((e,t)=>{["optionsPerRow","icons","allowNull","__iconList"].includes(t)&&this._getOptions(this[t],e),"value"==t&&this.dispatchEvent(new CustomEvent("value-changed",{detail:{value:this[t]}}))})}firstUpdated(e){super.firstUpdated&&super.firstUpdated(e);const t=new s.IronMeta({type:"iconset"});if(0===this.icons.length&&void 0!==t&&t.list&&t.list.length){var i=[];t.list.forEach((function(e){e.getIconNames().forEach(e=>{i.push(e)})})),this.__iconList=i,this._setSelectedOption()}}_getOptions(){let e="string"==typeof this.icons?JSON.parse(this.icons):this.icons,t=(this.shadowRoot.querySelector("#collapse"),this.optionsPerRow);0===e.length&&this.__iconList&&this.__iconList.length>0&&(e=this.__iconList);let i=!1===this.allowNull?[]:[[{alt:"null",value:null}]],s=!1===this.allowNull?0:1;t=Math.sqrt(e.length+s)<=this.optionsPerRow?Math.ceil(Math.sqrt(e.length+s)):this.optionsPerRow;for(let o=0;o<e.length;o++){let l=s+o,n=Math.floor(l/t),r=l-n*t;void 0!==i[n]&&null!==i[n]||(i[n]=[]),i[n][r]={alt:e[o],icon:e[o],value:e[o]}}this.options=i}_setSelectedOption(){this.options.length>1&&super._setSelectedOption()}}e.SimpleIconPicker=SimpleIconPicker,window.customElements.define(SimpleIconPicker.tag,SimpleIconPicker)}));