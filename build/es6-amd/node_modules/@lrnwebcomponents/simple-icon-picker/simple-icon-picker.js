define(["exports","../../@polymer/polymer/polymer-element.js","../../@polymer/polymer/lib/utils/render-status.js","../simple-picker/simple-picker.js","../../@polymer/iron-meta/iron-meta.js"],function(_exports,_polymerElement,_renderStatus,_simplePicker,_ironMeta){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.SimpleIconPicker=void 0;class SimpleIconPicker extends _simplePicker.SimplePicker{static get template(){return _polymerElement.html`
      <style>
        :host(simple-icon-picker) #collapse {
          width: 300px;
          height: 300px;
          max-height: 300px;
          overflow: auto;
        }
        :host(simple-icon-picker) .row {
          justify-content: flex-start;
        }
        :host(simple-icon-picker) simple-picker-option {
          flex: 0 0 auto;
        }
      </style>
      ${super.template}
    `}static get properties(){let props={allowNull:{name:"allowNull",type:Boolean,value:!1,observer:"_getOptions"},icons:{name:"icons",type:Array,value:[],observer:"_getOptions"},value:{name:"value",type:String,value:null,reflectToAttribute:!0,notify:!0},optionsPerRow:{optionSize:"optionsPerRow",type:Number,value:10,observer:"_getOptions"},__iconList:{name:"__iconList",type:Array,"read-only":!0,observer:"_getOptions"}};return super.properties&&(props=Object.assign(props,super.properties)),props}static get tag(){return"simple-icon-picker"}constructor(){super(),this.hideOptionLabels=!0}ready(){super.ready(),(0,_renderStatus.afterNextRender)(this,function(){const iconSets=new _ironMeta.IronMeta({type:"iconset"});if(0===this.icons.length&&void 0!==iconSets&&iconSets.list&&iconSets.list.length){var iconList=[];iconSets.list.forEach(function(item){item.getIconNames().forEach(icon=>{iconList.push(icon)})}),this.__iconList=iconList,this._setSelectedOption()}})}_getOptions(){let icons="string"==typeof this.icons?JSON.parse(this.icons):this.icons,collapse=this.shadowRoot.querySelector("#collapse"),cols=this.optionsPerRow;0===icons.length&&this.__iconList&&this.__iconList.length>0&&(icons=this.__iconList);let options=!1===this.allowNull?[]:[[{alt:"null",value:null}]],h=!1===this.allowNull?0:1;cols=Math.sqrt(icons.length+h)<=this.optionsPerRow?Math.ceil(Math.sqrt(icons.length+h)):this.optionsPerRow;for(let i=0;i<icons.length;i++){let j=h+i,row=Math.floor(j/cols),col=j-row*cols;void 0!==options[row]&&null!==options[row]||(options[row]=[]),options[row][col]={alt:icons[i],icon:icons[i],value:icons[i]}}this.set("options",options);let option=this.shadowRoot.querySelector("simple-picker-option");collapse&&option&&(collapse.style.width=cols*option.offsetWidth+15+"px")}_setSelectedOption(){this.options.length>1&&super._setSelectedOption()}}_exports.SimpleIconPicker=SimpleIconPicker,window.customElements.define(SimpleIconPicker.tag,SimpleIconPicker)});