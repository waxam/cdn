define(["exports"], function (_exports) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.ExampleHaxElement = void 0;

  /**
   * Copyright 2018 The Pennsylvania State University
   * @license Apache-2.0, see License.md for full text.
   */

  /**
   * `example-hax-element`
   * @element example-hax-element
   * `Provide an example to pick apart of a working HAX element`
   *
   * @microcopy - language worth noting:
   *  -
   *
  
   * @demo demo/index.html
   */
  class ExampleHaxElement extends HTMLElement {
    // render function
    get html() {
      return `
<style>
:host {
  display: block;
}

:host([hidden]) {
  display: none;
}
        </style>
<slot></slot>`;
    } // haxProperty definition


    static get haxProperties() {
      return {
        canScale: true,
        canPosition: true,
        canEditSource: false,
        gizmo: {
          title: "Example hax-element",
          description: "Provide an example to pick apart of a working HAX element",
          icon: "icons:android",
          color: "green",
          groups: ["Hax"],
          handles: [{
            type: "todo:read-the-docs-for-usage"
          }],
          meta: {
            author: "You",
            owner: "Your Company"
          }
        },
        settings: {
          quick: [],
          configure: [{
            property: "title",
            description: "",
            inputMethod: "textfield",
            required: false,
            icon: "icons:android"
          }, {
            property: "available",
            description: "",
            inputMethod: "boolean",
            required: false,
            icon: "icons:android"
          }],
          advanced: []
        }
      };
    } // properties available to the custom element for data binding


    static get properties() {
      return { ...super.properties,
        title: {
          name: "title",
          type: String,
          value: "My Example",
          reflectToAttribute: false,
          observer: false
        },
        available: {
          name: "available",
          type: Boolean,
          value: "",
          reflectToAttribute: false,
          observer: false
        }
      };
    }
    /**
     * Store the tag name to make it easier to obtain directly.
     * @notice function name must be here for tooling to operate correctly
     */


    static get tag() {
      return "example-hax-element";
    }
    /**
     * life cycle
     */


    constructor(delayRender = false) {
      super(); // set tag for later use

      this.tag = ExampleHaxElement.tag; // map our imported properties json to real props on the element
      // @notice static getter of properties is built via tooling
      // to edit modify src/ExampleHaxElement-properties.json

      let obj = ExampleHaxElement.properties;

      for (let p in obj) {
        if (obj.hasOwnProperty(p)) {
          if (this.hasAttribute(p)) {
            this[p] = this.getAttribute(p);
          } else {
            this.setAttribute(p, obj[p].value);
            this[p] = obj[p].value;
          }
        }
      } // optional queue for future use


      this._queue = [];
      this.template = document.createElement("template");
      this.attachShadow({
        mode: "open"
      });

      if (!delayRender) {
        this.render();
      }
    }
    /**
     * life cycle, element is afixed to the DOM
     */


    connectedCallback() {
      if (window.ShadyCSS) {
        window.ShadyCSS.styleElement(this);
      }

      if (this._queue.length) {
        this._processQueue();
      }
    }

    _copyAttribute(name, to) {
      const recipients = this.shadowRoot.querySelectorAll(to);
      const value = this.getAttribute(name);
      const fname = value == null ? "removeAttribute" : "setAttribute";

      for (const node of recipients) {
        node[fname](name, value);
      }
    }

    _queueAction(action) {
      this._queue.push(action);
    }

    _processQueue() {
      this._queue.forEach(action => {
        this[`_${action.type}`](action.data);
      });

      this._queue = [];
    }

    _setProperty({
      name,
      value
    }) {
      this[name] = value;
    }

    render() {
      this.shadowRoot.innerHTML = null;
      this.template.innerHTML = this.html;

      if (window.ShadyCSS) {
        window.ShadyCSS.prepareTemplate(this.template, this.tag);
      }

      this.shadowRoot.appendChild(this.template.content.cloneNode(true));
    } //static get observedAttributes() {
    //  return [];
    //}
    // disconnectedCallback() {}
    // attributeChangedCallback(attr, oldValue, newValue) {}


  }

  _exports.ExampleHaxElement = ExampleHaxElement;
  window.customElements.define(ExampleHaxElement.tag, ExampleHaxElement);
});