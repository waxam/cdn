define(["exports", "require", "../../@polymer/polymer/polymer-element.js", "../schema-behaviors/schema-behaviors.js"], function (_exports, _require, _polymerElement, _schemaBehaviors) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnsysPdf = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  /**
   * Copyright 2018 The Pennsylvania State University
   * @license Apache-2.0, see License.md for full text.
   */

  /**
   * `lrnsys-pdf`
   * @element lrnsys-pdf
   * @demo demo/index.html
   */
  class LrnsysPdf extends (0, _schemaBehaviors.SchemaBehaviors)(_polymerElement.PolymerElement) {
    constructor() {
      super();
      new Promise((res, rej) => _require.default(["../pdf-browser-viewer/pdf-browser-viewer.js"], res, rej));
    }

    static get template() {
      return (0, _polymerElement.html)`
      <style>
        :host {
          display: block;
        }
      </style>
      <h2>[[title]]</h2>
      <pdf-browser-viewer
        id="pdfViewer"
        file="[[file]]#page=[[page]]"
        width="100%"
        card="[[card]]"
        elevation="2"
        download-label="[[downloadLabel]]"
      ></pdf-browser-viewer>
    `;
    }

    static get tag() {
      return "lrnsys-pdf";
    }

    static get properties() {
      return { ...super.properties,

        /**
         * Title prior to the PDF
         */
        title: {
          type: String,
          value: "lrnsys-pdf"
        },

        /**
         * Whether or not to present this as a card.
         */
        card: {
          type: Boolean,
          value: false
        },

        /**
         * Download Label.
         */
        downloadLabel: {
          type: String,
          computed: "_computeDownloadLabel(download)"
        },

        /**
         * Active Page
         */
        page: {
          type: String
        },

        /**
         * File to present
         */
        file: {
          type: String
        }
      };
    }
    /**
     * See if we should supply a label.
     */


    _computeDownloadLabel(download) {
      if (download) {
        return "Download";
      } else {
        return null;
      }
    }

  }

  _exports.LrnsysPdf = LrnsysPdf;
  window.customElements.define(LrnsysPdf.tag, LrnsysPdf);
});