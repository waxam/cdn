define(["exports","require","../../@polymer/polymer/polymer-element.js","../schema-behaviors/schema-behaviors.js"],function(_exports,_require,_polymerElement,_schemaBehaviors){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.LrnsysPdf=void 0;_require=babelHelpers.interopRequireWildcard(_require);/**
 * Copyright 2018 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */ /**
 * `lrnsys-pdf`
 * @demo demo/index.html
 */class LrnsysPdf extends(0,_schemaBehaviors.SchemaBehaviors)(_polymerElement.PolymerElement){constructor(){super();new Promise((res,rej)=>_require.default(["../pdf-browser-viewer/pdf-browser-viewer.js"],res,rej))}static get template(){return _polymerElement.html`
      <style>
        :host {
          display: block;
        }
      </style>
      <h2>[[title]]</h2>
      <pdf-browser-viewer
        id="pdfViewer"
        file="[[file]]#page=[[page]]"
        width="100%"
        card="[[card]]"
        elevation="2"
        download-label="[[downloadLabel]]"
      ></pdf-browser-viewer>
    `}static get tag(){return"lrnsys-pdf"}static get properties(){let props={/**
       * Title prior to the PDF
       */title:{type:String,value:"lrnsys-pdf"},/**
       * Whether or not to present this as a card.
       */card:{type:Boolean,value:!1},/**
       * Download Label.
       */downloadLabel:{type:String,computed:"_computeDownloadLabel(download)"},/**
       * Active Page
       */page:{type:String},/**
       * File to present
       */file:{type:String}};if(super.properties){props=Object.assign(props,super.properties)}return props}/**
   * See if we should supply a label.
   */_computeDownloadLabel(download){if(download){return"Download"}else{return null}}}_exports.LrnsysPdf=LrnsysPdf;window.customElements.define(LrnsysPdf.tag,LrnsysPdf)});