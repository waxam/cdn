define(["exports","require","../../lit-element/lit-element.js"],function(_exports,_require,_litElement){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.DropdownSelect=void 0,_require=babelHelpers.interopRequireWildcard(_require);class DropdownSelect extends _litElement.LitElement{static get styles(){return[_litElement.css`
        :host {
          display: block;
        }
        paper-listbox ::slotted(paper-item) {
          display: block;
          width: calc(100% - 32px);
          padding: 0 16px;
          min-height: 32px;
          vertical-align: text-top;
          line-height: 32px;
        }
      `]}render(){return _litElement.html`
      <paper-dropdown-menu
        id="menu"
        error-message="${this.errorMessage}"
        horizontal-align="${this.horizontalAlign}"
        label="${this.label}"
        placeholder="${this.placeholder}"
        vertical-align="${this.verticalAlign}"
        vertical-offset="${this.verticalOffset}"
        ?allow-outside-scroll="${this.allowOutsideScroll}"
        ?always-float-label="${this.alwaysFloatLabel}"
        ?dynamic-align="${this.dynamicAlign}"
        ?no-animations="${this.noAnimations}"
        ?no-label-float="${this.noLabelFloat}"
        ?restore-focus-on-close="${this.restoreFocusOnClose}"
        @paper-dropdown-open="${this._onOpen}"
        @paper-dropdown-close="${this.onClose}"
        @selected-item-changed="${this._dropDownChanged}"
      >
        <paper-listbox
          id="listbox"
          slot="dropdown-content"
          class="dropdown-content"
          .selected="${this.selectedItemIndex}"
        >
          <slot id="content"></slot>
        </paper-listbox>
      </paper-dropdown-menu>
    `}static get tag(){return"dropdown-select"}constructor(){super(),this.allowOutsideScroll=!1,this.alwaysFloatLabel=!1,this.dynamicAlign=!1,this.horizontalAlign="right",this.label="Select an option.",this.noAnimations=!1,this.noLabelFloat=!1,this.opened=!1,this.restoreFocusOnClose=!0,this.selectedItemIndex=null,this.selectedItemLabel=null,this.value=null,this.verticalAlign="top",new Promise((res,rej)=>_require.default(["../../@polymer/paper-dropdown-menu/paper-dropdown-menu.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../@polymer/paper-item/paper-item.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../@polymer/paper-listbox/paper-listbox.js"],res,rej))}static get properties(){return{allowOutsideScroll:{attribute:"allow-outside-scroll",type:Boolean},alwaysFloatLabel:{attribute:"always-float-label",type:Boolean},dynamicAlign:{attribute:"dynamic-align",type:Boolean},errorMessage:{attribute:"error-message",type:String},horizontalAlign:{attribute:"horizontal-align",type:String},label:{type:String},noAnimations:{attribute:"no-animations",type:Boolean},noLabelFloat:{attribute:"no-label-float",type:Boolean},opened:{type:Boolean},placeholder:{type:String},restoreFocusOnClose:{attribute:"restore-focus-on-close",type:Boolean},selectedItem:{attribute:"selected-item",type:Object},selectedItemIndex:{attribute:"selected-item-index",type:Number},selectedItemLabel:{attribute:"selected-item-label",type:String},value:{type:String,reflect:!0},verticalAlign:{attribute:"vertical-align",type:String},verticalOffset:{attribute:"vertical-offset",type:Number}}}updated(changedProperties){changedProperties.forEach((oldValue,propName)=>{"value"===propName&&this._valueChanged(this.value,oldValue)}),this.dispatchEvent(new CustomEvent("change",{bubbles:!0,cancelable:!0,composed:!0,detail:{value:this.value}}))}_onOpen(){this.opened=!0}_onClose(){this.opened=!1}_dropDownChanged(e){this.value=e.detail.value?e.detail.value.getAttribute("value"):null}_valueChanged(newValue,oldValue){let items=Array.prototype.slice.call(this.querySelectorAll("paper-item"));this.selectedItem=this.querySelector(`paper-item[value="${newValue}"]`),this.selectedItemLabel=this.selectedItem?this.selectedItem.innerHTML:null,this.selectedItemIndex=this.selectedItem?items.indexOf(this.selectedItem):null,void 0!==oldValue&&(this.dispatchEvent(new CustomEvent("value-changed",{bubbles:!0,cancelable:!0,composed:!0,target:this,detail:{value:newValue,oldValue:oldValue}})),this.dispatchEvent(new CustomEvent("dropdown-select-changed",{bubbles:!0,cancelable:!0,composed:!0,detail:this})))}}_exports.DropdownSelect=DropdownSelect,window.customElements.define(DropdownSelect.tag,DropdownSelect)});