define(["../../../@polymer/polymer/polymer-legacy.js","../../../@polymer/polymer/lib/legacy/polymer.dom.js","../../../@polymer/polymer/lib/utils/flattened-nodes-observer.js","../../../@polymer/paper-button/paper-button.js","./lrndesign-mapmenu-item.js","./lrndesign-mapmenu-header.js"],function(_polymerLegacy,_polymerDom,_flattenedNodesObserver,_paperButton,_lrndesignMapmenuItem,_lrndesignMapmenuHeader){"use strict";(0,_polymerLegacy.Polymer)({_template:_polymerLegacy.html`
    <style>
      :host {
        display: block;
      }
      :host([collapsable]) > lrndesign-mapmenu-header {
        cursor: pointer;
        display: block;
      }
      #container {
        padding: 16px;
      }
      #container ::slotted(lrndesign-mapmenu-item) {
        margin-top: 6.4px;
      }
    </style>
    <lrndesign-mapmenu-header
      on-tap="_headerClickHandler"
      avatar-label="[[avatarLabel]]"
      title="[[title]]"
      label="[[label]]"
      opened="[[opened]]"
    ></lrndesign-mapmenu-header>
    <iron-collapse id="container"> <slot id="slot"></slot> </iron-collapse>
  `,is:"lrndesign-mapmenu-submenu",properties:{title:{type:String},avatarLabel:{type:String},label:{type:String},opened:{type:Boolean,value:!1},collapsable:{type:Boolean,value:!0/* transition */ /* transition */},expandChildren:{type:Boolean,value:!1}},observers:["_openChanged(opened)"],_openChanged:function(opened){var target=this.$.container;if(opened)target.show();if(!opened)target.hide()},_headerClickHandler:function(e){if(this.collapsable){this.opened=!this.opened}},ready:function(){this._observer=new _flattenedNodesObserver.FlattenedNodesObserver(this.$.slot,info=>{var submenus=info.addedNodes.filter(item=>"LRNDESIGN-MAPMENU-SUBMENU"===item.nodeName);if(this.expandChildren){for(let menu of submenus){menu.setAttribute("opened",!0)}}})}})});