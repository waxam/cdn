define(["exports","require","../../@polymer/polymer/polymer-element.js","../../@polymer/polymer/lib/utils/render-status.js","../../@polymer/polymer/lib/utils/flattened-nodes-observer.js","../schema-behaviors/schema-behaviors.js","../simple-modal/simple-modal.js","../hax-iconset/hax-iconset.js"],function(_exports,_require,_polymerElement,_renderStatus,_flattenedNodesObserver,_schemaBehaviors,_simpleModal,_haxIconset){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.LrnVocab=void 0,_require=babelHelpers.interopRequireWildcard(_require);class LrnVocab extends((0,_schemaBehaviors.SchemaBehaviors)(_polymerElement.PolymerElement)){constructor(){super(),new Promise((res,rej)=>_require.default(["../../@polymer/paper-button/paper-button.js"],res,rej))}static get template(){return _polymerElement.html`
      <style>
        :host {
          display: inline-flex;
          --lrn-vocab-border: 1px dashed #ccc;
        }
        paper-button {
          text-transform: none;
          padding: 0;
          min-width: unset;
          margin: 0;
          position: relative;
          top: 0px;
          border-radius: 0;
          border-bottom: var(--lrn-vocab-border);
          background: #f5f5f5;
          @apply --lrn-vocab-button;
        }
        paper-button:hover {
          background: #bbdefb;
          border-bottom: 1px dashed #2196f3;
          @apply --lrn-vocab-button-hover;
        }
      </style>
      <paper-button id="button" noink on-click="openDialog"
        >[[term]]</paper-button
      >
    `}static get tag(){return"lrn-vocab"}static get properties(){let props={term:{type:String,reflectToAttribute:!0}};return super.properties&&(props=Object.assign(props,super.properties)),props}openDialog(e){let children=_flattenedNodesObserver.FlattenedNodesObserver.getFlattenedNodes(this).filter(n=>n.nodeType===Node.ELEMENT_NODE),c=document.createElement("div");for(var child in children)c.appendChild(children[child].cloneNode(!0));const evt=new CustomEvent("simple-modal-show",{bubbles:!0,cancelable:!0,detail:{title:this.term,elements:{content:c},invokedBy:this.shadowRoot.querySelector("#button")}});window.dispatchEvent(evt)}connectedCallback(){super.connectedCallback(),(0,_renderStatus.afterNextRender)(this,function(){window.SimpleModal.requestAvailability()})}static get haxProperties(){return{canScale:!1,canPosition:!1,canEditSource:!1,gizmo:{title:"Vocab",description:"Vocabulary term",icon:"hax:vocab",color:"red",groups:["Vocab"],handles:[{type:"inline",text:"term"}],meta:{author:"LRNWebComponents"}},settings:{quick:[{property:"term",title:"Term",inputMethod:"textfield",icon:"editor:title",required:!0}],configure:[{property:"term",title:"Term",inputMethod:"textfield",icon:"editor:title",required:!0},{slot:"",title:"Contents",description:"The definitition to display when the term is clicked.",inputMethod:"code-editor",required:!0}],advanced:[]}}}}_exports.LrnVocab=LrnVocab,window.customElements.define(LrnVocab.tag,LrnVocab)});