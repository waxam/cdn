define(["exports","../../@polymer/polymer/polymer-element.js","../hax-body-behaviors/lib/HAXWiring.js","../../@polymer/paper-icon-button/paper-icon-button.js","../../@polymer/paper-tooltip/paper-tooltip.js","../../@polymer/iron-icons/iron-icons.js"],function(_exports,_polymerElement,_HAXWiring,_paperIconButton,_paperTooltip,_ironIcons){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.ScrollButton=void 0;class ScrollButton extends _polymerElement.PolymerElement{static get template(){return _polymerElement.html`
      <style>
        :host {
          display: block;
          --scroll-button-z-index: 99;
          z-index: var(--scroll-button-z-index);
        }

        :host([hidden]) {
          display: none;
        }
        paper-icon-button {
          background-color: rgba(0, 0, 0, 0.6);
          color: white;
          @apply --scroll-button-button;
        }
        paper-icon-button:hover,
        paper-icon-button:active,
        paper-icon-button:focus {
          background-color: rgba(0, 0, 0, 1);
          @apply --scroll-button-button-active;
        }
        paper-tooltip {
          --paper-tooltip-background: #000000;
          --paper-tooltip-opacity: 1;
          --paper-tooltip-text-color: #ffffff;
          --paper-tooltip-delay-in: 0;
          --paper-tooltip: {
            border-radius: 0;
          }
          @apply --scroll-button-tooltip;
        }
      </style>
      <paper-icon-button
        id="btn"
        icon="[[icon]]"
        title="[[label]]"
      ></paper-icon-button>
      <paper-tooltip for="btn" position="[[position]]" offset="14">
        [[label]]
      </paper-tooltip>
    `}static get haxProperties(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"Scroll button",description:"button to scroll to an area or back to top",icon:"icons:android",color:"green",groups:["Button"],handles:[{type:"todo:read-the-docs-for-usage"}],meta:{author:"btopro",owner:"The Pennsylvania State University"}},settings:{quick:[],configure:[{property:"target",description:"",inputMethod:"array",required:!1,icon:"icons:android"},{property:"icon",description:"",inputMethod:"textfield",required:!1,icon:"icons:android"},{property:"label",description:"",inputMethod:"textfield",required:!1,icon:"icons:android"}],advanced:[]}}}static get properties(){let props={target:{name:"target",type:Object},icon:{name:"icon",type:String,value:"icons:expand-less"},label:{name:"label",type:String,value:"Scroll to top"},position:{name:"position",type:String,value:"top"}};return super.properties&&(props=Object.assign(props,super.properties)),props}static get tag(){return"scroll-button"}connectedCallback(){super.connectedCallback(),this.$.btn.addEventListener("click",e=>{this.target?this.target.scrollIntoView({behavior:"smooth",block:"end",inline:"nearest"}):window.scrollTo({top:0,left:0,behavior:"smooth"})}),this.HAXWiring=new _HAXWiring.HAXWiring,this.HAXWiring.setup(ScrollButton.haxProperties,ScrollButton.tag,this)}disconnectedCallback(){this.$.btn.removeEventListener("click",e=>{this.target?this.target.scrollIntoView({behavior:"smooth",block:"end",inline:"nearest"}):window.scrollTo({top:0,left:0,behavior:"smooth"})}),super.disconnectedCallback()}}_exports.ScrollButton=ScrollButton,window.customElements.define(ScrollButton.tag,ScrollButton)});