define(["exports","require","../../@polymer/polymer/polymer-element.js","../../@polymer/iron-ajax/iron-ajax.js"],function(_exports,_require,_polymerElement,_ironAjax){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.WikipediaQuery=void 0,_require=babelHelpers.interopRequireWildcard(_require);class WikipediaQuery extends _polymerElement.PolymerElement{constructor(){super(),new Promise((res,rej)=>_require.default(["../citation-element/citation-element.js"],res,rej))}static get tag(){return"wikipedia-query"}static get template(){return _polymerElement.html`
      <style>
        :host {
          display: block;
          --wikipedia-query-body-height: 160px;
        }
        :host [hidden] {
          display: none;
        }
        #result {
          height: var(--wikipedia-query-body-height);
          overflow: scroll;
          border: 1px grey solid;
          padding: 8px 16px;
        }
        citation-element {
          background-color: #f8f8f8;
          padding: 16px 8px;
          font-size: 12px;
        }
      </style>
      <iron-ajax
        auto
        url$="https://en.wikipedia.org/w/api.php?origin=*&amp;action=query&amp;titles=[[search]]&amp;prop=extracts&amp;format=json"
        handle-as="json"
        on-response="handleResponse"
        debounce-duration="250"
        last-response="{{searchResponse}}"
      ></iron-ajax>
      <h3 hidden$="[[!showTitle]]">[[search]] Wikipedia article</h3>
      <div id="result" hidden$="[[!__rendercontent]]"></div>
      <citation-element
        hidden$="[[!__rendercontent]]"
        creator="{Wikipedia contributors}"
        scope="sibling"
        license="by-sa"
        title="[[search]] --- {Wikipedia}{,} The Free Encyclopedia"
        source="https://en.wikipedia.org/w/index.php?title=[[search]]"
        date="[[__now]]"
      ></citation-element>
    `}static get properties(){return{showTitle:{type:Boolean,value:!0},search:{type:String,value:"Polymer (library)"},renderAs:{type:String,value:"content",observer:"_renderAsUpdated"},searchResponse:{type:Object}}}static get haxProperties(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"Wikipedia article",description:"This can display a wikipedia article in context in a variety of formats.",icon:"book",color:"green",groups:["Content","Creative Commons"],handles:[{type:"content",title:"search"}],meta:{author:"LRNWebComponents"}},settings:{quick:[{property:"search",title:"Search term",description:"Word to search wikipedia for.",inputMethod:"textfield",icon:"editor:title",required:!0},{property:"showTitle",title:"Show title",description:"Whether or not to render the title of the article.",inputMethod:"boolean",icon:"editor:title"}],configure:[{property:"search",title:"Search term",description:"Word to search wikipedia for.",inputMethod:"textfield",icon:"editor:title",required:!0}]},saveOptions:{wipeSlot:!0}}}connectedCallback(){super.connectedCallback();let date=new Date(Date.now());this.__now=date.getDate()+"/"+(date.getMonth()+1)+"/"+date.getFullYear()}_renderAsUpdated(newValue,oldValue){void 0!==newValue&&this._resetRenderMethods()}_validRenderMethods(){return["content"]}_resetRenderMethods(){let methods=this._validRenderMethods();for(var i=0;i<methods.length;i++)this["__render"+methods[i]]=!1}handleResponse(response){if(void 0!==this.searchResponse&&this.searchResponse.query)for(var key in this[`__render${this.renderAs}`]=!0,this.searchResponse.query.pages)if(this.searchResponse.query.pages.hasOwnProperty(key)&&this.searchResponse.query.pages[key].extract){let html=this.searchResponse.query.pages[key].extract;html=(html=(html=(html=html.replace(/<script[\s\S]*?>/gi,"&lt;script&gt;")).replace(/<\/script>/gi,"&lt;/script&gt;")).replace(/<style[\s\S]*?>/gi,"&lt;style&gt;")).replace(/<\/style>/gi,"&lt;/style&gt;"),this.shadowRoot.querySelector("#result").innerHTML=html}}}_exports.WikipediaQuery=WikipediaQuery,window.customElements.define(WikipediaQuery.tag,WikipediaQuery)});