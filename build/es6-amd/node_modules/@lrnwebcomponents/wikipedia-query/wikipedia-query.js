define(["exports","require","../../lit-element/lit-element.js","../../@polymer/iron-ajax/iron-ajax.js"],function(_exports,_require,_litElement,_ironAjax){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.WikipediaQuery=void 0,_require=babelHelpers.interopRequireWildcard(_require);class WikipediaQuery extends _litElement.LitElement{static get styles(){return[_litElement.css`
        :host {
          display: block;
          --wikipedia-query-body-height: 160px;
        }
        :host [hidden] {
          display: none;
        }
        #result {
          height: var(--wikipedia-query-body-height);
          overflow: scroll;
          border: 1px grey solid;
          padding: 8px 16px;
        }
        citation-element {
          background-color: #f8f8f8;
          padding: 16px 8px;
          font-size: 12px;
        }
      `]}constructor(){super(),new Promise((res,rej)=>_require.default(["../citation-element/citation-element.js"],res,rej)),this.hideTitle=!1,this.search="Web_Components",this.renderAs="content";let date=new Date(Date.now());this.__now=date.getDate()+"/"+(date.getMonth()+1)+"/"+date.getFullYear()}static get tag(){return"wikipedia-query"}render(){return _litElement.html`
      <iron-ajax
        auto
        url="https://en.wikipedia.org/w/api.php?origin=*&amp;action=query&amp;titles=${this.search}&amp;prop=extracts&amp;format=json"
        handle-as="json"
        @response="${this.handleResponse}"
        debounce-duration="25"
        @last-response-changed="${this.searchResponseChanged}"
      ></iron-ajax>
      <h3 .hidden="${this.hideTitle}">${this._title}</h3>
      <div id="result" .hidden="${!this.__rendercontent}"></div>
      <citation-element
        .hidden="${!this.__rendercontent}"
        creator="{Wikipedia contributors}"
        scope="sibling"
        license="by-sa"
        title="${this.search} --- {Wikipedia}{,} The Free Encyclopedia"
        source="https://en.wikipedia.org/w/index.php?title=${this.search}"
        date="${this.__now}"
      ></citation-element>
    `}searchResponseChanged(e){this.searchResponse=e.detail.value}updated(changedProperties){changedProperties.forEach((oldValue,propName)=>{"search"==propName&&(this.title?this._title=this.title:this._title=this[propName].replace("_"," ")+" Wikipedia article"),"title"==propName&&this.title&&(this._title=this.title),"renderAs"==propName&&this._renderAsUpdated(this[propName],oldValue)})}static get properties(){return{title:{type:String},__now:{type:String},_title:{type:String},__rendercontent:{type:String},hideTitle:{type:Boolean,attribute:"hide-title"},search:{type:String},renderAs:{type:String,attribute:"render-as"},searchResponse:{type:Object}}}static get haxProperties(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"Wikipedia article",description:"This can display a wikipedia article in context in a variety of formats.",icon:"book",color:"green",groups:["Content","Creative Commons"],handles:[{type:"content",title:"search"}],meta:{author:"ELMS:LN"}},settings:{quick:[{property:"search",title:"Search term",description:"Word to search wikipedia for.",inputMethod:"textfield",icon:"editor:title",required:!0},{property:"hideTitle",title:"Hide title",description:"Whether or not to render the title of the article.",inputMethod:"boolean",icon:"editor:title"}],configure:[{property:"search",title:"Search term",description:"Word to search wikipedia for.",inputMethod:"textfield",icon:"editor:title",required:!0}]},saveOptions:{wipeSlot:!0}}}_renderAsUpdated(newValue,oldValue){void 0!==newValue&&this._resetRenderMethods()}_validRenderMethods(){return["content"]}_resetRenderMethods(){let methods=this._validRenderMethods();for(var i=0;i<methods.length;i++)this["__render"+methods[i]]=!1}handleResponse(response){if(void 0!==this.searchResponse&&this.searchResponse.query)for(var key in this[`__render${this.renderAs}`]=!0,this.searchResponse.query.pages)if(this.searchResponse.query.pages.hasOwnProperty(key)&&this.searchResponse.query.pages[key].extract){let html=this.searchResponse.query.pages[key].extract;html=(html=(html=(html=html.replace(/<script[\s\S]*?>/gi,"&lt;script&gt;")).replace(/<\/script>/gi,"&lt;/script&gt;")).replace(/<style[\s\S]*?>/gi,"&lt;style&gt;")).replace(/<\/style>/gi,"&lt;/style&gt;"),this.shadowRoot.querySelector("#result").innerHTML=html}}}_exports.WikipediaQuery=WikipediaQuery,window.customElements.define(WikipediaQuery.tag,WikipediaQuery)});