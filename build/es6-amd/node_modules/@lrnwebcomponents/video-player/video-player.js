define(["exports","require","../../@polymer/polymer/polymer-element.js","../simple-colors/simple-colors.js","../../@polymer/polymer/lib/utils/render-status.js","../hax-body-behaviors/lib/HAXWiring.js","../a11y-behaviors/a11y-behaviors.js","../../@polymer/polymer/lib/elements/dom-repeat.js","../../@polymer/polymer/lib/elements/dom-if.js","../schema-behaviors/schema-behaviors.js","../media-behaviors/media-behaviors.js"],function(_exports,_require,_polymerElement,_simpleColors,_renderStatus,_HAXWiring,_a11yBehaviors,_domRepeat,_domIf,_schemaBehaviors,_mediaBehaviors){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.VideoPlayer=void 0,_require=babelHelpers.interopRequireWildcard(_require);class VideoPlayer extends((0,_mediaBehaviors.MediaBehaviorsVideo)((0,_a11yBehaviors.A11yBehaviors)((0,_schemaBehaviors.SchemaBehaviors)(_simpleColors.SimpleColors)))){static get template(){return _polymerElement.html`
      <style>
        :host {
          display: block;
          margin: 0 0 15px;
        }
        .video-caption {
          font-style: italic;
          margin: 0;
          padding: 8px;
          @apply --video-player-caption-theme;
        }
      </style>
      <div style$="[[playerStyle]]">
        <template is="dom-if" if="[[isA11yMedia]]" restamp>
          <a11y-media-player
            accent-color$="[[accentColor]]"
            audio-only$="[[audioOnly]]"
            dark$="[[dark]]"
            dark-transcript$="[[darkTranscript]]"
            disable-interactive$="[[disableInteractive]]"
            hide-timestamps$="[[hideTimestamps]]"
            hide-transcript$="[[hideTiranscript]]"
            lang$="[[lang]]"
            media-type$="[[sourceType]]"
            preload$="[[preload]]"
            media-title$="[[mediaTitle]]"
            sources$="[[sourceData]]"
            stand-alone$="[[__standAlone]]"
            sticky-corner$="[[stickyCorner]]"
            thumbnail-src$="[[thumbnailSrc]]"
            tracks$="[[trackData]]"
            crossorigin$="[[crossorigin]]"
            youtube-id$="[[youtubeId]]"
          >
            <template
              id="sources"
              is="dom-repeat"
              items="[[sourceData]]"
              as="sd"
              restamp
            >
              <source src$="[[sd.src]]" type$="[[sd.type]]" />
            </template>
            <template
              id="tracks"
              is="dom-repeat"
              items="[[trackData]]"
              as="track"
              restamp
            >
              <track
                src$="[[track.src]]"
                kind$="[[track.kind]]"
                label$="[[track.label]]"
                srclang$="[[track.lang]]"
              />
            </template>
            <slot name="caption"></slot>
          </a11y-media-player>
        </template>
        <template is="dom-if" if="[[!isA11yMedia]]">
          <template is="dom-if" if="[[sandboxed]]">
            <div class="responsive-video-container" lang$="[[lang]]">
              <webview
                resource$="[[schemaResourceID]]-video"
                src$="[[sourceData.0.src]]"
                width$="[[width]]"
                height$="[[height]]"
                frameborder="0"
              ></webview>
            </div>
          </template>
          <template is="dom-if" if="[[!sandboxed]]">
            <template is="dom-if" if="[[iframed]]">
              <div class="responsive-video-container" lang$="[[lang]]">
                <iframe
                  resource$="[[schemaResourceID]]-video"
                  src$="[[sourceData.0.src]]"
                  width$="[[width]]"
                  height$="[[height]]"
                  frameborder="0"
                  webkitallowfullscreen=""
                  mozallowfullscreen=""
                  allowfullscreen=""
                ></iframe>
              </div>
            </template>
          </template>
          <div id="videocaption" class$="video-caption">
            <p>
              [[mediaTitle]]
              <span class="media-type print-only">(embedded media)</span>
            </p>
            <slot name="caption"></slot>
          </div>
        </template>
      </div>
    `}static get haxProperties(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"Video player",description:"This can present video in a highly accessible manner regardless of source.",icon:"av:play-circle-filled",color:"red",groups:["Video","Media"],handles:[{type:"video",source:"source",title:"caption",caption:"caption",description:"caption",color:"primaryColor"}],meta:{author:"LRNWebComponents"}},settings:{quick:[{property:"accentColor",title:"Accent color",description:"Select the accent color for the player.",inputMethod:"colorpicker",icon:"editor:format-color-fill"},{attribute:"dark",title:"Dark theme",description:"Enable dark theme for the player.",inputMethod:"boolean",icon:"invert-colors"}],configure:[{property:"source",title:"Source",description:"The URL for this video.",inputMethod:"haxupload",icon:"link",required:!0,validationType:"url"},{property:"track",title:"Closed captions",description:"The URL for the captions file.",inputMethod:"textfield",icon:"link",required:!0,validationType:"url"},{property:"thumbnailSrc",title:"Thumbnail image",description:"Optional. The URL for a thumbnail/poster image.",inputMethod:"textfield",icon:"link",required:!0,validationType:"url"},{property:"mediaTitle",title:"Title",description:"Simple title for under video",inputMethod:"textfield",icon:"av:video-label",required:!1,validationType:"text"},{property:"accentColor",title:"Accent color",description:"Select the accent color for the player.",inputMethod:"colorpicker",icon:"editor:format-color-fill"},{attribute:"dark",title:"Dark theme",description:"Enable dark theme for the player.",inputMethod:"boolean",icon:"invert-colors"}],advanced:[{property:"darkTranscript",title:"Dark theme for transcript",description:"Enable dark theme for the transcript.",inputMethod:"boolean"},{property:"hideTimestamps",title:"Hide timestamps",description:"Hide the time stamps on the transcript.",inputMethod:"boolean"},{property:"preload",title:"Preload source(s).",description:"How the sources should be preloaded, i.e. auto, metadata (default), or none.",inputMethod:"select",options:{preload:"Preload all media",metadata:"Preload media metadata only",none:"Don't preload anything"}},{property:"stickyCorner",title:"Sticky Corner",description:"Set the corner where a video plays when scrolled out of range, or choose none to disable sticky video.",inputMethod:"select",options:{none:"none","top-left":"top-left","top-right":"top-right","bottom-left":"bottom-left","bottom-right":"bottom-right"}},{property:"sources",title:"Other sources",description:"List of other sources",inputMethod:"array",properties:[{property:"src",title:"Source",description:"The URL for this video.",inputMethod:"textfield"},{property:"type",title:"Type",description:"Media type data",inputMethod:"select",options:{"audio/aac":"acc audio","audio/flac":"flac audio","audio/mp3":"mp3 audio","video/mp4":"mp4 video","video/mov":"mov video","audio/ogg":"ogg audio","video/ogg":"ogg video","audio/wav":"wav audio","audio/webm":"webm audio","video/webm":"webm video"}}]},{property:"tracks",title:"Track list",description:"Tracks of different languages of closed captions",inputMethod:"array",properties:[{property:"kind",title:"Kind",description:"Kind of track",inputMethod:"select",options:{subtitles:"subtitles"}},{property:"label",title:"Label",description:'The human-readable name for this track, eg. "English Subtitles"',inputMethod:"textfield"},{property:"src",title:"Source",description:"Source of the track",inputMethod:"textfield"},{property:"srclang",title:'Two letter, language code, eg. \'en\' for English, "de" for German, "es" for Spanish, etc.',description:"Label",inputMethod:"textfield"}]}]}}}static get properties(){let props={audioOnly:{type:Boolean,value:!1},accentColor:{type:String,value:null,reflectToAttribute:!0},crossorigin:{type:Boolean,value:!1,reflectToAttribute:!0},dark:{type:Boolean,value:!1,reflectToAttribute:!0},darkTranscript:{type:Boolean,value:!1},disableInteractive:{type:Boolean,value:!1},height:{type:String,value:null},hideTimestamps:{type:Boolean,value:!1},hideTranscript:{type:Boolean,value:!1},iframed:{type:Boolean,computed:"_computeIframed(sourceData, sandboxed)"},isA11yMedia:{type:Boolean,computed:"_computeA11yMedia(sourceType, sandboxed)"},isYoutube:{type:Boolean,computed:"_computeYoutube(sourceType)"},lang:{type:String,value:"en"},mediaTitle:{type:String},preload:{type:String,value:"metadata"},sandboxed:{type:Boolean,computed:"_computeSandboxed(sourceData)"},source:{type:String,value:null,reflectToAttribute:!0},sources:{type:Array,value:[]},sourceData:{type:Array,computed:"_getSourceData(source,sources,trackData)"},sourceType:{type:String,computed:"_computeSourceType(sourceData)"},stickyCorner:{type:String,value:"top-right",reflectToAttribute:!0},track:{type:String,value:null},tracks:{type:Array,value:[]},trackData:{type:Array,computed:"_getTrackData(track,tracks)"},thumbnailSrc:{type:String,value:null,reflectToAttribute:!0},width:{type:String,value:null},youtubeId:{type:String,computed:"_computeYoutubeId(source,sourceType)"}};return super.properties&&(props=Object.assign(props,super.properties)),props}constructor(){super(),new Promise((res,rej)=>_require.default(["../a11y-media-player/a11y-media-player.js"],res,rej)),(0,_renderStatus.afterNextRender)(this,function(){this.HAXWiring=new _HAXWiring.HAXWiring,this.HAXWiring.setup(VideoPlayer.haxProperties,VideoPlayer.tag,this)})}static get tag(){return"video-player"}connectedCallback(){super.connectedCallback()}_computeYoutubeId(source,sourceType){return void 0!==source&&"youtube"===sourceType&&this._computeSRC(source).replace(/(https?:\/\/)?(www.)?youtube(-nocookie)?.com\/embed\//,"")}_computeYoutube(sourceType){return"youtube"===sourceType}_computeA11yMedia(sourceType,sandboxed){return!(sandboxed||"youtube"!=sourceType&&"local"!=sourceType)}_computeIframed(sourceData,sandboxed){return!(!(sourceData.length>0&&void 0!==sourceData[0]&&window.MediaBehaviors.Video._sourceIsIframe(sourceData[0].src))||sandboxed)}_getTrackData(track,tracks){let temp="string"==typeof tracks?JSON.parse(tracks).slice():tracks.slice();return null!=track&&temp.push({src:track,srclang:this.lang,label:"en"===this.lang?"English":this.lang,kind:"subtitles"}),temp}_getSourceData(source,sources,trackData){"string"==typeof sources&&(sources=JSON.parse(sources));let temp=sources.slice();for(let i=0;i<temp.length;i++)temp[i].type=void 0!==temp[i].type&&null!==temp[i].type?temp[i].type:this._computeMediaType(temp[i].src),temp[i].src=this._computeSRC(temp[i].src);if(null!==source){let src=this._computeSRC(source);this.sourceType=this._computeSourceType(src),"youtube"!==this.sourceType&&temp.unshift({src:src,type:this._computeMediaType(src)})}return this.__standAlone=null==trackData||trackData.length<1,temp}_computeMediaType(source){let root=this,type="",findType=function(text,data){for(let i=0;i<data.length;i++)""===type&&null!=source&&source.toLowerCase().indexOf("."+data[i])>-1&&("audio"===text&&(root.audioOnly=!0),type=text+"/"+data[i])};return findType("audio",["aac","flac","mp3","oga","wav"]),findType("video",["mov","mp4","ogv","webm"]),type}_computeSandboxed(sourceData){if(sourceData.length>0&&void 0!==sourceData[0]&&window.MediaBehaviors.Video._sourceIsIframe(sourceData[0].src)){if("function"==typeof document.createElement("webview").reload)return!0}return!1}_computeSourceType(sourceData){return sourceData.length>0&&void 0!==sourceData[0]&&void 0!==sourceData[0].src?window.MediaBehaviors.Video.getVideoType(sourceData[0].src):null}_computeSRC(source){if(null!==source&&void 0!==typeof source){let type=void 0!==this.sourceType?this.sourceType:window.MediaBehaviors.Video.getVideoType(source);source=window.MediaBehaviors.Video.cleanVideoSource(source,type),"vimeo"==type?(this.vimeoTitle?source+="?title=1":source+="?title=0",this.vimeoByline?source+="&byline=1":source+="&byline=0",this.vimeoPortrait?source+="&portrait=1":source+="&portrait=0",void 0!==this.videoColor&&(source+="&color="+this.videoColor)):"dailymotion"==type&&(source+="&ui-start-screen-info=false",source+="&ui-logo=false",source+="&sharing-enable=false",source+="&endscreen-enable=false",void 0!==this.videoColor&&(source+="&ui-highlight="+this.videoColor))}return source}postProcesshaxNodeToContent(content){return content=(content=content.replace(' sources="[]",',"")).replace(' tracks="[]",',"")}}_exports.VideoPlayer=VideoPlayer,window.customElements.define(VideoPlayer.tag,VideoPlayer)});