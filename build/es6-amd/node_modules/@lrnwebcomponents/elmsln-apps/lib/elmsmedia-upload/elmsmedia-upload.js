define(["exports","require","../../../../@polymer/polymer/polymer-element.js","../../../../@polymer/polymer/lib/utils/render-status.js","../../../simple-colors/simple-colors.js"],function(_exports,_require,_polymerElement,_renderStatus,_simpleColors){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.ElmsMediaUpload=void 0;_require=babelHelpers.interopRequireWildcard(_require);/**
 * Copyright 2018 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */class ElmsMediaUpload extends _polymerElement.PolymerElement{constructor(){super();new Promise((res,rej)=>_require.default(["../../../../@polymer/paper-button/paper-button.js"],res,rej));new Promise((res,rej)=>_require.default(["../../../../@vaadin/vaadin-upload/vaadin-upload.js"],res,rej));new Promise((res,rej)=>_require.default(["../../../../@polymer/paper-dialog/paper-dialog.js"],res,rej));new Promise((res,rej)=>_require.default(["../../../../@polymer/app-layout/app-toolbar/app-toolbar.js"],res,rej));new Promise((res,rej)=>_require.default(["../../../../@polymer/paper-dropdown-menu/paper-dropdown-menu.js"],res,rej));new Promise((res,rej)=>_require.default(["../../../../@polymer/paper-listbox/paper-listbox.js"],res,rej));new Promise((res,rej)=>_require.default(["../../../../@polymer/paper-item/paper-item.js"],res,rej));new Promise((res,rej)=>_require.default(["../../../../@polymer/paper-checkbox/paper-checkbox.js"],res,rej));new Promise((res,rej)=>_require.default(["../../../../@polymer/paper-button/paper-button.js"],res,rej));new Promise((res,rej)=>_require.default(["../../../../@polymer/paper-input/paper-input.js"],res,rej))}static get template(){return _polymerElement.html`
      <style>
        :host {
          display: block;
        }
        paper-button {
          padding: 0;
          margin: 0;
          min-width: 1rem;
        }
        vaadin-upload.thick-border {
          --primary-color: #396;
          --dark-primary-color: #063;
          --light-primary-color: #6c9;
          --error-color: darkred;
          border: 2px solid #ccc;
          padding: 14px;
          background: #eee;
          border-radius: 0;
        }
        vaadin-upload.thick-border[dragover] {
          border-color: #396;
        }
        .green {
          background-color: var(--simple-colors-default-theme-green-6);
        }
      </style>
      <vaadin-upload
        target$="[[uploadPath]]"
        method="POST"
        form-data-name="file-upload"
        timeout="0"
        accept="video/mp4,image/*,audio/*,application/pdf,application/zip"
      ></vaadin-upload>
      <paper-dialog id="dialog">
        <app-toolbar>
          <paper-dropdown-menu label="Display style">
            <paper-listbox slot="dropdown-content" class="dropdown-content">
              <paper-item value="image">Image</paper-item>
              <paper-item value="image__circle">Circle</paper-item>
            </paper-listbox>
          </paper-dropdown-menu>
          <paper-checkbox class="styled" checked="{{hasLightbox}}">
            Lightbox <span class="subtitle"> Users can click to expand </span>
          </paper-checkbox>
          <paper-button raised class="green">Save</paper-button>
        </app-toolbar>
        <h2>[[uploadTitle]]</h2>
        <paper-input
          label="Title"
          placeholder="Title"
          value="{{uploadTitle}}"
        ></paper-input>
        <div id="content"></div>
      </paper-dialog>
    `}static get tag(){return"elmsmedia-upload"}connectedCallback(){super.connectedCallback();(0,_renderStatus.afterNextRender)(this,function(){this.addEventListener("upload-success",this._uploadSuccess.bind(this))})}static get properties(){return{uploadPath:{type:String,notify:!0},uploadTitle:{type:String,notify:!0},hasLightbox:{type:Boolean,notify:!0}}}/**
   * _uploadSuccess triggered after an event of a successful upload goes through
   */_uploadSuccess(event){// parse the raw response cause it won't be natively
// since event wants to tell you about the file generally
let response=JSON.parse(event.detail.xhr.response);this.uploadTitle=response.data.node.title;this.shadowRoot.querySelector("#content").innerHTML=response.data.node.nid;this.shadowRoot.querySelector("#dialog").open()}}_exports.ElmsMediaUpload=ElmsMediaUpload;window.customElements.define(ElmsMediaUpload.tag,ElmsMediaUpload)});