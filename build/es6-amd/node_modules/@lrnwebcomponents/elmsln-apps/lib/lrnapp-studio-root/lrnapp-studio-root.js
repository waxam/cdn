define(["exports","../../../../@polymer/polymer/polymer-element.js","../../../../@polymer/polymer/lib/utils/render-status.js","../../../../@polymer/app-route/app-location.js","../../../../@polymer/app-route/app-route.js","../../../../@polymer/iron-icon/iron-icon.js","../../../../@polymer/iron-list/iron-list.js","../../../../@polymer/iron-ajax/iron-ajax.js","../../../../@polymer/paper-card/paper-card.js","../../../../@polymer/iron-selector/iron-selector.js","../../../../@polymer/iron-pages/iron-pages.js","../../../lrnsys-button/lrnsys-button.js","../../../elmsln-loading/elmsln-loading.js","../lrnapp-studio-dashboard/lrnapp-studio-dashboard.js","../lrnapp-studio-kanban/lrnapp-studio-kanban.js","../lrnapp-open-studio/lrnapp-open-studio.js"],function(_exports,_polymerElement,_renderStatus,_appLocation,_appRoute,_ironIcon,_ironList,_ironAjax,_paperCard,_ironSelector,_ironPages,_lrnsysButton,_elmslnLoading,_lrnappStudioDashboard,_lrnappStudioKanban,_lrnappOpenStudio){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.LrnappStudioRoot=void 0;class LrnappStudioRoot extends _polymerElement.PolymerElement{static get template(){return _polymerElement.html`
      <style>
        :host {
          display: block;
        }
      </style>

      <app-location
        route="{{route}}"
        query-params="{{queryParams}}"
      ></app-location>
      <app-route
        route="{{route}}"
        pattern="[[basePath]]/:page"
        data="{{data}}"
        tail="{{tail}}"
        query-params="{{queryParams}}"
      >
      </app-route>

      <iron-selector
        selected="{{data.page}}"
        attr-for-selected="name"
        role="navigation"
      >
        <a
          tabindex="-1"
          name="lrnapp-studio-dashboard"
          on-tap="_dashboardClicked"
          >A</a
        >
        <a tabindex="-1" name="lrnapp-studio-kanban" on-tap="_kanbanClicked"
          >B</a
        >
        <a tabindex="-1" name="lrnapp-open-studio" on-tap="_openstudioClicked"
          >C</a
        >
      </iron-selector>

      <iron-pages
        selected="{{data.page}}"
        attr-for-selected="name"
        fallback-selection="lrnapp-studio-dashboard"
        role="main"
      >
        <lrnapp-studio-dashboard
          name="lrnapp-studio-dashboard"
          csrf-token="[[csrfToken]]"
          end-point="[[_endPoint('lrnapp-studio-dashboard')]]"
          base-path="[[basePath]]"
          elmsln-course="[[elmslnCourse]]"
          elmsln-section="[[elmslnSection]]"
          route="[[tail]]"
        >
        </lrnapp-studio-dashboard>
        <lrnapp-studio-kanban
          name="lrnapp-studio-kanban"
          csrf-token="[[csrfToken]]"
          end-point="[[_endPoint('lrnapp-studio-dashboard')]]"
          base-path="[[basePath]]"
          source-path="[[_sourcePath('lrnapp-studio-kanban/kanban-data')]]"
          elmsln-course="[[elmslnCourse]]"
          elmsln-section="[[elmslnSection]]"
          route="[[tail]]"
        ></lrnapp-studio-kanban>
        <lrnapp-open-studio
          name="lrnapp-open-studio"
          csrf-token="[[csrfToken]]"
          end-point="[[_endPoint('lrnapp-open-studio')]]"
          base-path="[[basePath]]"
          source-path="[[_sourcePath('lrnapp-open-studio/data')]]"
          elmsln-course="[[elmslnCourse]]"
          elmsln-section="[[elmslnSection]]"
          route="[[tail]]"
        >
        </lrnapp-open-studio>
      </iron-pages>
    `}connectedCallback(){super.connectedCallback();(0,_renderStatus.afterNextRender)(this,function(){this.addEventListener("route-change",this._routeChange.bind(this))})}disconnectedCallback(){this.removeEventListener("route-change",this._routeChange.bind(this));super.disconnectedCallback()}static get tag(){return"lrnapp-studio-root"}static get properties(){return{/**
       * sourcePath for submission data.
       */endPoint:{type:String},sourcePath:{type:String,notify:!0,reflectToAttribute:!0},elmslnSection:{type:String,notify:!0,reflectToAttribute:!0},elmslnCourse:{type:String,notify:!0,reflectToAttribute:!0},csrfToken:{type:String,notify:!0,reflectToAttribute:!0},/**
       * base path for the app
       */basePath:{type:String,notify:!0}}}_endPoint(path){return this.basePath+path}_sourcePath(path){return this.basePath+path+"?token="+this.csrfToken}static get observers(){return["_routeChanged(route, basePath)","_deleteToast(queryParams.deletetoast)"]}// If the current route is outside the scope of our app
// then allow the website to break out of the single page
// application routing
_routeChanged(route,basePath){if("string"===typeof route.path){if("string"===typeof basePath){if(route.path.startsWith(basePath)){return}}// reload the page which since route changed will load that page
window.location.reload()}}/**
   * Change route from deeper in the app.
   */_routeChange(e){var details=e.detail;if(typeof details.queryParams.assignment!==typeof void 0){this.set("queryParams.assignment",details.queryParams.assignment);this.notifyPath("queryParams.assignment")}if(typeof details.queryParams.project!==typeof void 0){this.set("queryParams.project",details.queryParams.project);this.notifyPath("queryParams.project")}if(typeof details.queryParams.author!==typeof void 0){this.set("queryParams.author",details.queryParams.author);this.notifyPath("queryParams.author")}if(typeof details.data.page!==typeof void 0){this.set("data.page",details.data.page);this.notifyPath("data.path")}}/**
   * Support having a toast message because of delete or error elsewhere.
   */_deleteToast(deletetoast,old){if(typeof deletetoast!==typeof void 0){if("error"==deletetoast){this.$.toast.show("That submission on longer exists!")}else{this.$.toast.show("Submission deleted successfully!")}this.set("queryParams.deletetoast",void 0);this.notifyPath("queryParams.deletetoast")}}_dashboardClicked(e){this.set("route.path",this.basePath+"/lrnapp-studio-dashboard");this.notifyPath("route.path")}_kanbanClicked(e){this.set("route.path",this.basePath+"/lrnapp-studio-kanban");this.notifyPath("route.path")}_openstudioClicked(e){this.set("route.path",this.basePath+"/lrnapp-open-studio");this.notifyPath("route.path")}/**
   * Simple way to convert from object to array.
   */_toArray(obj){if(null==obj){return[]}return Object.keys(obj).map(function(key){return obj[key]})}}_exports.LrnappStudioRoot=LrnappStudioRoot;window.customElements.define(LrnappStudioRoot.tag,LrnappStudioRoot)});