define(["exports", "../../../../lit-element/lit-element.js", "../../../lrn-markdown-editor/lrn-markdown-editor.js"], function (_exports, _litElement, _lrnMarkdownEditor) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappStudioSubmissionEditTextArea = void 0;

  class LrnappStudioSubmissionEditTextArea extends _litElement.LitElement {
    /**
     * LitElement constructable styles enhancement
     */
    static get styles() {
      return [_litElement.css`
        :host {
          display: block;
        }
      `];
    }

    render() {
      return _litElement.html`
      <lrn-markdown-editor
        content="${this.content}"
        @content-changed="${this.contentEvent}"
      ></lrn-markdown-editor>
    `;
    }

    contentEvent(e) {
      this.content = e.detail.value;
    }

    updated(changedProperties) {
      changedProperties.forEach((oldValue, propName) => {
        let notifiedProps = ["content"];

        if (notifiedProps.includes(propName)) {
          // notify
          let eventName = `${propName.replace(/([a-z0-9]|(?=[A-Z]))([A-Z])/g, "$1-$2").toLowerCase()}-changed`;
          this.dispatchEvent(new CustomEvent(eventName, {
            detail: {
              value: this[propName]
            }
          }));
        }
      });
    }

    static get tag() {
      return "lrnapp-studio-submission-edit-textarea";
    }

    static get properties() {
      return {
        content: {
          type: String
        }
      };
    }

  }

  _exports.LrnappStudioSubmissionEditTextArea = LrnappStudioSubmissionEditTextArea;
  window.customElements.define(LrnappStudioSubmissionEditTextArea.tag, LrnappStudioSubmissionEditTextArea);
});