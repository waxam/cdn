define(["exports", "../../../../@polymer/polymer/polymer-element.js", "../../../../@polymer/iron-pages/iron-pages.js", "./lrnapp-studio-submission-display.js", "./lrnapp-studio-submission-edit.js", "./lrnapp-studio-submission-critique.js"], function (_exports, _polymerElement, _ironPages, _lrnappStudioSubmissionDisplay, _lrnappStudioSubmissionEdit, _lrnappStudioSubmissionCritique) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappStudioSubmissionObject = void 0;

  class LrnappStudioSubmissionObject extends _polymerElement.PolymerElement {
    static get template() {
      return (0, _polymerElement.html)`
      <style>
        :host {
          display: block;
        }
      </style>
      <iron-pages selected="[[selectedPage]]">
        <lrnapp-studio-submission-display
          submission="{{submission}}"
        ></lrnapp-studio-submission-display>
        <lrnapp-studio-submission-edit
          submission="{{submission}}"
        ></lrnapp-studio-submission-edit>
        <lrnapp-studio-submission-critique
          submission="{{submission}}"
          edit="[[edit]]"
        ></lrnapp-studio-submission-critique>
      </iron-pages>
    `;
    }

    static get tag() {
      return "lrnapp-studio-submission-object";
    }

    static get properties() {
      return {
        elmslnCourse: {
          type: String
        },
        elmslnSection: {
          type: String
        },
        basePath: {
          type: String
        },
        csrfToken: {
          type: String
        },
        endPoint: {
          type: String
        },
        submission: {
          type: Object,
          value: null,
          notify: true
        },
        edit: {
          type: Boolean,
          value: false
        },
        selectedPage: {
          type: Number,
          value: 0
        }
      };
    }

    static get observers() {
      return ["_selectedPageChanged(edit, submission.meta.submissionType)"];
    }

    _selectedPageChanged(edit, type) {
      var selected = 0;

      if (edit) {
        switch (type) {
          case "default":
            selected = 1;
            break;

          case "critique":
            selected = 2;
            break;
        }
      } else {
        switch (type) {
          case "default":
            selected = 0;
            break;

          case "critique":
            selected = 2;
            break;
        }
      }

      this.set("selectedPage", selected);
    }

  }

  _exports.LrnappStudioSubmissionObject = LrnappStudioSubmissionObject;
  window.customElements.define(LrnappStudioSubmissionObject.tag, LrnappStudioSubmissionObject);
});