define(["exports", "../../../../lit-element/lit-element.js", "../../../../@polymer/iron-pages/iron-pages.js", "./lrnapp-studio-submission-display.js", "./lrnapp-studio-submission-edit.js", "./lrnapp-studio-submission-critique.js"], function (_exports, _litElement, _ironPages, _lrnappStudioSubmissionDisplay, _lrnappStudioSubmissionEdit, _lrnappStudioSubmissionCritique) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappStudioSubmissionObject = void 0;

  class LrnappStudioSubmissionObject extends _litElement.LitElement {
    /**
     * LitElement constructable styles enhancement
     */
    static get styles() {
      return [_litElement.css`
        :host {
          display: block;
        }
      `];
    }

    render() {
      return _litElement.html`
      <iron-pages selected="${this.selectedPage}">
        <lrnapp-studio-submission-display
          .submission="${this.submission}"
          @submission-changed="${this.submissionChanged}"
        ></lrnapp-studio-submission-display>
        <lrnapp-studio-submission-edit
          .submission="${this.submission}"
          @submission-changed="${this.submissionChanged}"
        ></lrnapp-studio-submission-edit>
        <lrnapp-studio-submission-critique
          .submission="${this.submission}"
          @submission-changed="${this.submissionChanged}"
          ?edit="${this.edit}"
        ></lrnapp-studio-submission-critique>
      </iron-pages>
    `;
    }

    static get tag() {
      return "lrnapp-studio-submission-object";
    }

    static get properties() {
      return {
        elmslnCourse: {
          type: String,
          attribute: "elmsln-course"
        },
        elmslnSection: {
          type: String,
          attribute: "elmsln-section"
        },
        basePath: {
          type: String,
          attribute: "base-path"
        },
        csrfToken: {
          type: String,
          attribute: "csrf-token"
        },
        endPoint: {
          type: String,
          attribute: "end-point"
        },
        submission: {
          type: Object
        },
        edit: {
          type: Boolean
        },
        selectedPage: {
          type: Number,
          attribute: "selected-page"
        }
      };
    }

    submissionChanged(e) {
      this.submission = { ...e.detail.value
      };
    }

    constructor() {
      super();
      this.submission = null;
      this.edit = false;
      this.selectedPage = 0;
    }

    updated(changedProperties) {
      changedProperties.forEach((oldValue, propName) => {
        if (propName == "submission") {
          // notify
          this.dispatchEvent(new CustomEvent("submission-changed", {
            detail: {
              value: this[propName]
            }
          }));
        }

        if (["edit", "submission"].includes(propName)) {
          this._selectedPageChanged(this.edit, this.submission.meta.submissionType);
        }
      });
    }

    _selectedPageChanged(edit, type) {
      var selected = 0;

      if (edit) {
        switch (type) {
          case "default":
            selected = 1;
            break;

          case "critique":
            selected = 2;
            break;
        }
      } else {
        switch (type) {
          case "default":
            selected = 0;
            break;

          case "critique":
            selected = 2;
            break;
        }
      }

      this.selectedPage = selected;
    }

  }

  _exports.LrnappStudioSubmissionObject = LrnappStudioSubmissionObject;
  window.customElements.define(LrnappStudioSubmissionObject.tag, LrnappStudioSubmissionObject);
});