define(["exports", "../../../../@polymer/polymer/polymer-element.js", "../../../secure-request/secure-request.js", "../../../../@polymer/polymer/lib/legacy/polymer.dom.js", "../../../../@polymer/polymer/lib/elements/dom-repeat.js", "../../../../@polymer/polymer/lib/elements/dom-if.js", "../../../../@polymer/paper-dialog/paper-dialog.js", "../../../../@polymer/paper-dialog-scrollable/paper-dialog-scrollable.js", "../../../../@polymer/paper-input/paper-input.js", "../../../../@polymer/paper-button/paper-button.js", "../../../../@polymer/iron-ajax/iron-ajax.js", "./lrnapp-studio-submission-edit-add-asset.js", "./lrnapp-studio-submission-media-editoverlay.js"], function (_exports, _polymerElement, _secureRequest, _polymerDom, _domRepeat, _domIf, _paperDialog, _paperDialogScrollable, _paperInput, _paperButton, _ironAjax, _lrnappStudioSubmissionEditAddAsset, _lrnappStudioSubmissionMediaEditoverlay) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappStudioSubmissionEditVideo = void 0;

  class LrnappStudioSubmissionEditVideo extends (0, _secureRequest.SecureRequestXhr)(_polymerElement.PolymerElement) {
    static get template() {
      return (0, _polymerElement.html)`
      <style>
        :host {
          display: flex;
          position: relative;
          align-items: stretch;
        }

        lrnapp-studio-submission-media-editoverlay,
        lrnapp-studio-submission-edit-add-asset {
          background: lightgray;
          display: flex;
          align-items: center;
          margin-right: 1em;
        }

        iframe {
          display: block;
        }

        .videosfield__create {
          display: block;
          height: 250px;
          width: 300px;
        }

        paper-dialog {
          width: 50%;
          width: 50vmax;
          padding: 1em;
        }
      </style>

      <dom-repeat items="[[videos]]" as="video">
        <template>
          <lrnapp-studio-submission-media-editoverlay
            on-deleted="_videoDelete"
            data-index\$="[[index]]"
          >
            <iframe
              class="videosfield__iframe"
              src$="[[video.video_src]]"
            ></iframe>
          </lrnapp-studio-submission-media-editoverlay>
        </template>
      </dom-repeat>

      <lrnapp-studio-submission-edit-add-asset
        icon="av:video-library"
        on-click="_openDialog"
      ></lrnapp-studio-submission-edit-add-asset>

      <paper-dialog id="dialog">
        <h2>Add Video</h2>
        <paper-dialog-scrollable>
          <paper-input label="Video URL" value="{{newvideo}}"></paper-input>
        </paper-dialog-scrollable>
        <div class="buttons">
          <paper-button dialog-dismiss="">Cancel</paper-button>
          <paper-button dialog-confirm="" on-click="_addImage"
            >Add Video</paper-button
          >
        </div>
      </paper-dialog>

      <template is="dom-if" if="[[videoGenerateSourceUrl]]">
        <!-- Generate Video Source Url for preview -->
        <iron-ajax
          id="videoGenerateSourceUrl"
          url="[[videoGenerateSourceUrl]]"
          method="POST"
          body="[[newvideo]]"
          content-type="application/json"
          handle-as="json"
          on-response="_addImage"
        ></iron-ajax>
      </template>
    `;
    }

    static get tag() {
      return "lrnapp-studio-submission-edit-video";
    }

    static get properties() {
      return {
        videos: {
          type: Array,
          notify: true
        },
        selectedPage: {
          type: String,
          value: "0"
        },
        newvideo: {
          type: String,
          value: ""
        },
        videoGenerateSourceUrl: {
          type: String,
          value: null
        }
      };
    }

    _openDialog(e) {
      this.$.dialog.open();
    }

    _addImage(e) {
      var video_url = this.newvideo;
      var normalizedEvent = (0, _polymerDom.dom)(e);
      var tagname = normalizedEvent.localTarget.tagName; // find out if the component that called this function
      // if it's the iron-ajax then that means we have what we
      // need to add this new video to the array.

      if (tagname === "IRON-AJAX") {
        var video_src = e.detail.response.data; // make sure we upgrade from NULL to an array if needed

        if (Object.prototype.toString.call(this.videos) != "[object Array]") {
          this.videos = [];
        }

        this.push("videos", {
          video_url: this.newvideo,
          video_src: video_src
        });
        this.newvideo = "";
      } // if it wasn't iron ajax, then we need to go get the
      // newvideo's source url from the api
      else {
          this.shadowRoot.querySelector("#videoGenerateSourceUrl").generateRequest();
        }
    }

    _videoDelete(e) {
      var normalizedEvent = (0, _polymerDom.dom)(e);
      var deleteIndex = normalizedEvent.localTarget.getAttribute("data-index");
      this.splice("videos", deleteIndex, 1);
    }

    ready() {
      super.ready();
      const url = this.generateUrl("/api/video/generate-source-url");
      this.set("videoGenerateSourceUrl", url);
    }

  }

  _exports.LrnappStudioSubmissionEditVideo = LrnappStudioSubmissionEditVideo;
  window.customElements.define(LrnappStudioSubmissionEditVideo.tag, LrnappStudioSubmissionEditVideo);
});