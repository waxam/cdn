define(["exports", "../../../../@polymer/polymer/polymer-element.js", "../../../../@polymer/polymer/lib/legacy/polymer.dom.js", "../../../../@polymer/polymer/lib/elements/dom-repeat.js", "../../../../@polymer/polymer/lib/elements/dom-if.js", "../../../secure-request/secure-request.js", "../../../../@polymer/iron-icon/iron-icon.js", "../../../../@polymer/paper-button/paper-button.js", "../../../../@polymer/paper-dialog/paper-dialog.js", "../../../../@vaadin/vaadin-upload/vaadin-upload.js", "./lrnapp-studio-submission-edit-add-asset.js", "./lrnapp-studio-submission-edit-file.js"], function (_exports, _polymerElement, _polymerDom, _domRepeat, _domIf, _secureRequest, _ironIcon, _paperButton, _paperDialog, _vaadinUpload, _lrnappStudioSubmissionEditAddAsset, _lrnappStudioSubmissionEditFile) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappStudioSubmissionEditFiles = void 0;

  class LrnappStudioSubmissionEditFiles extends (0, _secureRequest.SecureRequestXhr)(_polymerElement.PolymerElement) {
    static get template() {
      return (0, _polymerElement.html)`
      <style>
        :host {
          display: block;
          position: relative;
          min-height: 200px;
        }
        #pages {
          display: block;
        }
        .files__files {
          display: flex;
          flex-wrap: wrap;
        }
        .files__files > * {
          margin-right: 16px;
          min-width: 200px;
        }
        paper-dialog {
          width: 50%;
          width: 50vmax;
          padding: 16px;
        }
      </style>

      <div class="files__files">
        <template is="dom-repeat" items="[[files]]" as="file">
          <lrnapp-studio-submission-edit-file
            file="[[file]]"
            on-deleted="_deleteImage"
            data-index\$="[[index]]"
          ></lrnapp-studio-submission-edit-file>
        </template>
        <lrnapp-studio-submission-edit-add-asset
          on-click="_addFile"
          icon="editor:attach-file"
        ></lrnapp-studio-submission-edit-add-asset>
      </div>
      <paper-dialog id="dialog">
        <h2>Add Files</h2>
        <div class="files__upload">
          <template is="dom-if" if="[[uploadUrl]]">
            <vaadin-upload
              accept="[[fileTypes]]"
              target="[[uploadUrl]]"
              method="POST"
              form-data-name="file-upload"
              on-upload-success="_handleImageUploadSuccess"
            >
              <div class="files__drop-label">
                <iron-icon icon="description"></iron-icon>
                Upload files here:
              </div>
            </vaadin-upload>
          </template>
        </div>
        <div>
          <paper-button dialog-dismiss>Cancel</paper-button>
        </div>
      </paper-dialog>
    `;
    }

    static get tag() {
      return "lrnapp-studio-submission-edit-files";
    }

    static get properties() {
      return {
        files: {
          type: Array,
          notify: true,
          value: null
        },
        selectedPage: {
          type: String,
          value: 0
        },
        uploadUrl: {
          type: String,
          value: null,
          observer: "log"
        },
        fileTypes: {
          type: String,
          value: ""
        }
      };
    }

    static get observers() {
      return ["_filesChanged(files)"];
    }

    _filesChanged(files) {}

    _addFile(e) {
      // @todo switch to singleton
      this.$.dialog.open();
    }

    _selectPage(e) {
      var normalizedEvent = (0, _polymerDom.dom)(e);
      var page = normalizedEvent.localTarget.getAttribute("data-page");
      this.set("selectedPage", page);
    }

    _handleImageUploadSuccess(e) {
      this.set("selectedPage", 0);
      var files = [];
      var response = e.detail.xhr.response; // normalize response string

      var response = JSON.parse(response); // get the newely created file

      if (response.data.file) {
        var file = response.data.file;

        if (this.files === null) {
          this.set("files", []);
        }

        this.push("files", file);
        this.$.dialog.close();
      }
    }

    _deleteImage(e) {
      var normalizedEvent = (0, _polymerDom.dom)(e);
      var deleteIndex = normalizedEvent.localTarget.getAttribute("data-index");
      this.splice("files", Number(deleteIndex), 1);
    }

    _canUpload() {
      const uploadUrl = this.uploadUrl;

      if (uploadUrl !== null) {
        return true;
      } else {
        return false;
      }
    }

    log(property) {}
    /**
     * attached life cycle
     */


    connectedCallback() {
      super.connectedCallback();
      const uploadUrl = this.generateUrl("/api/files");

      if (uploadUrl !== null) {
        this.set("uploadUrl", uploadUrl);
      }
    }

  }

  _exports.LrnappStudioSubmissionEditFiles = LrnappStudioSubmissionEditFiles;
  window.customElements.define(LrnappStudioSubmissionEditFiles.tag, LrnappStudioSubmissionEditFiles);
});