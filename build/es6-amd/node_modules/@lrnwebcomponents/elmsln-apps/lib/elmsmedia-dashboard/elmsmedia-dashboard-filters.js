define(["exports", "../../../../@polymer/polymer/polymer-element.js", "../../../../@polymer/paper-icon-button/paper-icon-button.js", "../../../../@polymer/paper-dropdown-menu/paper-dropdown-menu.js", "../../../../@polymer/paper-listbox/paper-listbox.js", "../../../../@polymer/paper-item/paper-item.js"], function (_exports, _polymerElement, _paperIconButton, _paperDropdownMenu, _paperListbox, _paperItem) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.ElmsmediaDashboardFilters = void 0;

  class ElmsmediaDashboardFilters extends _polymerElement.PolymerElement {
    static get template() {
      return _polymerElement.html`
      <style>
        :host {
          display: block;
        }
        paper-dropdown-menu {
          display: block;
          width: 100%;
        }
      </style>

      <paper-dropdown-menu label="Order">
        <paper-listbox
          slot="dropdown-content"
          attr-for-selected="name"
          selected="{{form.order}}"
        >
          <paper-item name="ASC">Ascending</paper-item>
          <paper-item name="DESC">Descending</paper-item>
        </paper-listbox>
      </paper-dropdown-menu>

      <paper-dropdown-menu label="Media Type">
        <paper-listbox
          slot="dropdown-content"
          attr-for-selected="name"
          selected="{{form.media_type}}"
        >
          <paper-item name="elmsmedia_image">Image</paper-item>
          <paper-item name="h5p">H5P</paper-item>
          <paper-item name="video">Video</paper-item>
          <paper-item name="external_video">External Video</paper-item>
          <paper-item name="audio">audio</paper-item>
        </paper-listbox>
      </paper-dropdown-menu>
    `;
    }

    static get tag() {
      return "elmsmedia-dashboard-filters";
    }

    static get properties() {
      return {
        form: {
          type: Object,
          value: {}
        }
      };
    }

    static get observers() {
      return ["_formChanged(form.*)"];
    }

    _formChanged(form) {
      const path = form.path.replace("form.", "");
      const propValue = form.value;
      this.dispatchEvent(new CustomEvent("add-filter", {
        bubbles: true,
        cancelable: true,
        composed: true,
        detail: {
          path: path,
          propValue: propValue
        }
      }));
    }

  }

  _exports.ElmsmediaDashboardFilters = ElmsmediaDashboardFilters;
  window.customElements.define(ElmsmediaDashboardFilters.tag, ElmsmediaDashboardFilters);
});