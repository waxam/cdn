define(["exports","../../../../@polymer/polymer/polymer-element.js","../../../../@polymer/polymer/lib/elements/dom-repeat.js","./elmsmedia-dashboard-toolbar-filter.js"],function(_exports,_polymerElement,_domRepeat,_elmsmediaDashboardToolbarFilter){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.ElmsmediaDashboardToolbarFilters=void 0;class ElmsmediaDashboardToolbarFilters extends _polymerElement.PolymerElement{static get template(){return _polymerElement.html`
      <style>
        :host {
          display: flex;
          align-items: center;
        }
        elmsmedia-dashboard-toolbar-filter {
          margin-right: 4.8px;
        }
      </style>

      <template is="dom-repeat" items="[[_filtersArray]]" as="item">
        <elmsmedia-dashboard-toolbar-filter
          path="[[item.path]]"
          prop-value="[[item.propValue]]"
          title="[[item.title]]"
        ></elmsmedia-dashboard-toolbar-filter>
      </template>
    `}static get tag(){return"elmsmedia-dashboard-toolbar-filters"}static get properties(){return{filters:{type:Object,value:{}},_filtersArray:{type:Array,computed:"_filtersArrayCompute(filters, filters.*)"}}}_filtersArrayCompute(filters){let filtersArray=[];for(f in filters){const prop=f,values=filters[f].split(",");// account for mulitple filter values
// ignore the page property
if("page"!==prop){values.forEach(value=>{filtersArray.push({path:prop,propValue:value,title:`${prop}: ${value}`})})}}return filtersArray}}_exports.ElmsmediaDashboardToolbarFilters=ElmsmediaDashboardToolbarFilters;window.customElements.define(ElmsmediaDashboardToolbarFilters.tag,ElmsmediaDashboardToolbarFilters)});