define(["exports", "../../../../@polymer/polymer/polymer-element.js", "../../../../@polymer/polymer/lib/legacy/polymer.dom.js", "../../../../@polymer/iron-ajax/iron-ajax.js", "../../../../@polymer/iron-list/iron-list.js", "../elmsln-base-deps.js", "../../../../@polymer/paper-button/paper-button.js", "../../../lrndesign-gallerycard/lrndesign-gallerycard.js", "../../../elmsln-loading/elmsln-loading.js"], function (_exports, _polymerElement, _polymerDom, _ironAjax, _ironList, _elmslnBaseDeps, _paperButton, _lrndesignGallerycard, _elmslnLoading) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappBlockRecentSubmissions = void 0;

  class LrnappBlockRecentSubmissions extends _polymerElement.PolymerElement {
    static get template() {
      return (0, _polymerElement.html)`
      <style include="paper-item-styles">
        :host {
          display: block;
        }
        paper-button {
          width: 100%;
        }
      </style>
      <iron-ajax
        auto=""
        url="{{sourcePath}}"
        handle-as="json"
        last-response="{{response}}"
        on-response="handleResponse"
      ></iron-ajax>
      <div id="loading">
        <h3>Loading..</h3>
        <elmsln-loading color="grey-text" size="large"></elmsln-loading>
      </div>
      <iron-list items="[[_toArray(response.data)]]" as="item">
        <template>
          <paper-button on-click="_loadSubmissionUrl">
            <lrndesign-gallerycard
              data-submission-id\$="[[item.id]]"
              title="[[item.attributes.title]]"
              author="[[item.relationships.author.data]]"
              comments="[[item.meta.comment_count]]"
              image="[[item.display.image]]"
              icon="[[item.display.icon]]"
              class="ferpa-protect"
            >
            </lrndesign-gallerycard>
          </paper-button>
        </template>
      </iron-list>
    `;
    }

    static get tag() {
      return "lrnapp-block-recent-submissions";
    }

    static get properties() {
      return {
        elmslnCourse: {
          type: String
        },
        elmslnSection: {
          type: String
        },
        basePath: {
          type: String
        },
        csrfToken: {
          type: String
        },
        endPoint: {
          type: String
        },
        sourcePath: {
          type: String,
          notify: true
        },
        response: {
          type: Array,
          notify: true
        }
      };
    }
    /**
     * Handle tap on paper-button above to redirect to the correct submission url.
     */


    _loadSubmissionUrl(e) {
      var normalizedEvent = (0, _polymerDom.dom)(e);
      var local = normalizedEvent.localTarget; // this will have the id of the current submission

      var active = local.getAttribute("data-submission-id"); // @todo need a cleaner integration but this at least goes the right place for now

      window.location.href = this.basePath + "lrnapp-studio-submission/submissions/" + active;
    }

    handleResponse(e) {
      this.$.loading.hidden = true;
    }

    _getViewLink(nid) {
      return this.basePath + "lrnapp-studio-submission/submissions/" + nid;
    }

    _toArray(obj) {
      if (obj == null) {
        return [];
      }

      return Object.keys(obj).map(function (key) {
        return obj[key];
      });
    }

  }

  _exports.LrnappBlockRecentSubmissions = LrnappBlockRecentSubmissions;
  window.customElements.define(LrnappBlockRecentSubmissions.tag, LrnappBlockRecentSubmissions);
});