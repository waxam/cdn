define(["exports", "../../../../@polymer/polymer/polymer-element.js", "../../../../@polymer/iron-ajax/iron-ajax.js", "../../../../@polymer/paper-item/paper-item.js", "../../../../@polymer/polymer/lib/elements/dom-repeat.js", "../../../elmsln-loading/elmsln-loading.js", "./lrnapp-block-recent-comments-comment.js"], function (_exports, _polymerElement, _ironAjax, _paperItem, _domRepeat, _elmslnLoading, _lrnappBlockRecentCommentsComment) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappBlockRecentComments = void 0;

  class LrnappBlockRecentComments extends _polymerElement.PolymerElement {
    static get template() {
      return (0, _polymerElement.html)`
      <style include="paper-item-styles">
        :host {
          display: block;
        }
      </style>
      <div id="loading">
        <h3>Loading..</h3>
        <elmsln-loading color="grey-text" size="large"></elmsln-loading>
      </div>
      <iron-ajax
        auto=""
        url="{{sourcePath}}"
        handle-as="json"
        last-response="{{response}}"
        on-response="handleResponse"
      ></iron-ajax>
      <template
        is="dom-repeat"
        items="[[_toArray(response.data)]]"
        as="comment"
      >
        <lrnapp-block-recent-comments-comment
          comment-user="{{comment.relationships.author.data}}"
          comment-title="{{comment.attributes.subject}}"
          action-view="{{_getViewLink(comment.relationships.node.data.id)}}"
          date-updated="{{comment.attributes.changed}}"
          class="ferpa-protect"
        >
          [[comment.attributes.body]]
        </lrnapp-block-recent-comments-comment>
      </template>
    `;
    }

    static get tag() {
      return "lrnapp-block-recent-comments";
    }

    static get properties() {
      return {
        elmslnCourse: {
          type: String
        },
        elmslnSection: {
          type: String
        },
        basePath: {
          type: String
        },
        csrfToken: {
          type: String
        },
        endPoint: {
          type: String
        },
        sourcePath: {
          type: String,
          notify: true
        },
        response: {
          type: Array,
          notify: true
        }
      };
    }

    handleResponse(e) {
      this.$.loading.hidden = true;
    }

    _getViewLink(nid) {
      return this.basePath + "lrnapp-studio-submission/submissions/" + nid;
    }

    _toArray(obj) {
      if (obj == null) {
        return [];
      }

      return Object.keys(obj).map(function (key) {
        return obj[key];
      });
    }

  }

  _exports.LrnappBlockRecentComments = LrnappBlockRecentComments;
  window.customElements.define(LrnappBlockRecentComments.tag, LrnappBlockRecentComments);
});