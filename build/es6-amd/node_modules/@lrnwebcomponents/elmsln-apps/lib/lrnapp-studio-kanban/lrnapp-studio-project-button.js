define(["exports", "../../../../@polymer/polymer/polymer-element.js", "../../../../@polymer/polymer/lib/elements/dom-if.js", "../../../../@polymer/iron-ajax/iron-ajax.js", "../../../../@polymer/paper-toast/paper-toast.js", "../../../lrnsys-button/lrnsys-button.js"], function (_exports, _polymerElement, _domIf, _ironAjax, _paperToast, _lrnsysButton) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnappStudioProjectButton = void 0;

  /*
  `lrnapp-studio-project-button`
  Allows users to create new projects.
  
  Usage:
  ```
  <lrnapp-studio-project-button classes="amber white-text" icon="add" display-errors="true" end-point="[[endPoint]]" csrf-token=[[csrfToken]]></lrnapp-studio-project-button>
  */
  class LrnappStudioProjectButton extends _polymerElement.PolymerElement {
    static get template() {
      return (0, _polymerElement.html)`
      <style>
        :host {
          display: block;
        }
      </style>
      <template is="dom-if" if="[[createProjectsUrl]]">
        <lrnsys-button
          raised=""
          class\$="[[classes]]"
          button-class\$="[[classes]]"
          icon="[[icon]]"
          on-click="_createProject"
          label="Create project"
        ></lrnsys-button>
        <iron-ajax
          id="ajaxCreateStub"
          url="[[createProjectsUrl]]"
          method="POST"
          handle-as="json"
          on-response="_ajaxCreateStubHandler"
        ></iron-ajax>
      </template>
      <template is="dom-if" if="[[displayErrors]]">
        <paper-toast id="toast"></paper-toast>
      </template>
    `;
    }

    static get tag() {
      return "lrnapp-studio-project-button";
    }

    static get properties() {
      return {
        elmslnCourse: {
          type: String
        },
        elmslnSection: {
          type: String
        },
        basePath: {
          type: String
        },
        csrfToken: {
          type: String
        },
        endPoint: {
          type: String
        },
        auto: {
          type: Boolean,
          reflectToAttribute: true,
          value: false,
          notify: true
        },
        displayErrors: {
          type: Boolean,
          value: true
        },
        createProjectsUrl: {
          type: String,
          value: null
        },
        classes: {
          type: String,
          value: ""
        },
        icon: {
          type: String,
          value: ""
        }
      };
    }

    ready() {
      super.ready();
      this.createProjectsUrl = this.endPoint + "/api/projects/create-stub?token=" + this.csrfToken;
    }

    _createProject() {
      this.shadowRoot.querySelector("#ajaxCreateStub").generateRequest();
    }

    _ajaxCreateStubHandler(e) {
      var status = e.detail.response.status;
      var response = e.detail.response;

      if (status === 201) {
        var project = e.detail.response.data;

        if (project) {
          this.dispatchEvent(new CustomEvent("project-created", {
            bubbles: true,
            cancelable: true,
            composed: true,
            detail: {
              project: project
            }
          }));
        }
      } // if we have errors to display


      if (typeof response.errors !== "undefined") {
        var ul = document.createElement("ul");
        var text = "";
        response.errors.forEach(function (error) {
          text = text + " " + error;
        });
        this.shadowRoot.querySelector("#toast").show(text);
      }
    }

  }

  _exports.LrnappStudioProjectButton = LrnappStudioProjectButton;
  window.customElements.define(LrnappStudioProjectButton.tag, LrnappStudioProjectButton);
});