define(["exports","../../../@polymer/polymer/polymer-element.js","./rich-text-editor-styles.js","../rich-text-editor.js"],function(_exports,_polymerElement,_richTextEditorStyles,_richTextEditor){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0/* transition */ /* transition */});_exports.RichTextEditorContent=void 0;/**
 * Copyright 2019 Penn State University
 * @license Apache-2.0, see License.md for full text.
 */ /**
 * `rich-text-editor-content`
 * `a standalone rich text editor`
 *
 * @microcopy - language worth noting:
 *  -
 *
 * @customElement
 * @polymer
 * @demo demo/content.html demo
 */class RichTextEditorContent extends _polymerElement.PolymerElement{// render function
static get template(){return _polymerElement.html`
      <style include="rich-text-editor-styles">
        :host {
          display: block;
          min-height: 20px;
          cursor: pointer;
          @apply --rich-text-editor-content;
        }
        :host([contenteditable="true"]) {
          border: var(--rich-text-editor-border);
          border-top: none;
          overflow: hidden;
          @apply --rich-text-editor-content-edit;
        }
      </style>
      <slot></slot>
    `}// properties available to the custom element for data binding
static get properties(){return{/**
       * The editableElement element for the editor.
       */editorId:{name:"editableElement",type:"Object",value:null}}}/**
   * Store the tag name to make it easier to obtain directly.
   * @notice function name must be here for tooling to operate correctly
   */static get tag(){return"rich-text-editor-content"}/**
   * ready
   */ready(){super.ready();//find an editor by id
let id=document.querySelector("rich-text-editor#"+this.editorId),editor=null!==id?id:document.querySelector("rich-text-editor");if(null===editor){editor=document.createElement("rich-text-editor");this.parentNode.appendChild(editor)}editor.addEditableRegion(this)}/**
   * life cycle, element is removed from the DOM
   */ //disconnectedCallback() {}
}_exports.RichTextEditorContent=RichTextEditorContent;window.customElements.define(RichTextEditorContent.tag,RichTextEditorContent)});