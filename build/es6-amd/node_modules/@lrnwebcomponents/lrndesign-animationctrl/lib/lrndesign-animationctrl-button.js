define(["exports", "../../../@polymer/polymer/polymer-element.js", "../../../@polymer/paper-button/paper-button.js", "../../../@polymer/iron-icon/iron-icon.js"], function (_exports, _polymerElement, _paperButton, _ironIcon) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrndesignAnimationctrlButton = void 0;

  class LrndesignAnimationctrlButton extends _polymerElement.PolymerElement {
    static get template() {
      return _polymerElement.html`
      <style>
        :host {
          display: block;
        }
        paper-button {
          @apply --animationctrl-button;
        }
        iron-icon {
          display: inline-flex;
        }
        :host iron-icon[hidden] {
          display: none;
        }
      </style>
      <paper-button raised="" id="[[name]]" on-click="_tap">
        [[name]]
        <iron-icon icon="[[icon]]" hidden$="[[!icon]]"></iron-icon>
      </paper-button>
    `;
    }

    static get tag() {
      return "lrndesign-animationctrl-button";
    }

    static get properties() {
      return {
        /**
         * Machine name of the button. This should be unique
         * to the animationctrl set
         */
        name: {
          type: String,
          value: "buttonid"
        },

        /**
         * Name of the Icon
         */
        icon: {
          type: String,
          value: false
        }
      };
    }
    /**
     * Fire event
     */


    _tap(e) {
      e.preventDefault();
      this.dispatchEvent(new CustomEvent("lrndesign-animationctrl-click", {
        bubbles: true,
        cancelable: true,
        composed: true,
        detail: {
          button: this.name
        }
      }));
    }

  }

  _exports.LrndesignAnimationctrlButton = LrndesignAnimationctrlButton;
  window.customElements.define(LrndesignAnimationctrlButton.tag, LrndesignAnimationctrlButton);
});