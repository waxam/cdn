define(["exports","../../../@polymer/polymer/polymer-element.js","../../../@polymer/polymer/lib/utils/render-status.js","../../../@polymer/paper-button/paper-button.js","../../../@polymer/paper-toggle-button/paper-toggle-button.js","../../../@polymer/paper-item/paper-item.js","../../../@polymer/paper-tooltip/paper-tooltip.js"],function(_exports,_polymerElement,_renderStatus,_paperButton,_paperToggleButton,_paperItem,_paperTooltip){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.EditableTableEditorToggle=void 0;class EditableTableEditorToggle extends _polymerElement.PolymerElement{static get template(){return _polymerElement.html`
      <style>
        :host {
          display: block;
        }
        :host .setting {
          font-size: 95%;
          padding: var(--editable-table-toggle-padding, 8px 0px);
          justify-content: space-between;
          width: 100%;
        }
        :host([disabled]) .setting-text {
          opacity: 0.5;
        }
      </style>
      <div class="setting">
        <div class="setting-control">
          <paper-toggle-button
            id="button"
            checked\$="[[value]]"
            disabled\$="[[disabled]]"
            >[[label]]</paper-toggle-button
          >
          <paper-tooltip id="tooltip" for="button">[[tooltip]]</paper-tooltip>
        </div>
      </div>
    `}static get tag(){return"editable-table-editor-toggle"}connectedCallback(){super.connectedCallback(),(0,_renderStatus.afterNextRender)(this,function(){this.addEventListener("change",this._onChange.bind(this))})}disconnectedCallback(){this.removeEventListener("change",this._onChange.bind(this)),super.disconnectedCallback()}static get properties(){return{disabled:{type:Boolean,value:!1,reflectToAttribute:!0},label:{type:String,value:null},prop:{type:String,value:null},tooltip:{type:String,value:null},value:{type:Boolean,value:!1}}}_onChange(e){e.srcElement===this.$.button&&this.dispatchEvent(new CustomEvent("editable-table-setting-changed",{bubbles:!0,cancelable:!0,composed:!0,detail:{prop:this.prop,value:e.srcElement.checked}}))}}_exports.EditableTableEditorToggle=EditableTableEditorToggle,window.customElements.define(EditableTableEditorToggle.tag,EditableTableEditorToggle)});