define(["exports","../../@polymer/polymer/polymer-element.js","../../@polymer/polymer/lib/utils/render-status.js","../../@polymer/paper-tooltip/paper-tooltip.js","../../@polymer/paper-toggle-button/paper-toggle-button.js","../../@polymer/paper-input/paper-input.js","../../@polymer/iron-ajax/iron-ajax.js","./lib/editable-table-behaviors.js","./lib/editable-table-editor-rowcol.js","./lib/editable-table-editor-toggle.js","./lib/editable-table-editor-cell.js","./lib/editable-table-styles.js","./lib/editable-table-display.js"],function(_exports,_polymerElement,_renderStatus,_paperTooltip,_paperToggleButton,_paperInput,_ironAjax,_editableTableBehaviors,_editableTableEditorRowcol,_editableTableEditorToggle,_editableTableEditorCell,_editableTableStyles,_editableTableDisplay){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.EditableTable=void 0;class EditableTable extends((0,_editableTableBehaviors.displayBehaviors)(_polymerElement.PolymerElement)){static get template(){return _polymerElement.html`
      <style include="editable-table-styles">
        :host {
          display: block;
          width: 100%;
        }
        :host caption {
          width: 100%;
          margin-bottom: 0;
        }
        :host label,
        :host .label {
          font-size: var(--editable-table-secondary-font-size);
          font-family: var(--editable-table-secondary-font-family);
        }
        :host .filter-icon,
        :host .sortable-icon {
          display: none;
          opacity: 0.4;
          width: 24px;
          height: 24px;
        }
        :host([sort]) tbody .tr:first-child .sortable-icon {
          display: inline-block;
          opacity: 0.25;
        }
        :host([filter]) tbody .tr:not(:first-of-type) .filter-icon {
          display: inline-block;
          opacity: 0.25;
        }
        :host #table {
          min-width: calc(100% - 2.3px);
          width: unset;
        }
        :host caption,
        :host .th-or-td {
          border: 1px solid #ddd;
        }
        :host .th,
        :host th {
          padding: 0;
          vertical-align: center;
          color: black;
          background-color: #f0f0f0;
          outline: var(--editable-table-border);
        }
        :host .th:first-child {
          width: 96px;
        }
        :host .td {
          vertical-align: top;
        }
        :host([bordered]) .td {
          border: var(--editable-table-border);
        }
        :host([responsive]) thead .th:nth-of-type(3),
        :host([responsive]) .td:nth-of-type(2) {
          border-right-width: calc(var(--editable-table-border-width) + 5px);
          border-right-style: double;
        }
        :host([bordered]) thead .th:not(:first-child) {
          border-bottom: var(--editable-table-border);
        }
        :host([striped][column-header])
          tbody
          .tr:nth-child(2n + 1):not(:first-of-type)
          .td,
        :host([striped]:not([column-header])) tbody .tr:nth-child(2n) .td {
          @apply --editable-table-style-stripe;
        }
        :host([column-header]) tbody .tr:first-child .td {
          @apply --editable-table-style-column-header;
        }
        :host([row-header]) tbody .tr .td:first-of-type {
          @apply --editable-table-style-row-header;
        }
        :host([footer]) tbody .tr:last-of-type .td {
          @apply --editable-table-style-footer;
        }
        :host caption,
        :host .field-group {
          width: 100%;
          padding: 0;
          margin: 0;
          transition: all 2s;
          color: var(--editable-table-caption-color);
        }
        :host .field-group:not([hidden]) {
          display: flex;
          justify-content: space-between;
          align-items: center;
        }
        :host caption > *,
        :host .field-group > * {
          margin: 0 2.5px;
        }
        :host .field-group .field-group {
          color: var(--editable-table-caption-color);
          width: unset;
        }
        @media screen {
        }
      </style>
      <iron-ajax
        auto
        hidden$="[[!dataCsv]]"
        url="[[dataCsv]]"
        handle-as="text"
        debounce-duration="500"
        last-response="{{csvData}}"
        on-response="_loadExternalData"
      ></iron-ajax>
      <editable-table-display
        bordered$="[[bordered]]"
        caption$="[[caption]]"
        column-header$="[[columnHeader]]"
        data="[[data]]"
        condensed$="[[condensed]]"
        filter$="[[filter]]"
        footer$="[[footer]]"
        hidden$="[[editMode]]"
        responsive$="[[responsive]]"
        row-header$="[[rowHeader]]"
        sort$="[[sort]]"
        striped$="[[striped]]"
      >
      </editable-table-display>
      <div id="table-outer" hidden$="[[!editMode]]">
        <p class="sr-only">Table Editor</p>
        <table
          id="table"
          bordered$="[[bordered]]"
          condensed$="[[condensed]]"
          striped$="[[striped]]"
        >
          <caption>
            <p class="sr-only">Edit Mode for</p>
            <paper-input
              id="caption"
              label="Caption"
              placeholder="A title for the table."
              on-change="_captionChanged"
              value$="{{caption}}"
            >
            </paper-input>
          </caption>
          <thead>
            <tr class="tr">
              <th class="th th-or-td" scope="col">
                <span class="sr-only">Row Operations</span>
              </th>
              <template
                id="headers"
                is="dom-repeat"
                items="[[data]]"
                as="row"
                index-as="tr"
                mutable-data
                restamp
              >
                <template is="dom-if" if="[[_isFirstRow(tr)]]" restamp>
                  <template
                    id="headercols"
                    is="dom-repeat"
                    items="[[row]]"
                    as="cell"
                    index-as="th"
                    mutable-data
                    restamp
                  >
                    <th class="th th-or-td col-[[th]]" scope="col">
                      <editable-table-editor-rowcol
                        index$="[[th]]"
                        condensed$="[[condensed]]"
                        on-rowcol-action="_handleRowColumnMenu"
                      >
                      </editable-table-editor-rowcol>
                    </th>
                  </template>
                </template>
              </template>
            </tr>
          </thead>
          <tbody id="tbody">
            <template
              id="rows"
              is="dom-repeat"
              items="[[data]]"
              as="row"
              index-as="tr"
              mutable-data
              restamp
            >
              <tr class="tr tbody-tr">
                <th class="th th-or-td" scope="row">
                  <editable-table-editor-rowcol
                    index$="[[tr]]"
                    condensed$="[[condensed]]"
                    on-rowcol-action="_handleRowColumnMenu"
                    row
                  >
                  </editable-table-editor-rowcol>
                </th>
                <template
                  id="columns"
                  index-as="td"
                  is="dom-repeat"
                  items="[[row]]"
                  as="cell"
                  mutable-data
                  restamp
                >
                  <td class="td th-or-td" on-click="_onCellClick">
                    <editable-table-editor-cell
                      class="cell"
                      column="[[td]]"
                      row="[[tr]]"
                      on-cell-move="_onCellMove"
                      on-change="_onCellValueChange"
                      value="{{cell}}"
                    >
                      <iron-icon
                        class="sortable-icon"
                        icon="editable-table:sortable"
                        aria-hidden="true"
                      ></iron-icon>
                      <iron-icon
                        class="filter-icon"
                        icon="editable-table:filter-off"
                      ></iron-icon>
                    </editable-table-editor-cell>
                  </td>
                </template>
              </tr>
            </template>
          </tbody>
        </table>
        <div class="field-group">
          <div class="field-group">
            <div class="label">Headers and footers</div>
            <editable-table-editor-toggle
              id="columnHeader"
              icon="editable-table:column-headers"
              label="First row has column headers."
              on-change="_onTableSettingChange"
              toggled$="[[columnHeader]]"
            >
            </editable-table-editor-toggle>
            <editable-table-editor-toggle
              id="rowHeader"
              icon="editable-table:row-headers"
              on-change="_onTableSettingChange"
              label="First column has row headers."
              toggled$="[[rowHeader]]"
            >
            </editable-table-editor-toggle>
            <editable-table-editor-toggle
              id="footer"
              icon="editable-table:footer"
              label="Last row is a footer."
              on-change="_onTableSettingChange"
              toggled$="[[footer]]"
            >
            </editable-table-editor-toggle>
          </div>
          <div class="field-group" hidden$="[[hideDisplay]]">
            <div class="label">Display</div>
            <editable-table-editor-toggle
              id="bordered"
              disabled$="[[hideBordered]]"
              hidden$="[[hideBordered]]"
              icon="image:grid-on"
              label="Borders."
              on-change="_onTableSettingChange"
              toggled$="[[bordered]]"
            >
            </editable-table-editor-toggle>
            <editable-table-editor-toggle
              id="striped"
              disabled$="[[hideStriped]]"
              hidden$="[[hideStriped]]"
              icon="editable-table:row-striped"
              label="Alternating rows."
              on-change="_onTableSettingChange"
              toggled$="[[striped]]"
            >
            </editable-table-editor-toggle>
            <editable-table-editor-toggle
              id="condensed"
              disabled$="[[hideCondensed]]"
              hidden$="[[hideCondensed]]"
              icon="editable-table:row-condensed"
              label="Condensed rows."
              on-change="_onTableSettingChange"
              toggled$="[[condensed]]"
            >
            </editable-table-editor-toggle>
            <editable-table-editor-toggle
              id="responsive"
              disabled$="[[hideResponsive]]"
              hidden$="[[hideResponsive]]"
              icon="device:devices"
              label="Adjust width to screen size."
              on-change="_onTableSettingChange"
              toggled$="[[responsive]]"
            >
            </editable-table-editor-toggle>
          </div>
          <div class="field-group" hidden$="[[hideSortFilter]]">
            <div class="label">Sorting and Filtering</div>
            <editable-table-editor-toggle
              id="sort"
              disabled$="[[hideSort]]"
              hidden$="[[hideSort]]"
              label="Column sorting."
              icon="editable-table:sortable"
              on-change="_onTableSettingChange"
              toggled$="[[sort]]"
            >
            </editable-table-editor-toggle>
            <editable-table-editor-toggle
              id="filter"
              disabled$="[[hideFilter]]"
              hidden$="[[hideFilter]]"
              icon="editable-table:filter"
              label="Column filtering."
              on-change="_onTableSettingChange"
              toggled$="[[filter]]"
            >
            </editable-table-editor-toggle>
          </div>
        </div>
      </div>
      <div id="htmlImport" hidden><slot></slot></div>
    `}static get tag(){return"editable-table"}static get properties(){return{editMode:{type:Boolean,value:!1},hideBordered:{type:Boolean,value:!1},hideCondensed:{type:Boolean,value:!1},hideDisplay:{type:Boolean,computed:"_tableDisplayHidden(hideBordered,hideCondensed,hideStriped,hideResponsive)"},hideFilter:{type:Boolean,value:!1},hideSortFilter:{type:Boolean,computed:"_tableSortHidden(hideSort,hideFilter)"},hideSort:{type:Boolean,value:!1},hideResponsive:{type:Boolean,value:!1},hideStriped:{type:Boolean,value:!1}}}deleteColumn(index){if(confirm("Delete entire column?"))for(let i=0;i<this.data.length;i++)this.splice("data."+i,index,1)}deleteRow(index){confirm("Delete entire row?")&&this.splice("data",index,1)}insertColumn(index){let temp=this.data.slice();for(let i=0;i<temp.length;i++)temp[i].splice(index,0,"");this.set("data",temp)}insertRow(index){let temp=this.data.slice(),temp2=new Array;for(let i=0;i<temp[0].length;i++)temp2.push("");temp.splice(index+1,0,temp2),this.set("data",temp)}toggleEditMode(edit){edit=void 0!==edit?edit:!this.editMode,this.dispatchEvent(new CustomEvent("toggle-edit-mode",{bubbles:!0,cancelable:!0,composed:!0,detail:this})),edit&&(this.shadowRoot.querySelector("editable-table-display").toggleFilter(),this.shadowRoot.querySelector("editable-table-display").sortData(!1)),this.editMode=edit}_captionChanged(){this.caption=this.$.caption.value}_dataChanged(e){}_getCurrentRow(index,data){let row=null;return null!=data&&void 0!==data[index]&&null!==data[index]&&(row=data[index]),row}_handleRowColumnMenu(e){e.detail.insert&&e.detail.row?this.insertRow(e.detail.index):e.detail.insert&&!e.detail.row?this.insertColumn(e.detail.index):!e.detail.insert&&e.detail.row?this.deleteRow(e.detail.index):this.deleteColumn(e.detail.index)}_isFirstRow(index){return 0===index}_onCellClick(e){e.model&&e.model.root&&e.model.root.nodeList[0]&&e.model.root.nodeList[0].focus()}_onCellMove(e){let dir=e.detail.direction,cell=e.detail.cell,row=cell.parentNode,body=this.$.tbody,x=Array.prototype.indexOf.call(row.children,cell),y=Array.prototype.indexOf.call(body.children,row);"down"===dir?y+1<body.children.length-1?body.children[y+1].children[x].children[0].setFocus():this.insertRow(y):"up"===dir?y>0&&body.children[y-1].children[x].children[0].setFocus():"right"===dir?x+1<row.children.length-1?row.children[x+1].children[0].setFocus():y+1<body.children.length-1&&body.children[y+1].children[1].children[0].setFocus():"left"===dir&&(x>1?row.children[x-1].children[0].setFocus():y>0&&body.children[y-2].children[body.children[y-2].children.length-2].children[0].setFocus())}_onCellValueChange(e){let temp=this.data.slice();temp[e.detail.row][e.detail.column]=e.detail.value,this.set("data",[]),this.set("data",temp)}_onTableSettingChange(e){this[e.detail.id]=e.detail.toggled}_setMinimumData(data){(data.length<1||data[0].length<1)&&this.set("data",[["","",""],["","",""],["","",""]])}_tableDisplayHidden(hideBordered,hideCondensed,hideStriped,hideResponsive){return hideBordered&&hideCondensed&&hideStriped&&hideResponsive}_tableSortHidden(hideSort,hideFilter){return hideSort&&hideFilter}}_exports.EditableTable=EditableTable,window.customElements.define(EditableTable.tag,EditableTable)});