define(["exports","../../@polymer/polymer/polymer-element.js"],function(_exports,_polymerElement){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.SmoothScroll=void 0;class SmoothScroll extends _polymerElement.PolymerElement{static get tag(){return"smooth-scroll"}scroll(target,options){const defaultOptions={align:"top",delay:0,duration:300,scrollElement:window},_options=Object.assign({},defaultOptions,options),targetPosition=target.getBoundingClientRect(),scrollElementHeight=(_options.scrollElement.getBoundingClientRect(),_options.scrollElement.getBoundingClientRect().bottom-_options.scrollElement.getBoundingClientRect().top),targetHeight=targetPosition.bottom-targetPosition.top,startPosition=_options.scrollElement.scrollTop;let distance=target.getBoundingClientRect().top-_options.scrollElement.getBoundingClientRect().top;switch(distance-=scrollElementHeight/2,_options.align){case"center":distance+=targetHeight/2;break;case"bottom":distance+=targetHeight}let startTime=null;requestAnimationFrame(function animation(currentTime){null===startTime&&(startTime=currentTime);let timeElapsed=currentTime-startTime,run=function ease(t,b,c,d){return(t/=d/2)<1?c/2*t*t+b:-c/2*(--t*(t-2)-1)+b}(timeElapsed,startPosition,distance,_options.duration);_options.scrollElement.scrollTop=run,timeElapsed<_options.duration&&requestAnimationFrame(animation)})}}_exports.SmoothScroll=SmoothScroll,window.customElements.define(SmoothScroll.tag,SmoothScroll)});