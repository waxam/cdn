define(["exports","../../../lit-element/lit-element.js","../../../@polymer/paper-button/paper-button.js","./hax-item-button-inner.js"],function(_exports,_litElement,_paperButton,_haxItemButtonInner){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.HaxAppPickerItem=void 0;class HaxAppPickerItem extends _litElement.LitElement{constructor(){super(),this.elevation=1}static get styles(){return[_litElement.css`
        :host {
          display: block;
          max-width: 100px;
        }
        :host([elevation="1"]) {
          -webkit-transform: scale(1, 1);
          transform: scale(1, 1);
        }
        :host([elevation="2"]) {
          -webkit-transform: scale(1.4, 1.4);
          transform: scale(1.4, 1.4);
        }
        paper-button {
          color: black;
          text-transform: none;
          min-width: unset;
          cursor: pointer;
          width: 80px;
          padding: 10px;
          margin: 10px;
          box-shadow: none;
          --paper-button-ink-color: var(--hax-ink-color, black);
        }
      `]}render(){return _litElement.html`
      <paper-button class="icon">
        <hax-item-button-inner
          color="${this.color}"
          icon="${this.icon}"
          label="${this.label}"
        >
        </hax-item-button-inner>
      </paper-button>
    `}connectedCallback(){super.connectedCallback(),this.addEventListener("mousedown",this.tapEventOn.bind(this)),this.addEventListener("mouseover",this.tapEventOn.bind(this)),this.addEventListener("mouseout",this.tapEventOff.bind(this)),this.addEventListener("focusin",this.tapEventOn.bind(this)),this.addEventListener("focusout",this.tapEventOff.bind(this))}static get tag(){return"hax-app-picker-item"}static get properties(){return{color:{type:String},icon:{type:String},label:{type:String},elevation:{type:Number,reflect:!0}}}tapEventOn(e){this.elevation=2}tapEventOff(e){this.elevation=1}}_exports.HaxAppPickerItem=HaxAppPickerItem,window.customElements.define(HaxAppPickerItem.tag,HaxAppPickerItem)});