define(["exports","require","../../../@polymer/polymer/polymer-element.js","../../../@polymer/polymer/lib/utils/render-status.js","../../../@polymer/polymer/lib/utils/async.js","../../simple-colors/simple-colors.js","../../grafitto-filter/grafitto-filter.js","../../../@polymer/iron-list/iron-list.js","../../../@polymer/iron-pages/iron-pages.js","./hax-shared-styles.js"],function(_exports,_require,_polymerElement,_renderStatus,_async,_simpleColors,_grafittoFilter,_ironList,_ironPages,_haxSharedStyles){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.HaxAppBrowser=void 0,_require=babelHelpers.interopRequireWildcard(_require);class HaxAppBrowser extends _polymerElement.PolymerElement{constructor(){super(),new Promise((res,rej)=>_require.default(["../../../@polymer/paper-input/paper-input.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../@polymer/paper-item/paper-item.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../dropdown-select/dropdown-select.js"],res,rej)),new Promise((res,rej)=>_require.default(["./hax-app-browser-item.js"],res,rej)),new Promise((res,rej)=>_require.default(["./hax-app-search.js"],res,rej))}static get template(){return _polymerElement.html`
      <style>
        :host {
          display: block;
        }
        :host *[hidden] {
          display: none;
        }
        #ironlist {
          min-height: 132px;
          margin: 0;
          padding: 10px;
        }
        hax-app-browser-item {
          margin: 8px;
          -webkit-transition: 0.3s all linear;
          transition: 0.3s all linear;
        }
        .title {
          position: relative;
          padding: 16px;
          outline: 0;
          font-weight: 600;
          text-align: left;
          margin: 0;
          background-color: var(--hax-color-menu-heading-bg);
          font-size: 18px;
          line-height: 18px;
          font-family: "Noto Serif", serif;
          color: var(--hax-color-menu-heading-color);
        }
        grafitto-filter {
          color: black;
        }
        .toolbar-inner {
          display: inline-flex;
          padding: 0 16px;
        }
      </style>
      <h3 class="title">[[title]]</h3>
      <div class="toolbar-inner">
        <dropdown-select
          id="filtertype"
          label="Filter by"
          value="details.title"
        >
          <paper-item value="details.title">Title</paper-item>
        </dropdown-select>
        <paper-input
          label="Filter"
          id="inputfilter"
          aria-controls="filter"
          value=""
          always-float-label=""
        ></paper-input>
      </div>
      <grafitto-filter
        id="filter"
        items="[[__appList]]"
        like=""
        where="details.title"
        as="filtered"
      >
        <template>
          <iron-list id="ironlist" items="[[filtered]]" as="app" grid="">
            <template>
              <div class="app-container">
                <hax-app-browser-item
                  index="[[app.index]]"
                  title="[[app.details.title]]"
                  icon="[[app.details.icon]]"
                  image="[[app.details.tag]]"
                  color="[[app.details.color]]"
                  meta="[[app.details.meta]]"
                  groups="[[app.details.groups]]"
                  handles="[[app.details.handles]]"
                  description="[[app.details.description]]"
                  rating="[[app.details.rating]]"
                  tags="[[app.details.tags]]"
                ></hax-app-browser-item>
              </div>
            </template>
          </iron-list>
        </template>
      </grafitto-filter>
      <hax-app-search
        id="haxappsearch"
        hidden$="[[!searching]]"
      ></hax-app-search>
      <slot></slot>
    `}static get tag(){return"hax-app-browser"}static get properties(){return{search:{type:String},title:{type:String,value:"Find"},searching:{type:Boolean,reflectToAttribute:!0,value:!1},activeApp:{type:Object,value:null,observer:"_activeAppChanged"},hasActive:{reflectToAttribute:!0,value:!1,type:Boolean}}}connectedCallback(){super.connectedCallback(),this.resetBrowser()}ready(){super.ready(),(0,_renderStatus.afterNextRender)(this,function(){this.shadowRoot.querySelector("#inputfilter").addEventListener("value-changed",e=>{this.shadowRoot.querySelector("#filter").like=e.target.value}),this.shadowRoot.querySelector("#filtertype").addEventListener("change",e=>{this.shadowRoot.querySelector("#inputfilter").value="",this.shadowRoot.querySelector("#filter").where=e.detail.value,this.shadowRoot.querySelector("#filter").like=""}),document.body.addEventListener("hax-app-selected",this._appSelected.bind(this)),document.body.addEventListener("hax-store-property-updated",this._haxStorePropertyUpdated.bind(this))})}_appSelected(e){void 0!==e.detail&&(this.set("__activeApp",e.detail),this.searching=!0,window.HaxStore.write("activeApp",this.__appList[e.detail],this))}_activeAppChanged(newValue,oldValue){void 0!==oldValue&&null!=newValue?(window.HaxStore.instance.haxManager.searching=!0,this.hasActive=!0):this.hasActive=!1}_haxStorePropertyUpdated(e){e.detail&&void 0!==e.detail.value&&e.detail.property&&this.set(e.detail.property,e.detail.value)}resetBrowser(){_async.microTask.run(()=>{this.searching=!1,this.set("__appList",window.HaxStore.instance.appList),this.shadowRoot.querySelector("#filter").shadowRoot.querySelector("#ironlist")&&(this.shadowRoot.querySelector("#filter").shadowRoot.querySelector("#ironlist").filtered=this.__appList),this.shadowRoot.querySelector("#inputfilter").value="",this.shadowRoot.querySelector("#filtertype").value="details.title",this.shadowRoot.querySelector("#filter").value="",this.shadowRoot.querySelector("#filter").filter(),this.shadowRoot.querySelector("#filter").where="details.title",this.shadowRoot.querySelector("#filter").like="",setTimeout(()=>{this.shadowRoot.querySelector("#filter").shadowRoot.querySelector("#ironlist")&&(this.shadowRoot.querySelector("#filter").shadowRoot.querySelector("#ironlist").dispatchEvent(new CustomEvent("iron-resize",{bubbles:!0,cancelable:!0,composed:!0,detail:!0})),window.dispatchEvent(new Event("resize")))},100)})}}_exports.HaxAppBrowser=HaxAppBrowser,window.customElements.define(HaxAppBrowser.tag,HaxAppBrowser)});