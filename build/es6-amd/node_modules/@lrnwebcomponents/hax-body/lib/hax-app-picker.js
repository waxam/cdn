define(["exports","require","../../../lit-element/lit-element.js"],(function(_exports,_require,_litElement){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.HaxAppPicker=void 0,_require=babelHelpers.interopRequireWildcard(_require);class HaxAppPicker extends _litElement.LitElement{static get styles(){return[_litElement.css`:host{display:block}iron-icon:not(:defined),paper-button:not(:defined),paper-dialog:not(:defined){display:none}#closedialog{float:right;top:15px;right:0;position:absolute;padding:8px;margin:0;background-color:var(--hax-color-menu-heading-bg,#eee);color:var(--hax-color-menu-heading-color,#000);background-color:transparent;width:40px;height:40px;min-width:unset}#dialog{min-width:400px;min-height:108px;max-height:60vh;max-width:50vw;overflow:hidden;border-radius:16px;z-index:1000000;border:2px solid var(--hax-color-border-outline);background-color:#fff}.button-list{display:block;text-align:left;margin:0;max-width:50vw;overflow-x:hidden;overflow-y:auto;display:flex;justify-content:space-evenly;flex-wrap:wrap}#title{color:var(--hax-color-menu-heading-color,#000)}#title{padding:16px;border-bottom:2px solid var(--hax-color-border-outline);margin:0;width:calc(100% - 32px);background-color:var(--hax-color-menu-heading-bg,#eee);color:var(--hax-color-menu-heading-color,#000)}`]}constructor(){super(),this._elements=[],this.selectionList=[],this.title="Pick an options",this.pickerType="gizmo",this.opened=!1,new Promise((res,rej)=>_require.default(["../../../@polymer/paper-button/paper-button.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../@polymer/iron-icon/iron-icon.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../@polymer/paper-dialog/paper-dialog.js"],res,rej)),setTimeout(()=>{this.addEventListener("iron-overlay-canceled",this.close.bind(this)),this.addEventListener("iron-overlay-closed",this.close.bind(this))},0)}render(){return _litElement.html`<paper-dialog id=dialog ?opened=${this.opened}><h3 id=title>${this.title}</h3><div class=button-list>${this.selectionList.map((element,index)=>_litElement.html`<hax-tray-button id=picker-item-${index} @click=${this._selected} data-selected=${index} label=${element.title} icon=${element.icon} color=${element.color} ?color-meaning=${2===this.selectionList.length}></hax-tray-button>`)}</div><paper-button id=closedialog @click=${this.closeEvent}><iron-icon icon=icons:cancel title="Close dialog"></iron-icon></paper-button></paper-dialog>`}static get tag(){return"hax-app-picker"}closeEvent(e){this.opened=!1}static get properties(){return{_elements:{type:Array},selectionList:{type:Array},title:{type:String},pickerType:{type:String,attribute:"picker-type"},opened:{type:Boolean}}}firstUpdated(changedProperties){this.dispatchEvent(new CustomEvent("hax-register-core-piece",{bubbles:!0,cancelable:!0,composed:!0,detail:{piece:"haxAppPicker",object:this}}))}updated(changedProperties){changedProperties.forEach((oldValue,propName)=>{"opened"==propName&&this._openedChanged(this[propName],oldValue)})}close(){this.opened=!1}_openedChanged(newValue,oldValue){newValue?document.body.style.overflow="hidden":(this.selectionList=[],document.body.style.overflow=null)}presentOptions(elements,type="element",title="Select an option",pickerType="gizmo"){this.title=title,this.pickerType=pickerType;var tmp=[];switch(pickerType){case"gizmo":for(var i in elements)elements[i].__type=type,tmp.push({icon:elements[i].gizmo.icon,title:elements[i].gizmo.title,color:elements[i].gizmo.color});break;case"app":for(var i in elements)tmp.push({icon:elements[i].details.icon,title:elements[i].details.title,color:elements[i].details.color});break;default:tmp=elements}this._elements=elements,this.selectionList=[...tmp],this.opened=!0,setTimeout(()=>{this.shadowRoot.querySelector("#picker-item-0").focus()},50)}_selected(e){let key=e.target.getAttribute("data-selected");e.preventDefault(),e.stopPropagation(),void 0!==this._elements[key]&&("gizmo"==this.pickerType?(this._elements[key].replace=!0,this.dispatchEvent(new CustomEvent("hax-insert-content",{bubbles:!0,cancelable:!0,composed:!0,detail:this._elements[key]}))):"delete"==this.pickerType?"Yes"===this._elements[key].title&&(window.HaxStore.instance.activeHaxBody.activeNode!==window.HaxStore.instance.activeHaxBody.activeContainerNode?window.HaxStore.instance.activeHaxBody.haxDeleteNode(window.HaxStore.instance.activeHaxBody.activeNode,window.HaxStore.instance.activeHaxBody.activeContainerNode):window.HaxStore.instance.activeHaxBody.haxDeleteNode(window.HaxStore.instance.activeHaxBody.activeNode),window.HaxStore.toast("Element deleted",2e3)):this.dispatchEvent(new CustomEvent("hax-app-picker-selection",{bubbles:!0,cancelable:!0,composed:!0,detail:this._elements[key]}))),this.opened=!1}}_exports.HaxAppPicker=HaxAppPicker,window.customElements.define(HaxAppPicker.tag,HaxAppPicker)}));