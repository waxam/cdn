define(["exports","../../../lit-element/lit-element.js","./hax-item-button-inner.js"],function(_exports,_litElement,_haxItemButtonInner){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.HaxGizmoBrowserItem=void 0;class HaxGizmoBrowserItem extends _litElement.LitElement{static get styles(){return[_litElement.css`
        :host {
          display: block;
          max-width: 90px;
        }
        paper-button {
          text-transform: none;
          min-width: unset;
          cursor: pointer;
          width: 80px;
          padding: 5px;
          margin: 5px;
          box-shadow: none;
          transition: 0.2s all linear;
          --paper-button-ink-color: var(--hax-ink-color, #000000);
        }
        paper-button:hover,
        paper-button:focus {
          box-shadow: 0 4px 4px 0 rgba(0, 0, 0, 0.14),
            0 2px 10px 0 rgba(0, 0, 0, 0.12), 0 6px 2px -4px rgba(0, 0, 0, 0.2);
        }
        paper-button:active {
          box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),
            0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 3px 1px -2px rgba(0, 0, 0, 0.2);
        }
      `]}render(){return _litElement.html`
      <paper-button
        @click="${this._fireEvent}"
        .data-voicecommand="select ${this.title}"
      >
        <hax-item-button-inner
          color="${this.color}"
          icon="${this.icon}"
          label="${this.title}"
        >
        </hax-item-button-inner>
      </paper-button>
    `}static get tag(){return"hax-gizmo-browser-item"}static get properties(){return{title:{type:String},index:{type:Number},icon:{type:String},color:{type:String},author:{type:String},description:{type:String},examples:{type:Array},status:{type:Array},tagToInsert:{type:String,attribute:"tag-to-insert"}}}_fireEvent(e){let gizmo={tag:this.tagToInsert},element=window.HaxStore.haxElementPrototype(gizmo);window.HaxStore.write("activeHaxElement",element,this)}}_exports.HaxGizmoBrowserItem=HaxGizmoBrowserItem,window.customElements.define(HaxGizmoBrowserItem.tag,HaxGizmoBrowserItem)});