define(["exports","require","../../../lit-element/lit-element.js"],(function(e,t,a){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.HaxAppSearchResult=void 0,t=babelHelpers.interopRequireWildcard(t);class HaxAppSearchResult extends a.LitElement{constructor(){super(),new Promise((e,a)=>t.default(["../../../@polymer/iron-image/iron-image.js"],e,a)),new Promise((e,a)=>t.default(["../../../@polymer/paper-button/paper-button.js"],e,a)),new Promise((e,a)=>t.default(["../../../@polymer/paper-styles/paper-styles.js"],e,a))}static get styles(){return[a.css`
        :host {
          display: inline-flex;
          width: 49%;
          height: 220px;
          background-color: var(--hax-color-bg-accent);
          color: var(--hax-color-text);
        }
        paper-button.button {
          margin: 0;
          padding: 7px;
          display: block;
          border-radius: 0;
          border: none;
          width: 100%;
          outline: 2px solid black;
          background-image: none;
          text-align: unset;
        }
        paper-button:hover,
        paper-button:focus,
        paper-button:active {
          background-color: #eeeeee;
          outline: 2px solid var(--hax-color-bg-accent);
        }
        .detail-wrapper {
          padding: 0 8px;
          overflow: hidden;
          font-family: "Noto Serif", serif;
        }
        .title {
          font-size: 14px;
          overflow: hidden;
          font-weight: bold;
          text-transform: none;
          padding-bottom: 4px;
          text-align: center;
        }
        .image {
          height: 152px;
          width: 100%;
          background-color: var(
            --simple-colors-default-theme-blue-grey-7,
            #37474f
          );
        }
        @media screen and (max-width: 1000px) {
          :host {
            width: 100%;
          }
          .title {
            font-size: 12px;
          }
        }
      `]}render(){return a.html`
      <paper-button
        draggable="true"
        @click="${this._itemSelected}"
        @dragstart="${this._dragStart}"
        @dragend="${this._dragEnd}"
        class="button"
        title="${this.details}"
      >
        <iron-image
          alt=""
          class="image"
          src="${this.image}"
          preload=""
          fade=""
          sizing="cover"
        ></iron-image>
        <div class="detail-wrapper">
          <div class="title">${this.title.substr(0,40)}</div>
        </div>
      </paper-button>
    `}static get tag(){return"hax-app-search-result"}static get properties(){return{image:{type:String},title:{type:String},details:{type:String},map:{type:Object},type:{type:String}}}_dragStart(e){let t=this.cloneNode(!0);if(window.HaxStore.instance.__dragTarget=t,e.dataTransfer&&(this.crt=t,this.crt.style.position="absolute",this.crt.style.top="-1000px",this.crt.style.right="-1000px",this.crt.style.transform="scale(0.25)",this.crt.style.opacity=".8",e.dataTransfer.dropEffect="move",document.body.appendChild(this.crt),e.dataTransfer.setDragImage(this.crt,0,0)),e.stopPropagation(),e.stopImmediatePropagation(),!window.HaxStore.instance.activeHaxBody.openDrawer&&window.HaxStore.instance.editMode){let e=window.HaxStore.instance.activeHaxBody.children;for(var a in e)e[a].classList&&t!==e[a]&&e[a].classList.add("hax-mover")}}_dragEnd(e){this.crt.remove(),setTimeout(()=>{let t=window.HaxStore.instance.activeHaxBody.querySelectorAll(".hax-mover, .hax-hovered, .hax-moving, .grid-plate-active-item");for(var a in t)void 0!==t[a].classList&&t[a].classList.remove("hax-mover","hax-hovered","hax-moving","grid-plate-active-item");setTimeout(()=>{this._itemSelected(e)},100)},0)}_itemSelected(e){var t=this.map,a=this.type;null!==a&&""!==a||void 0===t.source||(a=window.HaxStore.guessGizmoType(t.source));let i=window.HaxStore.guessGizmo(a,t,!1,!0);i.length>0?1===i.length?void 0!==i[0].tag&&this.dispatchEvent(new CustomEvent("hax-insert-content",{bubbles:!0,cancelable:!0,composed:!0,detail:i[0]})):window.HaxStore.instance.haxAppPicker.presentOptions(i,a,"How would you like to display this "+a+"?","gizmo"):window.HaxStore.toast("Sorry, I don't know how to handle that link yet.")}}e.HaxAppSearchResult=HaxAppSearchResult,window.customElements.define(HaxAppSearchResult.tag,HaxAppSearchResult)}));