define(["exports","../../../lit-element/lit-element.js","../../../@polymer/polymer/lib/utils/flattened-nodes-observer.js","../../utils/utils.js","../../../@polymer/iron-media-query/iron-media-query.js","../../../@polymer/polymer/lib/elements/custom-style.js"],function(_exports,_litElement,_flattenedNodesObserver,_utils,_ironMediaQuery,_customStyle){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.HaxPreview=void 0;class HaxPreview extends((0,_utils.winEventsElement)(_litElement.LitElement)){static get styles(){return[_litElement.css`
        :host {
          display: block;
          background-color: #ffffff;
          overflow: hidden;
        }
        iron-icon:not(:defined),
        paper-button:not(:defined) {
          display: none;
        }
        paper-card.form-wrapper {
          margin: 0;
          padding: 0 16px 80px 16px;
          width: 100%;
          min-height: 160px;
          background-color: transparent;
          overflow: auto;
          height: 100%;
        }

        vaadin-split-layout {
          display: flex;
          justify-content: space-around;
          height: 100%;
        }
        eco-json-schema-object {
          width: 50%;
          --eco-json-field-margin: var(--hax-field-margin, 0 0 4px);
          color: var(--hax-text-color);
        }

        .vaadin-split-layout-panel {
          flex: 1 1 auto;
          width: 100%;
          flex-wrap: nowrap;
          margin: 0;
          height: 100%;
          overflow: hidden;
        }
        #preview {
          padding: 16px;
          color: #000000;
          background-color: white;
          max-height: 63vh;
          overflow: scroll;
        }
        #preview ::slotted(*) {
          float: unset !important;
          margin: unset !important;
          width: unset !important;
          position: unset !important;
          top: unset !important;
          left: unset !important;
          right: unset !important;
          bottom: unset !important;
        }
        .preview-text {
          font-size: 14px;
          color: var(--hax-color-text);
          font-style: italic;
          width: 100%;
          height: 24px;
          border-bottom: 1px solid var(--hax-color-border-outline);
          text-align: center;
          padding: 8px 0;
          box-sizing: content-box;
        }
        .preview-text iron-icon {
          margin: 0 8px;
          display: inline-block;
        }
        .preview-text-bottom {
          border-bottom: unset;
          border-top: 1px solid var(--hax-color-border-outline);
        }
        @media screen and (max-width: 550px) {
          .hide-on-mobile {
            opacity: 0;
            visibility: hidden;
            position: absolute;
            left: -9999px;
          }
        }
        #modetabs {
          height: 64px;
          padding: 0px;
          margin: 16px 0 0 0;
          box-sizing: content-box;
          color: var(--hax-color-text);
          text-align: center;
          background-color: transparent;
          border-bottom: 1px solid var(--hax-color-border-outline);
          display: block;
          justify-content: space-evenly;
          --paper-tabs-selection-bar-color: var(--hax-color-accent1);
        }
        #modetabs paper-tab {
          display: inline-flex;
          height: 100%;
          --paper-tab-ink: var(--hax-color-accent1);
        }
        #modetabs paper-tab paper-button {
          min-width: unset;
          width: 100%;
          background-color: var(--hax-preview-button-bg, white);
          color: var(--hax-preview-button-color, black);
        }
        .preview-buttons {
          height: 64px;
          padding: 0px;
          color: var(--hax-color-text);
          border-bottom: 1px solid var(--hax-color-border-outline);
          background-color: transparent;
          margin: 16px 0 0 0;
          text-align: center;
          box-sizing: content-box;
        }
        .preview-buttons paper-button {
          min-width: unset;
          width: 40%;
          color: var(--hax-preview-button-color, black);
          display: inline-block;
          background-color: var(--hax-preview-button-bg, white);
        }
        #insert {
          background-color: var(
            --hax-preview-insert-button-bg,
            --hax-preview-button-bg
          );
        }
        #cancel {
          background-color: var(
            --hax-preview-cancel-button-bg,
            --hax-preview-button-bg
          );
        }
        .vaadin-layout-width {
          min-width: 30%;
          width: 50%;
          max-width: 70%;
        }
        .vaadin-layout-height {
          min-height: 40%;
          height: 50%;
          max-height: 60%;
        }
      `]}constructor(){super(),this.__winEvents={"hax-store-property-updated":"_haxStorePropertyUpdated"},this.responsiveWidth="800px",this.orientation="horizontal",this.orientationDirection="width",this.previewNode={},this.value={},this.modeTab="configure",this.editTitle="Update",this.schema={schema:{}},this.activeHaxElement={},this.advancedForm=!1}render(){return _litElement.html`
      <custom-style>
        <style>
          #form {
            --eco-json-schema-object-form: {
              display: block !important;
            }
          }
          #modetabs {
            --paper-tabs: {
              background: transparent;
            }
          }
          #modetabs paper-tab {
            --paper-tab: {
              font-size: 16px;
            }
          }
          eco-json-schema-object {
            --eco-json-schema-object-form : {
              -ms-flex: unset;
              -webkit-flex: unset;
              flex: unset;
              -webkit-flex-basis: unset;
              flex-basis: unset;
            }
          }
        </style>
      </custom-style>
      <vaadin-split-layout
        class="panel-wrapper"
        orientation="${this.orientation}"
      >
        <div
          id="ppanel1"
          class="vaadin-split-layout-panel vaadin-layout-${this.orientationDirection}"
        >
          <div class="preview-buttons">
            <paper-button id="insert" raised @click="${this.insert}"
              >${this.editTitle}</paper-button
            >
            <paper-button id="cancel" raised @click="${this.cancel}"
              >Cancel</paper-button
            >
          </div>
          <div class="preview-text hide-on-mobile">
            <iron-icon icon="icons:arrow-drop-down"></iron-icon
            ><iron-icon icon="icons:arrow-drop-down"></iron-icon
            ><iron-icon icon="icons:arrow-drop-down"></iron-icon>${this.humanName}
            preview<iron-icon icon="icons:arrow-drop-down"></iron-icon
            ><iron-icon icon="icons:arrow-drop-down"></iron-icon
            ><iron-icon icon="icons:arrow-drop-down"></iron-icon>
          </div>
          <div id="preview"><slot></slot></div>
          <div class="preview-text preview-text-bottom hide-on-mobile">
            <iron-icon icon="icons:arrow-drop-up"></iron-icon
            ><iron-icon icon="icons:arrow-drop-up"></iron-icon
            ><iron-icon icon="icons:arrow-drop-up"></iron-icon>end
            preview<iron-icon icon="icons:arrow-drop-up"></iron-icon
            ><iron-icon icon="icons:arrow-drop-up"></iron-icon
            ><iron-icon icon="icons:arrow-drop-up"></iron-icon>
          </div>
        </div>
        <div
          id="ppanel2"
          class="vaadin-split-layout-panel vaadin-layout-${this.orientationDirection}"
        >
          <paper-tabs
            .hidden="${!this.haspreviewNode}"
            id="modetabs"
            selected="${this.modeTab}"
            @selected-changed="${this.__modeTabChanged}"
            attr-for-selected="data-mode"
          >
            <paper-tab id="configurebutton" data-mode="configure"
              ><paper-button raised="" noink=""
                >Configure</paper-button
              ></paper-tab
            >
            <paper-tab id="advancedbutton" data-mode="advanced"
              ><paper-button raised="" noink=""
                >Advanced</paper-button
              ></paper-tab
            >
          </paper-tabs>
          <paper-card class="form-wrapper">
            <eco-json-schema-object
              id="form"
              .schema="${this.schema}"
              .value="${this.value}"
              @value-changed="${this.__valueChangedEvent}"
            ></eco-json-schema-object>
          </paper-card>
        </div>
      </vaadin-split-layout>
      <iron-media-query
        query="${this._computeMediaQuery(this.responsiveWidth)}"
        @query-matches-changed="${this._onQueryMatchesChanged}"
      ></iron-media-query>
    `}__valueChangedEvent(e){this.value={...e.detail.value}}__modeTabChanged(e){this.modeTab=e.detail.value}static get tag(){return"hax-preview"}updated(changedProperties){changedProperties.forEach((oldValue,propName)=>{"value"===propName&&(this._valueChanged(this[propName]),this.dispatchEvent(new CustomEvent("value-changed",{detail:{value:this[propName]}}))),"previewNode"===propName&&(this._previewNodeChanged(this[propName],oldValue),this.dispatchEvent(new CustomEvent("preview-node-changed",{detail:{value:this[propName]}}))),"activeHaxElement"===propName&&(this._activeHaxElementChanged(this[propName],oldValue),this.dispatchEvent(new CustomEvent("active-hax-element-changed",{detail:{value:this[propName]}}))),"modeTab"===propName&&this._editorModeChanged(this[propName],oldValue),"formKey"===propName&&this._formKeyChanged(this[propName],oldValue),"advancedForm"===propName&&(this.formKey=this._computedFormKey(this[propName])),"formKey"===propName&&(this.canEditSource=this._computedEditSource(this[propName])),"previewNode"===propName&&(this.haspreviewNode=this._computedHasPreviewNode(this[propName]))})}static get properties(){return{responsiveWidth:{type:String,attribute:"responsive-width"},orientation:{type:String},orientationDirection:{type:String,attribute:"orientation-direction"},previewNode:{type:Object},value:{type:Object},modeTab:{type:String},editTitle:{type:String},activeHaxElement:{type:Object},haspreviewNode:{type:Boolean},schema:{type:Object},advancedForm:{type:Boolean},canEditSource:{type:Boolean,attribute:"can-edit-source"},formKey:{type:String,attribute:"form-key"},humanName:{type:String}}}_onQueryMatchesChanged(e){e.detail.value?(this.orientation="vertical",this.orientationDirection="height"):(this.orientation="horizontal",this.orientationDirection="width")}_computeMediaQuery(responsiveWidth){return"(max-width: "+responsiveWidth+")"}cancel(e){window.HaxStore.write("openDrawer",!1,this)}insert(e){window.HaxStore.instance.haxManager.insertHaxElement(e)}_computedHasPreviewNode(previewNode){return void 0!==previewNode.tagName}_computedEditSource(newValue,oldValue){return void 0===newValue||void 0===this.previewNode.tagName||!window.HaxStore.instance.elementList[this.previewNode.tagName.toLowerCase()]||window.HaxStore.instance.elementList[this.previewNode.tagName.toLowerCase()].canEditSource}_computedFormKey(advanced){return advanced?"advanced":"configure"}_formKeyChanged(newValue,oldValue){if(void 0!==oldValue){var schema={};if(void 0!==this.previewNode&&void 0!==this.previewNode.tagName&&void 0!==window.HaxStore.instance.elementList[this.previewNode.tagName.toLowerCase()]){let props=window.HaxStore.instance.elementList[this.previewNode.tagName.toLowerCase()];for(var property in schema="function"==typeof this.previewNode.getHaxJSONSchemaType?window.HaxStore.instance.getHaxJSONSchema(newValue,props,this.previewNode):window.HaxStore.instance.getHaxJSONSchema(newValue,props),this.activeHaxElement.properties)if(this.activeHaxElement.properties.hasOwnProperty(property)){if(void 0!==schema.properties[property])if(schema.properties[property].value=this.activeHaxElement.properties[property],void 0!==schema.properties[property].component&&schema.properties[property].component.properties&&(schema.properties[property].component.properties.value=this.activeHaxElement.properties[property]),"prefix"==property||null==this.activeHaxElement.properties[property]||this.activeHaxElement.properties[property].readOnly)"prefix"===property?this.previewNode.setAttribute("prefix",this.activeHaxElement.properties[property]):console.warn(`${property} is busted some how`);else if("function"==typeof this.previewNode.set)try{this.previewNode.set(property,this.activeHaxElement.properties[property])}catch(e){console.warn(`${property} is busted some how`),console.warn(e)}else this.previewNode[property]?this.previewNode[property]=this.activeHaxElement.properties[property]:this.previewNode.setAttribute(property,this.activeHaxElement.properties[property]);this.value[property]=this.activeHaxElement.properties[property]}var slotsApplied=!1;for(var prop in props.settings[newValue]){let previewNode=this.previewNode;if(void 0!==props.settings[this.formKey][prop].slot&&!slotsApplied){slotsApplied=!0;const previewNodeChildren=_flattenedNodesObserver.FlattenedNodesObserver.getFlattenedNodes(previewNode);for(var i in previewNodeChildren)void 0!==previewNodeChildren[i]&&1===previewNodeChildren[i].nodeType&&previewNodeChildren[i].slot===props.settings[this.formKey][prop].slot&&void 0!==previewNodeChildren[i].innerHTML&&(schema.properties[props.settings[this.formKey][prop].slot].value=previewNodeChildren[i].innerHTML,this.value[props.settings[this.formKey][prop].slot]=previewNodeChildren[i].innerHTML)}}}this.schema={...schema}}}_haxStorePropertyUpdated(e){e.detail&&void 0!==e.detail.value&&e.detail.property&&"activeHaxElement"==e.detail.property&&(this.activeHaxElement={...e.detail.value},this.activeHaxElement.properties={...e.detail.value.properties})}_previewNodeChanged(newValue,oldValue){if(void 0!==oldValue&&newValue!=oldValue&&void 0!==newValue.tagName&&void 0!==window.HaxStore.instance.elementList[newValue.tagName.toLowerCase()]){let props=window.HaxStore.instance.elementList[newValue.tagName.toLowerCase()],schema={};for(var property in schema="function"==typeof newValue.getHaxJSONSchemaType?window.HaxStore.instance.getHaxJSONSchema(this.formKey,props,newValue):window.HaxStore.instance.getHaxJSONSchema(this.formKey,props),void 0===props.gizmo.title?this.humanName=newValue.tagName.replace("-"," ").toLowerCase():this.humanName=props.gizmo.title,this.activeHaxElement.properties)if(this.activeHaxElement.properties.hasOwnProperty(property)){if(void 0!==schema.properties[property]&&(schema.properties[property].value=this.activeHaxElement.properties[property],void 0!==schema.properties[property].component&&schema.properties[property].component.properties&&(schema.properties[property].component.properties.value=this.activeHaxElement.properties[property])),null!=this.activeHaxElement.properties[property]&&!this.activeHaxElement.properties[property].readOnly)if("slot"===property)property="data-hax-slot",this.activeHaxElement.properties[property]=this.activeHaxElement.properties.slot,delete this.activeHaxElement.properties.slot,null!=this.activeHaxElement.properties[property]&&newValue.setAttribute("data-hax-slot",this.activeHaxElement.properties[property]);else if("prefix"===property)newValue.setAttribute("prefix",this.activeHaxElement.properties[property]);else if("function"==typeof newValue.set)try{newValue.set(property,this.activeHaxElement.properties[property])}catch(e){console.warn(e)}else if(newValue[property])newValue[property]=this.activeHaxElement.properties[property];else try{newValue.setAttribute(property,this.activeHaxElement.properties[property])}catch(e){console.warn(e)}this.value[property]=this.activeHaxElement.properties[property]}for(var property in newValue)newValue.hasOwnProperty(property)&&void 0!==schema.properties[property]&&void 0!==newValue[property].value&&null!==newValue[property].value&&(schema.properties[property].value=newValue.properties[property].value,void 0!==schema.properties[property].component&&schema.properties[property].component.properties&&(schema.properties[property].component.properties.value=newValue.properties[property].value),this.value[property]=newValue.properties[property].value);for(var prop in props.settings[this.formKey])if(void 0!==props.settings[this.formKey][prop].slot){const newValueChildren=_flattenedNodesObserver.FlattenedNodesObserver.getFlattenedNodes(newValue);for(var i in newValueChildren)void 0!==newValueChildren[i]&&1===newValueChildren[i].nodeType&&newValueChildren[i].slot===props.settings[this.formKey][prop].slot&&void 0!==newValueChildren[i].innerHTML&&(schema.properties[props.settings[this.formKey][prop].slot].value=newValueChildren[i].innerHTML,this.value[props.settings[this.formKey][prop].slot]=newValueChildren[i].innerHTML)}this.schema={...schema}}}_activeHaxElementChanged(newValue,oldValue){if(void 0!==newValue){if((0,_utils.wipeSlot)(this,"*"),this.previewNode={},this.value={},this.schema={},this.schema={schema:{}},this.modeTab="configure",newValue&&null!=newValue&&0!=newValue.length&&newValue.tag){var frag=document.createElement(newValue.tag);frag.innerHTML=newValue.content;var newNode=frag.cloneNode(!0);newNode.setAttribute("hax-preview-mode","hax-preview-mode"),null!=newNode.getAttribute("slot")&&(newNode.setAttribute("data-hax-slot",newNode.getAttribute("slot")),newNode.removeAttribute("slot")),this.appendChild(newNode),this.previewNode=newNode}}else this.modeTab="advanced",this.previewNode={}}_valueChanged(valueChange){var node=this.previewNode;if(void 0!==node.tagName&&void 0!==window.HaxStore.instance.elementList[node.tagName.toLowerCase()])for(var path in valueChange){var propSettings=window.HaxStore.instance.elementList[node.tagName.toLowerCase()].settings[this.formKey].filter(n=>void 0!==n.attribute?n.attribute===path:void 0!==n.property?n.property===path:void 0!==n.slot?n.slot===path:void 0);if(propSettings.length>0){var propData=propSettings.pop();if(propData.attribute){let attributeName=window.HaxStore.camelToDash(propData.attribute);!0===valueChange[path]?node.setAttribute(attributeName,attributeName):!1===valueChange[path]?node.removeAttribute(attributeName):"inner-text"===attributeName?(node.innerText=valueChange[path],node.removeAttribute("innertext")):null!==valueChange[path]&&"null"!==valueChange[path]&&node.setAttribute(attributeName,valueChange[path]),this.activeHaxElement.properties[propData.attribute]=valueChange[path]}else if(propData.property)!0===valueChange[path]||!1===valueChange[path]?node[propData.property]=valueChange[path]:null!=valueChange[path]&&valueChange[path].indexSplices&&valueChange[path].indexSplices[0]?"function"==typeof node.set?(node.set(propData.property,valueChange[path].indexSplices[0].object),node.notifyPath(propData.property+".*")):node[propData.property]=valueChange[path].indexSplices[0].object:null!=valueChange[path]&&valueChange[path].constructor===Array?"function"==typeof node.set?node.set(propData.property,window.HaxStore.toArray(valueChange[path])):node[propData.property]=window.HaxStore.toArray(valueChange[path]):"function"==typeof node.set?node.set(propData.property,valueChange[path]):node[propData.property]=valueChange[path],this.activeHaxElement.properties[propData.property]=valueChange[path];else if(void 0!==propData.slot){let slotTag="span";propData.slotWrapper?slotTag=propData.slotWrapper:"code-editor"===node.tagName.toLowerCase()&&(slotTag="template");var tmpel=document.createElement(slotTag);if(propData.slotAttributes)for(var attr in propData.slotAttributes)tmpel.setAttribute(attr,propData.slotAttributes[attr]);""!==propData.slot&&(tmpel.slot=propData.slot),tmpel.innerHTML=valueChange[path];const cloneIt=tmpel.cloneNode(!0);window.HaxStore.instance.isTextElement(node)?node.innerHTML=tmpel.innerHTML:((0,_utils.wipeSlot)(node,propData.slot),node.appendChild(cloneIt)),this.activeHaxElement.content="<template>"+cloneIt.outerHTML+"</template>"}}}}_editorModeChanged(mode){mode&&(this.advancedForm="advanced"===mode)}}_exports.HaxPreview=HaxPreview,window.customElements.define(HaxPreview.tag,HaxPreview)});