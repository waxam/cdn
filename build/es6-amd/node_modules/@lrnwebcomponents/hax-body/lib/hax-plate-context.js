define(["exports","require"],function(_exports,_require){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.HaxPlateContext=void 0,_require=babelHelpers.interopRequireWildcard(_require);class HaxPlateContext extends HTMLElement{constructor(delayRender=!1){super(),new Promise((res,rej)=>_require.default(["./hax-context-item-menu.js"],res,rej)),new Promise((res,rej)=>_require.default(["./hax-context-item.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../@polymer/iron-icons/editor-icons.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../@polymer/iron-icons/hardware-icons.js"],res,rej)),this.tag=HaxPlateContext.tag,this.template=document.createElement("template"),this.attachShadow({mode:"open"}),delayRender||this.render()}static get tag(){return"hax-plate-context"}get html(){return'\n    <style>\n    :host {\n      display: block;\n      width: 40px;\n      margin-top: -2px;\n    }\n    hax-context-item {\n      display: block;\n    }\n    .area {\n      width: 40px;\n      float: left;\n      visibility: visible;\n      transition: 0.2s all linear;\n    }\n    </style>\n    <div class="area">\n      <hax-context-item\n        light\n        icon="hardware:keyboard-arrow-up"\n        label="Move up"\n        event-name="grid-plate-up"\n        direction="left"\n      ></hax-context-item>\n      <hax-context-item\n        id="drag"\n        light\n        icon="editor:drag-handle"\n        label="Drag"\n        draggable="true"\n        direction="left"\n      ></hax-context-item>\n      <hax-context-item\n        light\n        icon="hardware:keyboard-arrow-down"\n        label="Move down"\n        event-name="grid-plate-down"\n        direction="left"\n      ></hax-context-item>\n    </div>'}render(){this.shadowRoot.innerHTML=null,this.template.innerHTML=this.html,window.ShadyCSS&&window.ShadyCSS.prepareTemplate(this.template,this.tag),this.shadowRoot.appendChild(this.template.content.cloneNode(!0))}connectedCallback(){setTimeout(()=>{this.shadowRoot.querySelector("#drag").addEventListener("dragstart",this._dragstart)},0)}disconnectedCallback(){this.shadowRoot.querySelector("#drag").removeEventListener("dragstart",this._dragstart)}_dragstart(e){let target=window.HaxStore.instance.activeNode;window.HaxStore.instance.activeContainerNode&&(target=window.HaxStore.instance.activeContainerNode),window.HaxStore.instance.__dragTarget=target,e.dataTransfer.dropEffect="move",e.dataTransfer.setDragImage(target,25,25),e.stopPropagation(),e.stopImmediatePropagation()}}_exports.HaxPlateContext=HaxPlateContext,window.customElements.define(HaxPlateContext.tag,HaxPlateContext)});