define(["exports","require","../../utils/utils.js"],(function(_exports,_require,_utils){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.HaxPlateContext=void 0,_require=babelHelpers.interopRequireWildcard(_require);class HaxPlateContext extends((0,_utils.winEventsElement)(HTMLElement)){constructor(delayRender=!1){super(),this.__winEvents={"hax-store-property-updated":"_haxStorePropertyUpdated"},this.tag=HaxPlateContext.tag,this.template=document.createElement("template"),this.attachShadow({mode:"open"}),delayRender||this.render(),setTimeout(()=>{new Promise((res,rej)=>_require.default(["../../../@polymer/paper-item/paper-item.js"],res,rej)),new Promise((res,rej)=>_require.default(["./hax-context-item-menu.js"],res,rej)),new Promise((res,rej)=>_require.default(["./hax-context-item.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../hax-iconset/hax-iconset.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../@polymer/iron-icons/editor-icons.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../@polymer/iron-icons/hardware-icons.js"],res,rej))},0)}static get tag(){return"hax-plate-context"}get html(){return'\n    <style>\n    :host {\n      display: block;\n      margin-top: -2px;\n    }\n    hax-context-item {\n      display: block;\n    }\n    hax-context-item[large] {\n      display: inline-block;\n      margin:0;\n      padding:0;\n    }\n    .area {\n      visibility: visible;\n      transition: 0.2s height linear;\n    }\n    .paddle {\n      position:fixed;\n      width: unset;\n      height: unset;\n      visibility: visible;\n      opacity: .6;\n      transition: 0.2s height linear;\n    }\n    .paddle:hover {\n      opacity: 1;\n    }\n    paper-item {\n      -webkit-justify-content: flex-start;\n      justify-content: flex-start;\n      height: 20px;\n      padding: 0 4px;\n      min-height: 20px;\n      font-size: 10px;\n    }\n    paper-item:hover {\n      background-color: #d3d3d3;\n      cursor: pointer;\n    }\n    iron-icon {\n      padding: 0 2px;\n      width: 16px;\n      height: 16px;\n    }\n    </style>\n    <div class="area">\n      <hax-context-item\n        light\n        icon="hardware:keyboard-arrow-up"\n        label="Move up"\n        event-name="hax-plate-up"\n        direction="left"\n      ></hax-context-item>\n      <hax-context-item\n        id="drag"\n        light\n        icon="editor:drag-handle"\n        label="Drag"\n        draggable="true"\n        direction="left"\n      ></hax-context-item>\n      <hax-context-item\n        light\n        icon="hardware:keyboard-arrow-down"\n        label="Move down"\n        event-name="hax-plate-down"\n        direction="left"\n      ></hax-context-item>\n    </div>\n    <hax-context-item\n      light\n      large\n      class="paddle"\n      icon="icons:add"\n      label="Add column"\n      event-name="hax-plate-create-left"\n      direction="right"\n      id="left"\n    ></hax-context-item>\n    <hax-context-item-menu\n      mini\n      id="leftadd"\n      class="paddle"\n      icon="hax:add-brick"\n      label="Insert new.."\n      event-name="hax-plate-add-element"\n      direction="right"\n      selected-value="0"\n      reset-on-select\n    >\n    <paper-item value="" hidden></paper-item>\n      <paper-item value=\'{"tag":"p","content":"", "properties": {}}\'>\n        <iron-icon icon="hax:paragraph"></iron-icon>Paragraph\n      </paper-item>\n      <paper-item value=\'{"tag":"h2","content":"Heading", "properties": {}}\'>\n        <iron-icon icon="hax:h2"></iron-icon>Heading\n      </paper-item>\n      <paper-item value=\'{"tag":"ul","content":"<li>List</li>", "properties": {}}\'>\n        <iron-icon icon="editor:format-list-bulleted"></iron-icon>Bulleted list\n      </paper-item>\n      <paper-item value=\'{"tag":"hr","content":"", "properties": {}}\'>\n        <iron-icon icon="hax:hr"></iron-icon>Horizontal line\n      </paper-item>\n      <paper-item value=\'{"tag":"place-holder","content":"", "properties": {"type": "image", "text": "Image"}}\'>\n        <iron-icon icon="hax:placeholder"></iron-icon>Image placeholder\n      </paper-item>\n      <paper-item value=\'other\'>\n        <iron-icon icon="hax:add-brick"></iron-icon>Other element\n      </paper-item>\n    </hax-context-item-menu>\n    <hax-context-item\n      light\n      large\n      id="right"\n      class="paddle"\n      icon="icons:add"\n      label="Add column"\n      event-name="hax-plate-create-right"\n      direction="left"\n    ></hax-context-item>\n  '}_haxStorePropertyUpdated(e){setTimeout(()=>{e.detail&&void 0!==e.detail.value&&e.detail.property&&null!=this.getAttribute("on-screen")&&["activeNode","activeContainerNode"].includes(e.detail.property)&&this.__updatePlatePosition()},0)}__updatePlatePosition(){setTimeout(()=>{let activeRec=window.HaxStore.instance.activeNode.getBoundingClientRect(),rect=activeRec,right=this.shadowRoot.querySelector("#right"),left=this.shadowRoot.querySelector("#left"),leftadd=this.shadowRoot.querySelector("#leftadd");window.HaxStore.instance.activeContainerNode&&(rect=window.HaxStore.instance.activeContainerNode.getBoundingClientRect()),right.style.top=Math.round(rect.y-1)+"px",right.style.left=Math.round(rect.left+rect.width+2)+"px",left.style.top=Math.round(rect.y-1)+"px",left.style.left=Math.round(rect.left-22)+"px",right.height=Math.round(rect.height+2)+"px",left.height=right.height,this.style.height=right.height,leftadd.style.top=Math.round(activeRec.y+activeRec.height+1)+"px",leftadd.style.left=Math.round(activeRec.left-22)+"px"},100)}render(){this.shadowRoot.innerHTML=null,this.template.innerHTML=this.html,window.ShadyCSS&&window.ShadyCSS.prepareTemplate(this.template,this.tag),this.shadowRoot.appendChild(this.template.content.cloneNode(!0))}connectedCallback(){super.connectedCallback(),setTimeout(()=>{this.shadowRoot.querySelector("#drag").addEventListener("dragstart",this._dragstart),this.shadowRoot.querySelector("#drag").addEventListener("dragend",this.dragEnd)},0)}disconnectedCallback(){this.shadowRoot.querySelector("#drag").removeEventListener("dragstart",this._dragstart),this.shadowRoot.querySelector("#drag").removeEventListener("dragend",this.dragEnd),super.disconnectedCallback()}dragEnd(e){let children=window.HaxStore.instance.activeHaxBody.children;for(var i in children)void 0!==children[i].classList&&children[i].classList.remove("mover","hovered","moving","grid-plate-active-item")}_dragstart(e){let target=window.HaxStore.instance.activeNode;window.HaxStore.instance.activeContainerNode&&(target=window.HaxStore.instance.activeContainerNode),window.HaxStore.instance.__dragTarget=target,target.classList.add("moving"),e.dataTransfer.dropEffect="move",e.dataTransfer.setDragImage(target,0,0),e.stopPropagation(),e.stopImmediatePropagation(),setTimeout(()=>{if(!window.HaxStore.instance.activeHaxBody.openDrawer&&window.HaxStore.instance.editMode){let children=window.HaxStore.instance.activeHaxBody.children;for(var i in children)children[i].classList&&target!==children[i]&&children[i].classList.add("mover")}},10)}}_exports.HaxPlateContext=HaxPlateContext,window.customElements.define(HaxPlateContext.tag,HaxPlateContext)}));