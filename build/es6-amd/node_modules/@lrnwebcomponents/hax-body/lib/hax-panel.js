define(["exports","meta","require","../../../@polymer/polymer/polymer-element.js","../../../@polymer/polymer/lib/utils/render-status.js","../../simple-colors/simple-colors.js","./hax-shared-styles.js"],function(_exports,meta,_require,_polymerElement,_renderStatus,_simpleColors,_haxSharedStyles){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.HaxPanel=void 0,meta=babelHelpers.interopRequireWildcard(meta),_require=babelHelpers.interopRequireWildcard(_require);class HaxPanel extends _polymerElement.PolymerElement{constructor(){super(),new Promise((res,rej)=>_require.default(["../../../@polymer/iron-icons/iron-icons.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../@polymer/iron-icons/editor-icons.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../@polymer/iron-icons/device-icons.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../@polymer/iron-icons/hardware-icons.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../@polymer/iron-icons/communication-icons.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../@polymer/iron-icons/social-icons.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../@polymer/iron-icons/av-icons.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../@polymer/iron-icons/maps-icons.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../@polymer/app-layout/app-drawer/app-drawer.js"],res,rej)),new Promise((res,rej)=>_require.default(["./hax-panel-item.js"],res,rej))}static get template(){return _polymerElement.html`
      <style include="hax-shared-styles">
        :host {
          display: block;
          position: absolute;
          z-index: 1000000;
        }
        :host *[hidden] {
          display: none;
        }
        iron-icon:not(:defined),
        hax-panel-item:not(:defined),
        app-drawer:not(:defined) {
          display: none;
        }
        app-drawer {
          z-index: 100001;
          height: 40px;
          padding: 8px 16px;
          left: 0;
          top: 0;
          align-items: center;
          touch-action: auto;
          visibility: hidden;
          opacity: 0;
          display: flex;
          --app-drawer-width: 100%;
          --app-drawer-content-container: {
            align-items: center;
            width: 100%;
            left: 0;
            right: 0;
            background-color: var(--hax-color-bg);
            border: 1px solid var(--hax-color-bg-accent);
            padding: 0 16px;
            display: flex;
            touch-action: auto;
            overflow-x: auto;
            overflow: visible !important;
            -webkit-overflow-scrolling: touch;
            white-space: nowrap;
          }
        }
        hax-panel-item {
          margin: 8px 2px;
        }
        hax-panel-item[right] {
          float: right;
        }
        #haxcancelbutton {
          margin-right: 48px;
        }
        :host([align="right"]) app-drawer {
          right: 0;
          left: unset;
        }
        :host([edit-mode]) app-drawer {
          visibility: visible;
          transition: 0.3s ease opacity;
          opacity: 1;
          right: 0;
          left: 0;
          top: 0;
        }

        #button {
          position: fixed;
          top: 0;
          left: 0;
          visibility: visible;
          z-index: 10000;
          transition: all 0.3s ease;
          margin: 0;
          border-top-left-radius: 0;
        }
        :host([edit-mode]) #button {
          visibility: hidden;
          opacity: 0;
        }
        #button:hover {
          opacity: 1;
        }
        :host([align="right"]) #button {
          right: 0;
          left: unset;
          border-top-right-radius: 0;
          border-top-left-radius: unset;
        }
        .active-op-name,
        .editing-mode-active {
          display: none;
        }
        :host([edit-mode]) .active-op-name {
          display: flex;
          top: 0;
          right: 0;
          z-index: 1000000;
          position: fixed;
          font-size: 14px;
          font-weight: bold;
          padding: 16px 28px 16px 16px;
          line-height: 24px;
          height: 24px;
          min-width: 120px;
          justify-content: space-evenly;
          background-color: var(--hax-color-bg-accent);
          color: var(--hax-color-text);
          vertical-align: middle;
        }
        :host([edit-mode]) .editing-mode-active {
          display: flex;
          font-size: 18px;
          margin-left: 100px;
          font-weight: bold;
          color: var(--hax-color-text);
        }
        @media screen and (max-width: 600px) {
          :host([edit-mode]) .hide-small {
            display: none;
          }
        }
        @media screen and (max-width: 800px) {
          :host([edit-mode]) #haxcancelbutton {
            margin-right: 2px;
          }
          :host([edit-mode]) .editing-mode-active,
          :host([edit-mode]) .active-op-name {
            display: none;
          }
        }
      </style>
      <div hidden$="[[hidePanelOps]]">
        <hax-panel-item
          dark
          large
          data-opened$="[[editMode]]"
          on-click="_clickEditButton"
          icon="create"
          id="button"
          edged="[[align]]"
          label="[[__tipText]]"
        ></hax-panel-item>
      </div>
      <app-drawer
        id="drawer"
        opened="{{editMode}}"
        disable-swipe
        persistent
        transition-duration="300"
        align="[[align]]"
      >
        <hax-panel-item
          hidden$="[[hidePanelOps]]"
          on-click="_clickSaveButton"
          icon="save"
          id="haxsavebutton"
          label="[[__tipText]]"
          event-name="save"
          voice-command="save content"
        ></hax-panel-item>
        <hax-panel-item
          hidden$="[[hidePanelOps]]"
          icon="cancel"
          id="haxcancelbutton"
          label="Cancel"
          event-name="cancel"
          voice-command="cancel hax"
        ></hax-panel-item>
        <hax-panel-item
          icon="image:add-to-photos"
          label="Add"
          event-name="hax-manager-open"
          value="0"
        ></hax-panel-item>
        <hax-panel-item
          icon="search"
          label="Find"
          event-name="hax-manager-open"
          value="1"
        ></hax-panel-item>
        <hax-panel-item
          icon="hardware:toys"
          label="Make"
          event-name="hax-manager-open"
          value="2"
        ></hax-panel-item>
        <hax-panel-item
          icon="view-quilt"
          label="Layouts"
          event-name="hax-blox-picker-open"
          voice-command="insert block"
        ></hax-panel-item>
        <hax-panel-item
          icon="view-agenda"
          label="Templates"
          event-name="hax-stax-picker-open"
          voice-command="insert stack"
        ></hax-panel-item>
        <hax-panel-item
          icon="editor:short-text"
          label="Paragraph"
          event-name="text"
          voice-command="insert text"
          class="hide-small"
        ></hax-panel-item>
        <hax-panel-item
          icon="editor:title"
          label="Heading"
          event-name="header"
          voice-command="insert heading"
          class="hide-small"
        ></hax-panel-item>
        <hax-panel-item
          icon="editor:space-bar"
          label="Divider"
          event-name="divider"
          voice-command="insert divider"
          class="hide-small"
        ></hax-panel-item>
        <hax-panel-item
          icon="image:transform"
          label="Placeholder"
          event-name="placeholder"
          voice-command="insert placeholder"
          class="hide-small"
        ></hax-panel-item>
        <hax-panel-item
          hidden$="[[hideExportButton]]"
          on-click="_htmlExportDialog"
          icon="code"
          label="Source view"
        ></hax-panel-item>
        <slot></slot>
        <hax-panel-item
          right
          hidden$="[[hidePreferencesButton]]"
          on-click="_preferencesDialog"
          icon="settings"
          label="Preferences"
        ></hax-panel-item>
        <div class="editing-mode-active">[[editModeName]]</div>
      </app-drawer>
      <div class="active-op-name">[[activeOperationName]]</div>
    `}static get tag(){return"hax-panel"}static get properties(){return{light:{type:Boolean},align:{type:String,reflectToAttribute:!0,value:"left"},editMode:{type:Boolean,reflectToAttribute:!0,observer:"_editModeChanged"},hideExportButton:{type:Boolean,value:!1},haxDeveloperMode:{type:Boolean,value:!1},activeOperationName:{type:String},editModeName:{type:String,value:"You are editing content"},hidePreferencesButton:{type:Boolean,value:!1},hidePanelOps:{type:Boolean,value:!1},globalPreferences:{type:Object,observer:"_globalPreferencesChanged"}}}ready(){super.ready(),(0,_renderStatus.afterNextRender)(this,function(){this.addEventListener("hax-item-selected",this._processItemEvent.bind(this)),this.dispatchEvent(new CustomEvent("hax-register-panel",{bubbles:!0,cancelable:!0,composed:!0,detail:this})),document.body.addEventListener("hax-store-property-updated",this._haxStorePropertyUpdated.bind(this)),document.body.addEventListener("hax-active-hover-name",this._activeNameChange.bind(this)),document.body.addEventListener("hax-panel-operation",this._processItemEvent.bind(this))})}_activeNameChange(e){this.activeOperationName=e.detail}_globalPreferencesChanged(newValue){newValue&&void 0!==newValue.haxShowExportButton&&(this.hideExportButton=!newValue.haxShowExportButton)}_haxStorePropertyUpdated(e){e.detail&&void 0!==e.detail.value&&e.detail.property&&("object"==typeof e.detail.value&&this.set(e.detail.property,null),this.set(e.detail.property,e.detail.value))}_processItemEvent(e){let detail=e.detail;switch(detail.eventName){case"open-panel":this._clickButton();break;case"cancel":this.toggle(),this.dispatchEvent(new CustomEvent("hax-cancel",{bubbles:!0,cancelable:!0,composed:!0,detail:detail}));break;case"text":detail.tag="p",detail.content="",this.dispatchEvent(new CustomEvent("hax-insert-content",{bubbles:!0,cancelable:!0,composed:!0,detail:detail}));break;case"divider":detail.tag="hr",detail.content="",detail.properties={style:"width:100%;"},this.dispatchEvent(new CustomEvent("hax-insert-content",{bubbles:!0,cancelable:!0,composed:!0,detail:detail}));break;case"header":detail.tag="h2",detail.content="Header",this.dispatchEvent(new CustomEvent("hax-insert-content",{bubbles:!0,cancelable:!0,composed:!0,detail:detail}));break;case"placeholder":detail.tag="place-holder",detail.content="",detail.properties={style:"width:50%;"},this.dispatchEvent(new CustomEvent("hax-insert-content",{bubbles:!0,cancelable:!0,composed:!0,detail:detail}));break;case"image":detail.tag="img",detail.content="",detail.properties={src:pathFromUrl(decodeURIComponent(meta.url))+window.HaxStore.instance.defaults.image.src,alt:window.HaxStore.instance.defaults.image.alt,style:"width:100%;"},this.dispatchEvent(new CustomEvent("hax-insert-content",{bubbles:!0,cancelable:!0,composed:!0,detail:detail}));break;case"iframe":detail.tag="iframe",detail.content="",detail.properties={src:window.HaxStore.instance.defaults.iframe.src,height:"400px",width:"100%",style:"width:100%;"},this.dispatchEvent(new CustomEvent("hax-insert-content",{bubbles:!0,cancelable:!0,composed:!0,detail:detail}));break;case"blockquote":detail.tag="blockquote",detail.content="",this.dispatchEvent(new CustomEvent("hax-insert-content",{bubbles:!0,cancelable:!0,composed:!0,detail:detail}));break;case"hax-manager-open":window.HaxStore.write("activeHaxElement",{},this),window.HaxStore.instance.haxManager.resetManager(parseInt(detail.value)),window.HaxStore.instance.haxManager.toggleDialog(!1);break;case"hax-stax-picker-open":window.HaxStore.instance.haxStaxPicker.toggleDialog();break;case"hax-blox-picker-open":window.HaxStore.instance.haxBloxPicker.toggleDialog();break;case"undo":document.execCommand("undo");break;case"redo":document.execCommand("redo")}}_editModeChanged(newValue,oldValue){void 0!==newValue&&newValue?(this.__tipText="Save",this.shadowRoot.querySelector("#button").icon="save"):(this.__tipText="Edit",this.shadowRoot.querySelector("#button").icon="create")}_clickEditButton(e){this.toggle()}_clickSaveButton(e){this.toggle(),this.dispatchEvent(new CustomEvent("hax-save",{bubbles:!0,cancelable:!0,composed:!0,detail:e.detail}))}_htmlExportDialog(e){window.HaxStore.instance.haxExport.toggleDialog()}_preferencesDialog(e){window.HaxStore.instance.haxPreferences.toggleDialog()}toggle(e){window.HaxStore.write("editMode",!this.editMode,this),this.shadowRoot.querySelector("#drawer").opened=this.editMode,this.shadowRoot.querySelector("#drawer").opened||window.HaxStore.instance.closeAllDrawers()}}_exports.HaxPanel=HaxPanel,window.customElements.define(HaxPanel.tag,HaxPanel)});