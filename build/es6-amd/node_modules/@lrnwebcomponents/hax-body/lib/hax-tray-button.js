define(["exports","../../../lit-element/lit-element.js","../../simple-colors/simple-colors.js","../../../@polymer/paper-button/paper-button.js","../../simple-tooltip/simple-tooltip.js"],(function(_exports,_litElement,_simpleColors,_paperButton,_simpleTooltip){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.HAXTrayButton=void 0;class HAXTrayButton extends _simpleColors.SimpleColors{static get tag(){return"hax-tray-button"}constructor(){super(),this.mini=!1,this.wide=!1,this.eventData=null,this.eventName=null,this.icon=null,this.colorMeaning=!1,this._defaultHoverColor="cyan",this._defaultColor="blue-grey",this.accentColor=this._defaultColor,this.hoverAccentColor=this._defaultColor,this.addEventListener("focusin",this._focusIn.bind(this)),this.addEventListener("focusout",this._focusOut.bind(this)),this.addEventListener("mouseover",this._focusIn.bind(this)),this.addEventListener("mouseout",this._focusOut.bind(this))}static get properties(){return{...super.properties,voiceCommand:{type:String,attribute:"voice-command"},mini:{type:Boolean,reflect:!0},colorMeaning:{type:Boolean,attribute:"color-meaning"},wide:{type:Boolean,reflect:!0},index:{type:Number},eventName:{type:String,attribute:"event-name"},eventData:{type:String,attribute:"event-data"},label:{type:String},icon:{type:String},color:{type:String}}}static get styles(){return[...super.styles,_litElement.css`:host{display:inline-flex;flex-direction:column;align-items:center;margin:1px 0;background-color:var(--simple-colors-default-theme-accent-8,#000)}iron-icon{width:20px;height:20px;color:var(--simple-colors-default-theme-accent-1,#eee);transform:var(--hax-tray-button-rotate)}.item-label{margin-top:4px;color:var(--simple-colors-default-theme-accent-1,#eee);width:60px;font-size:10px;line-height:10px;text-align:center;text-overflow:ellipsis;overflow:hidden;word-break:break-word}:host([wide]){display:block;width:100%}:host([wide]) .item-label{width:unset}:host([wide]) paper-button{align-items:center;justify-content:space-around}.flip-icon{transform:rotateY(180deg)}paper-button{color:var(--hax-color-text);text-transform:none;background-color:var(--hax-color-bg-accent);min-width:unset;cursor:pointer;height:40px;display:flex;padding:4px;margin:0;color:#fff;border-radius:0;transition:box-shadow .3s}paper-button iron-icon{height:20px;width:20px;color:var(--simple-colors-default-theme-accent-1);display:inline-block}:host([mini]){height:30px;width:30px}:host([mini]) paper-button{height:30px;width:30px}:host([mini]) paper-button iron-icon{height:18px;width:18px}.item-title{margin-top:8px;color:var(--hax-color-text);width:100%;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;font-size:12px;line-height:12px;height:12px;text-align:center}.button-inner{display:flex}simple-tooltip{font-size:16px;--simple-tooltip-background:#000000;--simple-tooltip-opacity:1;--simple-tooltip-text-color:#ffffff;--simple-tooltip-delay-in:0;--simple-tooltip-duration-in:100ms;--simple-tooltip-duration-out:0;--simple-tooltip-border-radius:0;--simple-tooltip-font-size:14px}`]}render(){return _litElement.html`<paper-button title=${this.label} raised @click=${this._fireEvent}>${this.icon?_litElement.html`<div class=button-inner><iron-icon icon=${this.icon}></iron-icon></div>`:_litElement.html``} ${this.mini?_litElement.html``:_litElement.html`<div class=item-label>${this.label}</div>`}</paper-button>${this.mini?_litElement.html`<simple-tooltip>${this.label}</simple-tooltip>`:""}`}_focusIn(e){this.accentColor=this.hoverAccentColor===this._defaultColor?this._defaultHoverColor:this.hoverAccentColor}_focusOut(e){this.colorMeaning?this.accentColor=this.color:this.accentColor=this._defaultColor}_voiceEvent(e){this._fireEvent(e),this.click()}_fireEvent(e){this.dispatchEvent(new CustomEvent("hax-tray-button-click",{bubbles:!0,cancelable:!0,composed:!0,detail:{eventName:this.eventName,index:this.index,value:this.eventData}}))}updated(changedProperties){super.updated&&super.updated(changedProperties),changedProperties.forEach((oldValue,propName)=>{"voiceCommand"==propName&&this.dispatchEvent(new CustomEvent("hax-add-voice-command",{bubbles:!0,composed:!0,cancelable:!1,detail:{command:":name: "+this[propName],context:this,callback:"_voiceEvent"}})),"color"==propName&&(this.accentColor&&this.color===this._defaultColor||!this.colors[this.color]||(this.hoverAccentColor=this.color)),"colorMeaning"==propName&&this.colorMeaning&&(this.accentColor=this.color)})}}_exports.HAXTrayButton=HAXTrayButton,customElements.define(HAXTrayButton.tag,HAXTrayButton)}));