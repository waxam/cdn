define(["exports","../../../lit-element/lit-element.js","./hax-toolbar-menu.js","../../../@polymer/paper-tooltip/paper-tooltip.js","../../../@polymer/paper-item/paper-item.js","../../../@polymer/neon-animation/neon-animation.js"],function(_exports,_litElement,_haxToolbarMenu,_paperTooltip,_paperItem,_neonAnimation){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.HaxContextItemMenu=void 0;class HaxContextItemMenu extends _litElement.LitElement{static get styles(){return[_litElement.css`
        :host {
          display: inline-flex;
          height: 36px;
          box-sizing: border-box;
        }
        :host hax-toolbar-menu ::slotted(*):hover {
          background-color: var(--hax-color-bg-accent);
        }
        :host hax-toolbar-menu ::slotted(*) {
          height: 36px;
        }
      `]}constructor(){super(),this._blockEvent=!1,this.resetOnSelect=!1,this.selectedValue=0,this.direction="top",this.icon="editor:text-fields",this.label="editor:text-fields",this.eventName="button"}render(){return _litElement.html`
      <hax-toolbar-menu
        id="menu"
        .icon="${this.icon}"
        .tooltip="${this.label}"
        .tooltip-direction="${this.direction}"
        @selected-changed="${this.selectedValueChanged}"
        .selected="${this.selectedValue}"
        .reset-on-select="${this.resetOnSelect}"
      >
        <slot></slot>
      </hax-toolbar-menu>
    `}selectedValueChanged(e){this.selectedValue=e.detail}static get tag(){return"hax-context-item-menu"}updated(changedProperties){changedProperties.forEach((oldValue,propName)=>{"selectedValue"==propName&&(this._selectedUpdated(this[propName],oldValue),this.dispatchEvent(new CustomEvent("selected-value-changed",{detail:this[propName]})))})}static get properties(){return{_blockEvent:{type:Boolean},resetOnSelect:{type:Boolean,attribute:"reset-on-select"},selectedValue:{type:Number,reflect:!0,attribute:"selected-value"},direction:{type:String},icon:{type:String,reflect:!0},label:{type:String,reflect:!0},eventName:{type:String,reflect:!0,attribute:"event-name"}}}_selectedUpdated(newValue,oldValue){if("object"!=typeof newValue&&void 0!==oldValue&&"object"!=typeof oldValue){let children=this.children;for(var item=new Object,j=0,i=0,len=children.length;i<len;i++)if("PAPER-ITEM"===children[i].tagName){if(j===newValue){item=children[i],len=i;continue}j++}this._blockEvent||void 0===item.attributes||void 0===item.attributes.value||void 0===item.attributes.value.value||(this.shadowRoot.querySelector("#menu").hideMenu(),this.dispatchEvent(new CustomEvent("hax-context-item-selected",{bubbles:!0,cancelable:!0,composed:!0,detail:{target:item,eventName:item.attributes.value.value}}))),this._blockEvent&&(this._blockEvent=!1)}}}_exports.HaxContextItemMenu=HaxContextItemMenu,window.customElements.define(HaxContextItemMenu.tag,HaxContextItemMenu)});