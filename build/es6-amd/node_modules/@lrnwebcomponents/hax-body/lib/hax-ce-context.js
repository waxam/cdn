define(["exports","require","../../../lit-element/lit-element.js","../../utils/utils.js"],(function(_exports,_require,_litElement,_utils){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.HaxCeContext=void 0,_require=babelHelpers.interopRequireWildcard(_require);class HaxCeContext extends((0,_utils.winEventsElement)(_litElement.LitElement)){static get styles(){return[_litElement.css`
        :host *[hidden] {
          display: none;
        }
        :host {
          display: block;
        }
        hax-context-item {
          margin: 0;
        }
        :host(.hax-context-pin-top) hax-toolbar {
          position: fixed;
          top: 40px;
          flex-direction: column;
        }
      `]}constructor(){super(),this.__winEvents={"hax-store-property-updated":"_haxStorePropertyUpdated"},this.haxProperties={},setTimeout(()=>{new Promise((res,rej)=>_require.default(["./hax-context-item.js"],res,rej)),new Promise((res,rej)=>_require.default(["./hax-toolbar.js"],res,rej))},0)}_haxStorePropertyUpdated(e){e.detail&&void 0!==e.detail.value&&e.detail.property&&("activeNode"!==e.detail.property&&"activeContainerNode"!==e.detail.property||setTimeout(()=>{this._computeValues()},0))}render(){return _litElement.html`
      <hax-toolbar hide-more>
        <hax-context-item
          mini
          action
          more
          slot="prefix"
          icon="${this.activeTagIcon}"
          label="${this.activeTagName}, click to change"
          ?disabled="${this.disableTransform}"
          event-name="hax-transform-node"
        ></hax-context-item>
        <slot slot="primary"></slot>
      </hax-toolbar>
    `}static get tag(){return"hax-ce-context"}static get properties(){return{disableTransform:{type:Boolean},activeTagIcon:{type:String},activeTagName:{type:String}}}_computeValues(){let instance=window.HaxStore.instance;null!=instance.activeNode?instance.isTextElement(instance.activeNode)||("GRID-PLATE"==instance.activeNode.tagName?(this.disableTransform=!0,this.activeTagName="Grid",this.activeTagIcon="hax:3/3/3/3"):(this.disableTransform=!instance.activeHaxBody.canTansformNode(instance.activeNode),instance.activeGizmo&&(this.activeTagName=instance.activeGizmo.title,this.activeTagIcon=instance.activeGizmo.icon))):(this.activeTagName="",this.activeTagIcon="")}}_exports.HaxCeContext=HaxCeContext,window.customElements.define(HaxCeContext.tag,HaxCeContext)}));