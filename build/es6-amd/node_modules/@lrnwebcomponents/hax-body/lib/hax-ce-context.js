define(["exports","require","../../../@polymer/polymer/polymer-element.js","../../../@polymer/polymer/lib/legacy/polymer.dom.js","../../simple-colors/lib/simple-colors-picker.js","./hax-shared-styles.js"],function(_exports,_require,_polymerElement,_polymerDom,_simpleColorsPicker,_haxSharedStyles){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.HaxCeContext=void 0,_require=babelHelpers.interopRequireWildcard(_require);class HaxCeContext extends _polymerElement.PolymerElement{constructor(){super(),new Promise((res,rej)=>_require.default(["./hax-context-item.js"],res,rej)),new Promise((res,rej)=>_require.default(["./hax-toolbar.js"],res,rej))}static get template(){return _polymerElement.html`
      <style includes="hax-shared-styles">
        :host *[hidden] {
          display: none;
        }
        :host {
          display: block;
          height: 36px;
        }
        hax-context-item {
          margin: 0;
          height: 36px;
        }
        :host(.hax-context-pin-top) hax-toolbar {
          position: fixed;
          top: 64px;
          opacity: 0.9;
        }
        :host(.hax-context-pin-bottom) hax-toolbar {
          position: fixed;
          bottom: 0;
          opacity: 0.9;
        }
        :host(.hax-context-pin-top) hax-toolbar:hover,
        :host(.hax-context-pin-bottom) hax-toolbar:hover {
          opacity: 1;
        }
      </style>
      <hax-toolbar hax-properties="[[haxProperties]]" size="{{ceSize}}">
        <slot slot="primary"></slot>
        <hax-context-item
          slot="primary"
          icon="icons:settings"
          label="Settings"
          event-name="hax-manager-configure"
          hidden$="[[!__hasSettingsForm]]"
        ></hax-context-item>
        <hax-context-item
          slot="primary"
          icon="icons:view-quilt"
          label="[[__parentName]]"
          event-name="hax-manager-configure-container"
          hidden$="[[!__hasParentSettingsForm]]"
        ></hax-context-item>
      </hax-toolbar>
    `}static get tag(){return"hax-ce-context"}static get properties(){return{ceSize:{type:Number,value:100,observer:"_ceSizeChanged"},haxProperties:{type:Object,value:{},observer:"_haxPropertiesChanged"}}}setHaxProperties(props){this.set("haxProperties",{}),this.set("haxProperties",props)}_ceSizeChanged(newValue,oldValue){void 0!==newValue&&void 0!==oldValue&&this.dispatchEvent(new CustomEvent("hax-context-item-selected",{bubbles:!0,cancelable:!0,composed:!0,detail:{eventName:"hax-size-change",value:newValue}}))}_haxPropertiesChanged(newValue,oldValue){if(void 0!==oldValue&&void 0!==newValue.settings){let slot=(0,_polymerDom.dom)(this);for(;null!==slot.firstChild;)slot.removeChild(slot.firstChild);let settings=newValue.settings.quick,configure=newValue.settings.configure,advanced=newValue.settings.advanced;if((configure.length||advanced.length)&&"HR"!==newValue.element.tagName?this.__hasSettingsForm=!0:this.__hasSettingsForm=!1,this.__hasParentSettingsForm=!1,window.HaxStore.instance.activeContainerNode!==window.HaxStore.instance.activeNode&&null!==window.HaxStore.instance.activeContainerNode)switch(this.__hasParentSettingsForm=!0,window.HaxStore.instance.activeContainerNode.tagName){case"P":case"UL":case"OL":case"DIV":this.__parentName="Text block settings";break;case"GRID-PLATE":this.__parentName="Layout settings";break;default:this.__parentName=window.HaxStore.instance.activeContainerNode.tagName.replace("-"," ").toLowerCase()}for(var item,i=0;i<settings.length;i++){let setting=settings[i];(item=document.createElement("hax-context-item")).eventName="hax-edit-property",item.label=setting.title,item.options=setting.options,item.icon=setting.icon,item.inputMethod=setting.inputMethod,item.required=setting.required,item.options=setting.options,item.validation=setting.validation,item.validationType=setting.validationType,item.description=setting.description,void 0!==setting.property?item.propertyToBind=setting.property:void 0!==setting.attribute?item.propertyToBind=setting.attribute:item.slotToBind=setting.slot,slot.appendChild(item)}}}}_exports.HaxCeContext=HaxCeContext,window.customElements.define(HaxCeContext.tag,HaxCeContext)});