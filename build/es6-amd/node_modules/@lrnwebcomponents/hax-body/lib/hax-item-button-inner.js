define(["exports","../../../lit-element/lit-element.js","../../simple-colors/simple-colors.js","../../../@polymer/iron-icons/iron-icons.js","../../../@polymer/iron-icons/editor-icons.js","../../../@polymer/iron-icons/device-icons.js","../../../@polymer/iron-icons/hardware-icons.js","../../../@polymer/iron-icons/communication-icons.js","../../../@polymer/iron-icons/social-icons.js","../../../@polymer/iron-icons/av-icons.js","../../../@polymer/iron-icons/maps-icons.js","../../../@polymer/iron-icons/places-icons.js"],(function(_exports,_litElement,_simpleColors,_ironIcons,_editorIcons,_deviceIcons,_hardwareIcons,_communicationIcons,_socialIcons,_avIcons,_mapsIcons,_placesIcons){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.HaxItemButtonInner=void 0;class HaxItemButtonInner extends _simpleColors.SimpleColors{static get styles(){let styles=[];return super.styles&&(styles=super.styles),styles.push(_litElement.css`
      :host {
        display: flex;
        flex-direction: column;
        align-items: center;
      }
      .button-inner {
        width: 30px;
        height: 30px;
        padding: 5px;
        background-color: var(--simple-colors-default-theme-accent-7, #000);
        border-radius: 50%;
      }
      iron-icon {
        width: 30px;
        height: 30px;
        color: var(--simple-colors-default-theme-grey-1, #fff);
      }
      .item-label {
        margin-top: 8px;
        color: var(--simple-colors-default-theme-grey-12, #000);
        width: 70px;
        font-size: 12px;
        line-height: 12px;
        height: 12px;
        text-align: center;
        text-overflow: ellipsis;
        overflow: hidden;
        word-break: break-all;
      }
      .flip-icon {
        transform: rotateY(180deg);
      }
    `),styles}render(){return _litElement.html`
      <div class="button-inner">
        <iron-icon icon="${this.icon}" ?hidden="${!this.icon}"></iron-icon>
      </div>
      <div class="item-label">${this.label}</div>
    `}static get tag(){return"hax-item-button-inner"}updated(changedProperties){super.updated&&super.updated(changedProperties),changedProperties.forEach((oldValue,propName)=>{"color"==propName&&this._getAccentColor(this[propName],oldValue)})}static get properties(){return{...super.properties,label:{type:String},icon:{type:String},color:{type:String}}}_getAccentColor(color){this.accentColor&&"grey"!==this.accentColor||!this.colors[color]||(this.accentColor=color)}}_exports.HaxItemButtonInner=HaxItemButtonInner,window.customElements.define(HaxItemButtonInner.tag,HaxItemButtonInner)}));