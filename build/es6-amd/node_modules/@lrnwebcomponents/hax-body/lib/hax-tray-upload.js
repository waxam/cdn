define(["exports","require","../../../lit-element/lit-element.js","../../utils/utils.js","../../../@polymer/polymer/lib/elements/custom-style.js"],(function(e,o,t,a,l){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.HaxTrayUpload=void 0,o=babelHelpers.interopRequireWildcard(o);class HaxTrayUpload extends((0,a.winEventsElement)(t.LitElement)){static get styles(){return[t.css`
        vaadin-upload {
          --lumo-primary-color: var(
            --hax-color-accent1,
            --simple-colors-default-theme-light-blue-7
          );
          --lumo-primary-font-color: black;
          --lumo-dark-primary-color: black;
          --lumo-light-primary-color: var(
            --hax-color-accent1,
            --simple-colors-default-theme-light-blue-7
          );
          --lumo-error-color: darkred;
          color: #ffffff;
          display: block;
          padding: 16px !important;
        }
        vaadin-upload[dragover] {
          border-color: var(--simple-colors-default-theme-green-3);
        }
        vaadin-upload-file {
          --disabled-text-color: #222222;
        }
        .add-area-content-wrapper {
          padding: 0 4px;
        }
        .add-url-area,
        .add-upload-area {
          margin: 0;
        }
        .url-description {
          color: #000000;
          line-height: 22px;
          font-family: sans-serif;
          letter-spacing: 1px;
        }
      `]}static get tag(){return"hax-tray-upload"}constructor(){super(),this.__winEvents={"hax-app-picker-selection":"_haxAppPickerSelection","place-holder-file-drop":"_placeHolderFileDrop"},setTimeout(()=>{new Promise((e,t)=>o.default(["../../../@polymer/paper-button/paper-button.js"],e,t)),new Promise((e,t)=>o.default(["../../../@polymer/paper-input/paper-input.js"],e,t)),new Promise((e,t)=>o.default(["../../../@vaadin/vaadin-upload/vaadin-upload.js"],e,t))},0)}render(){return t.html`
      <custom-style>
        <style>
          @import url("https://fonts.googleapis.com/css?family=Noto+Serif");
          paper-input {
            --paper-input-container-label: {
              font-size: 11px;
            }
            --paper-input-container: {
              padding: 0;
            }
          }
          vaadin-upload {
            --vaadin-upload-button-add-wrapper: {
              border: 2px solid #ffffff;
              background-color: var(
                --hax-color-accent1,
                --simple-colors-default-theme-light-blue-7
              );
              color: #ffffff;
              display: block;
            }
            --vaadin-upload-buttons-primary: {
              display: block;
              width: 100%;
              flex: unset;
              -webkit-flex: unset;
            }
            --vaadin-upload-button-add: {
              color: #000000;
              display: block;
              flex: unset;
              -webkit-flex: unset;
              text-align: center;
            }
            --vaadin-upload-drop-label: {
              color: #ffffff;
              display: block;
              padding: 8px;
            }
            --vaadin-upload-drop-label-dragover: {
              color: #ffffff;
            }
            --vaadin-upload-file-list: {
              padding: 8px;
              margin: 0;
              color: #ffffff;
            }
            --vaadin-upload-file: {
              color: #ffffff;
            }
          }
        </style>
      </custom-style>
      <div class="add-area-content-wrapper">
        <div class="add-url-area">
          <paper-input
            id="url"
            label="URL"
            type="url"
            auto-validate=""
          ></paper-input>
          <div class="url-description">
            Add an existing resource / link
          </div>
        </div>
        <div class="add-upload-area">
          <vaadin-upload
            @upload-before="${this._fileAboutToUpload}"
            @upload-response="${this._fileUploadResponse}"
            form-data-name="file-upload"
            id="fileupload"
          ></vaadin-upload>
        </div>
        <paper-button
          @click="${this.newAssetConfigure}"
          id="newassetconfigure"
          raised=""
          >Configure</paper-button
        >
      </div>
    `}newAssetConfigure(){let e={source:this.shadowRoot.querySelector("#url").value},o=window.HaxStore.guessGizmoType(e),t=window.HaxStore.guessGizmo(o,e,!1,!0);t.length>0?1===t.length?void 0!==t[0].tag&&this.dispatchEvent(new CustomEvent("hax-insert-content",{bubbles:!0,cancelable:!0,composed:!0,detail:t[0]})):window.HaxStore.instance.haxAppPicker.presentOptions(t,o,"Pick how to present the "+o,"gizmo"):window.HaxStore.toast("Sorry, HAX doesn't know how to handle that type of link yet.")}_placeHolderFileDrop(e){window.HaxStore.instance.activePlaceHolder=e.detail.placeHolderElement,this.shadowRoot.querySelector("#fileupload")._onDrop(e.detail)}_fileUploadResponse(e){this.editExistingNode=!0;let o=JSON.parse(e.detail.xhr.response),t=this.__appUsed.connection.operations.add.resultMap,a={},l={};for(var i in void 0!==this._resolveObjectPath(t.item,o)&&(a=this._resolveObjectPath(t.item,o)),l.type=t.defaultGizmoType,t.gizmo)l[i]=this._resolveObjectPath(t.gizmo[i],a);void 0===l.url&&void 0!==l.source&&(l.url=l.source),void 0!==t.gizmo.type&&(l.type=this._resolveObjectPath(t.gizmo.type,a)),this.shadowRoot.querySelector("#url").value=l.url,this.newAssetConfigure()}_fileAboutToUpload(e){if(this.__allowUpload)this.__allowUpload=!1;else{e.preventDefault(),e.stopPropagation();let t={source:e.detail.file.name,type:e.detail.file.type};var o=window.HaxStore.guessGizmoType(t);let a=window.HaxStore.getHaxAppStoreTargets(o);1===a.length?this._haxAppPickerSelection({detail:a[0]}):0!==a.length?window.HaxStore.instance.haxAppPicker.presentOptions(a,o,"Where would you like to upload this "+o+"?","app"):window.HaxStore.toast("Sorry, you don't have a storage location that can handle "+o+" uploads!",5e3)}}_haxAppPickerSelection(e){let o=e.detail.connection;this.__appUsed=e.detail,this.shadowRoot.querySelector("#fileupload").method=o.operations.add.method;let t=o.protocol+"://"+o.url;"/"!=t.substr(t.length-1)&&(t+="/"),void 0!==o.operations.add.endPoint&&(t+=o.operations.add.endPoint),null!=window.HaxStore.instance.connectionRewrites.appendUploadEndPoint&&(t+="?"+window.HaxStore.instance.connectionRewrites.appendUploadEndPoint),null!=window.HaxStore.instance.connectionRewrites.appendJwt&&(t+="&"+window.HaxStore.instance.connectionRewrites.appendJwt+"="+localStorage.getItem(window.HaxStore.instance.connectionRewrites.appendJwt)),this.shadowRoot.querySelector("#fileupload").headers=o.headers,this.shadowRoot.querySelector("#fileupload").target=t,this.__allowUpload=!0,this.shadowRoot.querySelector("#fileupload").uploadFiles()}_resolveObjectPath(e,o){return e.split(".").reduce((function(e,o){return e?e[o]:null}),o||self)}}e.HaxTrayUpload=HaxTrayUpload,window.customElements.define(HaxTrayUpload.tag,HaxTrayUpload)}));