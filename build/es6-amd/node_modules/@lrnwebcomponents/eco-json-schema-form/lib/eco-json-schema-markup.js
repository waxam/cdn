define(["exports", "../../../@polymer/polymer/polymer-element.js", "../../../@polymer/app-localize-behavior/app-localize-behavior.js", "../../../@polymer/polymer/lib/legacy/class.js", "../../utils/utils.js", "../../../@polymer/marked-element/marked-element.js"], function (_exports, _polymerElement, _appLocalizeBehavior, _class, _utils, _markedElement) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.EcoJsonSchemaMarkup = void 0;

  /**
  `eco-json-schema-tabs` takes in a JSON schema of type array and builds a form,
  exposing a `value` property that represents an array described by the schema.
  
  Please see the `eco-json-schema-object` documentation for further information.
  
  @group eco Elements
  @element eco-json-schema-tabs
  * @demo demo/index.html
  */
  class EcoJsonSchemaMarkup extends (0, _class.mixinBehaviors)([_appLocalizeBehavior.AppLocalizeBehavior], _polymerElement.PolymerElement) {
    static get tag() {
      return "eco-json-schema-markup";
    }

    static get template() {
      return (0, _polymerElement.html)`
      <style include="iron-flex iron-flex-alignment">
        :host {
          color: var(--eco-json-form-color);
          background-color: var(--eco-json-form-bg);
          font-family: var(--eco-json-form-font-family);
        }
        :host ([hidden]) {
          display: none;
        }
      </style>
      <div class="markup">
        <slot></slot>
      </div>
    `;
    }

    static get properties() {
      return {
        value: {
          type: String,
          notify: true,
          value: ""
        }
      };
    }
    /**
     * render the markup requested
     */


    _valueChanged(newValue) {
      // clear self
      (0, _utils.wipeSlot)(this); // sanity check to ditch scripts

      let html = (0, _utils.encapScript)(newValue);
      let frag = document.createRange().createContextualFragment(html); // self apend to flow into slot and show up

      this.appendChild(frag);
    }

  }

  _exports.EcoJsonSchemaMarkup = EcoJsonSchemaMarkup;
  window.customElements.define(EcoJsonSchemaMarkup.tag, EcoJsonSchemaMarkup);
});