define(["exports","require","../../../@polymer/polymer/polymer-element.js","../../../@polymer/app-localize-behavior/app-localize-behavior.js","../../../@polymer/polymer/lib/legacy/class.js","../../../@polymer/iron-flex-layout/iron-flex-layout-classes.js","../../../@polymer/polymer/lib/elements/dom-repeat.js"],(function(_exports,_require,_polymerElement,_appLocalizeBehavior,_class,_ironFlexLayoutClasses,_domRepeat){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.EcoJsonSchemaArray=void 0,_require=babelHelpers.interopRequireWildcard(_require);class EcoJsonSchemaArray extends((0,_class.mixinBehaviors)([_appLocalizeBehavior.AppLocalizeBehavior],_polymerElement.PolymerElement)){static get tag(){return"eco-json-schema-array"}constructor(){super(),setTimeout(()=>{new Promise((res,rej)=>_require.default(["../../../@polymer/iron-icons/iron-icons.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../@polymer/iron-icons/editor-icons.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../../@polymer/paper-icon-button/paper-icon-button.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../simple-tooltip/simple-tooltip.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../a11y-collapse/a11y-collapse.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../a11y-collapse/lib/a11y-collapse-group.js"],res,rej))},0)}static get template(){return _polymerElement.html`
      <style include="iron-flex iron-flex-alignment">
        :host {
          color: var(--eco-json-form-color);
          background-color: var(--eco-json-form-bg);
          font-family: var(--eco-json-form-font-family);
        }
        :host([hidden]),
        [hidden] {
          display: none;
        }
        :host fieldset {
          border-radius: var(--eco-json-form-border-radius);
          border-style: solid;
          border-width: 1px;
          border-color: var(--eco-json-form-faded-color);
          transition: all 0.5s;
        }
        :host legend {
          transition: all 0.5s;
          color: var(--eco-json-form-faded-color);
        }
        :host fieldset:focus #legend,
        :host fieldset:focus-within #legend {
          color: var(--eco-json-form-active-color);
        }
        :host .array-item-button {
          color: var(--eco-json-form-faded-color);
          background-color: var(--eco-json-form-bg);
          text-transform: none;
          margin-bottom: 0;
        }
        :host .array-item-button:focus,
        :host .array-item-button:hover {
          color: var(--eco-json-form-active-color);
        }
        :host .add-array-item iron-icon {
          padding: 8px;
        }
        :host .add-array-item {
          color: var(--eco-json-form-add-color);
          border-radius: 0 0 var(--eco-json-form-border-radius);
          border: 1px solid var(--eco-json-form-bg);
          margin: 0;
          padding: 0 8px 0 16px;
          display: flex;
          align-items: center;
          justify-content: space-between;
        }
        :host .add-array-item:focus,
        :host .add-array-item:hover {
          color: var(--eco-json-form-add-color);
          background-color: var(--eco-json-form-faded-bg);
          border: 1px solid var(--eco-json-form-faded-color);
        }
        :host .remove-array-item {
          color: var(--eco-json-form-remove-color);
          background-color: var(--eco-json-form-bg);
          margin: 15px 0 0 0;
          border-radius: 100%;
        }
        :host .remove-array-item:focus,
        :host .remove-array-item:hover {
          color: var(--eco-json-form-remove-color);
          background-color: var(--eco-json-form-faded-bg);
        }
        :host a11y-collapse-group {
          margin: 0;
          border-radius: var(--eco-json-form-border-radius);
          --a11y-collapse-border: 1px solid var(--eco-json-form-faded-color);
        }
        :host a11y-collapse {
          border: 1px solid var(--eco-json-form-bg);
          --a11y-collapse-padding-right: 8px;
          --a11y-collapse-heading-color: var(--eco-json-form-faded-color);
          --a11y-collapse-heading-background-color: var(--eco-json-form-bg);
          --a11y-collapse-heading-font-weight: normal;
          --a11y-collapse-heading-margin: 0;
          --a11y-collapse-icon-padding: 8px;
        }
        :host a11y-collapse:focus,
        :host a11y-collapse:hover,
        :host a11y-collapse[expanded] {
          border: 1px solid var(--eco-json-form-faded-color);
          --a11y-collapse-heading-color: var(--eco-json-form-color);
          --a11y-collapse-heading-background-color: var(
            --eco-json-form-faded-bg
          );
          --a11y-collapse-heading-font-weight: normal;
          --a11y-collapse-heading-margin: 0;
        }
        :host p[slot="heading"] {
          margin: 0;
        }
        :host div[slot="content"] > div {
          width: 100%;
          display: flex;
          align-items: flex-end;
          justify-content: space-between;
        }
        :host .item-fields {
          flex: 1 0 auto;
        }
      </style>
      <fieldset>
        <legend id="legend" class="flex" hidden\$="[[!schema.title]]">
          [[schema.title]]
        </legend>
        <a11y-collapse-group
          id="form"
          icon="settings"
          class="vertical flex layout"
          global-options="[[globalOptions]]"
        >
          <template is="dom-repeat" items="[[schema.value]]" as="item">
            <a11y-collapse
              accordion
              id$="item-[[index]]"
              icon$="[[globalOptions.icon]]"
              tooltip$="[[globalOptions.tooltip]]"
            >
              <p slot="heading">
                [[_getHeading(__headings.*,schema.label,index)]]
              </p>
              <div slot="content">
                <div>
                  <div
                    id$="value-[[index]]"
                    class="item-fields"
                    data-index$="[[index]]"
                  ></div>
                  <paper-icon-button
                    id="remove-[[index]]"
                    icon="icons:delete"
                    aria-label="Remove this item"
                    aria-describedby="item-[[index]]"
                    class="remove-array-item array-item-button"
                    controls="item-[[index]]"
                    on-tap="_onRemoveItem"
                    role="button"
                  >
                  </paper-icon-button>
                  <simple-tooltip for="remove-[[index]]"
                    >Remove this item</simple-tooltip
                  >
                </div>
              </div>
            </a11y-collapse>
          </template>
        </a11y-collapse-group>
        <paper-button
          class="add-array-item array-item-button"
          on-click="_onAddItem"
          role="button"
        >
          Add an item
          <iron-icon icon="add-circle"></iron-icon>
        </paper-button>
      </fieldset>
    `}_toArray(obj){return null==obj?[]:Object.keys(obj).map((function(key){return obj[key]}))}static get properties(){return{globalOptions:{type:Object,value:{icon:"settings",tooltip:"configure item"},notify:!0},propertyName:{type:String,value:null},schema:{type:Object,value:{},notify:!0,observer:"_schemaChanged"},__headings:{type:Array,value:[],notify:!0}}}ready(){super.ready(),this.__headings=[],this._schemaChanged(),this.addEventListener("form-field-changed",e=>{this._updateHeadings(e)})}disconnectedCallback(){this.removeEventListener("form-field-changed",e=>{this._updateHeadings(e)}),super.disconnectedCallback()}_schemaChanged(){setTimeout(()=>{let itemLabel=this.schema.items.itemLabel;this.schema&&Array.isArray(this.schema.value)&&this.schema.value.forEach(val=>{this.push("__headings",val[itemLabel])}),this.shadowRoot.querySelectorAll(".item-fields").forEach(item=>{let index=item.getAttribute("data-index"),propertyName=`${this.propertyPrefix}${this.propertyName}`,prefix=`${propertyName}.${index}`,val=this.schema.value[index];this.dispatchEvent(new CustomEvent("build-fieldset",{bubbles:!1,cancelable:!0,composed:!0,detail:{container:item,path:propertyName,prefix:prefix,properties:this.schema.properties.map(prop=>{let newprop=JSON.parse(JSON.stringify(prop));return newprop.value=val[prop.name],newprop}),type:EcoJsonSchemaArray.tag,value:this.schema.value||[]}}))})},0)}_onAddItem(e){let val={};this.schema.properties.forEach(prop=>{val[prop.name]=prop.value}),this.push("schema.value",val),this.notifyPath("schema.*"),this.notifyPath("schema.value.*"),this._schemaChanged()}_onRemoveItem(e){let index=e.target.controls.replace(/item-/,"");this.splice("schema.value",index,1),this.notifyPath("schema.*"),this.notifyPath("schema.value.*"),this._schemaChanged()}_updateHeadings(e){let propname=e.detail.getAttribute("name"),val=e.detail.value,pathArr=propname?propname.split("."):[],index=pathArr.length>2?pathArr[pathArr.length-2]:null,update=e.detail.propertyName===this.schema.items.itemLabel?val:this.__headings[index];index&&this.set(`__headings.${index}`,update)}_getHeading(headings,label,index){return this.__headings&&this.__headings[index]&&"string"==typeof this.__headings[index]&&""!==this.__headings[index].trim("")?this.__headings[index].trim(""):label&&"string"==typeof label&&""!==label.trim("")?`${label.trim("")} ${index+1}`:`Item ${index+1}`}}_exports.EcoJsonSchemaArray=EcoJsonSchemaArray,window.customElements.define(EcoJsonSchemaArray.tag,EcoJsonSchemaArray)}));