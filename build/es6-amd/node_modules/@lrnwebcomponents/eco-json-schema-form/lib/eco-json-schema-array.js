define(["exports","../../../@polymer/polymer/polymer-element.js","../../../@polymer/polymer/lib/legacy/polymer.dom.js","../../../@polymer/polymer/lib/utils/render-status.js","../../../@polymer/app-localize-behavior/app-localize-behavior.js","../../../@polymer/polymer/lib/legacy/class.js","../../../@polymer/iron-flex-layout/iron-flex-layout-classes.js","../../../@polymer/iron-icons/iron-icons.js","../../../@polymer/iron-icons/editor-icons.js","../../../@polymer/paper-icon-button/paper-icon-button.js","../../a11y-collapse/a11y-collapse.js","../../a11y-collapse/lib/a11y-collapse-group.js","./eco-json-schema-object.js"],function(_exports,_polymerElement,_polymerDom,_renderStatus,_appLocalizeBehavior,_class,_ironFlexLayoutClasses,_ironIcons,_editorIcons,_paperIconButton,_a11yCollapse,_a11yCollapseGroup,_ecoJsonSchemaObject){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.EcoJsonSchemaArray=void 0;class EcoJsonSchemaArray extends((0,_class.mixinBehaviors)([_appLocalizeBehavior.AppLocalizeBehavior],_polymerElement.PolymerElement)){static get tag(){return"eco-json-schema-array"}static get template(){return _polymerElement.html`
      <custom-style>
        <style is="custom-style" include="iron-flex iron-flex-alignment">
          :host ([hidden]) {
            display: none;
            color: var(--eco-json-form-color);
            background-color: var(--eco-json-form-bg);
            font-family: var(--eco-json-form-font-family);
          }
          :host #legend {
            transition: all 0.5s;
            color: var(--eco-json-form-faded-color);
          }
          :host(:focus) #legend,
          :host(:focus-within) #legend {
            color: var(--eco-json-form-active-color);
          }
          :host #fieldset {
            border-radius: var(--eco-json-form-border-radius);
            border: 1px solid var(--eco-json-form-faded-color);
            transition: all 0.5s;
          }
          :host .array-item-button {
            color: var(--eco-json-form-faded-color);
            background-color: var(--eco-json-form-bg);
            text-transform: none;
            margin-bottom: 0;
          }
          :host .array-item-button:focus,
          :host .array-item-button:hover {
            color: var(--eco-json-form-active-color);
          }
          :host .add-array-item iron-icon {
            padding: 8px;
          }
          :host .add-array-item {
            color: var(--eco-json-form-add-color);
            border-radius: 0 0 var(--eco-json-form-border-radius);
            border: 1px solid var(--eco-json-form-bg);
            margin: 0;
            padding: 0 8px 0 16px;
            display: flex;
            align-items: center;
            justify-content: space-between;
          }
          :host .add-array-item:focus,
          :host .add-array-item:hover {
            color: var(--eco-json-form-add-color);
            background-color: var(--eco-json-form-faded-bg);
            border: 1px solid var(--eco-json-form-faded-color);
          }
          :host .remove-array-item {
            color: var(--eco-json-form-remove-color);
            background-color: var(--eco-json-form-bg);
            margin: 15px 0 0 0;
            border-radius: 100%;
          }
          :host .remove-array-item:focus,
          :host .remove-array-item:hover {
            color: var(--eco-json-form-remove-color);
            background-color: var(--eco-json-form-faded-bg);
          }
          :host a11y-collapse-group {
            margin: 0;
            border-radius: var(--eco-json-form-border-radius);
            --a11y-collapse-border: 1px solid var(--eco-json-form-faded-color);
          }
          :host a11y-collapse {
            --a11y-collapse-padding-right: 8px;
            border: 1px solid var(--eco-json-form-bg);
            --a11y-collapse-heading: {
              color: var(--eco-json-form-faded-color);
              background-color: var(--eco-json-form-bg);
              font-weight: normal;
              margin: 0;
            }
            --a11y-collapse-icon: {
              padding: 8px;
            }
          }
          :host a11y-collapse:focus,
          :host a11y-collapse:hover,
          :host a11y-collapse[expanded] {
            border: 1px solid var(--eco-json-form-faded-color);
            --a11y-collapse-heading: {
              color: var(--eco-json-form-color);
              background-color: var(--eco-json-form-faded-bg);
              font-weight: normal;
              margin: 0;
            }
          }
          :host p[slot="heading"] {
            margin: 0;
          }
          :host div[slot="content"] > div {
            width: 100%;
            display: flex;
            align-items: flex-end;
            justify-content: space-between;
          }
          :host eco-json-schema-object {
            flex: 1 0 auto;
          }
        </style>
      </custom-style>
      <fieldset>
        <legend id="legend" class="flex" hidden\$="[[!label]]">
          [[label]]
        </legend>
        <a11y-collapse-group
          id="form"
          icon="settings"
          class="vertical flex layout"
          global-options="[[globalOptions]]"
        >
          <template
            is="dom-repeat"
            items="[[__validatedSchema]]"
            as="item"
            restamp
          >
            <a11y-collapse accordion id$="item-[[index]]">
              <p slot="heading">
                {{_getHeading(item.value.*,item.label,index)}}
              </p>
              <div slot="content">
                <div>
                  <eco-json-schema-object
                    id="schemaobject"
                    controls$="item-[[index]]"
                    item="[[index]]"
                    autofocus$="[[autofocus]]"
                    on-value-changed="_valueChanged"
                    hide-line-numbers$="[[hideLineNumbers]]"
                    schema="[[item]]"
                    value="{{item.value}}"
                  >
                  </eco-json-schema-object>
                  <paper-icon-button
                    id="remove-[[index]]"
                    icon="icons:delete"
                    aria-label="Remove this item"
                    aria-describedby="item-[[index]]"
                    class="remove-array-item array-item-button"
                    controls="item-[[index]]"
                    on-tap="_onRemoveItem"
                    role="button"
                  >
                  </paper-icon-button>
                  <paper-tooltip for="remove-[[index]]"
                    >Remove this item</paper-tooltip
                  >
                </div>
              </div>
            </a11y-collapse>
          </template>
        </a11y-collapse-group>
        <paper-button
          class="add-array-item array-item-button"
          on-click="_onAddItem"
          role="button"
        >
          Add an item
          <iron-icon icon="add-circle"></iron-icon>
        </paper-button>
      </fieldset>
    `}static get properties(){return{autofocus:{type:"Boolean",value:!1},globalOptions:{type:Object,value:{icon:"settings",tooltip:"configure item"}},hideLineNumbers:{type:Boolean,value:!1},label:{type:String},schema:{type:Object,notify:!0,observer:"_schemaChanged"},value:{type:Array,notify:!0,value:[]},__validatedSchema:{type:Array,value:[],notify:!0}}}_onAddItem(e){let schema=JSON.parse(JSON.stringify(this.schema.items));schema.value={},this.push("__validatedSchema",schema)}_onRemoveItem(e){this._valueChanged(e);let id=e.target.controls.split("-");this.splice("__validatedSchema",id[1],1)}_getHeading(item,prop,index){return item&&item.base&&prop&&item.base[prop]&&"string"==typeof item.base[prop]&&""!==item.base[prop].trim("")?item.base[prop].trim(""):`Item ${index+1}`}_valueChanged(e){let val=this.__validatedSchema.map(item=>item.value);this.notifyPath("value.*"),this.set("value",val),this.dispatchEvent(new CustomEvent("value-changed",{bubbles:!0,cancelable:!0,composed:!0,detail:this}))}_schemaChanged(oldValue,newValue){JSON.stringify(oldValue)!==JSON.stringify(newValue)&&this._setValues(),this.dispatchEvent(new CustomEvent("schema-changed",{bubbles:!0,cancelable:!0,composed:!0,detail:this}))}_setValues(){let schema=[];for(let i=0;i<this.schema.value.length;i++){let item=this.schema.value[i];schema[i]=JSON.parse(JSON.stringify(this.schema.items));for(let prop in item)schema[i].properties[prop]&&(schema[i].properties[prop].value=item[prop])}this.notifyPath("__validatedSchema.*"),this.__validatedSchema=schema}}_exports.EcoJsonSchemaArray=EcoJsonSchemaArray,window.customElements.define(EcoJsonSchemaArray.tag,EcoJsonSchemaArray)});