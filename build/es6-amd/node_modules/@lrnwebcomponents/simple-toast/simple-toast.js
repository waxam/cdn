define(["exports","../../@polymer/polymer/polymer-element.js","../../@polymer/paper-toast/paper-toast.js","../../@polymer/paper-button/paper-button.js","../../@polymer/polymer/lib/legacy/polymer.dom.js","../../@polymer/polymer/lib/utils/async.js"],function(_exports,_polymerElement,_paperToast,_paperButton,_polymerDom,async){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.SimpleToast=void 0,async=babelHelpers.interopRequireWildcard(async),window.SimpleToast=window.SimpleToast||{},window.SimpleToast.requestAvailability=()=>(window.SimpleToast.instance||(window.SimpleToast.instance=document.createElement("simple-toast"),document.body.appendChild(window.SimpleToast.instance)),window.SimpleToast.instance);class SimpleToast extends _polymerElement.PolymerElement{static get template(){return _polymerElement.html`
      <style>
        :host {
          display: block;
        }

        :host([hidden]) {
          display: none;
        }

        paper-toast {
          @apply --simple-toast-toast;
        }
      </style>
      <paper-toast
        id="toast"
        text="[[text]]"
        duration$="[[duration]]"
        opened="{{opened}}"
        class$="[[classStyle]]"
      >
        <slot></slot>
        <paper-button hidden$="[[!closeButton]]" on-click="hide"
          >[[closeText]]</paper-button
        >
      </paper-toast>
    `}static get properties(){let props={opened:{name:"opened",type:Boolean,value:!1,reflectToAttribute:!0},text:{name:"text",type:String,value:"Saved"},classStyle:{name:"classStyle",type:String,value:""},closeText:{name:"closeText",type:String,value:"Close"},duration:{name:"duration",type:Number,value:4e3},eventCallback:{name:"eventCallback",type:String},closeButton:{name:"closeButton",type:Boolean,value:!0,reflectToAttribute:!0}};return super.properties&&(props=Object.assign(props,super.properties)),props}static get tag(){return"simple-toast"}connectedCallback(){super.connectedCallback(),window.addEventListener("simple-toast-hide",this.hideSimpleToast.bind(this)),window.addEventListener("simple-toast-show",this.showSimpleToast.bind(this))}disconnectedCallback(){super.connectedCallback(),window.removeEventListener("simple-toast-hide",this.hideSimpleToast.bind(this)),window.removeEventListener("simple-toast-show",this.showSimpleToast.bind(this))}hideSimpleToast(e){this.hide()}showSimpleToast(e){for(e.detail.duration&&(this.duration=e.detail.duration),e.detail.text&&(this.text=e.detail.text),e.detail.classStyle&&(this.classStyle=e.detail.classStyle),e.detail.closeText&&(this.closeText=e.detail.closeText),e.detail.closeButton&&(this.closeButton=e.detail.closeButton),e.detail.eventCallback&&(this.eventCallback=e.detail.eventCallback);null!==(0,_polymerDom.dom)(this).firstChild;)(0,_polymerDom.dom)(this).removeChild((0,_polymerDom.dom)(this).firstChild);e.detail.slot&&(0,_polymerDom.dom)(this).appendChild(e.detail.slot),async.microTask.run(()=>{setTimeout(()=>{this.show()},50)})}show(){this.$.toast.show()}hide(){if(this.eventCallback){const evt=new CustomEvent(this.eventCallback,{bubbles:!0,cancelable:!0,detail:!0});this.dispatchEvent(evt)}this.$.toast.hide()}}_exports.SimpleToast=SimpleToast,window.customElements.define(SimpleToast.tag,SimpleToast)});