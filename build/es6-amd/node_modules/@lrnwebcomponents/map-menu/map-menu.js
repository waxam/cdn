define(["exports","require","../../@polymer/polymer/polymer-element.js","../../@polymer/polymer/lib/utils/render-status.js","../smooth-scroll/smooth-scroll.js","./lib/map-menu-builder.js"],function(_exports,_require,_polymerElement,_renderStatus,_smoothScroll,_mapMenuBuilder){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.MapMenu=void 0,_require=babelHelpers.interopRequireWildcard(_require);class MapMenu extends _polymerElement.PolymerElement{constructor(){super(),new Promise((res,rej)=>_require.default(["./lib/map-menu-container.js"],res,rej))}static get template(){return _polymerElement.html`
      <style>
        :host {
          --map-menu-active-color: rgba(0, 0, 0, 0.1);
          --map-menu-size: 1;
          display: block;
          overflow-y: scroll;
          position: relative;
          height: 100%;
          transition: 0.2s linear all;
          opacity: 1;
          background-color: transparent;
        }

        #activeIndicator {
          background: var(--map-menu-active-color);
          transition: all 0.3s ease-in-out;
          position: absolute;
          @apply --map-menu-active-indicator;
        }

        map-menu-container {
          padding: var(--map-menu-container-padding, 0);
          @apply --map-menu-container;
        }

        /* turn default active color if indicator is on */
        :host([active-indicator]) map-menu-builder {
          --map-menu-active-color: transparent;
        }
      </style>
      <div id="itemslist">
        <map-menu-container>
          <div id="activeIndicator"></div>
          <map-menu-builder
            id="builder"
            items="[[items]]"
            selected="[[selected]]"
          ></map-menu-builder>
        </map-menu-container>
      </div>
      <smooth-scroll id="smoothScroll"></smooth-scroll>
    `}static get tag(){return"map-menu"}static get properties(){return{disabled:{type:Boolean,value:!1,reflectToAttribute:!0},title:{type:String,value:"Content Outline"},data:{type:Array,value:null},manifest:{type:Object,notify:!0,observer:"_manifestChanged"},items:{type:Array,value:null,notify:!0},selected:{type:String,notify:!0},autoScroll:{type:Boolean,value:!1},activeIndicator:{type:Boolean,value:!1}}}ready(){super.ready(),(0,_renderStatus.afterNextRender)(this,function(){this.addEventListener("link-clicked",this.__linkClickedHandler.bind(this)),this.addEventListener("toggle-updated",this.__toggleUpdated.bind(this)),this.addEventListener("active-item",this.__activeItemHandler.bind(this)),this.addEventListener("map-meu-item-hidden-check",this._mapMeuItemHiddenCheckHandler.bind(this))})}static get observers(){return["_dataChanged(data)"]}__activeItemHandler(e){const target=e.detail;this.refreshActiveChildren(target)}_mapMeuItemHiddenCheckHandler(e){const action=e.detail.action,hiddenChild=(e.detail.target,e.detail.hiddenChild);"closed"===action&&!0===hiddenChild?this.__updateActiveIndicator(this._activeItem,200,!0):this.__updateActiveIndicator(this._activeItem,200,!1)}refreshActiveChildren(activeItem,timeoutTime=200){const oldActiveItem=this._activeItem,newActiveItem=activeItem;newActiveItem&&""!==newActiveItem&&(newActiveItem.setAttribute("active",!0),this.activeIndicator&&this.__updateActiveIndicator(newActiveItem,timeoutTime),this.autoScroll&&this.$.smoothScroll.scroll(newActiveItem,{duration:300,scrollElement:this})),oldActiveItem&&(oldActiveItem.removeAttribute("active"),this.__updateActiveIndicator(newActiveItem,timeoutTime)),this._activeItem=newActiveItem}_manifestChanged(newValue,oldValue){newValue&&this.set("data",newValue.items)}setData(data){this.set("data",[]),this.set("data",data)}_dataChanged(data){const items=[];data&&(data.forEach(element=>{element.parent||items.push(element)}),items.forEach((item,i)=>{this._setChildren(item,data)}),this.set("items",[]),this.set("items",items))}_setChildren(item,data){const children=data.filter(d=>item.id===d.parent);item.children=children,item.children.length>0&&item.children.forEach(child=>{this._setChildren(child,data)})}__hasChildren(item){return item.children.length>0}__linkClickedHandler(e){this.selected=e.detail.id,this.dispatchEvent(new CustomEvent("selected",{bubbles:!0,cancelable:!0,composed:!0,detail:e.detail.id}))}__toggleUpdated(e){const action=e.detail.opened?"opened":"closed",target=e.path[0];void 0!==this._activeItem&&this._activeItem.dispatchEvent(new CustomEvent("map-menu-item-hidden-check",{bubbles:!0,cancelable:!0,composed:!0,detail:Object.assign({},{action:action,target:target})}))}__isInViewport(element){const scrollParent=this.__getScrollParent(element);if(!scrollParent)return!1;var elementTop=element.offsetTop,elementBottom=elementTop+element.offsetHeight,viewportTop=scrollParent.offsetTop,viewportBottom=viewportTop+scrollParent.offsetHeight;return elementBottom>viewportTop&&elementTop<viewportBottom}__getScrollParent(node){return null==node?null:node.scrollHeight>node.clientHeight?node:this.__getScrollParent(node.parentNode)}__updateActiveIndicator(element,timeoutTime=200,hidden=!1){setTimeout(()=>{const activeIndicator=this.$.activeIndicator,left=element.offsetLeft,top=(element.offsetBottom,element.offsetTop),width=element.offsetWidth,height=hidden?0:element.offsetHeight;timeoutTime=height>0?timeoutTime:10,activeIndicator.setAttribute("style",`width:${width}px;height:${height}px;top:${top}px;left:${left}px`)},timeoutTime)}__parentsHidden(node){const parent=node.parentNode;return null==parent?null:"MAP-MENU-SUBMENU"===parent.tagName&&!parent.opened||"MAP-MENU"!==parent.tagName&&this.__parentsHidden(parent)}}_exports.MapMenu=MapMenu,window.customElements.define(MapMenu.tag,MapMenu)});