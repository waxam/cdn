define(["exports","require","../../../lit-element/lit-element.js","../../../@polymer/iron-icons/iron-icons.js","../../../@polymer/iron-icons/av-icons.js"],(function(t,o,e,i,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.A11yMediaButton=void 0,o=babelHelpers.interopRequireWildcard(o);
/**
   * Copyright 2018 The Pennsylvania State University
   * @license Apache-2.0, see License.md for full text.
   */
class A11yMediaButton extends e.LitElement{static get properties(){return{...super.properties,action:{attribute:"action",reflect:!0,type:String},controls:{attribute:"controls",reflect:!0,type:String},icon:{attribute:"icon",type:String},label:{attribute:"label",type:String},toggle:{attribute:"toggle",type:Boolean,reflect:!0},disabled:{attribute:"disabled",type:Boolean},tooltipPosition:{attribute:"tooltip-position",type:String}}}static get tag(){return"a11y-media-button"}constructor(){super(),this.controls="video",this.disabled=!1,this.toggle=!1,this.tooltipPosition="bottom",new Promise((t,e)=>o.default(["../../simple-tooltip/simple-tooltip.js"],t,e))}static get styles(){return[this.buttonStyles,e.css`
        :host {
          margin: 0;
          padding: 0;
        }
        #button {
          margin: 0;
          padding: 8px;
          line-height: 1;
          border: none;
          transition: color 0.25s;
          color: var(--a11y-media-button-color);
          background-color: var(--a11y-media-button-bg-color);
        }
        :host([toggle]) #button {
          color: var(--a11y-media-button-toggle-color);
          background-color: var(--a11y-media-button-toggle-bg-color);
        }
        :host([toggle]:active) #button,
        :host([toggle]:focus) #button,
        :host([toggle]:hover) #button,
        :host(:active) #button,
        :host(:focus) #button,
        :host(:hover) #button {
          color: var(--a11y-media-button-hover-color);
          background-color: var(--a11y-media-button-hover-bg-color);
        }
        :host([disabled]) #button {
          color: var(--a11y-media-button-disabled-color);
          cursor: not-allowed;
        }
        .sr-only {
          position: absolute;
          left: -99999;
          top: 0;
          height: 0;
          width: 0;
          overflow: hidden;
        }
        simple-tooltip {
          z-index: 100;
        }
        simple-tooltip:not(:defined) {
          display: none;
        }
        iron-icon {
          display: inline-block;
        }
      `]}static get buttonStyles(){return[e.css`
        #button {
          margin: 0;
          border: none;
        }
        .sr-only {
          position: absolute;
          left: -99999;
          top: 0;
          height: 0;
          width: 0;
          overflow: hidden;
        }
        simple-tooltip {
          z-index: 100;
        }
        simple-tooltip:not(:defined) {
          display: none;
        }
      `]}render(){return e.html`
      <button
        id="button"
        aria-label="${this.label}"
        aria-pressed="${this.toggle?"true":"false"}"
        controls="${this.controls}"
        tabindex="0"
        @click="${this._buttonClick}"
        ?disabled="${this.disabled}"
        ?toggle="${this.toggle}"
      >
        <iron-icon icon="${this.icon}"></iron-icon>
      </button>
      ${this.label?e.html`
            <simple-tooltip for="button" position="${this.tooltipPosition}"
              >${this.label}</simple-tooltip
            >
          `:""}
    `}_buttonClick(t){this.dispatchEvent(new CustomEvent("button-click",{detail:this}))}}t.A11yMediaButton=A11yMediaButton,window.customElements.define(A11yMediaButton.tag,A11yMediaButton)}));