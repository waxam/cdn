define(["exports","../../../@polymer/polymer/polymer-element.js","./a11y-media-behaviors.js","../../../@polymer/paper-tooltip/paper-tooltip.js"],(function(_exports,_polymerElement,_a11yMediaBehaviors,_paperTooltip){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.A11yMediaPlayButton=void 0;
/**
   * Copyright 2018 The Pennsylvania State University
   * @license Apache-2.0, see License.md for full text.
   */
class A11yMediaPlayButton extends _a11yMediaBehaviors.A11yMediaBehaviors{static get properties(){return{action:{type:String,value:null},disabled:{type:Boolean,value:!1},playing:{type:Boolean,value:!1}}}static get tag(){return"a11y-media-play-button"}constructor(){super()}static get template(){return _polymerElement.html`
      <style include="simple-colors-shared-styles-polymer">
        :host {
          display: block;
          opacity: 1;
          transition: opacity 0.5s;
        }
        :host([disabled]),
        :host([elapsed]) {
          opacity: 0;
        }
        :host,
        :host #thumbnail,
        :host #background,
        :host #button {
          width: 100%;
          top: 0;
          left: 0;
          opacity: 1;
          transition: opacity 0.5s;
        }
        :host #thumbnail,
        :host #background,
        :host #button {
          position: absolute;
          height: 100%;
          padding: 0;
          margin: 0;
          border: none;
        }
        :host #thumbnail {
          height: auto;
          overflow: hidden;
        }
        :host #button {
          overflow: hidden;
          background: transparent;
        }
        :host #button:hover {
          cursor: pointer;
        }
        :host #background {
          opacity: 0.3;
          background: var(--a11y-play-button-bg-color);
        }
        :host #button:focus #background,
        :host #button:hover #background {
          background: var(--a11y-play-button-focus-bg-color);
          opacity: 0.1;
        }
        :host #arrow {
          stroke: #ffffff;
          fill: #000000;
        }
        :host #text {
          fill: #ffffff;
        }
        :host .sr-only {
          font-size: 0;
        }
        @media print {
          :host(:not([thumbnail-src])),
          :host #background,
          :host #svg {
            display: none;
          }
        }
      </style>
      <button
        id="button"
        aria-pressed$="[[playing]]"
        aria-hidden$="[[disabled]]"
        controls="video"
        disabled$="[[disabled]]"
        label="[[playPause.label]]"
        on-click="_handleButtonClick"
        tabindex="0"
        title$="[[label]]"
      >
        <svg
          id="svg"
          aria-hidden
          xmlns="http://www.w3.org/2000/svg"
          viewBox="0 0 200 200"
          width="30%"
          height="30%"
          opacity="0.7"
        >
          <g>
            <polygon
              id="arrow"
              points="30,20 30,180 170,100"
              fill="#000000"
              stroke="#ffffff"
              stroke-width="15px"
            ></polygon>
            <text
              id="text"
              class="sr-only"
              x="50"
              y="115"
              fill="#ffffff"
              font-size="30px"
            >
              [[playPause.label]]
            </text>
          </g>
        </svg>
      </button>
    `}connectedCallback(){super.connectedCallback(),this.shadowRoot.querySelector("#text").innerText=this.playLabel}ready(){super.ready(),this.target=this.shadowRoot.querySelector("#button")}_handleButtonClick(e){this.dispatchEvent(new CustomEvent("controls-change",{detail:this}))}}_exports.A11yMediaPlayButton=A11yMediaPlayButton,window.customElements.define(A11yMediaPlayButton.tag,A11yMediaPlayButton)}));