define(["exports","require","../../lit-element/lit-element.js"],(function(e,t,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.RCoder=void 0,t=babelHelpers.interopRequireWildcard(t);
/**
   * Copyright 2019 PSU
   * @license Apache-2.0, see License.md for full text.
   */
class RCoder extends o.LitElement{static get styles(){return[o.css`
        :host {
          display: block;
        }

        :host([hidden]) {
          display: none;
        }

        #editor {
          height: var(--r-coder-editor-height, 300px);
          width: var(--r-coder-editor-width, 100%);
        }

        #button {
          margin: var(--r-code-button-margin, 10px 0);
        }
      `]}render(){return o.html`
      <code-editor id="editor" language="r"></code-editor>
      <paper-button
        id="button"
        ?disabled="${!this.__connected}"
        @click="${this.process}"
        raised
        >Process</paper-button
      >
      <div id="output"></div>
    `}static get haxProperties(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"R coder",description:"R coder interface for the r-service backend.",icon:"icons:android",color:"green",groups:["Coder"],handles:[{type:"todo:read-the-docs-for-usage"}],meta:{author:"heymp",owner:"PSU"}},settings:{quick:[],configure:[{property:"endpoint",description:"",inputMethod:"textfield",required:!1,icon:"icons:android"}],advanced:[]}}}static get properties(){return{...super.properties,endpoint:{type:String},__connected:{type:Boolean}}}static get tag(){return"r-coder"}firstUpdated(){this.ping(),this.shadowRoot.getElementById("editor").editorValue=this.textContent.trim()}constructor(){super(),this.endpoint="/service/r-service",setTimeout(()=>{new Promise((e,o)=>t.default(["../../@polymer/paper-button/paper-button.js"],e,o)),new Promise((e,o)=>t.default(["../code-editor/code-editor.js"],e,o))},0)}async ping(){const e=await fetch(this.endpoint,{method:"GET"}).then(e=>e.status);this.__connected=200===e}async process(){const e=this.shadowRoot.getElementById("editor").value,t=await fetch(this.endpoint,{method:"POST",body:e}).then(e=>e.text());this.shadowRoot.getElementById("output").innerText=t}}e.RCoder=RCoder,window.customElements.define(RCoder.tag,RCoder)}));