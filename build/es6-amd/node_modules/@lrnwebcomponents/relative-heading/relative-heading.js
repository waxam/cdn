define(["exports","../../lit-element/lit-element.js","../utils/utils.js"],(function(_exports,_litElement,_utils){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.RelativeHeading=void 0;
/**
   * Copyright 2019 The Pennsylvania State University
   * @license Apache-2.0, see License.md for full text.
   */
class RelativeHeading extends _litElement.LitElement{static get styles(){return[_litElement.css`
        :host {
          display: block;
        }
        :host([hidden]) {
          display: none;
        }
      `]}render(){return _litElement.html`
      <div><slot></slot></div>
    `}static get haxProperties(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"Relative heading",description:"outputs the correct heading hierarchy based on parent's heading",icon:"icons:android",color:"green",groups:["Heading"],handles:[{type:"todo:read-the-docs-for-usage"}],meta:{author:"nikkimk",owner:"The Pennsylvania State University"}},settings:{quick:[],configure:[{property:"parentHeading",description:"",inputMethod:"array",required:!1,icon:"icons:android"},{property:"tag",description:"",inputMethod:"textfield",required:!1,icon:"icons:android"}],advanced:[]}}}static get properties(){return{...super.properties,defaultLevel:{type:Number,attribute:"default-level"},id:{type:String},parentId:{type:String,attribute:"parent-id"},text:{type:String},level:{type:Number,reflect:!0}}}static get tag(){return"relative-heading"}_getLevel(parentId,defaultLevel){let parent=document.querySelector("#"+parentId),parentLvl=null!==parent&&void 0!==parent.level?parent.level:defaultLevel-1;return parentLvl<6?parentLvl+1:6}_updateChildren(){document.querySelectorAll('relative-heading[parent-id="'+this.id+'"]').forEach(child=>{child.parentId=null,child.parentId=this.id})}_isLevel(level,testLevel){return level===testLevel}constructor(){super(),this.defaultLevel=1,this.parentId=null,this.text=""}updated(changedProperties){changedProperties.forEach((oldValue,propName)=>{if("id"==propName&&this._updateChildren(this[propName],oldValue),"level"==propName||"text"==propName){(0,_utils.wipeSlot)(this);let level=document.createElement(`h${this.level}`);level.innerText=this.text,this.appendChild(level),this._updateChildren(this.level,oldValue)}["parentId","defaultLevel"].includes(propName)&&(this.level=this._getLevel(this.parentId,this.defaultLevel))})}}_exports.RelativeHeading=RelativeHeading,window.customElements.define(RelativeHeading.tag,RelativeHeading)}));