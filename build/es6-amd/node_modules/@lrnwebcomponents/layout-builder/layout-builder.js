define(["exports","../../@polymer/polymer/polymer-element.js","../../@polymer/paper-button/paper-button.js"],(function(e,t,i){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.LayoutBuilder=void 0;
/**
   * Copyright 2019 The Pennsylvania State University
   * @license Apache-2.0, see License.md for full text.
   */
class LayoutBuilder extends t.PolymerElement{static get template(){return t.html`
      <style>
        :host {
          display: block;
        }

        :host paper-button {
          display: block;
          margin: 0;
        }
        :host paper-button,
        :host #content-wrapper {
          border: 1px solid #ddd;
        }

        :host #content:not(:empty) {
          padding: 15px;
        }

        :host([hidden]) {
          display: none;
        }
      </style>
      <div id="content-wrapper">
        <div id="prepend-child">
          <paper-button on-tap="_handleAddChild"
            >Insert into [[type]]</paper-button
          >
        </div>
        <div id="content"><slot></slot></div>
      </div>
      <div id="insert-sibling-after">
        <paper-button on-tap="_handleAddSibling">Add new [[type]]</paper-button>
      </div>
    `}static get haxProperties(){return{canScale:!0,canPosition:!0,canEditSource:!1,gizmo:{title:"Layout builder",description:"A new UI for adding content to layouts",icon:"icons:android",color:"green",groups:["Builder"],handles:[{type:"todo:read-the-docs-for-usage"}],meta:{author:"nikkimk",owner:"The Pennsylvania State University"}},settings:{quick:[],configure:[],advanced:[]}}}static get properties(){return{...super.properties,type:{name:"type",type:Boolean,value:"layout"},id:{name:"id",type:String,reflecttoAttribute:!0}}}static get tag(){return"layout-builder"}connectedCallback(){super.connectedCallback(),this.id=this._generateUUID()}_handleAddChild(){let e=document.createElement("layout-builder");e.type="sub-"+this.type,e.innerHTML=`I am a ${this.type} of ${this.id}.`,this.prepend(e)}_handleAddSibling(){let e=document.createElement("layout-builder");e.type=this.type,e.innerHTML=`I am a ${this.type} of ${this.id}.`,this.parentNode.insertBefore(e,this.nextSibling)}_generateUUID(){let e=Math.floor(65536*(1+Math.random())).toString(16).substring(1);return this.type+"-ss-s-s-s-sss".replace(/s/g,e)}}e.LayoutBuilder=LayoutBuilder,window.customElements.define(LayoutBuilder.tag,LayoutBuilder)}));