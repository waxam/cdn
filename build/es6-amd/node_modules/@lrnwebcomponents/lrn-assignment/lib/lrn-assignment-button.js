define(["exports", "../../../lit-element/lit-element.js", "../../../@polymer/paper-button/paper-button.js", "../../lrn-icons/lrn-icons.js", "../../../@polymer/iron-icon/iron-icon.js"], function (_exports, _litElement, _paperButton, _lrnIcons, _ironIcon) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnAssignmentButton = void 0;

  class LrnAssignmentButton extends _litElement.LitElement {
    /**
     * LitElement constructable styles enhancement
     */
    static get styles() {
      return [(0, _litElement.css)`
        :host {
          display: block;
        }
        a {
          color: inherit;
          text-decoration: inherit;
        }
        paper-button {
          background: #b0e6f9;
        }
        paper-button[complete] {
          background: #e7ffe7;
        }
        iron-icon {
          margin-left: 8px;
          opacity: 0.8;
        }
      `];
    }
    /**
     * LitElement render
     */


    render() {
      return (0, _litElement.html)`
      <a href="${this.url}">
        ${this.open ? (0, _litElement.html)`
              <paper-button raised open
                >${this.title} <iron-icon icon="lrn-icons:input"></iron-icon
              ></paper-button>
            ` : ``}
        ${this.complete ? (0, _litElement.html)`
              <paper-button raised complete
                >${this.title} <iron-icon icon="lrn-icons:done"></iron-icon
              ></paper-button>
            ` : ``}
      </a>
    `;
    }

    static get tag() {
      return "lrn-assignment-button";
    }

    constructor() {
      super();
      this.open = false;
      this.complete = false;
    }

    static get properties() {
      return {
        title: {
          type: String
        },
        url: {
          type: String
        },
        open: {
          type: Boolean
        },
        complete: {
          type: Boolean
        }
      };
    }

  }

  _exports.LrnAssignmentButton = LrnAssignmentButton;
  window.customElements.define(LrnAssignmentButton.tag, LrnAssignmentButton);
});