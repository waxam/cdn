define(["exports", "../../@polymer/polymer/polymer-element.js", "../../@polymer/paper-card/paper-card.js", "../../@polymer/paper-button/paper-button.js", "../../@polymer/polymer/lib/elements/dom-repeat.js", "../../@polymer/polymer/lib/elements/dom-if.js"], function (_exports, _polymerElement, _paperCard, _paperButton, _domRepeat, _domIf) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnAssignments = _exports.LrnAssignment = void 0;

  /**
  `lrn-assignment`
  
  * @demo demo/index.html
  */
  class LrnAssignment extends _polymerElement.PolymerElement {
    static get template() {
      return (0, _polymerElement.html)`
      <style>
        :host {
          display: flex;
          width: 100%;
        }
        paper-card {
          width: 100%;
        }
      </style>
      <paper-card
        heading="[[title]]"
        image="[[image]]"
        elevation="1"
        animated-shadow="false"
      >
        <div class="card-content">[[details]] <slot></slot></div>
        <div class="card-actions">
          <template is="dom-repeat" items="[[actions]]">
            <a href$="[[item.url]]"
              ><paper-button raised>[[item.label]]</paper-button></a
            >
          </template>
        </div>
      </paper-card>
    `;
    }

    static get tag() {
      return "lrn-assignment";
    }

    static get properties() {
      return {
        /**
         * Title
         */
        title: {
          type: String
        },

        /**
         * Image url
         */
        image: {
          type: String
        },

        /**
         * Details of the assignment
         */
        details: {
          type: String
        },

        /**
         * url
         */
        url: {
          type: String
        },
        open: {
          type: Boolean,
          value: false
        },
        complete: {
          type: Boolean,
          value: false
        },
        actions: {
          type: Object
        }
      };
    }

  }

  _exports.LrnAssignment = LrnAssignment;
  window.customElements.define(LrnAssignment.tag, LrnAssignment);

  class LrnAssignments extends _polymerElement.PolymerElement {
    static get template() {
      return (0, _polymerElement.html)`
      <style>
        :host {
          display: flex;
          flex-wrap: wrap;
        }
        :host lrn-assignment {
          margin: 16px;
        }
        :host([layout="wide"]) lrn-assignment {
          width: calc(100% - 32px);
        }
        :host([layout="medium"]) lrn-assignment {
          width: calc(50% - 32px);
        }
        :host([layout="tight"]) lrn-assignment {
          width: calc(25% - 32px);
        }
      </style>
      <template is="dom-repeat" items="[[assignments]]">
        <lrn-assignment
          title="[[item.title]]"
          actions="[[item.actions]]"
        ></lrn-assignment>
      </template>

      <template is="dom-if" if="[[url]]">
        <iron-ajax
          auto=""
          url="[[url]]"
          handle-as="json"
          on-response="handleResponse"
        ></iron-ajax>
      </template>
    `;
    }

    static get tag() {
      return "lrn-assignments";
    }

    static get properties() {
      return {
        assignments: {
          type: Object,
          reflectToAttribute: true,
          observer: "assignmentsChanged"
        },
        layout: {
          type: String,
          reflectToAttribute: true
        },
        url: {
          type: String
        }
      };
    }

    assignmentsChanged(assignments) {
      if (assignments.length <= 1) {
        this.layout = "wide";
      } else if (assignments.length <= 4) {
        this.layout = "medium";
      } else if (assignments.length <= 6) {
        this.layout = "tight";
      }
    }

    rowItemsChanged(items) {}

    handleResponse(data) {
      this.assignments = data.response;
    }

  }

  _exports.LrnAssignments = LrnAssignments;
  window.customElements.define(LrnAssignments.tag, LrnAssignments);
});