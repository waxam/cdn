define(["exports","require","../../lit-element/lit-element.js","../../@polymer/paper-dialog/paper-dialog.js","../../@polymer/polymer/lib/elements/custom-style.js"],(function(_exports,_require,_litElement,_paperDialog,_customStyle){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.SimpleModal=void 0,_require=babelHelpers.interopRequireWildcard(_require);
/**
   * Copyright 2019 The Pennsylvania State University
   * @license Apache-2.0, see License.md for full text.
   */
class SimpleModal extends _litElement.LitElement{static get styles(){return[_litElement.css`
        :host {
          display: block;
        }

        :host([hidden]) {
          display: none;
        }

        paper-dialog-scrollable:not(:defined) {
          display: none;
        }

        :host paper-dialog ::slotted(*) {
          font-size: 14px;
          width: 100%;
        }

        #dialog {
          display: flex;
          flex-direction: column;
          margin: 15px auto;
          z-index: 1000;
          height: var(--simple-modal-height, auto);
          width: var(--simple-modal-width, auto);
          min-width: var(--simple-modal-min-width, unset);
          max-width: var(--simple-modal-max-width, unset);
          min-height: var(--simple-modal-min-height, unset);
          max-height: var(--simple-modal-max-height, unset);
          border-radius: 0;
        }

        #titlebar {
          margin-top: 0;
          padding: 0px 16px;
          display: flex;
          align-items: center;
          justify-content: space-between;
          color: var(--simple-modal-titlebar-color, #444);
          background-color: var(--simple-modal-titlebar-background, #ddd);
          border-radius: 0;
          height: 64px;
          line-height: 64px;
        }

        #headerbar {
          margin: 0;
          padding: 0 16px;
          color: var(--simple-modal-header-color, #222);
          background-color: var(--simple-modal-header-background, #ccc);
        }

        h2 {
          margin-right: 8px;
          padding: 0;
          flex: auto;
          font-size: 18px;
          line-height: 18px;
        }

        #close {
          top: 0;
          border: var(--simple-modal-titlebar-button-border, none);
          padding: var(--simple-modal-titlebar-button-padding, 10px 0);
          min-width: unset;
          text-transform: none;
          color: var(--simple-modal-titlebar-color, #444);
          background-color: transparent;
        }

        #close:focus {
          opacity: 0.7;
          outline: var(--simple-modal-titlebar-button-outline, 2px dotted grey);
          outline-offset: var(
            --simple-modal-titlebar-button-outline-offset,
            2px
          );
        }

        #close iron-icon {
          width: var(--simple-modal-titlebar-icon-width, 16px);
          height: var(--simple-modal-titlebar-icon-height, 16px);
          color: var(--simple-modal-titlebar-color, #444);
        }

        #simple-modal-content {
          flex-grow: 1;
          padding: 8px 16px;
          margin: 0;
          color: var(--simple-modal-content-container-color, #222);
          background-color: var(
            --simple-modal-content-container-background,
            #fff
          );
        }

        .buttons {
          padding: 0;
          margin: 0;
          color: var(--simple-modal-buttons-color, unset);
          background-color: var(--simple-modal-buttons-background, unset);
        }

        .buttons ::slotted(*) {
          padding: 0;
          margin: 0;
          color: var(--simple-modal-button-color, --simple-modal-buttons-color);
          background-color: var(
            --simple-modal-button-background,
            --simple-modal-buttons-background
          );
        }
      `]}render(){return _litElement.html`
      <custom-style>
        <style>
          :host paper-dialog ::slotted(*) {
            @apply --simple-modal-content;
          }

          #dialog {
            @apply --simple-modal-dialog;
          }

          #titlebar {
            @apply --simple-modal-top;
          }

          #headerbar {
            @apply --simple-modal-headerbar;
          }

          h2 {
            @apply --simple-modal-title;
          }

          #close {
            @apply --simple-modal-close;
          }

          #close iron-icon {
            @apply --simple-modal-close-icon;
          }

          #simple-modal-content {
            --paper-dialog-scrollable: {
              padding: 0;
            }
            @apply --simple-modal-content-container;
          }
          .buttons {
            @apply --simple-modal-buttons;
          }
          .buttons ::slotted(*) {
            @apply --simple-modal-button;
          }
        </style>
      </custom-style>
      <paper-dialog
        id="dialog"
        always-on-top
        aria-describedby="simple-modal-content"
        aria-label="${this._getAriaLabel(this.title)}"
        aria-labelledby="${this._getAriaLabelledby(this.title)}"
        aria-modal="true"
        role="dialog"
        ?opened="${this.opened}"
        @opened-changed="${this.openedChangedEvent}"
        ?modal="${this.modal}"
        with-backdrop
      >
        <div id="titlebar">
          <h2 id="simple-modal-title" ?hidden="${!this.title}">
            ${this.title}
          </h2>
          <div></div>
          <paper-button
            id="close"
            dialog-dismiss
            ?hidden="${!this.opened}"
            label="${this.closeLabel}"
          >
            <iron-icon aria-hidden="true" icon="${this.closeIcon}"></iron-icon>
          </paper-button>
        </div>
        <div id="headerbar"><slot name="header"></slot></div>
        <paper-dialog-scrollable id="simple-modal-content">
          <slot name="content"></slot>
        </paper-dialog-scrollable>
        <div class="buttons">
          <slot name="buttons"></slot>
        </div>
      </paper-dialog>
    `}static get properties(){return{...super.properties,title:{type:String},opened:{type:Boolean,reflect:!0},closeLabel:{attribute:"close-label",type:String},closeIcon:{type:String,attribute:"close-icon"},invokedBy:{type:Object},modal:{type:Boolean}}}static get tag(){return"simple-modal"}constructor(){super(),this.title="",this.opened=!1,this.closeLabel="Close",this.closeIcon="close",this.modal=!1,setTimeout(()=>{new Promise((res,rej)=>_require.default(["../../@polymer/paper-dialog-scrollable/paper-dialog-scrollable.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../@polymer/paper-button/paper-button.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../@polymer/iron-icons/iron-icons.js"],res,rej)),new Promise((res,rej)=>_require.default(["../../@polymer/iron-icon/iron-icon.js"],res,rej))},0)}updated(changedProperties){changedProperties.forEach((oldValue,propName)=>{"opened"==propName&&this._openedChanged(this[propName])})}firstUpdated(){this.shadowRoot.querySelector("#simple-modal-content").addEventListener("neon-animation-finish",this._ironOverlayClosed.bind(this))}connectedCallback(){super.connectedCallback(),setTimeout(()=>{window.addEventListener("simple-modal-hide",this.close.bind(this)),window.addEventListener("simple-modal-show",this.showEvent.bind(this))},0)}disconnectedCallback(){window.removeEventListener("simple-modal-hide",this.close.bind(this)),window.removeEventListener("simple-modal-show",this.showEvent.bind(this)),super.disconnectedCallback()}_resizeContent(e){window.dispatchEvent(new Event("resize"))}showEvent(e){if(this.opened){for(;null!==this.firstChild;)this.removeChild(this.firstChild);setTimeout(()=>{this.show(e.detail.title,e.detail.elements,e.detail.invokedBy,e.detail.id,e.detail.modalClass,e.detail.styles,e.detail.clone,e.detail.modal)},100)}else this.show(e.detail.title,e.detail.elements,e.detail.invokedBy,e.detail.id,e.detail.modalClass,e.detail.styles,e.detail.clone,e.detail.modal)}show(title,elements,invokedBy,id=null,modalClass=null,styles=null,clone=!1,modal=!1){let element;this.invokedBy=invokedBy,this.modal=modal,this.title=title;let slots=["header","content","buttons"];for(var i in id?this.setAttribute("id",id):this.removeAttribute("id"),this.setAttribute("style",""),styles&&["--simple-modal-width","--simple-modal-height","--simple-modal-min-width","--simple-modal-min-height","--simple-modal-max-width","--simple-modal-max-height","--simple-modal-titlebar-color","--simple-modal-titlebar-background","--simple-modal-header-color","--simple-modal-header-background","--simple-modal-content-container-color","--simple-modal-content-container-background","--simple-modal-buttons-color","--simple-modal-buttons-background","--simple-modal-button-color","--simple-modal-button-background"].forEach(prop=>{this.style.setProperty(prop,styles[prop]||"unset")}),modalClass?this.setAttribute("class",modalClass):this.removeAttribute("class"),slots)elements[slots[i]]&&(element=clone?elements[slots[i]].cloneNode(!0):elements[slots[i]],element.setAttribute("slot",slots[i]),this.appendChild(element));setTimeout(()=>{this.opened=!0,this.shadowRoot.querySelector("#close").focus(),this._resizeContent()},100)}animationEnded(e){for(this.title="";null!==this.firstChild;)this.removeChild(this.firstChild);this.invokedBy&&setTimeout(()=>{this.invokedBy.focus()},500)}close(){this.shadowRoot.querySelector("#dialog").close()}openedChangedEvent(e){this.opened=e.detail.value}_openedChanged(newValue){if(void 0===newValue||newValue){if(newValue){const evt=new CustomEvent("simple-modal-opened",{bubbles:!0,cancelable:!0,detail:{opened:!0,invokedBy:this.invokedBy}});this.dispatchEvent(evt)}}else{this.animationEnded();const evt=new CustomEvent("simple-modal-closed",{bubbles:!0,cancelable:!0,detail:{opened:!1,invokedBy:this.invokedBy}});this.dispatchEvent(evt)}}_getAriaLabelledby(title){return title?"simple-modal-title":null}_getAriaLabel(title){return title?null:"Modal Dialog"}_ironOverlayClosed(e){e.preventDefault(),e.stopPropagation()}}_exports.SimpleModal=SimpleModal,window.customElements.define(SimpleModal.tag,SimpleModal),window.SimpleModal=window.SimpleModal||{},window.SimpleModal.requestAvailability=()=>(window.SimpleModal.instance||(window.SimpleModal.instance=document.createElement("simple-modal"),document.body.appendChild(window.SimpleModal.instance)),window.SimpleModal.instance)}));