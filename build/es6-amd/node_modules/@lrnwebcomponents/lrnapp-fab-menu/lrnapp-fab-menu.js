define(["exports","require","../../lit-element/lit-element.js"],(function(e,a,p){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.LrnappFabMenu=void 0,a=babelHelpers.interopRequireWildcard(a);
/**
   * Copyright 2020 The Pennsylvania State University
   * @license Apache-2.0, see License.md for full text.
   */
class LrnappFabMenu extends p.LitElement{constructor(){super(),this.icon="add",this.disabled=!1,setTimeout(()=>{new Promise((e,p)=>a.default(["../../@polymer/paper-fab/paper-fab.js"],e,p)),new Promise((e,p)=>a.default(["./lib/lrnapp-fab-speed-dial-action.js"],e,p)),new Promise((e,p)=>a.default(["../paper-fab-speed-dial/paper-fab-speed-dial.js"],e,p)),new Promise((e,p)=>a.default(["../paper-fab-speed-dial/lib/paper-fab-speed-dial-overlay.js"],e,p))},0)}static get styles(){return[p.css`
        :host {
          display: block;
        }
        lrnapp-fab-speed-dial-action:not(:defined),
        paper-fab-speed-dial-overlay:not(:defined),
        paper-fab-speed-dial:not(:defined) {
          display: none;
        }
        .open,
        .overlay {
          position: fixed;
          bottom: var(--paper-fab-speed-dial-bottom, 16px);
          right: var(--paper-fab-speed-dial-right, 16px);
        }
        .open {
          --paper-fab-background: var(--paper-fab-speed-dial-background);
          --paper-fab-keyboard-focus-background: var(
            --paper-fab-speed-dial-keyboard-focus-background
          );
        }
        .close {
          --paper-fab-background: var(--paper-grey-500);
          --paper-fab-keyboard-focus-background: var(--paper-grey-500);
          margin-top: 20px;
          display: inline-block;
        }
        .overlay {
          text-align: right;
        }
      `]}render(){return p.html`
      <paper-fab
        icon="${this.icon}"
        class="open"
        @click="${this.open}"
        ?hidden="${this.opened}"
        ?disabled="${this.disabled}"
      ></paper-fab>

      <paper-fab-speed-dial-overlay
        class="overlay"
        ?opened="${this.opened}"
        @opened-changed="${this.openedChangedEvent}"
        with-backdrop
      >
        <slot></slot>
        <paper-fab
          icon="close"
          class="close"
          @click="${this.close}"
        ></paper-fab>
      </paper-fab-speed-dial-overlay>
    `}openedChangedEvent(e){this.opened=e.detail.value}updated(e){e.forEach((e,a)=>{"opened"==a&&this.dispatchEvent(new CustomEvent("opened-changed",{value:this[a]}))})}static get tag(){return"lrnapp-fab-menu"}static get properties(){return{icon:{type:String},opened:{type:Boolean},disabled:{type:Boolean}}}open(e){e&&e.preventDefault(),this.opened=!0}close(e){e&&e.preventDefault(),this.opened=!1}}e.LrnappFabMenu=LrnappFabMenu,window.customElements.define(LrnappFabMenu.tag,LrnappFabMenu)}));