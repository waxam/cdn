define(["exports", "require", "../../lit-element/lit-element.js"], function (_exports, _require, _litElement) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.LrnPage = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  /**
  `lrn-page`
  A LRN element for a "page" of material. This ensures there's an OERSchema wrapper
  so that all content produced has a baseline level of being identified as OER.
  
  * @demo demo/index.html
  */
  class LrnPage extends _litElement.LitElement {
    /**
     * LitElement constructable styles enhancement
     */
    static get styles() {
      return [(0, _litElement.css)`
        :host {
          display: block;
        }
      `];
    }

    constructor() {
      super();
      new Promise((res, rej) => _require.default(["../oer-schema/oer-schema.js"], res, rej));
    }

    render() {
      return (0, _litElement.html)`
      <oer-schema><slot></slot></oer-schema>
    `;
    }

    static get tag() {
      return "lrn-page";
    }

  }

  _exports.LrnPage = LrnPage;
  window.customElements.define(LrnPage.tag, LrnPage);
});