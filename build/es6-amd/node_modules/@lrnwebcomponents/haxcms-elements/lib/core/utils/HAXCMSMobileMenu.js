define(["exports", "require", "../../../../../lit-element/lit-element.js"], function (_exports, _require, _litElement) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.HAXCMSMobileMenuMixin = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  const HAXCMSMobileMenuMixin = function (SuperClass) {
    return class extends SuperClass {
      constructor() {
        super();
        this.menuOpen = true;
      }

      static get styles() {
        let styles = [];

        if (super.styles) {
          styles = super.styles;
        }

        return [...styles, (0, _litElement.css)`
          site-menu:not(:defined) {
            display: none;
          }
          site-menu {
            height: auto;
          }
        `];
      }

      HAXCMSMobileMenuButton() {
        new Promise((res, rej) => _require.default(["../../../../../@polymer/iron-icons/iron-icons.js"], res, rej));
        new Promise((res, rej) => _require.default(["../../../../../@polymer/paper-icon-button/paper-icon-button.js"], res, rej));
        new Promise((res, rej) => _require.default(["../../../../simple-tooltip/simple-tooltip.js"], res, rej));
        return (0, _litElement.html)`
        <paper-icon-button
          class="btn"
          icon="icons:menu"
          id="haxcmsmobilemenubutton"
          .part="${this.editMode ? `edit-mode-active` : ``}"
          @click="${this.__HAXCMSMobileMenuToggle}"
        ></paper-icon-button>
        <simple-tooltip for="haxcmsmobilemenubutton">
          Toggle menu
        </simple-tooltip>
      `;
      }

      __HAXCMSMobileMenuToggle(e) {
        if (this.menuOpen) {
          this.menuOpen = false;
          this.shadowRoot.querySelector("#haxcmsmobilemenunav").setAttribute("tabindex", "-1");
        } else {
          this.menuOpen = true;
          this.shadowRoot.querySelector("#haxcmsmobilemenunav").removeAttribute("tabindex");
        }
      }

      HAXCMSMobileMenu(e) {
        new Promise((res, rej) => _require.default(["../../ui-components/navigation/site-menu.js"], res, rej));
        return (0, _litElement.html)`
        <nav
          id="haxcmsmobilemenunav"
          role="navigation"
          aria-labelledby="sitemenu"
        >
          <site-menu id="sitemenu"></site-menu>
        </nav>
      `;
      }
      /**
       * Notice small size and if menu is open, close it
       */


      updated(changedProperties) {
        if (super.updated) {
          super.updated(changedProperties);
        }

        changedProperties.forEach((oldValue, propName) => {
          if (propName == "responsiveSize") {
            switch (this[propName]) {
              case "sm":
              case "xs":
                // auto close for small layouts
                if (this.menuOpen) {
                  this.__HAXCMSMobileMenuToggle({});
                }

                break;

              default:
                {
                  // auto open for large layouts
                  if (!this.menuOpen) {
                    this.__HAXCMSMobileMenuToggle({});
                  }
                }
            }
          }
        });
      }

      static get properties() {
        let props = {};

        if (super.properties) {
          props = super.props;
        }

        return { ...props,
          menuOpen: {
            type: Boolean,
            reflect: true,
            attribute: "menu-open"
          }
        };
      }

    };
  };

  _exports.HAXCMSMobileMenuMixin = HAXCMSMobileMenuMixin;
});