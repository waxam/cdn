define(["exports", "require", "../../../../../@polymer/polymer/polymer-element.js", "../../../../grid-plate/grid-plate.js"], function (_exports, _require, _polymerElement, _gridPlate) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.Basic = _exports.BasicTemplate = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  /**
   * Copyright 2019 The Pennsylvania State University
   * @license Apache-2.0, see License.md for full text.
   */

  /**
   * `An incredibly basic template.
   * @HTMLElement
   */
  let BasicTemplate = superclass => class extends superclass {
    constructor() {
      super();
      new Promise((res, rej) => _require.default(["../../../../../@polymer/iron-icons/maps-icons.js"], res, rej));
      new Promise((res, rej) => _require.default(["../../../../scroll-button/scroll-button.js"], res, rej));
      new Promise((res, rej) => _require.default(["../active-item/site-active-title.js"], res, rej));
      new Promise((res, rej) => _require.default(["../active-item/site-render-item.js"], res, rej));
      new Promise((res, rej) => _require.default(["../blocks/site-children-block.js"], res, rej));
      new Promise((res, rej) => _require.default(["../blocks/site-outline-block.js"], res, rej));
      new Promise((res, rej) => _require.default(["../blocks/site-recent-content-block.js"], res, rej));
      new Promise((res, rej) => _require.default(["../layout/site-footer.js"], res, rej));
      new Promise((res, rej) => _require.default(["../layout/site-modal.js"], res, rej));
      new Promise((res, rej) => _require.default(["../navigation/site-breadcrumb.js"], res, rej));
      new Promise((res, rej) => _require.default(["../navigation/site-dot-indicator.js"], res, rej));
      new Promise((res, rej) => _require.default(["../navigation/site-menu-button.js"], res, rej));
      new Promise((res, rej) => _require.default(["../navigation/site-menu.js"], res, rej));
      new Promise((res, rej) => _require.default(["../navigation/site-top-menu.js"], res, rej));
      new Promise((res, rej) => _require.default(["../query/site-query-menu-slice.js"], res, rej));
      new Promise((res, rej) => _require.default(["../query/site-query.js"], res, rej));
      new Promise((res, rej) => _require.default(["../query/site-render-query.js"], res, rej));
      new Promise((res, rej) => _require.default(["../site/site-print-button.js"], res, rej));
      new Promise((res, rej) => _require.default(["../site/site-rss-button.js"], res, rej));
      new Promise((res, rej) => _require.default(["../site/site-search.js"], res, rej));
      new Promise((res, rej) => _require.default(["../site/site-title.js"], res, rej));
      new Promise((res, rej) => _require.default(["../magic/active-when-visible.js"], res, rej));
    } // render function


    static get template() {
      return (0, _polymerElement.html)`
        <site-top-menu noink indicator="arrow" arrow-size="8">
          <site-title slot="prefix" class="spacing"></site-title>
          <site-modal
            slot="suffix"
            icon="maps:directions"
            title="View site map"
            button-label="Site map"
          >
            <site-menu></site-menu>
          </site-modal>
          <site-modal
            slot="suffix"
            icon="icons:search"
            title="Search site"
            button-label="Search"
          >
            <site-search></site-search>
          </site-modal>
        </site-top-menu>
        <div class="container">
          <site-breadcrumb></site-breadcrumb>
          <grid-plate layout="1-3" class="grid-wrapper" ignore-hax>
            <div slot="col-1" class="left-col">
              <div class="menu-buttons">
                <site-menu-button type="prev" position="top"></site-menu-button>
                <site-menu-button type="next" position="top"></site-menu-button>
              </div>
              <site-active-title
                dynamic-methodology="ancestor"
              ></site-active-title>
              <site-children-block
                dynamic-methodology="ancestor"
              ></site-children-block>

              <div class="buttons">
                <site-rss-button type="atom"></site-rss-button>
                <site-rss-button type="rss"></site-rss-button>
                <site-print-button
                  slot="suffix"
                  type="ancestor"
                ></site-print-button>
              </div>
            </div>
            <div id="contentcontainer" slot="col-2">
              <div id="slot"><slot></slot></div>
            </div>
          </grid-plate>
        </div>
        <site-footer></site-footer>
        <scroll-button position="right" label="Back to top"></scroll-button>
      `;
    }

  };

  _exports.BasicTemplate = BasicTemplate;

  class Basic extends BasicTemplate(HTMLElement) {}

  _exports.Basic = Basic;
  window.customElements.define("basic-template", Basic);
});