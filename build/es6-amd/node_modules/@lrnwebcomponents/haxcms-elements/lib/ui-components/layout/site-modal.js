define(["exports","require","../../../../../@polymer/polymer/polymer-element.js","../../../../../@polymer/polymer/lib/legacy/polymer.dom.js","../../../../simple-modal/lib/simple-modal-template.js","../../../../../@polymer/paper-icon-button/paper-icon-button.js"],function(_exports,_require,_polymerElement,_polymerDom,_simpleModalTemplate,_paperIconButton){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.SiteModal=void 0;_require=babelHelpers.interopRequireWildcard(_require);/**
 * Copyright 2019 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */ /**
 * `site-modal`
 * `A basic site dialog`
 *
 * @customElement
 * @polymer
 * @demo demo/index.html
 */class SiteModal extends _polymerElement.PolymerElement{/**
   * Store the tag name to make it easier to obtain directly.
   * @notice function name must be here for tooling to operate correctly
   */static get tag(){return"site-modal"}constructor(){super();new Promise((res,rej)=>_require.default(["../../../../../@polymer/paper-tooltip/paper-tooltip.js"],res,rej))}// render function
static get template(){return _polymerElement.html`
      <style>
        :host {
          display: block;
        }
        paper-icon-button {
          @apply --site-modal-icon;
        }
        paper-tooltip {
          @apply --site-modal-tooltip;
        }
        simple-modal-template {
          @apply --site-modal-modal;
        }
      </style>
      <paper-icon-button
        id="btn"
        icon="[[icon]]"
        title="[[buttonLabel]]"
      ></paper-icon-button>
      <paper-tooltip for="btn" position="[[position]]" offset="14">
        [[buttonLabel]]
      </paper-tooltip>
      <simple-modal-template id="smt" title="[[title]]">
        <div id="content" slot="content"></div>
      </simple-modal-template>
    `}static get properties(){return{title:{type:String,value:"Dialog"},icon:{type:String,value:"icons:menu"},buttonLabel:{type:String,value:"Open dialog"},position:{type:String,value:"bottom"}}}connectedCallback(){super.connectedCallback();this.$.smt.associateEvents(this.$.btn);const nodes=(0,_polymerDom.dom)(this).getEffectiveChildNodes();for(var i in nodes){this.$.content.appendChild(nodes[i])}}disconnectedCallback(){super.disconnectedCallback()}}_exports.SiteModal=SiteModal;window.customElements.define(SiteModal.tag,SiteModal)});