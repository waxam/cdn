define(["exports","require","../../../../../@polymer/polymer/polymer-element.js","../../core/haxcms-site-store.js","../../../../../mobx/lib/mobx.module.js"],function(_exports,_require,_polymerElement,_haxcmsSiteStore,_mobxModule){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.SiteMenu=void 0;_require=babelHelpers.interopRequireWildcard(_require);/**
 * Copyright 2019 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */ /**
 * `site-menu`
 * `Menu hierarchy`
 *
 * @customElement
 * @polymer
 * @demo demo/index.html
 */class SiteMenu extends _polymerElement.PolymerElement{/**
   * Store the tag name to make it easier to obtain directly.
   * @notice function name must be here for tooling to operate correctly
   */static get tag(){return"site-menu"}constructor(){super();new Promise((res,rej)=>_require.default(["../../../../map-menu/map-menu.js"],res,rej))}// render function
static get template(){return _polymerElement.html`
      <style>
        :host {
          display: block;
          height: 100vh;
        }
        map-menu[disabled] {
          pointer-events: none;
          opacity: 0.5;
          background-color: grey;
        }
        map-menu:not(:defined) {
          display: none;
        }
        map-menu {
          @apply --site-menu;
          --map-menu-active-color: var(--site-menu-active-color);
          --map-menu-container: var(--site-menu-container);
          --map-menu-item-active-item: var(--site-menu-item-active-item);
        }

        map-menu::-webkit-scrollbar-track {
          -webkit-box-shadow: inset 0 0 4px
            var(--site-menu-scrolltrack-bg-color, rgba(56, 63, 69, 0.9));
          border-radius: 0;
          background-color: var(--site-menu-bg-color, #383f45);
        }
        map-menu::-webkit-scrollbar {
          width: 2px;
          background-color: var(--site-menu-bg-color, #383f45);
        }
        map-menu::-webkit-scrollbar-thumb {
          border-radius: 1px;
          -webkit-box-shadow: inset 0 0 4px var(--site-menu-bg-shadow, #747474);
          background-color: var(--site-menu-bg-color, #383f45);
        }
      </style>
      <map-menu
        disabled="[[editMode]]"
        selected="[[activeId]]"
        manifest="[[routerManifest]]"
        active-indicator="[[!hideActiveIndicator]]"
        auto-scroll="[[!preventAutoScroll]]"
      ></map-menu>
    `}/**
   * Props
   */static get properties(){return{/**
       * Manifest with router / location enhancements
       */routerManifest:{type:Object},/**
       * acitvely selected item
       */activeId:{type:String},/**
       * Binding for active indicator and auto scrolling
       */hideActiveIndicator:{type:Boolean,value:!1},/**
       * prevent the automatic scrolling when items become active
       */preventAutoScroll:{type:Boolean,value:!1},/**
       * allow for visualizing the tracking of page requests
       */trackIcon:{type:String,value:""}}}connectedCallback(){super.connectedCallback();this.__disposer=(0,_mobxModule.autorun)(()=>{this.routerManifest=Object.assign({},(0,_mobxModule.toJS)(_haxcmsSiteStore.store.routerManifest))});// silly but delay to ensure highlighting happens
setTimeout(()=>{this.__disposer2=(0,_mobxModule.autorun)(()=>{this.activeId=(0,_mobxModule.toJS)(_haxcmsSiteStore.store.activeId)})},100);this.__disposer3=(0,_mobxModule.autorun)(()=>{this.editMode=(0,_mobxModule.toJS)(_haxcmsSiteStore.store.editMode)});this.shadowRoot.querySelector("map-menu").addEventListener("active-item",this.mapMenuActiveChanged.bind(this))}disconnectedCallback(){super.disconnectedCallback();this.__disposer();this.__disposer3();if(this.__disposer2){this.__disposer2()}this.shadowRoot.querySelector("map-menu").removeEventListener("active-item",this.mapMenuActiveChanged.bind(this))}/**
   * When map menu changes let's set a track icon internal to it.
   */mapMenuActiveChanged(e){// update the UI directly
e.detail.trackIcon=this.trackIcon;// now work on the user data object in the theme layer
let userData=JSON.parse(window.localStorage.getItem("HAXCMSSystemData"));if(userData.manifests&&typeof userData.manifests[this.routerManifest.id]===typeof void 0){userData.manifests[this.routerManifest.id]={accessData:{}}}// edge case when switching rapidly
if(!userData.manifests[this.routerManifest.id].accessData){userData.manifests[this.routerManifest.id].accessData={}}userData.manifests[this.routerManifest.id].accessData[e.detail.id]={timestamp:Math.floor(Date.now()/1e3),trackIcon:this.trackIcon};for(var i in this.routerManifest.items){if(this.routerManifest.items[i].id===e.detail.id){this.routerManifest.items[i].metadata.accessData=userData.manifests[this.routerManifest.id].accessData[e.detail.id]}}// save this back to the system data
window.localStorage.setItem("HAXCMSSystemData",JSON.stringify(userData))}}_exports.SiteMenu=SiteMenu;window.customElements.define(SiteMenu.tag,SiteMenu)});