define(["exports","../../../../../@polymer/polymer/polymer-element.js","../../core/haxcms-site-store.js","../../../../../@polymer/polymer/lib/utils/render-status.js"],function(_exports,_polymerElement,_haxcmsSiteStore,_renderStatus){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.ActiveWhenVisible=void 0;/**
 * Copyright 2019 The Pennsylvania State University
 * @license Apache-2.0, see License.md for full text.
 */ /**
 * `active-when-visible`
 * `Title of the site`
 *
 * @customElement
 * @polymer
 * @demo demo/index.html
 */class ActiveWhenVisible extends _polymerElement.PolymerElement{/**
   * Store the tag name to make it easier to obtain directly.
   * @notice function name must be here for tooling to operate correctly
   */static get tag(){return"active-when-visible"}// render function
static get template(){return _polymerElement.html`
      <style>
        :host {
          display: block;
        }
        a {
          height: 10px;
          width: 10px;
          float: left;
          pointer-events: none;
          background-color: transparent;
        }
      </style>
      <div>
        <a id="a" href$="[[_a]]" name$="#[[itemId]]" aria-hidden></a>
        <slot></slot>
      </div>
    `}/**
   * Props
   */static get properties(){return{itemId:{type:String},_a:{type:String},thresholds:{type:Array,value:[0,.25,.5,.75,1]},rootMargin:{type:String,value:"0px"},visibleLimit:{type:Number,value:.5,reflectToAttribute:!0},isVisible:{type:Boolean,value:!1,notify:!0}}}connectedCallback(){super.connectedCallback();// setup the intersection observer
(0,_renderStatus.afterNextRender)(this,function(){this.observer=new IntersectionObserver(this.handleIntersectionCallback.bind(this),{root:document.rootElement,rootMargin:this.rootMargin,threshold:this.thresholds});this.observer.observe(this)})}disconnectedCallback(){super.disconnectedCallback()}/**
   * Handle this being visible
   */handleIntersectionCallback(entries){for(let entry of entries){if((+entry.intersectionRatio).toFixed(2)>=this.visibleLimit){// now we care
if(this.itemId){let item=_haxcmsSiteStore.store.findItem(this.itemId);this._a=item.location.replace("pages/","").replace("/index.html","");this.isVisible=!0;setTimeout(()=>{this.$.a.click()},25)}}}}}_exports.ActiveWhenVisible=ActiveWhenVisible;window.customElements.define(ActiveWhenVisible.tag,ActiveWhenVisible)});