define(["exports", "../../../../../lit-element/lit-element.js", "../../core/haxcms-site-store.js", "../../../../../mobx/lib/mobx.module.js", "../../../../../@polymer/polymer/lib/elements/custom-style.js"], function (_exports, _litElement, _haxcmsSiteStore, _mobxModule, _customStyle) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SiteActiveTitle = void 0;

  /**
   * Copyright 2019 The Pennsylvania State University
   * @license Apache-2.0, see License.md for full text.
   */

  /**
   * @deprecatedApply - required for @apply / invoking @apply css var convention
   */

  /**
   * `site-active-title`
   * `Title of the active page in the site`
   *
  
   * @demo demo/index.html
   */
  class SiteActiveTitle extends _litElement.LitElement {
    /**
     * LitElement
     */
    static get styles() {
      return [_litElement.css`
        :host {
          display: block;
          transition: 0.2s opacity linear;
          opacity: 1;
        }
        :host([edit-mode]) {
          opacity: 0.2;
        }
        h2 {
          text-rendering: optimizelegibility;
          font-family: sans-serif;
          color: var(--site-active-title-color, #383f45);
        }
      `];
    }
    /**
     * Store the tag name to make it easier to obtain directly.
     */


    static get tag() {
      return "site-active-title";
    }
    /**
     * LitElement
     */


    render() {
      return _litElement.html`
      <custom-style>
        <style>
          h2 {
            @apply --site-active-title-heading;
          }
        </style>
      </custom-style>
      <h2>${this.__title}</h2>
    `;
    }
    /**
     * LitElement life cycle - property changed
     */


    updated(changedProperties) {
      changedProperties.forEach((oldValue, propName) => {
        if (propName == "dynamicMethodology") {
          this.__title = this._makeTitle(this.dynamicMethodology, this.activeTitle, this.parentTitle, this.ancestorTitle);
        }
      });
    }
    /**
     * LitElement / popular convention
     */


    static get properties() {
      return {
        __title: {
          type: String
        },
        dynamicMethodology: {
          type: String
        },
        editMode: {
          type: Boolean,
          reflect: true,
          attribute: "edit-mode"
        }
      };
    }
    /**
     * Generate title based on context
     */


    _makeTitle(dynamicMethodology, activeTitle, parentTitle, ancestorTitle) {
      switch (dynamicMethodology) {
        case "above":
          if (parentTitle === "" && !this.noFallback) {
            return activeTitle;
          }

          return parentTitle;
          break;

        case "ancestor":
          if (ancestorTitle === "" && !this.noFallback) {
            return activeTitle;
          }

          return ancestorTitle;
          break;

        default:
          return activeTitle;
          break;
      }
    }
    /**
     * HTMLElement
     */


    constructor() {
      super();
      this.noFallback = false;
      this.dynamicMethodology = "active";
      this.__title = "";
      this.__disposer = [];
      (0, _mobxModule.autorun)(reaction => {
        this.editMode = (0, _mobxModule.toJS)(_haxcmsSiteStore.store.editMode);

        this.__disposer.push(reaction);
      });
      (0, _mobxModule.autorun)(reaction => {
        this.activeTitle = (0, _mobxModule.toJS)(_haxcmsSiteStore.store.activeTitle);
        this.__title = this._makeTitle(this.dynamicMethodology, this.activeTitle, this.parentTitle, this.ancestorTitle);

        this.__disposer.push(reaction);
      });
      (0, _mobxModule.autorun)(reaction => {
        this.ancestorTitle = (0, _mobxModule.toJS)(_haxcmsSiteStore.store.ancestorTitle);
        this.__title = this._makeTitle(this.dynamicMethodology, this.activeTitle, this.parentTitle, this.ancestorTitle);

        this.__disposer.push(reaction);
      });
      (0, _mobxModule.autorun)(reaction => {
        this.parentTitle = (0, _mobxModule.toJS)(_haxcmsSiteStore.store.parentTitle);
        this.__title = this._makeTitle(this.dynamicMethodology, this.activeTitle, this.parentTitle, this.ancestorTitle);

        this.__disposer.push(reaction);
      });
    }
    /**
     * HTMLElement
     */


    disconnectedCallback() {
      // clean up state
      for (var i in this.__disposer) {
        this.__disposer[i].dispose();
      }

      super.disconnectedCallback();
    }

  }

  _exports.SiteActiveTitle = SiteActiveTitle;
  window.customElements.define(SiteActiveTitle.tag, SiteActiveTitle);
});