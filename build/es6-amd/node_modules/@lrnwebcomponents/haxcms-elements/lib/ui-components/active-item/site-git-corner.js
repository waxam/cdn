define(["exports", "require", "../../../../../lit-element/lit-element.js", "../../core/haxcms-site-store.js", "../../../../../mobx/lib/mobx.module.js", "../../../../utils/utils.js", "../../core/utils/HAXCMSThemeParts.js"], function (_exports, _require, _litElement, _haxcmsSiteStore, _mobxModule, _utils, _HAXCMSThemeParts) {
  "use strict";

  Object.defineProperty(_exports, "__esModule", {
    value: true
  });
  _exports.SiteGitCorner = void 0;
  _require = babelHelpers.interopRequireWildcard(_require);

  class SiteGitCorner extends (0, _HAXCMSThemeParts.HAXCMSThemeParts)(_litElement.LitElement) {
    static get tag() {
      return "site-git-corner";
    }

    static get styles() {
      return [...super.styles, (0, _litElement.css)`
        :host {
          display: block;
          float: var(--site-git-corner-float);
        }
        :host([direction="right"]) {
          float: right;
        }
        :host([direction="left"]) {
          float: left;
        }
        git-corner {
          --github-corner-color: var(--site-git-corner-color);
          --github-corner-background: var(--site-git-corner-background);
        }
      `];
    }

    render() {
      return (0, _litElement.html)`
      <git-corner
        .part="${this.editMode ? `edit-mode-active` : ``}"
        size="${this.size}"
        alt="${this.alt}"
        ?circle="${this.circle}"
        source="${this.activeGitFileLink}"
      ></git-corner>
    `;
    }

    constructor() {
      super();
      this.circle = false;
      this.alt = "See page source";
      this.direction = "right";
      this.activeGitFileLink = "";
      this.__disposer = [];
      (0, _mobxModule.autorun)(reaction => {
        if ((0, _utils.varGet)(_haxcmsSiteStore.store.manifest, "metadata.site.git.publicRepoUrl", "") != "" && !window.customElements.get("git-corner")) {
          new Promise((res, rej) => _require.default(["../../../../git-corner/git-corner.js"], res, rej));
        }

        this.__disposer.push(reaction);
      });
      (0, _mobxModule.autorun)(reaction => {
        if (_haxcmsSiteStore.store.activeItem) {
          let filePath = (0, _utils.varGet)(_haxcmsSiteStore.store.manifest, "metadata.site.git.publicRepoUrl", "") + _haxcmsSiteStore.store.activeItem.location; // 11ty has a very unique setting for source vs input
          // @note let's try to do this as little as possible..


          if (window.HAXCMSContext == "11ty") {
            filePath = filePath.replace("/src/./pages/", "/src/content/");
          }

          this.activeGitFileLink = filePath;
        }

        this.__disposer.push(reaction);
      });
    }

    disconnectedCallback() {
      for (var i in this.__disposer) {
        this.__disposer[i].dispose();
      }

      super.disconnectedCallback();
    }

    static get properties() {
      return {
        circle: {
          type: Boolean
        },
        size: {
          type: String
        },
        activeGitFileLink: {
          type: String,
          attribute: "active-git-file-link"
        },
        direction: {
          type: String,
          reflect: true
        },
        alt: {
          type: String
        }
      };
    }

  }

  _exports.SiteGitCorner = SiteGitCorner;
  window.customElements.define(SiteGitCorner.tag, SiteGitCorner);
});