define(["./chart-styles.js", "../../@polymer/polymer/polymer-element.js", "../../@polymer/iron-resizable-behavior/iron-resizable-behavior.js", "../../@polymer/polymer/lib/legacy/class.js", "./resize-behavior.js", "./context-behavior.js", "./chart-property-behavior.js"], function (_chartStyles, _polymerElement, _ironResizableBehavior, _class, _resizeBehavior, _contextBehavior, _chartPropertyBehavior) {
  "use strict";

  /**
  A line chart is a way of plotting data points on a line.
  
  Often, it is used to show trend data, and the comparison of two data sets.
  
  ##### Example
  
      <chart-line data="[[data]]"></chart-line>
  
      ...
  
      this.data = {
        labels: ["January", "February", "March", "April", "May", "June", "July"],
        datasets: [
          {
            label: "My First dataset",
            backgroundColor: "rgba(220,220,220,0.2)",
            borderColor: "rgba(220,220,220,1)",
            borderWidth: 1,
            pointBackgroundColor: "rgba(220,220,220,1)",
            pointBorderColor: "#fff",
            pointHoverBackgroundColor: "#fff",
            pointHoverBorderColor: "rgba(220,220,220,1)",
            data: [65, 59, 80, 81, 56, 55, 40]
          },
          {
            label: "My Second dataset",
            backgroundColor: "rgba(151,187,205,0.2)",
            borderColor: "rgba(151,187,205,1)",
            borderWidth: 1,
            pointBackgroundColor: "rgba(151,187,205,1)",
            pointBorderColor: "#fff",
            pointHighlightFill: "#fff",
            pointHoverBorderColor: "rgba(151,187,205,1)",
            data: [28, 48, 40, 19, 86, 27, 90]
          }
        ]
      };
  
  @group Chart Elements
  @element chart-line
  @demo demo/chart-line.html
  */

  /*
  Chart JS needs to be imported somewhere. Importing here creates errors for IE11 and Chrome 41.
  //import 'chart.js/dist/Chart.js';
  */
  class ChartLine extends (0, _resizeBehavior.ChartResizeBehavior)((0, _contextBehavior.ChartContextBehavior)((0, _chartPropertyBehavior.ChartPropertyBehavior)((0, _class.mixinBehaviors)([_ironResizableBehavior.IronResizableBehavior], _polymerElement.PolymerElement)))) {
    static get template() {
      return (0, _polymerElement.html)`
    <style include="chart-styles"></style>

    <div>
      <canvas id="canvas"></canvas>
    </div>
`;
    }

    static get is() {
      return 'chart-line';
    }

    ready() {
      super.ready();

      this._setType('line');
    }

  }

  window.customElements.define(ChartLine.is, ChartLine);
});