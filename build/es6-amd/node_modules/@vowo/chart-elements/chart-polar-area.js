define(["./chart-styles.js", "../../@polymer/polymer/polymer-element.js", "../../@polymer/iron-resizable-behavior/iron-resizable-behavior.js", "../../@polymer/polymer/lib/legacy/class.js", "./resize-behavior.js", "./context-behavior.js", "./chart-property-behavior.js"], function (_chartStyles, _polymerElement, _ironResizableBehavior, _class, _resizeBehavior, _contextBehavior, _chartPropertyBehavior) {
  "use strict";

  /**
  Polar area charts are similar to pie charts, but each segment has the same angle - the radius of the segment differs depending on the value.
  
  This type of chart is often useful when we want to show a comparison data similar to a pie chart, but also show a scale of values for context.
  
  ##### Example
  
      <chart-polar-area data="{{data}}"></chart-polar-area>
  
      ...
  
      this.data = {
        datasets: [{
          data: [
            11,
            16,
            7,
          ],
          backgroundColor: [
            "#FF6384",
            "#4BC0C0",
            "#FFCE56",
          ],
          label: 'My dataset' // for legend
        }],
        labels: [
          "Red",
          "Green",
          "Yellow"
        ]
      };
  
  @group Chart Elements
  @element chart-polar-area
  @demo demo/chart-polar-area.html
  */

  /*
  Chart JS needs to be imported somewhere. Importing here creates errors for IE11 and Chrome 41.
  //import 'chart.js/dist/Chart.js';
  */
  ;

  class ChartPolarArea extends (0, _resizeBehavior.ChartResizeBehavior)((0, _contextBehavior.ChartContextBehavior)((0, _chartPropertyBehavior.ChartPropertyBehavior)((0, _class.mixinBehaviors)([_ironResizableBehavior.IronResizableBehavior], _polymerElement.PolymerElement)))) {
    static get template() {
      return (0, _polymerElement.html)`
    <style include="chart-styles"></style>

    <div>
      <canvas id="canvas"></canvas>
    </div>
`;
    }

    static get is() {
      return 'chart-polar-area';
    }

    ready() {
      super.ready();

      this._setType('polarArea');
    }

  }

  window.customElements.define(ChartPolarArea.is, ChartPolarArea);
});