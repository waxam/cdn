define(["../polymer/polymer-legacy.js","./marked-import.js","../polymer/lib/legacy/polymer-fn.js","../polymer/lib/legacy/polymer.dom.js","../polymer/lib/utils/html-tag.js"],(function(_polymerLegacy,_markedImport,_polymerFn,_polymerDom,_htmlTag){
/**
  @license
  Copyright (c) 2015 The Polymer Project Authors. All rights reserved.
  This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
  The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
  The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
  Code distributed by Google as part of the polymer project is also
  subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
  */
(0,_polymerFn.Polymer)({_template:_htmlTag.html`
    <style>
      :host {
        display: block;
      }
    </style>
    <slot name="markdown-html">
      <div id="content"></div>
    </slot>
  `,is:"marked-element",properties:{markdown:{type:String,value:null},breaks:{type:Boolean,value:!1},pedantic:{type:Boolean,value:!1},renderer:{type:Function,value:null},sanitize:{type:Boolean,value:!1},sanitizer:{type:Function,value:null},disableRemoteSanitization:{type:Boolean,value:!1},smartypants:{type:Boolean,value:!1},callback:{type:Function,value:null},xhr:{type:Object,notify:!0,readOnly:!0}},observers:["render(markdown, breaks, pedantic, renderer, sanitize, sanitizer, smartypants, callback)"],ready:function(){this.markdown||(this._markdownElement=(0,_polymerDom.dom)(this).querySelector('[type="text/markdown"]'),this._markdownElement&&(this._markdownElement.src&&this._request(this._markdownElement.src),""!==this._markdownElement.textContent.trim()&&(this.markdown=this._unindent(this._markdownElement.textContent)),new MutationObserver(this._onScriptAttributeChanged.bind(this)).observe(this._markdownElement,{attributes:!0})))},attached:function(){this._attached=!0,this._outputElement=this.outputElement,this.render()},detached:function(){this._attached=!1},unindent:function(text){return this._unindent(text)},get outputElement(){return(0,_polymerDom.dom)(this).queryDistributedElements('[slot="markdown-html"]')[0]||this.$.content},render:function(){if(this._attached)if(this.markdown){var renderer=new marked.Renderer;this.renderer&&this.renderer(renderer);var opts={renderer:renderer,highlight:this._highlight.bind(this),breaks:this.breaks,sanitize:this.sanitize,sanitizer:this.sanitizer,pedantic:this.pedantic,smartypants:this.smartypants};(0,_polymerDom.dom)(this._outputElement).innerHTML=marked(this.markdown,opts,this.callback),this.fire("marked-render-complete",{},{composed:!0})}else(0,_polymerDom.dom)(this._outputElement).innerHTML=""},_highlight:function(code,lang){return this.fire("syntax-highlight",{code:code,lang:lang},{composed:!0}).detail.code||code},_unindent:function(text){if(!text)return text;var lines=text.replace(/\t/g,"  ").split("\n"),indent=lines.reduce((function(prev,line){if(/^\s*$/.test(line))return prev;var lineIndent=line.match(/^(\s*)/)[0].length;return null===prev?lineIndent:lineIndent<prev?lineIndent:prev}),null);return lines.map((function(l){return l.substr(indent)})).join("\n")},_request:function(url){this._setXhr(new XMLHttpRequest);var xhr=this.xhr;if(xhr.readyState>0)return null;xhr.addEventListener("error",this._handleError.bind(this)),xhr.addEventListener("loadend",function(e){var status=this.xhr.status||0;0===status||status>=200&&status<300?(this.sanitize=!this.disableRemoteSanitization,this.markdown=e.target.response):this._handleError(e),this.fire("marked-loadend",e)}.bind(this)),xhr.open("GET",url),xhr.setRequestHeader("Accept","text/markdown"),xhr.send()},_handleError:function(e){this.fire("marked-request-error",e,{cancelable:!0}).defaultPrevented||(this.markdown="Failed loading markdown source")},_onScriptAttributeChanged:function(mutation){"src"===mutation[0].attributeName&&this._request(this._markdownElement.src)}})}));