define(["exports","../utils/mixin.js"],(function(t,e){"use strict";
/**
  @license
  Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
  This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
  The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
  The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
  Code distributed by Google as part of the polymer project is also
  subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
  */
function mutablePropertyChange(t,e,a,n,l){let r;l&&(r="object"==typeof a&&null!==a,r&&(n=t.__dataTemp[e]));let u=n!==a&&(n==n||a==a);return r&&u&&(t.__dataTemp[e]=a),u}Object.defineProperty(t,"__esModule",{value:!0}),t.OptionalMutableData=t.MutableData=void 0;const a=(0,e.dedupingMixin)(t=>class MutableData extends t{_shouldPropertyChange(t,e,a){return mutablePropertyChange(this,t,e,a,!0)}});t.MutableData=a;const n=(0,e.dedupingMixin)(t=>class OptionalMutableData extends t{static get properties(){return{mutableData:Boolean}}_shouldPropertyChange(t,e,a){return mutablePropertyChange(this,t,e,a,this.mutableData)}});t.OptionalMutableData=n,a._mutablePropertyChange=mutablePropertyChange}));