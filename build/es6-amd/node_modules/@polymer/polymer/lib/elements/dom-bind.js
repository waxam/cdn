define(["exports","../utils/boot.js","../mixins/property-effects.js","../mixins/mutable-data.js","../mixins/gesture-event-listeners.js","../utils/settings.js","../utils/wrap.js","../utils/hide-template-controls.js"],(function(_exports,_boot,_propertyEffects,_mutableData,_gestureEventListeners,_settings,_wrap,_hideTemplateControls){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.DomBind=void 0;
/**
  @license
  Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
  This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
  The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
  The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
  Code distributed by Google as part of the polymer project is also
  subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
  */
const domBindBase=(0,_gestureEventListeners.GestureEventListeners)((0,_mutableData.OptionalMutableData)((0,_propertyEffects.PropertyEffects)(HTMLElement)));class DomBind extends domBindBase{static get observedAttributes(){return["mutable-data"]}constructor(){if(super(),_settings.strictTemplatePolicy)throw new Error("strictTemplatePolicy: dom-bind not allowed");this.root=null,this.$=null,this.__children=null}attributeChangedCallback(name,old,value,namespace){this.mutableData=!0}connectedCallback(){(0,_hideTemplateControls.hideElementsGlobally)()||(this.style.display="none"),this.render()}disconnectedCallback(){this.__removeChildren()}__insertChildren(){(0,_wrap.wrap)((0,_wrap.wrap)(this).parentNode).insertBefore(this.root,this)}__removeChildren(){if(this.__children)for(let i=0;i<this.__children.length;i++)this.root.appendChild(this.__children[i])}render(){let template;if(!this.__children){if(template=template||this.querySelector("template"),!template){let observer=new MutationObserver(()=>{if(template=this.querySelector("template"),!template)throw new Error("dom-bind requires a <template> child");observer.disconnect(),this.render()});return void observer.observe(this,{childList:!0})}this.root=this._stampTemplate(template),this.$=this.root.$,this.__children=[];for(let n=this.root.firstChild;n;n=n.nextSibling)this.__children[this.__children.length]=n;this._enableProperties()}this.__insertChildren(),this.dispatchEvent(new CustomEvent("dom-change",{bubbles:!0,composed:!0}))}}_exports.DomBind=DomBind,customElements.define("dom-bind",DomBind)}));