define(["exports","./boot.js","./mixin.js","./async.js"],(function(e,t,c,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.flushDebouncers=e.enqueueDebouncer=e.Debouncer=void 0;
/**
  @license
  Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
  This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
  The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
  The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
  Code distributed by Google as part of the polymer project is also
  subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
  */
class Debouncer{constructor(){this._asyncModule=null,this._callback=null,this._timer=null}setConfig(e,t){this._asyncModule=e,this._callback=t,this._timer=this._asyncModule.run(()=>{this._timer=null,n.delete(this),this._callback()})}cancel(){this.isActive()&&(this._cancelAsync(),n.delete(this))}_cancelAsync(){this.isActive()&&(this._asyncModule.cancel(this._timer),this._timer=null)}flush(){this.isActive()&&(this.cancel(),this._callback())}isActive(){return null!=this._timer}static debounce(e,t,c){return e instanceof Debouncer?e._cancelAsync():e=new Debouncer,e.setConfig(t,c),e}}e.Debouncer=Debouncer;let n=new Set;e.enqueueDebouncer=function(e){n.add(e)};e.flushDebouncers=function(){const e=Boolean(n.size);return n.forEach(e=>{try{e.flush()}catch(t){setTimeout(()=>{throw t})}}),e}}));