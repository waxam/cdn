define(["exports","./boot.js"],(function(t,e){"use strict";
/**
  @license
  Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
  This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
  The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
  The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
  Code distributed by Google as part of the polymer project is also
  subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
  */
function isPath(t){return t.indexOf(".")>=0}function isAncestor(t,e){return 0===t.indexOf(e+".")}function isDescendant(t,e){return 0===e.indexOf(t+".")}function normalize(t){if(Array.isArray(t)){let e=[];for(let n=0;n<t.length;n++){let i=t[n].toString().split(".");for(let t=0;t<i.length;t++)e.push(i[t])}return e.join(".")}return t}function split(t){return Array.isArray(t)?normalize(t).split("."):t.toString().split(".")}Object.defineProperty(t,"__esModule",{value:!0}),t.isPath=isPath,t.root=function root(t){let e=t.indexOf(".");if(-1===e)return t;return t.slice(0,e)},t.isAncestor=isAncestor,t.isDescendant=isDescendant,t.translate=function translate(t,e,n){return e+n.slice(t.length)},t.matches=function matches(t,e){return t===e||isAncestor(t,e)||isDescendant(t,e)},t.normalize=normalize,t.split=split,t.get=function get(t,e,n){let i=t,r=split(e);for(let s=0;s<r.length;s++){if(!i)return;let t=r[s];i=i[t]}n&&(n.path=r.join("."));return i},t.set=function set(t,e,n){let i=t,r=split(e),s=r[r.length-1];if(r.length>1){for(let t=0;t<r.length-1;t++){let e=r[t];if(i=i[e],!i)return}i[s]=n}else i[e]=n;return r.join(".")},t.isDeep=void 0;const n=isPath;t.isDeep=n}));