define(["exports","../elements/dom-module.js","./resolve-url.js"],(function(_exports,_domModule,_resolveUrl){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.stylesFromModules=stylesFromModules,_exports.stylesFromModule=stylesFromModule,_exports.stylesFromTemplate=stylesFromTemplate,_exports.stylesFromModuleImports=function stylesFromModuleImports(moduleId){let m=importModule(moduleId);return m?_stylesFromModuleImports(m):[]},_exports.cssFromModules=function cssFromModules(moduleIds){let modules=moduleIds.trim().split(/\s+/),cssText="";for(let i=0;i<modules.length;i++)cssText+=cssFromModule(modules[i]);return cssText},_exports.cssFromModule=cssFromModule,_exports.cssFromTemplate=cssFromTemplate,_exports.cssFromModuleImports=function cssFromModuleImports(moduleId){let m=importModule(moduleId);return m?_cssFromModuleImports(m):""};function importModule(moduleId){return _domModule.DomModule.import(moduleId)}function styleForImport(importDoc){let container=importDoc.body?importDoc.body:importDoc;const importCss=(0,_resolveUrl.resolveCss)(container.textContent,importDoc.baseURI),style=document.createElement("style");return style.textContent=importCss,style}function stylesFromModules(moduleIds){const modules=moduleIds.trim().split(/\s+/),styles=[];for(let i=0;i<modules.length;i++)styles.push(...stylesFromModule(modules[i]));return styles}function stylesFromModule(moduleId){const m=importModule(moduleId);if(!m)return console.warn("Could not find style data in module named",moduleId),[];if(void 0===m._styles){const styles=[];styles.push(..._stylesFromModuleImports(m));const template=m.querySelector("template");template&&styles.push(...stylesFromTemplate(template,m.assetpath)),m._styles=styles}return m._styles}function stylesFromTemplate(template,baseURI){if(!template._styles){const styles=[],e$=template.content.querySelectorAll("style");for(let i=0;i<e$.length;i++){let e=e$[i],include=e.getAttribute("include");include&&styles.push(...stylesFromModules(include).filter((function(item,index,self){return self.indexOf(item)===index}))),baseURI&&(e.textContent=(0,_resolveUrl.resolveCss)(e.textContent,baseURI)),styles.push(e)}template._styles=styles}return template._styles}function _stylesFromModuleImports(module){const styles=[],p$=module.querySelectorAll("link[rel=import][type~=css]");for(let i=0;i<p$.length;i++){let p=p$[i];if(p.import){const importDoc=p.import,unscoped=p.hasAttribute("shady-unscoped");if(unscoped&&!importDoc._unscopedStyle){const style=styleForImport(importDoc);style.setAttribute("shady-unscoped",""),importDoc._unscopedStyle=style}else importDoc._style||(importDoc._style=styleForImport(importDoc));styles.push(unscoped?importDoc._unscopedStyle:importDoc._style)}}return styles}function cssFromModule(moduleId){let m=importModule(moduleId);if(m&&void 0===m._cssText){let cssText=_cssFromModuleImports(m),t=m.querySelector("template");t&&(cssText+=cssFromTemplate(t,m.assetpath)),m._cssText=cssText||null}return m||console.warn("Could not find style data in module named",moduleId),m&&m._cssText||""}function cssFromTemplate(template,baseURI){let cssText="";const e$=stylesFromTemplate(template,baseURI);for(let i=0;i<e$.length;i++){let e=e$[i];e.parentNode&&e.parentNode.removeChild(e),cssText+=e.textContent}return cssText}function _cssFromModuleImports(module){let cssText="",styles=_stylesFromModuleImports(module);for(let i=0;i<styles.length;i++)cssText+=styles[i].textContent;return cssText}}));