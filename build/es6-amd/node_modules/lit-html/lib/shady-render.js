define(["exports","./dom.js","./modify-template.js","./render.js","./template-factory.js","./template-instance.js","./template.js","../lit-html.js"],(function(e,t,n,r,o,s,a,l){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"html",{enumerable:!0,get:function(){return l.html}}),Object.defineProperty(e,"svg",{enumerable:!0,get:function(){return l.svg}}),Object.defineProperty(e,"TemplateResult",{enumerable:!0,get:function(){return l.TemplateResult}}),e.render=void 0;
/**
   * @license
   * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
   * This code may only be used under the BSD style license found at
   * http://polymer.github.io/LICENSE.txt
   * The complete set of authors may be found at
   * http://polymer.github.io/AUTHORS.txt
   * The complete set of contributors may be found at
   * http://polymer.github.io/CONTRIBUTORS.txt
   * Code distributed by Google as part of the polymer project is also
   * subject to an additional IP rights grant found at
   * http://polymer.github.io/PATENTS.txt
   */
const getTemplateCacheKey=(e,t)=>`${e}--${t}`;let i=!0;void 0===window.ShadyCSS?i=!1:void 0===window.ShadyCSS.prepareTemplateDom&&(console.warn("Incompatible ShadyCSS version detected. Please update to at least @webcomponents/webcomponentsjs@2.0.2 and @webcomponents/shadycss@1.3.1."),i=!1);const shadyTemplateFactory=e=>t=>{const n=getTemplateCacheKey(t.type,e);let r=o.templateCaches.get(n);void 0===r&&(r={stringsArray:new WeakMap,keyString:new Map},o.templateCaches.set(n,r));let s=r.stringsArray.get(t.strings);if(void 0!==s)return s;const l=t.strings.join(a.marker);if(s=r.keyString.get(l),void 0===s){const n=t.getTemplateElement();i&&window.ShadyCSS.prepareTemplateDom(n,e),s=new a.Template(t,n),r.keyString.set(l,s)}return r.stringsArray.set(t.strings,s),s},d=["html","svg"],c=new Set,prepareTemplateStyles=(e,t,r)=>{c.add(e);const s=r?r.element:document.createElement("template"),a=t.querySelectorAll("style"),{length:l}=a;if(0===l)return void window.ShadyCSS.prepareTemplateStyles(s,e);const i=document.createElement("style");for(let n=0;n<l;n++){const e=a[n];e.parentNode.removeChild(e),i.textContent+=e.textContent}(e=>{d.forEach(t=>{const r=o.templateCaches.get(getTemplateCacheKey(t,e));void 0!==r&&r.keyString.forEach(e=>{const{element:{content:t}}=e,r=new Set;Array.from(t.querySelectorAll("style")).forEach(e=>{r.add(e)}),(0,n.removeNodesFromTemplate)(e,r)})})})(e);const m=s.content;r?(0,n.insertNodeIntoTemplate)(r,i,m.firstChild):m.insertBefore(i,m.firstChild),window.ShadyCSS.prepareTemplateStyles(s,e);const p=m.querySelector("style");if(window.ShadyCSS.nativeShadow&&null!==p)t.insertBefore(p.cloneNode(!0),t.firstChild);else if(r){m.insertBefore(i,m.firstChild);const e=new Set;e.add(i),(0,n.removeNodesFromTemplate)(r,e)}};e.render=(e,n,o)=>{if(!o||"object"!=typeof o||!o.scopeName)throw new Error("The `scopeName` option is required.");const a=o.scopeName,l=r.parts.has(n),d=i&&11===n.nodeType&&!!n.host,m=d&&!c.has(a),p=m?document.createDocumentFragment():n;if((0,r.render)(e,p,Object.assign({templateFactory:shadyTemplateFactory(a)},o)),m){const e=r.parts.get(p);r.parts.delete(p);const o=e.value instanceof s.TemplateInstance?e.value.template:void 0;prepareTemplateStyles(a,p,o),(0,t.removeNodes)(n,n.firstChild),n.appendChild(p),r.parts.set(n,e)}!l&&d&&window.ShadyCSS.styleElement(n.host)}}));