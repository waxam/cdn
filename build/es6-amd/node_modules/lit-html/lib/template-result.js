define(["exports","./dom.js","./template.js"],(function(e,t,s){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.SVGTemplateResult=e.TemplateResult=void 0;
/**
   * @license
   * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
   * This code may only be used under the BSD style license found at
   * http://polymer.github.io/LICENSE.txt
   * The complete set of authors may be found at
   * http://polymer.github.io/AUTHORS.txt
   * The complete set of contributors may be found at
   * http://polymer.github.io/CONTRIBUTORS.txt
   * Code distributed by Google as part of the polymer project is also
   * subject to an additional IP rights grant found at
   * http://polymer.github.io/PATENTS.txt
   */
const l=` ${s.marker} `;class TemplateResult{constructor(e,t,s,l){this.strings=e,this.values=t,this.type=s,this.processor=l}getHTML(){const e=this.strings.length-1;let t="",r=!1;for(let n=0;n<e;n++){const e=this.strings[n],i=e.lastIndexOf("\x3c!--");r=(i>-1||r)&&-1===e.indexOf("--\x3e",i+1);const u=s.lastAttributeNameRegex.exec(e);t+=null===u?e+(r?l:s.nodeMarker):e.substr(0,u.index)+u[1]+u[2]+s.boundAttributeSuffix+u[3]+s.marker}return t+=this.strings[e],t}getTemplateElement(){const e=document.createElement("template");return e.innerHTML=this.getHTML(),e}}e.TemplateResult=TemplateResult;e.SVGTemplateResult=class SVGTemplateResult extends TemplateResult{getHTML(){return`<svg>${super.getHTML()}</svg>`}getTemplateElement(){const e=super.getTemplateElement(),s=e.content,l=s.firstChild;return s.removeChild(l),(0,t.reparentNodes)(s,l.firstChild),e}}}));