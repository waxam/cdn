define(["exports","./template.js"],(function(e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.removeNodesFromTemplate=function removeNodesFromTemplate(e,t){const{element:{content:n},parts:o}=e,r=document.createTreeWalker(n,133,null,!1);let l=nextActiveIndexInTemplateParts(o),d=o[l],u=-1,i=0;const c=[];let s=null;for(;r.nextNode();){u++;const e=r.currentNode;for(e.previousSibling===s&&(s=null),t.has(e)&&(c.push(e),null===s&&(s=e)),null!==s&&i++;void 0!==d&&d.index===u;)d.index=null!==s?-1:d.index-i,l=nextActiveIndexInTemplateParts(o,l),d=o[l]}c.forEach(e=>e.parentNode.removeChild(e))},e.insertNodeIntoTemplate=function insertNodeIntoTemplate(e,t,n=null){const{element:{content:o},parts:r}=e;if(null==n)return void o.appendChild(t);const l=document.createTreeWalker(o,133,null,!1);let d=nextActiveIndexInTemplateParts(r),u=0,i=-1;for(;l.nextNode();){for(i++,l.currentNode===n&&(u=countNodes(t),n.parentNode.insertBefore(t,n));-1!==d&&r[d].index===i;){if(u>0){for(;-1!==d;)r[d].index+=u,d=nextActiveIndexInTemplateParts(r,d);return}d=nextActiveIndexInTemplateParts(r,d)}}};const countNodes=e=>{let t=11===e.nodeType?0:1;const n=document.createTreeWalker(e,133,null,!1);for(;n.nextNode();)t++;return t},nextActiveIndexInTemplateParts=(e,n=-1)=>{for(let o=n+1;o<e.length;o++){const n=e[o];if((0,t.isTemplatePartActive)(n))return o}return-1}}));