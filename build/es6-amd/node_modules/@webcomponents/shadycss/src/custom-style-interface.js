define(["exports","./document-wait.js"],(function(e,t){
/**
  @license
  Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
  This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
  The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
  The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
  Code distributed by Google as part of the polymer project is also
  subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
  */
"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.CustomStyleInterfaceInterface=e.default=e.CustomStyleProvider=void 0,t=babelHelpers.interopRequireDefault(t),e.CustomStyleProvider=void 0;const o="__shadyCSSCachedStyle";let s=null,l=null;class CustomStyleInterface{constructor(){this.customStyles=[],this.enqueued=!1,(0,t.default)(()=>{window.ShadyCSS.flushCustomStyles&&window.ShadyCSS.flushCustomStyles()})}enqueueDocumentValidation(){!this.enqueued&&l&&(this.enqueued=!0,(0,t.default)(l))}addCustomStyle(e){e.__seenByShadyCSS||(e.__seenByShadyCSS=!0,this.customStyles.push(e),this.enqueueDocumentValidation())}getStyleForCustomStyle(e){if(e[o])return e[o];let t;return t=e.getStyle?e.getStyle():e,t}processStyles(){const e=this.customStyles;for(let t=0;t<e.length;t++){const l=e[t];if(l[o])continue;const u=this.getStyleForCustomStyle(l);if(u){const e=u.__appliedElement||u;s&&s(e),l[o]=e}}return e}}e.default=CustomStyleInterface,CustomStyleInterface.prototype.addCustomStyle=CustomStyleInterface.prototype.addCustomStyle,CustomStyleInterface.prototype.getStyleForCustomStyle=CustomStyleInterface.prototype.getStyleForCustomStyle,CustomStyleInterface.prototype.processStyles=CustomStyleInterface.prototype.processStyles,Object.defineProperties(CustomStyleInterface.prototype,{transformCallback:{get:()=>s,set(e){s=e}},validateCallback:{get:()=>l,set(e){let t=!1;l||(t=!0),l=e,t&&this.enqueueDocumentValidation()}}});e.CustomStyleInterfaceInterface={}}));