define(["exports"],(function(_exports){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.property=function property(options){return(protoOrDescriptor,name)=>void 0!==name?legacyProperty(options,protoOrDescriptor,name):standardProperty(options,protoOrDescriptor)},_exports.query=function query(selector){return(protoOrDescriptor,name)=>{const descriptor={get(){return this.renderRoot.querySelector(selector)},enumerable:!0,configurable:!0};return void 0!==name?legacyQuery(descriptor,protoOrDescriptor,name):standardQuery(descriptor,protoOrDescriptor)}},_exports.queryAll=function queryAll(selector){return(protoOrDescriptor,name)=>{const descriptor={get(){return this.renderRoot.querySelectorAll(selector)},enumerable:!0,configurable:!0};return void 0!==name?legacyQuery(descriptor,protoOrDescriptor,name):standardQuery(descriptor,protoOrDescriptor)}},_exports.eventOptions=_exports.customElement=void 0;_exports.customElement=tagName=>classOrDescriptor=>"function"==typeof classOrDescriptor?((tagName,clazz)=>(window.customElements.define(tagName,clazz),clazz))(tagName,classOrDescriptor):((tagName,descriptor)=>{const{kind:kind,elements:elements}=descriptor;return{kind:kind,elements:elements,finisher(clazz){window.customElements.define(tagName,clazz)}}})(tagName,classOrDescriptor);const standardProperty=(options,element)=>"method"!==element.kind||!element.descriptor||"value"in element.descriptor?{kind:"field",key:Symbol(),placement:"own",descriptor:{},initializer(){"function"==typeof element.initializer&&(this[element.key]=element.initializer.call(this))},finisher(clazz){clazz.createProperty(element.key,options)}}:Object.assign({},element,{finisher(clazz){clazz.createProperty(element.key,options)}}),legacyProperty=(options,proto,name)=>{proto.constructor.createProperty(name,options)};const legacyQuery=(descriptor,proto,name)=>{Object.defineProperty(proto,name,descriptor)},standardQuery=(descriptor,element)=>({kind:"method",placement:"prototype",key:element.key,descriptor:descriptor});_exports.eventOptions=options=>(protoOrDescriptor,name)=>void 0!==name?((options,proto,name)=>{Object.assign(proto[name],options)})(options,protoOrDescriptor,name):((options,element)=>Object.assign({},element,{finisher(clazz){Object.assign(clazz.prototype[element.key],options)}}))(options,protoOrDescriptor)}));