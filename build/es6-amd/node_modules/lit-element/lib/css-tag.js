define(["exports"],function(_exports){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.css=_exports.unsafeCSS=_exports.CSSResult=_exports.supportsAdoptingStyleSheets=void 0;const supportsAdoptingStyleSheets="adoptedStyleSheets"in Document.prototype&&"replace"in CSSStyleSheet.prototype;_exports.supportsAdoptingStyleSheets=supportsAdoptingStyleSheets;const constructionToken=Symbol();class CSSResult{constructor(cssText,safeToken){if(safeToken!==constructionToken)throw new Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");this.cssText=cssText}get styleSheet(){return void 0===this._styleSheet&&(supportsAdoptingStyleSheets?(this._styleSheet=new CSSStyleSheet,this._styleSheet.replaceSync(this.cssText)):this._styleSheet=null),this._styleSheet}toString(){return this.cssText}}_exports.CSSResult=CSSResult;_exports.unsafeCSS=value=>new CSSResult(String(value),constructionToken);_exports.css=(strings,...values)=>{const cssText=values.reduce((acc,v,idx)=>acc+(value=>{if(value instanceof CSSResult)return value.cssText;if("number"==typeof value)return value;throw new Error(`Value passed to 'css' function must be a 'css' function result: ${value}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`)})(v)+strings[idx+1],strings[0]);return new CSSResult(cssText,constructionToken)}});