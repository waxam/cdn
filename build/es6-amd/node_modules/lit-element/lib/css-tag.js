define(["exports"],(function(e){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.css=e.unsafeCSS=e.CSSResult=e.supportsAdoptingStyleSheets=void 0;
/**
  @license
  Copyright (c) 2019 The Polymer Project Authors. All rights reserved.
  This code may only be used under the BSD style license found at
  http://polymer.github.io/LICENSE.txt The complete set of authors may be found at
  http://polymer.github.io/AUTHORS.txt The complete set of contributors may be
  found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as
  part of the polymer project is also subject to an additional IP rights grant
  found at http://polymer.github.io/PATENTS.txt
  */
const t="adoptedStyleSheets"in Document.prototype&&"replace"in CSSStyleSheet.prototype;e.supportsAdoptingStyleSheets=t;const s=Symbol();class CSSResult{constructor(e,t){if(t!==s)throw new Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.");this.cssText=e}get styleSheet(){return void 0===this._styleSheet&&(t?(this._styleSheet=new CSSStyleSheet,this._styleSheet.replaceSync(this.cssText)):this._styleSheet=null),this._styleSheet}toString(){return this.cssText}}e.CSSResult=CSSResult;e.unsafeCSS=e=>new CSSResult(String(e),s);e.css=(e,...t)=>{const S=t.reduce((t,s,S)=>t+(e=>{if(e instanceof CSSResult)return e.cssText;if("number"==typeof e)return e;throw new Error(`Value passed to 'css' function must be a 'css' function result: ${e}. Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security.`)})(s)+e[S+1],e[0]);return new CSSResult(S,s)}}));